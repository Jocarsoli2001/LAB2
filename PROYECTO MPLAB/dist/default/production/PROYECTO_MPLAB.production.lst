

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 12:07:16 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	strings
   463  04B4                     __pstrings:
   464  04B4                     stringtab:
   465  04B4                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468  04B4  1BFF               	btfsc	btemp+1,7
   469  04B5  2CBE               	ljmp	stringcode
   470  04B6  1383               	bcf	3,7
   471  04B7  187F               	btfsc	btemp+1,0
   472  04B8  1783               	bsf	3,7
   473  04B9  0800               	movf	0,w
   474  04BA  0A84               	incf	4,f
   475  04BB  1903               	skipnz
   476  04BC  0AFF               	incf	btemp+1,f
   477  04BD  0008               	return
   478  04BE                     stringcode:
   479  04BE                     stringdir:
   480  04BE  3004               	movlw	high stringdir
   481  04BF  008A               	movwf	10
   482  04C0  0804               	movf	4,w
   483  04C1  0A84               	incf	4,f
   484  04C2  0782               	addwf	2,f
   485  04C3                     __stringbase:
   486  04C3  3400               	retlw	0
   487  04C4                     __end_of__stringtab:
   488  04C4                     _dpowers:
   489  04C4  3401               	retlw	1
   490  04C5  3400               	retlw	0
   491  04C6  340A               	retlw	10
   492  04C7  3400               	retlw	0
   493  04C8  3464               	retlw	100
   494  04C9  3400               	retlw	0
   495  04CA  34E8               	retlw	232
   496  04CB  3403               	retlw	3
   497  04CC  3410               	retlw	16
   498  04CD  3427               	retlw	39
   499  04CE                     __end_of_dpowers:
   500  0018                     _RCSTAbits	set	24
   501  001E                     _ADRESH	set	30
   502  0007                     _PORTCbits	set	7
   503  0006                     _PORTBbits	set	6
   504  0008                     _PORTDbits	set	8
   505  000B                     _INTCONbits	set	11
   506  0006                     _PORTB	set	6
   507  0009                     _PORTE	set	9
   508  0007                     _PORTC	set	7
   509  0008                     _PORTD	set	8
   510  0005                     _PORTA	set	5
   511  001F                     _ADCON0bits	set	31
   512  001A                     _RCREG	set	26
   513  000C                     _PIR1bits	set	12
   514  009A                     _SPBRGH	set	154
   515  0099                     _SPBRG	set	153
   516  0098                     _TXSTAbits	set	152
   517  009F                     _ADCON1bits	set	159
   518  008C                     _PIE1bits	set	140
   519  008F                     _OSCCONbits	set	143
   520  0089                     _TRISE	set	137
   521  0087                     _TRISC	set	135
   522  0088                     _TRISD	set	136
   523  0086                     _TRISB	set	134
   524  0085                     _TRISA	set	133
   525  0187                     _BAUDCTLbits	set	391
   526  0189                     _ANSELH	set	393
   527  0188                     _ANSEL	set	392
   528  04CE                     STR_3:
   529  04CE  3453               	retlw	83	;'S'
   530  04CF  3431               	retlw	49	;'1'
   531  04D0  343A               	retlw	58	;':'
   532  04D1  3420               	retlw	32	;' '
   533  04D2  3420               	retlw	32	;' '
   534  04D3  3420               	retlw	32	;' '
   535  04D4  3420               	retlw	32	;' '
   536  04D5  3453               	retlw	83	;'S'
   537  04D6  3432               	retlw	50	;'2'
   538  04D7  343A               	retlw	58	;':'
   539  04D8  3420               	retlw	32	;' '
   540  04D9  3420               	retlw	32	;' '
   541  04DA  3420               	retlw	32	;' '
   542  04DB  3453               	retlw	83	;'S'
   543  04DC  3433               	retlw	51	;'3'
   544  04DD  343A               	retlw	58	;':'
   545  04DE  3400               	retlw	0
   546  04DF                     STR_2:
   547  04DF  344A               	retlw	74	;'J'
   548  04E0  346F               	retlw	111	;'o'
   549  04E1  3473               	retlw	115	;'s'
   550  04E2  3465               	retlw	101	;'e'
   551  04E3  3420               	retlw	32	;' '
   552  04E4  3453               	retlw	83	;'S'
   553  04E5  3461               	retlw	97	;'a'
   554  04E6  346E               	retlw	110	;'n'
   555  04E7  3474               	retlw	116	;'t'
   556  04E8  3469               	retlw	105	;'i'
   557  04E9  347A               	retlw	122	;'z'
   558  04EA  346F               	retlw	111	;'o'
   559  04EB  3400               	retlw	0
   560  04EC                     STR_4:
   561  04EC  3425               	retlw	37	;'%'
   562  04ED  3464               	retlw	100	;'d'
   563  04EE  342E               	retlw	46	;'.'
   564  04EF  3425               	retlw	37	;'%'
   565  04F0  3464               	retlw	100	;'d'
   566  04F1  3425               	retlw	37	;'%'
   567  04F2  3464               	retlw	100	;'d'
   568  04F3  3400               	retlw	0
   569  04F4                     STR_6:
   570  04F4  3425               	retlw	37	;'%'
   571  04F5  3464               	retlw	100	;'d'
   572  04F6  3425               	retlw	37	;'%'
   573  04F7  3464               	retlw	100	;'d'
   574  04F8  3425               	retlw	37	;'%'
   575  04F9  3464               	retlw	100	;'d'
   576  04FA  3400               	retlw	0
   577  04FB                     STR_1:
   578  04FB  3448               	retlw	72	;'H'
   579  04FC  346F               	retlw	111	;'o'
   580  04FD  346C               	retlw	108	;'l'
   581  04FE  3461               	retlw	97	;'a'
   582  04FF  3400               	retlw	0
   583  04EC                     
   584                           	psect	cinit
   585  000F                     start_initialization:	
   586                           ; #config settings
   587                           
   588  000F                     __initialization:
   589                           
   590                           ; Clear objects allocated to COMMON
   591  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   592  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   593  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   594  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   595                           
   596                           ; Clear objects allocated to BANK0
   597  0013  1383               	bcf	3,7	;select IRP bank0
   598  0014  3047               	movlw	low __pbssBANK0
   599  0015  0084               	movwf	4
   600  0016  306B               	movlw	low (__pbssBANK0+36)
   601  0017  120A  118A  277A  120A  118A  	fcall	clear_ram0
   602  001C                     end_of_initialization:	
   603                           ;End of C runtime variable initialization code
   604                           
   605  001C                     __end_of__initialization:
   606  001C  0183               	clrf	3
   607  001D  120A  118A  290A   	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  0076                     __pbssCOMMON:
   611  0076                     _dato:
   612  0076                     	ds	1
   613  0077                     _cen:
   614  0077                     	ds	1
   615  0078                     _dec:
   616  0078                     	ds	1
   617  0079                     _uni:
   618  0079                     	ds	1
   619                           
   620                           	psect	bssBANK0
   621  0047                     __pbssBANK0:
   622  0047                     _Cont_U:
   623  0047                     	ds	1
   624  0048                     _cont2:
   625  0048                     	ds	1
   626  0049                     _cont1:
   627  0049                     	ds	1
   628  004A                     _buffer3:
   629  004A                     	ds	10
   630  0054                     _buffer2:
   631  0054                     	ds	10
   632  005E                     _buffer1:
   633  005E                     	ds	10
   634  0068                     _vol3:
   635  0068                     	ds	1
   636  0069                     _vol2:
   637  0069                     	ds	1
   638  006A                     _vol1:
   639  006A                     	ds	1
   640                           
   641                           	psect	clrtext
   642  077A                     clear_ram0:	
   643                           ;	Called with FSR containing the base address, and
   644                           ;	W with the last address+1
   645                           
   646  077A  0064               	clrwdt	;clear the watchdog before getting into this loop
   647  077B                     clrloop0:
   648  077B  0180               	clrf	0	;clear RAM location pointed to by FSR
   649  077C  0A84               	incf	4,f	;increment pointer
   650  077D  0604               	xorwf	4,w	;XOR with final address
   651  077E  1903               	btfsc	3,2	;have we reached the end yet?
   652  077F  3400               	retlw	0	;all done for this memory range, return
   653  0780  0604               	xorwf	4,w	;XOR again to restore value
   654  0781  2F7B               	goto	clrloop0	;do the next byte
   655                           
   656                           	psect	cstackCOMMON
   657  0070                     __pcstackCOMMON:
   658  0070                     ?_ADC:
   659  0070                     ??_ADC:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_setup:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Iniciar_LCD:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_Limpiar_pantallaLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_conversion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_conversion_char:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_dato_recibido:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_isr:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_prender_ELCD:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Escribir_comandoLCD:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  0070                     	ds	1
   695  0071                     ??_isr:
   696                           
   697                           ; 1 bytes @ 0x1
   698  0071                     	ds	3
   699  0074                     ??_conversion:
   700  0074                     ?_config_ADC:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??_Config_USART:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??_prender_ELCD:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     ??___awdiv:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     ??___awmod:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ??___lwdiv:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     config_ADC@channel:	
   719                           ; 1 bytes @ 0x4
   720                           
   721                           
   722                           ; 2 bytes @ 0x4
   723  0074                     	ds	1
   724  0075                     ?_divisor:
   725  0075                     ?_divisor1:	
   726                           ; 1 bytes @ 0x5
   727                           
   728  0075                     ??_Escribir_comandoLCD:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     ??___lwmod:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     divisor@dig:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0075                     divisor1@dig:	
   738                           ; 1 bytes @ 0x5
   739                           
   740  0075                     Escribir_comandoLCD@Comando:	
   741                           ; 1 bytes @ 0x5
   742                           
   743                           
   744                           ; 1 bytes @ 0x5
   745  0075                     	ds	1
   746  0076                     ??_setup:
   747                           
   748                           	psect	cstackBANK0
   749  0020                     __pcstackBANK0:	
   750                           ; 1 bytes @ 0x6
   751                           
   752  0020                     ??_Iniciar_LCD:
   753  0020                     ??_Limpiar_pantallaLCD:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ?_set_cursor:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0020                     ?_Escribir_stringLCD:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     ??_config_ADC:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0020                     ?_Config_USART:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ?___awdiv:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0020                     ?___awmod:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0020                     ?___lwdiv:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0020                     set_cursor@posicion:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     Escribir_stringLCD@d:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0020                     Config_USART@baud_rate:	
   784                           ; 2 bytes @ 0x0
   785                           
   786  0020                     ___awdiv@divisor:	
   787                           ; 2 bytes @ 0x0
   788                           
   789  0020                     ___awmod@divisor:	
   790                           ; 2 bytes @ 0x0
   791                           
   792  0020                     ___lwdiv@divisor:	
   793                           ; 2 bytes @ 0x0
   794                           
   795                           
   796                           ; 2 bytes @ 0x0
   797  0020                     	ds	1
   798  0021                     ??_set_cursor:
   799                           
   800                           ; 1 bytes @ 0x1
   801  0021                     	ds	1
   802  0022                     ??_Escribir_stringLCD:
   803  0022                     Config_USART@Freq:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0022                     ___awdiv@dividend:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0022                     ___awmod@dividend:	
   810                           ; 2 bytes @ 0x2
   811                           
   812  0022                     ___lwdiv@dividend:	
   813                           ; 2 bytes @ 0x2
   814                           
   815                           
   816                           ; 2 bytes @ 0x2
   817  0022                     	ds	1
   818  0023                     Escribir_stringLCD@i:
   819  0023                     set_cursor@linea:	
   820                           ; 1 bytes @ 0x3
   821                           
   822                           
   823                           ; 1 bytes @ 0x3
   824  0023                     	ds	1
   825  0024                     ___awdiv@counter:
   826  0024                     ___awmod@counter:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0024                     ___lwdiv@counter:	
   830                           ; 1 bytes @ 0x4
   831                           
   832                           
   833                           ; 1 bytes @ 0x4
   834  0024                     	ds	1
   835  0025                     ___awdiv@sign:
   836  0025                     ___awmod@sign:	
   837                           ; 1 bytes @ 0x5
   838                           
   839  0025                     ___lwdiv@quotient:	
   840                           ; 1 bytes @ 0x5
   841                           
   842                           
   843                           ; 2 bytes @ 0x5
   844  0025                     	ds	1
   845  0026                     ___awdiv@quotient:
   846                           
   847                           ; 2 bytes @ 0x6
   848  0026                     	ds	1
   849  0027                     ?___lwmod:
   850  0027                     ___lwmod@divisor:	
   851                           ; 2 bytes @ 0x7
   852                           
   853                           
   854                           ; 2 bytes @ 0x7
   855  0027                     	ds	1
   856  0028                     ??_divisor:
   857  0028                     ??_divisor1:	
   858                           ; 1 bytes @ 0x8
   859                           
   860                           
   861                           ; 1 bytes @ 0x8
   862  0028                     	ds	1
   863  0029                     ___lwmod@dividend:
   864                           
   865                           ; 2 bytes @ 0x9
   866  0029                     	ds	1
   867  002A                     divisor@a:
   868                           
   869                           ; 1 bytes @ 0xA
   870  002A                     	ds	1
   871  002B                     ___lwmod@counter:
   872  002B                     divisor@b:	
   873                           ; 1 bytes @ 0xB
   874                           
   875                           
   876                           ; 2 bytes @ 0xB
   877  002B                     	ds	1
   878  002C                     ?_sprintf:
   879  002C                     divisor1@a:	
   880                           ; 2 bytes @ 0xC
   881                           
   882  002C                     sprintf@f:	
   883                           ; 1 bytes @ 0xC
   884                           
   885                           
   886                           ; 1 bytes @ 0xC
   887  002C                     	ds	1
   888  002D                     divisor@i:
   889  002D                     divisor1@i:	
   890                           ; 2 bytes @ 0xD
   891                           
   892                           
   893                           ; 2 bytes @ 0xD
   894  002D                     	ds	6
   895  0033                     ??_sprintf:
   896                           
   897                           ; 1 bytes @ 0x13
   898  0033                     	ds	3
   899  0036                     sprintf@ap:
   900                           
   901                           ; 1 bytes @ 0x16
   902  0036                     	ds	1
   903  0037                     sprintf@flag:
   904                           
   905                           ; 1 bytes @ 0x17
   906  0037                     	ds	1
   907  0038                     sprintf@prec:
   908                           
   909                           ; 1 bytes @ 0x18
   910  0038                     	ds	1
   911  0039                     sprintf@val:
   912                           
   913                           ; 2 bytes @ 0x19
   914  0039                     	ds	2
   915  003B                     sprintf@sp:
   916                           
   917                           ; 1 bytes @ 0x1B
   918  003B                     	ds	1
   919  003C                     sprintf@c:
   920                           
   921                           ; 1 bytes @ 0x1C
   922  003C                     	ds	1
   923  003D                     ??_conversion_char:
   924  003D                     ??_dato_recibido:	
   925                           ; 1 bytes @ 0x1D
   926                           
   927                           
   928                           ; 1 bytes @ 0x1D
   929  003D                     	ds	7
   930  0044                     ??_main:
   931                           
   932                           ; 1 bytes @ 0x24
   933  0044                     	ds	3
   934                           
   935                           	psect	maintext
   936  010A                     __pmaintext:	
   937 ;;
   938 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   939 ;;
   940 ;; *************** function _main *****************
   941 ;; Defined at:
   942 ;;		line 87 in file "LAB2.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : B00/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          0       3       0       0       0
   959 ;;      Totals:         0       3       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels required when called: 5
   962 ;; This function calls:
   963 ;;		_Escribir_stringLCD
   964 ;;		_Iniciar_LCD
   965 ;;		_Limpiar_pantallaLCD
   966 ;;		_conversion
   967 ;;		_conversion_char
   968 ;;		_dato_recibido
   969 ;;		_set_cursor
   970 ;;		_setup
   971 ;; This function is called by:
   972 ;;		Startup code after reset
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _main
   978  010A                     _main:
   979  010A                     l2287:	
   980                           ;incstack = 0
   981                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   982                           
   983                           
   984                           ;LAB2.c: 88:     setup();
   985  010A  120A  118A  25D4  120A  118A  	fcall	_setup
   986                           
   987                           ;LAB2.c: 89:     Iniciar_LCD();
   988  010F  120A  118A  2279  120A  118A  	fcall	_Iniciar_LCD
   989                           
   990                           ;LAB2.c: 90:     Limpiar_pantallaLCD();
   991  0114  120A  118A  2750  120A  118A  	fcall	_Limpiar_pantallaLCD
   992                           
   993                           ;LAB2.c: 91:     set_cursor(1,0);
   994  0119  1283               	bcf	3,5	;RP0=0, select bank0
   995  011A  1303               	bcf	3,6	;RP1=0, select bank0
   996  011B  01A0               	clrf	set_cursor@posicion
   997  011C  3001               	movlw	1
   998  011D  120A  118A  2500  120A  118A  	fcall	_set_cursor
   999  0122                     l2289:
  1000                           
  1001                           ;LAB2.c: 92:     Escribir_stringLCD("Hola");
  1002  0122  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1003  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0125  00A0               	movwf	Escribir_stringLCD@d
  1006  0126  3080               	movlw	128
  1007  0127  00A1               	movwf	Escribir_stringLCD@d+1
  1008  0128  120A  118A  268C  120A  118A  	fcall	_Escribir_stringLCD
  1009  012D                     l2291:
  1010                           
  1011                           ;LAB2.c: 93:     set_cursor(2,2);
  1012  012D  3002               	movlw	2
  1013  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1014  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0130  00C4               	movwf	??_main
  1016  0131  0844               	movf	??_main,w
  1017  0132  00A0               	movwf	set_cursor@posicion
  1018  0133  3002               	movlw	2
  1019  0134  120A  118A  2500  120A  118A  	fcall	_set_cursor
  1020                           
  1021                           ;LAB2.c: 94:     Escribir_stringLCD("Jose Santizo");
  1022  0139  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1023  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  013C  00A0               	movwf	Escribir_stringLCD@d
  1026  013D  3080               	movlw	128
  1027  013E  00A1               	movwf	Escribir_stringLCD@d+1
  1028  013F  120A  118A  268C  120A  118A  	fcall	_Escribir_stringLCD
  1029  0144                     l2293:
  1030                           
  1031                           ;LAB2.c: 95:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1032  0144  301A               	movlw	26
  1033  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0147  00C6               	movwf	??_main+2
  1036  0148  305E               	movlw	94
  1037  0149  00C5               	movwf	??_main+1
  1038  014A  306D               	movlw	109
  1039  014B  00C4               	movwf	??_main
  1040  014C                     u2157:
  1041  014C  0BC4               	decfsz	??_main,f
  1042  014D  294C               	goto	u2157
  1043  014E  0BC5               	decfsz	??_main+1,f
  1044  014F  294C               	goto	u2157
  1045  0150  0BC6               	decfsz	??_main+2,f
  1046  0151  294C               	goto	u2157
  1047  0152  2953               	nop2
  1048  0153                     l2295:
  1049                           
  1050                           ;LAB2.c: 96:     ADCON0bits.GO = 1;
  1051  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0155  149F               	bsf	31,1	;volatile
  1054  0156                     l2297:
  1055                           
  1056                           ;LAB2.c: 98:     Limpiar_pantallaLCD();
  1057  0156  120A  118A  2750  120A  118A  	fcall	_Limpiar_pantallaLCD
  1058  015B                     l2299:
  1059                           
  1060                           ;LAB2.c: 101:         conversion();
  1061  015B  120A  118A  26E9  120A  118A  	fcall	_conversion
  1062  0160                     l2301:
  1063                           
  1064                           ;LAB2.c: 104:         set_cursor(1,0);
  1065  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0162  01A0               	clrf	set_cursor@posicion
  1068  0163  3001               	movlw	1
  1069  0164  120A  118A  2500  120A  118A  	fcall	_set_cursor
  1070  0169                     l2303:
  1071                           
  1072                           ;LAB2.c: 105:         Escribir_stringLCD("S1:    S2:   S3:");
  1073  0169  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1074  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1075  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1076  016C  00A0               	movwf	Escribir_stringLCD@d
  1077  016D  3080               	movlw	128
  1078  016E  00A1               	movwf	Escribir_stringLCD@d+1
  1079  016F  120A  118A  268C  120A  118A  	fcall	_Escribir_stringLCD
  1080  0174                     l2305:
  1081                           
  1082                           ;LAB2.c: 107:         conversion_char();
  1083  0174  120A  118A  2356  120A  118A  	fcall	_conversion_char
  1084  0179                     l2307:
  1085                           
  1086                           ;LAB2.c: 109:         set_cursor(2,0);
  1087  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1088  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1089  017B  01A0               	clrf	set_cursor@posicion
  1090  017C  3002               	movlw	2
  1091  017D  120A  118A  2500  120A  118A  	fcall	_set_cursor
  1092  0182                     l2309:
  1093                           
  1094                           ;LAB2.c: 110:         Escribir_stringLCD(buffer1);
  1095  0182  305E               	movlw	(low (_buffer1| 0))& (0+255)
  1096  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0185  00A0               	movwf	Escribir_stringLCD@d
  1099  0186  3000               	movlw	0
  1100  0187  00A1               	movwf	Escribir_stringLCD@d+1
  1101  0188  120A  118A  268C  120A  118A  	fcall	_Escribir_stringLCD
  1102  018D                     l2311:
  1103                           
  1104                           ;LAB2.c: 111:         set_cursor(2,7);
  1105  018D  3007               	movlw	7
  1106  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1107  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0190  00C4               	movwf	??_main
  1109  0191  0844               	movf	??_main,w
  1110  0192  00A0               	movwf	set_cursor@posicion
  1111  0193  3002               	movlw	2
  1112  0194  120A  118A  2500  120A  118A  	fcall	_set_cursor
  1113  0199                     l2313:
  1114                           
  1115                           ;LAB2.c: 112:         Escribir_stringLCD(buffer2);
  1116  0199  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1117  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1118  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1119  019C  00A0               	movwf	Escribir_stringLCD@d
  1120  019D  3000               	movlw	0
  1121  019E  00A1               	movwf	Escribir_stringLCD@d+1
  1122  019F  120A  118A  268C  120A  118A  	fcall	_Escribir_stringLCD
  1123  01A4                     l2315:
  1124                           
  1125                           ;LAB2.c: 115:         dato_recibido();
  1126  01A4  120A  118A  26BB  120A  118A  	fcall	_dato_recibido
  1127  01A9                     l2317:
  1128                           
  1129                           ;LAB2.c: 117:         set_cursor(2,13);
  1130  01A9  300D               	movlw	13
  1131  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1132  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1133  01AC  00C4               	movwf	??_main
  1134  01AD  0844               	movf	??_main,w
  1135  01AE  00A0               	movwf	set_cursor@posicion
  1136  01AF  3002               	movlw	2
  1137  01B0  120A  118A  2500  120A  118A  	fcall	_set_cursor
  1138  01B5                     l2319:
  1139                           
  1140                           ;LAB2.c: 118:         Escribir_stringLCD(buffer3);
  1141  01B5  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1142  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1143  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1144  01B8  00A0               	movwf	Escribir_stringLCD@d
  1145  01B9  3000               	movlw	0
  1146  01BA  00A1               	movwf	Escribir_stringLCD@d+1
  1147  01BB  120A  118A  268C  120A  118A  	fcall	_Escribir_stringLCD
  1148  01C0  295B               	goto	l2299
  1149  01C1  120A  118A  280C   	ljmp	start
  1150  01C4                     __end_of_main:
  1151                           
  1152                           	psect	text1
  1153  05D4                     __ptext1:	
  1154 ;; *************** function _setup *****************
  1155 ;; Defined at:
  1156 ;;		line 123 in file "LAB2.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 3
  1177 ;; This function calls:
  1178 ;;		_Config_USART
  1179 ;;		_config_ADC
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _setup
  1187  05D4                     _setup:
  1188  05D4                     l2189:	
  1189                           ;incstack = 0
  1190                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1191                           
  1192                           
  1193                           ;LAB2.c: 126:     ANSEL = 0b0011;
  1194  05D4  3003               	movlw	3
  1195  05D5  1683               	bsf	3,5	;RP0=1, select bank3
  1196  05D6  1703               	bsf	3,6	;RP1=1, select bank3
  1197  05D7  0088               	movwf	8	;volatile
  1198  05D8                     l2191:
  1199                           
  1200                           ;LAB2.c: 127:     ANSELH = 0;
  1201  05D8  0189               	clrf	9	;volatile
  1202  05D9                     l2193:
  1203                           
  1204                           ;LAB2.c: 129:     TRISA = 0b0011;
  1205  05D9  3003               	movlw	3
  1206  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1207  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1208  05DC  0085               	movwf	5	;volatile
  1209                           
  1210                           ;LAB2.c: 130:     TRISB = 0;
  1211  05DD  0186               	clrf	6	;volatile
  1212                           
  1213                           ;LAB2.c: 131:     TRISD = 0;
  1214  05DE  0188               	clrf	8	;volatile
  1215                           
  1216                           ;LAB2.c: 132:     TRISC = 0;
  1217  05DF  0187               	clrf	7	;volatile
  1218                           
  1219                           ;LAB2.c: 133:     TRISE = 0;
  1220  05E0  0189               	clrf	9	;volatile
  1221                           
  1222                           ;LAB2.c: 135:     PORTA = 0;
  1223  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1224  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1225  05E3  0185               	clrf	5	;volatile
  1226                           
  1227                           ;LAB2.c: 136:     PORTD = 0;
  1228  05E4  0188               	clrf	8	;volatile
  1229                           
  1230                           ;LAB2.c: 137:     PORTC = 0;
  1231  05E5  0187               	clrf	7	;volatile
  1232                           
  1233                           ;LAB2.c: 138:     PORTE = 0;
  1234  05E6  0189               	clrf	9	;volatile
  1235                           
  1236                           ;LAB2.c: 139:     PORTB = 0;
  1237  05E7  0186               	clrf	6	;volatile
  1238  05E8                     l2195:
  1239                           
  1240                           ;LAB2.c: 142:     OSCCONbits.IRCF = 0b0110;
  1241  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  1242  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  1243  05EA  080F               	movf	15,w	;volatile
  1244  05EB  398F               	andlw	-113
  1245  05EC  3860               	iorlw	96
  1246  05ED  008F               	movwf	15	;volatile
  1247  05EE                     l2197:
  1248                           
  1249                           ;LAB2.c: 143:     OSCCONbits.SCS = 1;
  1250  05EE  140F               	bsf	15,0	;volatile
  1251  05EF                     l2199:
  1252                           
  1253                           ;LAB2.c: 146:     config_ADC(0);
  1254  05EF  3000               	movlw	0
  1255  05F0  00F4               	movwf	config_ADC@channel
  1256  05F1  00F5               	movwf	config_ADC@channel+1
  1257  05F2  120A  118A  2733  120A  118A  	fcall	_config_ADC
  1258  05F7                     l2201:
  1259                           
  1260                           ;LAB2.c: 149:     PIR1bits.ADIF = 0;
  1261  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1262  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1263  05F9  130C               	bcf	12,6	;volatile
  1264  05FA                     l2203:
  1265                           
  1266                           ;LAB2.c: 150:     PIE1bits.ADIE = 1;
  1267  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  1268  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  1269  05FC  170C               	bsf	12,6	;volatile
  1270  05FD                     l2205:
  1271                           
  1272                           ;LAB2.c: 151:     PIR1bits.RCIF = 0;
  1273  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1274  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1275  05FF  128C               	bcf	12,5	;volatile
  1276  0600                     l2207:
  1277                           
  1278                           ;LAB2.c: 152:     PIE1bits.RCIE = 1;
  1279  0600  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0601  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0602  168C               	bsf	12,5	;volatile
  1282  0603                     l2209:
  1283                           
  1284                           ;LAB2.c: 153:     INTCONbits.PEIE = 1;
  1285  0603  170B               	bsf	11,6	;volatile
  1286  0604                     l2211:
  1287                           
  1288                           ;LAB2.c: 154:     INTCONbits.GIE = 1;
  1289  0604  178B               	bsf	11,7	;volatile
  1290  0605                     l2213:
  1291                           
  1292                           ;LAB2.c: 157:     Config_USART(9600,4);
  1293  0605  3080               	movlw	128
  1294  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0608  00A0               	movwf	Config_USART@baud_rate
  1297  0609  3025               	movlw	37
  1298  060A  00A1               	movwf	Config_USART@baud_rate+1
  1299  060B  3004               	movlw	4
  1300  060C  00A2               	movwf	Config_USART@Freq
  1301  060D  3000               	movlw	0
  1302  060E  00A3               	movwf	Config_USART@Freq+1
  1303  060F  120A  118A  21C4  120A  118A  	fcall	_Config_USART
  1304  0614                     l114:
  1305  0614  0008               	return
  1306  0615                     __end_of_setup:
  1307                           
  1308                           	psect	text2
  1309  0733                     __ptext2:	
  1310 ;; *************** function _config_ADC *****************
  1311 ;; Defined at:
  1312 ;;		line 36 in file "ADC.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  channel         2    4[COMMON] int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         2       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0
  1328 ;;      Temps:          0       1       0       0       0
  1329 ;;      Totals:         2       1       0       0       0
  1330 ;;Total ram usage:        3 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 2
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_setup
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _config_ADC
  1342  0733                     _config_ADC:
  1343  0733                     l2005:	
  1344                           ;incstack = 0
  1345                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1346                           
  1347                           
  1348                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1349  0733  1683               	bsf	3,5	;RP0=1, select bank1
  1350  0734  1303               	bcf	3,6	;RP1=0, select bank1
  1351  0735  139F               	bcf	31,7	;volatile
  1352                           
  1353                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1354  0736  121F               	bcf	31,4	;volatile
  1355                           
  1356                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1357  0737  129F               	bcf	31,5	;volatile
  1358  0738                     l2007:
  1359                           
  1360                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1361  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1363  073A  081F               	movf	31,w	;volatile
  1364  073B  393F               	andlw	-193
  1365  073C  3840               	iorlw	64
  1366  073D  009F               	movwf	31	;volatile
  1367                           
  1368                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1369  073E  0874               	movf	config_ADC@channel,w
  1370  073F  00A0               	movwf	??_config_ADC
  1371  0740  0DA0               	rlf	??_config_ADC,f
  1372  0741  0DA0               	rlf	??_config_ADC,f
  1373  0742  081F               	movf	31,w	;volatile
  1374  0743  0620               	xorwf	??_config_ADC,w
  1375  0744  39C3               	andlw	-61
  1376  0745  0620               	xorwf	??_config_ADC,w
  1377  0746  009F               	movwf	31	;volatile
  1378  0747                     l2009:
  1379                           
  1380                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1381  0747  141F               	bsf	31,0	;volatile
  1382  0748                     l2011:
  1383                           
  1384                           ;ADC.c: 44:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1385  0748  3020               	movlw	32
  1386  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1387  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1388  074B  00A0               	movwf	??_config_ADC
  1389  074C                     u2167:
  1390  074C  0BA0               	decfsz	??_config_ADC,f
  1391  074D  2F4C               	goto	u2167
  1392  074E  0000               	nop
  1393  074F                     l216:
  1394  074F  0008               	return
  1395  0750                     __end_of_config_ADC:
  1396                           
  1397                           	psect	text3
  1398  01C4                     __ptext3:	
  1399 ;; *************** function _Config_USART *****************
  1400 ;; Defined at:
  1401 ;;		line 13 in file "USART.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  baud_rate       2    0[BANK0 ] int 
  1404 ;;  Freq            2    2[BANK0 ] int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       4       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0
  1419 ;;      Totals:         0       4       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 2
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_setup
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _Config_USART
  1432  01C4                     _Config_USART:
  1433  01C4                     l2013:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  1436                           
  1437                           
  1438                           ;USART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  1439  01C4  3080               	movlw	128
  1440  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1441  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1442  01C7  0620               	xorwf	Config_USART@baud_rate,w
  1443  01C8  3025               	movlw	37
  1444  01C9  1903               	skipnz
  1445  01CA  0621               	xorwf	Config_USART@baud_rate+1,w
  1446  01CB  1D03               	btfss	3,2
  1447  01CC  29CE               	goto	u1811
  1448  01CD  29CF               	goto	u1810
  1449  01CE                     u1811:
  1450  01CE  29E2               	goto	l2023
  1451  01CF                     u1810:
  1452  01CF                     l2015:
  1453  01CF  3004               	movlw	4
  1454  01D0  0622               	xorwf	Config_USART@Freq,w
  1455  01D1  0423               	iorwf	Config_USART@Freq+1,w
  1456  01D2  1D03               	btfss	3,2
  1457  01D3  29D5               	goto	u1821
  1458  01D4  29D6               	goto	u1820
  1459  01D5                     u1821:
  1460  01D5  29E2               	goto	l2023
  1461  01D6                     u1820:
  1462  01D6                     l2017:
  1463                           
  1464                           ;USART.c: 15:         TXSTAbits.SYNC = 0;
  1465  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1466  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1467  01D8  1218               	bcf	24,4	;volatile
  1468                           
  1469                           ;USART.c: 16:         TXSTAbits.BRGH = 1;
  1470  01D9  1518               	bsf	24,2	;volatile
  1471                           
  1472                           ;USART.c: 18:         BAUDCTLbits.BRG16 = 0;
  1473  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  1474  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  1475  01DC  1187               	bcf	7,3	;volatile
  1476  01DD                     l2019:
  1477                           
  1478                           ;USART.c: 20:         SPBRG = 25;
  1479  01DD  3019               	movlw	25
  1480  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1481  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1482  01E0  0099               	movwf	25	;volatile
  1483  01E1                     l2021:
  1484                           
  1485                           ;USART.c: 21:         SPBRGH = 0;
  1486  01E1  019A               	clrf	26	;volatile
  1487  01E2                     l2023:
  1488                           
  1489                           ;USART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  1490  01E2  3080               	movlw	128
  1491  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1492  01E4  0620               	xorwf	Config_USART@baud_rate,w
  1493  01E5  3025               	movlw	37
  1494  01E6  1903               	skipnz
  1495  01E7  0621               	xorwf	Config_USART@baud_rate+1,w
  1496  01E8  1D03               	btfss	3,2
  1497  01E9  29EB               	goto	u1831
  1498  01EA  29EC               	goto	u1830
  1499  01EB                     u1831:
  1500  01EB  29FF               	goto	l2033
  1501  01EC                     u1830:
  1502  01EC                     l2025:
  1503  01EC  3008               	movlw	8
  1504  01ED  0622               	xorwf	Config_USART@Freq,w
  1505  01EE  0423               	iorwf	Config_USART@Freq+1,w
  1506  01EF  1D03               	btfss	3,2
  1507  01F0  29F2               	goto	u1841
  1508  01F1  29F3               	goto	u1840
  1509  01F2                     u1841:
  1510  01F2  29FF               	goto	l2033
  1511  01F3                     u1840:
  1512  01F3                     l2027:
  1513                           
  1514                           ;USART.c: 25:         TXSTAbits.SYNC = 0;
  1515  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1516  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  1517  01F5  1218               	bcf	24,4	;volatile
  1518                           
  1519                           ;USART.c: 26:         TXSTAbits.BRGH = 0;
  1520  01F6  1118               	bcf	24,2	;volatile
  1521                           
  1522                           ;USART.c: 28:         BAUDCTLbits.BRG16 = 1;
  1523  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  1524  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  1525  01F9  1587               	bsf	7,3	;volatile
  1526  01FA                     l2029:
  1527                           
  1528                           ;USART.c: 30:         SPBRG = 51;
  1529  01FA  3033               	movlw	51
  1530  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1531  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1532  01FD  0099               	movwf	25	;volatile
  1533  01FE                     l2031:
  1534                           
  1535                           ;USART.c: 31:         SPBRGH = 0;
  1536  01FE  019A               	clrf	26	;volatile
  1537  01FF                     l2033:
  1538                           
  1539                           ;USART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  1540  01FF  3080               	movlw	128
  1541  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0201  0620               	xorwf	Config_USART@baud_rate,w
  1543  0202  3025               	movlw	37
  1544  0203  1903               	skipnz
  1545  0204  0621               	xorwf	Config_USART@baud_rate+1,w
  1546  0205  1D03               	btfss	3,2
  1547  0206  2A08               	goto	u1851
  1548  0207  2A09               	goto	u1850
  1549  0208                     u1851:
  1550  0208  2A1B               	goto	l2043
  1551  0209                     u1850:
  1552  0209                     l2035:
  1553  0209  0322               	decf	Config_USART@Freq,w
  1554  020A  0423               	iorwf	Config_USART@Freq+1,w
  1555  020B  1D03               	btfss	3,2
  1556  020C  2A0E               	goto	u1861
  1557  020D  2A0F               	goto	u1860
  1558  020E                     u1861:
  1559  020E  2A1B               	goto	l2043
  1560  020F                     u1860:
  1561  020F                     l2037:
  1562                           
  1563                           ;USART.c: 35:         TXSTAbits.SYNC = 0;
  1564  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0211  1218               	bcf	24,4	;volatile
  1567                           
  1568                           ;USART.c: 36:         TXSTAbits.BRGH = 1;
  1569  0212  1518               	bsf	24,2	;volatile
  1570                           
  1571                           ;USART.c: 38:         BAUDCTLbits.BRG16 = 1;
  1572  0213  1683               	bsf	3,5	;RP0=1, select bank3
  1573  0214  1703               	bsf	3,6	;RP1=1, select bank3
  1574  0215  1587               	bsf	7,3	;volatile
  1575  0216                     l2039:
  1576                           
  1577                           ;USART.c: 40:         SPBRG = 25;
  1578  0216  3019               	movlw	25
  1579  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1580  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1581  0219  0099               	movwf	25	;volatile
  1582  021A                     l2041:
  1583                           
  1584                           ;USART.c: 41:         SPBRGH = 0;
  1585  021A  019A               	clrf	26	;volatile
  1586  021B                     l2043:
  1587                           
  1588                           ;USART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  1589  021B  30B1               	movlw	177
  1590  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1591  021D  0620               	xorwf	Config_USART@baud_rate,w
  1592  021E  3028               	movlw	40
  1593  021F  1903               	skipnz
  1594  0220  0621               	xorwf	Config_USART@baud_rate+1,w
  1595  0221  1D03               	btfss	3,2
  1596  0222  2A24               	goto	u1871
  1597  0223  2A25               	goto	u1870
  1598  0224                     u1871:
  1599  0224  2A38               	goto	l2053
  1600  0225                     u1870:
  1601  0225                     l2045:
  1602  0225  3004               	movlw	4
  1603  0226  0622               	xorwf	Config_USART@Freq,w
  1604  0227  0423               	iorwf	Config_USART@Freq+1,w
  1605  0228  1D03               	btfss	3,2
  1606  0229  2A2B               	goto	u1881
  1607  022A  2A2C               	goto	u1880
  1608  022B                     u1881:
  1609  022B  2A38               	goto	l2053
  1610  022C                     u1880:
  1611  022C                     l2047:
  1612                           
  1613                           ;USART.c: 45:         TXSTAbits.SYNC = 0;
  1614  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1615  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1616  022E  1218               	bcf	24,4	;volatile
  1617                           
  1618                           ;USART.c: 46:         TXSTAbits.BRGH = 1;
  1619  022F  1518               	bsf	24,2	;volatile
  1620                           
  1621                           ;USART.c: 48:         BAUDCTLbits.BRG16 = 1;
  1622  0230  1683               	bsf	3,5	;RP0=1, select bank3
  1623  0231  1703               	bsf	3,6	;RP1=1, select bank3
  1624  0232  1587               	bsf	7,3	;volatile
  1625  0233                     l2049:
  1626                           
  1627                           ;USART.c: 50:         SPBRG = 23;
  1628  0233  3017               	movlw	23
  1629  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0236  0099               	movwf	25	;volatile
  1632  0237                     l2051:
  1633                           
  1634                           ;USART.c: 51:         SPBRGH = 0;
  1635  0237  019A               	clrf	26	;volatile
  1636  0238                     l2053:
  1637                           
  1638                           ;USART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  1639  0238  30B1               	movlw	177
  1640  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1641  023A  0620               	xorwf	Config_USART@baud_rate,w
  1642  023B  3028               	movlw	40
  1643  023C  1903               	skipnz
  1644  023D  0621               	xorwf	Config_USART@baud_rate+1,w
  1645  023E  1D03               	btfss	3,2
  1646  023F  2A41               	goto	u1891
  1647  0240  2A42               	goto	u1890
  1648  0241                     u1891:
  1649  0241  2A55               	goto	l2063
  1650  0242                     u1890:
  1651  0242                     l2055:
  1652  0242  3008               	movlw	8
  1653  0243  0622               	xorwf	Config_USART@Freq,w
  1654  0244  0423               	iorwf	Config_USART@Freq+1,w
  1655  0245  1D03               	btfss	3,2
  1656  0246  2A48               	goto	u1901
  1657  0247  2A49               	goto	u1900
  1658  0248                     u1901:
  1659  0248  2A55               	goto	l2063
  1660  0249                     u1900:
  1661  0249                     l2057:
  1662                           
  1663                           ;USART.c: 55:         TXSTAbits.SYNC = 0;
  1664  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1665  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1666  024B  1218               	bcf	24,4	;volatile
  1667                           
  1668                           ;USART.c: 56:         TXSTAbits.BRGH = 0;
  1669  024C  1118               	bcf	24,2	;volatile
  1670                           
  1671                           ;USART.c: 58:         BAUDCTLbits.BRG16 = 1;
  1672  024D  1683               	bsf	3,5	;RP0=1, select bank3
  1673  024E  1703               	bsf	3,6	;RP1=1, select bank3
  1674  024F  1587               	bsf	7,3	;volatile
  1675  0250                     l2059:
  1676                           
  1677                           ;USART.c: 60:         SPBRG = 47;
  1678  0250  302F               	movlw	47
  1679  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0252  1303               	bcf	3,6	;RP1=0, select bank1
  1681  0253  0099               	movwf	25	;volatile
  1682  0254                     l2061:
  1683                           
  1684                           ;USART.c: 61:         SPBRGH = 0;
  1685  0254  019A               	clrf	26	;volatile
  1686  0255                     l2063:
  1687                           
  1688                           ;USART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  1689  0255  30B1               	movlw	177
  1690  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0257  0620               	xorwf	Config_USART@baud_rate,w
  1692  0258  3028               	movlw	40
  1693  0259  1903               	skipnz
  1694  025A  0621               	xorwf	Config_USART@baud_rate+1,w
  1695  025B  1D03               	btfss	3,2
  1696  025C  2A5E               	goto	u1911
  1697  025D  2A5F               	goto	u1910
  1698  025E                     u1911:
  1699  025E  2A71               	goto	l2073
  1700  025F                     u1910:
  1701  025F                     l2065:
  1702  025F  0322               	decf	Config_USART@Freq,w
  1703  0260  0423               	iorwf	Config_USART@Freq+1,w
  1704  0261  1D03               	btfss	3,2
  1705  0262  2A64               	goto	u1921
  1706  0263  2A65               	goto	u1920
  1707  0264                     u1921:
  1708  0264  2A71               	goto	l2073
  1709  0265                     u1920:
  1710  0265                     l2067:
  1711                           
  1712                           ;USART.c: 65:         TXSTAbits.SYNC = 0;
  1713  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1714  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1715  0267  1218               	bcf	24,4	;volatile
  1716                           
  1717                           ;USART.c: 66:         TXSTAbits.BRGH = 0;
  1718  0268  1118               	bcf	24,2	;volatile
  1719                           
  1720                           ;USART.c: 68:         BAUDCTLbits.BRG16 = 1;
  1721  0269  1683               	bsf	3,5	;RP0=1, select bank3
  1722  026A  1703               	bsf	3,6	;RP1=1, select bank3
  1723  026B  1587               	bsf	7,3	;volatile
  1724  026C                     l2069:
  1725                           
  1726                           ;USART.c: 70:         SPBRG = 5;
  1727  026C  3005               	movlw	5
  1728  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1729  026E  1303               	bcf	3,6	;RP1=0, select bank1
  1730  026F  0099               	movwf	25	;volatile
  1731  0270                     l2071:
  1732                           
  1733                           ;USART.c: 71:         SPBRGH = 0;
  1734  0270  019A               	clrf	26	;volatile
  1735  0271                     l2073:
  1736                           
  1737                           ;USART.c: 74:     RCSTAbits.SPEN = 1;
  1738  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0272  1798               	bsf	24,7	;volatile
  1740  0273                     l2075:
  1741                           
  1742                           ;USART.c: 75:     RCSTAbits.RX9 = 0;
  1743  0273  1318               	bcf	24,6	;volatile
  1744  0274                     l2077:
  1745                           
  1746                           ;USART.c: 76:     RCSTAbits.CREN = 1;
  1747  0274  1618               	bsf	24,4	;volatile
  1748  0275                     l2079:
  1749                           
  1750                           ;USART.c: 78:     TXSTAbits.TXEN = 1;
  1751  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1752  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1753  0277  1698               	bsf	24,5	;volatile
  1754  0278                     l235:
  1755  0278  0008               	return
  1756  0279                     __end_of_Config_USART:
  1757                           
  1758                           	psect	text4
  1759  0500                     __ptext4:	
  1760 ;; *************** function _set_cursor *****************
  1761 ;; Defined at:
  1762 ;;		line 71 in file "LCD.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  linea           1    wreg     unsigned char 
  1765 ;;  posicion        1    0[BANK0 ] unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  linea           1    3[BANK0 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       1       0       0       0
  1778 ;;      Locals:         0       1       0       0       0
  1779 ;;      Temps:          0       2       0       0       0
  1780 ;;      Totals:         0       4       0       0       0
  1781 ;;Total ram usage:        4 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 4
  1784 ;; This function calls:
  1785 ;;		_Escribir_comandoLCD
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _set_cursor
  1793  0500                     _set_cursor:
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1797                           ;set_cursor@linea stored from wreg
  1798  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0502  00A3               	movwf	set_cursor@linea
  1801  0503                     l2249:
  1802                           
  1803                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1804  0503  1287               	bcf	7,5	;volatile
  1805  0504  1208               	bcf	8,4	;volatile
  1806  0505                     l2251:
  1807                           
  1808                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1809  0505  0323               	decf	set_cursor@linea,w
  1810  0506  1D03               	btfss	3,2
  1811  0507  2D09               	goto	u2101
  1812  0508  2D0A               	goto	u2100
  1813  0509                     u2101:
  1814  0509  2D11               	goto	l2255
  1815  050A                     u2100:
  1816  050A                     l2253:
  1817  050A  3080               	movlw	128
  1818  050B  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  1819  0510  2D1D               	goto	l2259
  1820  0511                     l2255:
  1821  0511  3002               	movlw	2
  1822  0512  0623               	xorwf	set_cursor@linea,w
  1823  0513  1D03               	btfss	3,2
  1824  0514  2D16               	goto	u2111
  1825  0515  2D17               	goto	u2110
  1826  0516                     u2111:
  1827  0516  2D1D               	goto	l2259
  1828  0517                     u2110:
  1829  0517                     l2257:
  1830  0517  30C0               	movlw	192
  1831  0518  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  1832  051D                     l2259:
  1833                           
  1834                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1835  051D  3068               	movlw	104
  1836  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1837  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0520  00A2               	movwf	??_set_cursor+1
  1839  0521  30E3               	movlw	227
  1840  0522  00A1               	movwf	??_set_cursor
  1841  0523                     u2177:
  1842  0523  0BA1               	decfsz	??_set_cursor,f
  1843  0524  2D23               	goto	u2177
  1844  0525  0BA2               	decfsz	??_set_cursor+1,f
  1845  0526  2D23               	goto	u2177
  1846  0527  2D28               	nop2
  1847  0528                     l2261:
  1848                           
  1849                           ;LCD.c: 80:     if (posicion != 0){
  1850  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1852  052A  0820               	movf	set_cursor@posicion,w
  1853  052B  1903               	btfsc	3,2
  1854  052C  2D2E               	goto	u2121
  1855  052D  2D2F               	goto	u2120
  1856  052E                     u2121:
  1857  052E  2D4A               	goto	l182
  1858  052F                     u2120:
  1859  052F  2D3A               	goto	l2269
  1860  0530                     l2265:
  1861                           
  1862                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1863  0530  3014               	movlw	20
  1864  0531  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  1865  0536                     l2267:
  1866                           
  1867                           ;LCD.c: 83:             posicion--;
  1868  0536  3001               	movlw	1
  1869  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0539  02A0               	subwf	set_cursor@posicion,f
  1872  053A                     l2269:
  1873                           
  1874                           ;LCD.c: 81:         while(posicion > 0){
  1875  053A  0820               	movf	set_cursor@posicion,w
  1876  053B  1D03               	btfss	3,2
  1877  053C  2D3E               	goto	u2131
  1878  053D  2D3F               	goto	u2130
  1879  053E                     u2131:
  1880  053E  2D30               	goto	l2265
  1881  053F                     u2130:
  1882  053F                     l2271:
  1883                           
  1884                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1885  053F  3068               	movlw	104
  1886  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0542  00A2               	movwf	??_set_cursor+1
  1889  0543  30E3               	movlw	227
  1890  0544  00A1               	movwf	??_set_cursor
  1891  0545                     u2187:
  1892  0545  0BA1               	decfsz	??_set_cursor,f
  1893  0546  2D45               	goto	u2187
  1894  0547  0BA2               	decfsz	??_set_cursor+1,f
  1895  0548  2D45               	goto	u2187
  1896  0549  2D4A               	nop2
  1897  054A                     l182:
  1898  054A  0008               	return
  1899  054B                     __end_of_set_cursor:
  1900                           
  1901                           	psect	text5
  1902  06BB                     __ptext5:	
  1903 ;; *************** function _dato_recibido *****************
  1904 ;; Defined at:
  1905 ;;		line 184 in file "LAB2.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0
  1921 ;;      Temps:          0       7       0       0       0
  1922 ;;      Totals:         0       7       0       0       0
  1923 ;;Total ram usage:        7 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 4
  1926 ;; This function calls:
  1927 ;;		_divisor1
  1928 ;;		_sprintf
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _dato_recibido
  1936  06BB                     _dato_recibido:
  1937  06BB                     l2285:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1940                           
  1941                           
  1942                           ;LAB2.c: 185:     divisor1(Cont_U, vol3);
  1943  06BB  3068               	movlw	(low (_vol3| 0))& (0+255)
  1944  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1945  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1946  06BE  00BD               	movwf	??_dato_recibido
  1947  06BF  083D               	movf	??_dato_recibido,w
  1948  06C0  00F5               	movwf	divisor1@dig
  1949  06C1  0847               	movf	_Cont_U,w
  1950  06C2  120A  118A  2463  120A  118A  	fcall	_divisor1
  1951                           
  1952                           ;LAB2.c: 186:     sprintf(buffer3, "%d%d%d", vol3[2], vol3[1], vol3[0]);
  1953  06C7  3031               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1954  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1955  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1956  06CA  00BD               	movwf	??_dato_recibido
  1957  06CB  083D               	movf	??_dato_recibido,w
  1958  06CC  00AC               	movwf	sprintf@f
  1959  06CD  086A               	movf	_vol3+2,w
  1960  06CE  00BE               	movwf	??_dato_recibido+1
  1961  06CF  01BF               	clrf	??_dato_recibido+2
  1962  06D0  083E               	movf	??_dato_recibido+1,w
  1963  06D1  00AD               	movwf	?_sprintf+1
  1964  06D2  083F               	movf	??_dato_recibido+2,w
  1965  06D3  00AE               	movwf	?_sprintf+2
  1966  06D4  0869               	movf	_vol3+1,w
  1967  06D5  00C0               	movwf	??_dato_recibido+3
  1968  06D6  01C1               	clrf	??_dato_recibido+4
  1969  06D7  0840               	movf	??_dato_recibido+3,w
  1970  06D8  00AF               	movwf	?_sprintf+3
  1971  06D9  0841               	movf	??_dato_recibido+4,w
  1972  06DA  00B0               	movwf	?_sprintf+4
  1973  06DB  0868               	movf	_vol3,w
  1974  06DC  00C2               	movwf	??_dato_recibido+5
  1975  06DD  01C3               	clrf	??_dato_recibido+6
  1976  06DE  0842               	movf	??_dato_recibido+5,w
  1977  06DF  00B1               	movwf	?_sprintf+5
  1978  06E0  0843               	movf	??_dato_recibido+6,w
  1979  06E1  00B2               	movwf	?_sprintf+6
  1980  06E2  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1981  06E3  120A  118A  2020  120A  118A  	fcall	_sprintf
  1982  06E8                     l130:
  1983  06E8  0008               	return
  1984  06E9                     __end_of_dato_recibido:
  1985                           
  1986                           	psect	text6
  1987  0463                     __ptext6:	
  1988 ;; *************** function _divisor1 *****************
  1989 ;; Defined at:
  1990 ;;		line 177 in file "LAB2.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  a               1    wreg     unsigned char 
  1993 ;;  dig             1    5[COMMON] PTR unsigned char 
  1994 ;;		 -> vol3(1), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  a               1   12[BANK0 ] unsigned char 
  1997 ;;  i               2   13[BANK0 ] int 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         1       0       0       0       0
  2008 ;;      Locals:         0       3       0       0       0
  2009 ;;      Temps:          0       4       0       0       0
  2010 ;;      Totals:         1       7       0       0       0
  2011 ;;Total ram usage:        8 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 3
  2014 ;; This function calls:
  2015 ;;		___awdiv
  2016 ;;		___awmod
  2017 ;; This function is called by:
  2018 ;;		_dato_recibido
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _divisor1
  2024  0463                     _divisor1:
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _divisor1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2028                           ;divisor1@a stored from wreg
  2029  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0465  00AC               	movwf	divisor1@a
  2032  0466                     l2157:
  2033                           
  2034                           ;LAB2.c: 178:     for(int i = 0; i<3 ; i++){
  2035  0466  01AD               	clrf	divisor1@i
  2036  0467  01AE               	clrf	divisor1@i+1
  2037  0468                     l2163:
  2038                           
  2039                           ;LAB2.c: 179:         dig[i] = a % 10;
  2040  0468  300A               	movlw	10
  2041  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2042  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2043  046B  00A0               	movwf	___awmod@divisor
  2044  046C  3000               	movlw	0
  2045  046D  00A1               	movwf	___awmod@divisor+1
  2046  046E  082C               	movf	divisor1@a,w
  2047  046F  00A8               	movwf	??_divisor1
  2048  0470  01A9               	clrf	??_divisor1+1
  2049  0471  0828               	movf	??_divisor1,w
  2050  0472  00A2               	movwf	___awmod@dividend
  2051  0473  0829               	movf	??_divisor1+1,w
  2052  0474  00A3               	movwf	___awmod@dividend+1
  2053  0475  120A  118A  23B1  120A  118A  	fcall	___awmod
  2054  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2055  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2056  047C  0820               	movf	?___awmod,w
  2057  047D  00AA               	movwf	??_divisor1+2
  2058  047E  082D               	movf	divisor1@i,w
  2059  047F  0775               	addwf	divisor1@dig,w
  2060  0480  00AB               	movwf	??_divisor1+3
  2061  0481  082B               	movf	??_divisor1+3,w
  2062  0482  0084               	movwf	4
  2063  0483  082A               	movf	??_divisor1+2,w
  2064  0484  1383               	bcf	3,7	;select IRP bank0
  2065  0485  0080               	movwf	0
  2066                           
  2067                           ;LAB2.c: 180:         a = (a - dig[i])/10;
  2068  0486  300A               	movlw	10
  2069  0487  00A0               	movwf	___awdiv@divisor
  2070  0488  3000               	movlw	0
  2071  0489  00A1               	movwf	___awdiv@divisor+1
  2072  048A  082D               	movf	divisor1@i,w
  2073  048B  0775               	addwf	divisor1@dig,w
  2074  048C  00A8               	movwf	??_divisor1
  2075  048D  0828               	movf	??_divisor1,w
  2076  048E  0084               	movwf	4
  2077  048F  0800               	movf	0,w
  2078  0490  022C               	subwf	divisor1@a,w
  2079  0491  00A2               	movwf	___awdiv@dividend
  2080  0492  01A3               	clrf	___awdiv@dividend+1
  2081  0493  1C03               	skipc
  2082  0494  03A3               	decf	___awdiv@dividend+1,f
  2083  0495  120A  118A  22ED  120A  118A  	fcall	___awdiv
  2084  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2085  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2086  049C  0820               	movf	?___awdiv,w
  2087  049D  00A9               	movwf	??_divisor1+1
  2088  049E  0829               	movf	??_divisor1+1,w
  2089  049F  00AC               	movwf	divisor1@a
  2090  04A0                     l2165:
  2091                           
  2092                           ;LAB2.c: 181:     }
  2093  04A0  3001               	movlw	1
  2094  04A1  07AD               	addwf	divisor1@i,f
  2095  04A2  1803               	skipnc
  2096  04A3  0AAE               	incf	divisor1@i+1,f
  2097  04A4  3000               	movlw	0
  2098  04A5  07AE               	addwf	divisor1@i+1,f
  2099  04A6                     l2167:
  2100  04A6  082E               	movf	divisor1@i+1,w
  2101  04A7  3A80               	xorlw	128
  2102  04A8  00FF               	movwf	btemp+1
  2103  04A9  3080               	movlw	128
  2104  04AA  027F               	subwf	btemp+1,w
  2105  04AB  1D03               	skipz
  2106  04AC  2CAF               	goto	u2015
  2107  04AD  3003               	movlw	3
  2108  04AE  022D               	subwf	divisor1@i,w
  2109  04AF                     u2015:
  2110  04AF  1C03               	skipc
  2111  04B0  2CB2               	goto	u2011
  2112  04B1  2CB3               	goto	u2010
  2113  04B2                     u2011:
  2114  04B2  2C68               	goto	l2163
  2115  04B3                     u2010:
  2116  04B3                     l127:
  2117  04B3  0008               	return
  2118  04B4                     __end_of_divisor1:
  2119                           
  2120                           	psect	text7
  2121  0356                     __ptext7:	
  2122 ;; *************** function _conversion_char *****************
  2123 ;; Defined at:
  2124 ;;		line 161 in file "LAB2.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0
  2140 ;;      Temps:          0       7       0       0       0
  2141 ;;      Totals:         0       7       0       0       0
  2142 ;;Total ram usage:        7 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 4
  2145 ;; This function calls:
  2146 ;;		_divisor
  2147 ;;		_sprintf
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _conversion_char
  2155  0356                     _conversion_char:
  2156  0356                     l2283:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2159                           
  2160                           
  2161                           ;LAB2.c: 162:     divisor(cont1, vol1);
  2162  0356  306A               	movlw	(low (_vol1| 0))& (0+255)
  2163  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0359  00BD               	movwf	??_conversion_char
  2166  035A  083D               	movf	??_conversion_char,w
  2167  035B  00F5               	movwf	divisor@dig
  2168  035C  0849               	movf	_cont1,w
  2169  035D  120A  118A  240C  120A  118A  	fcall	_divisor
  2170                           
  2171                           ;LAB2.c: 163:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  2172  0362  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2173  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0365  00BD               	movwf	??_conversion_char
  2176  0366  083D               	movf	??_conversion_char,w
  2177  0367  00AC               	movwf	sprintf@f
  2178  0368  086C               	movf	_vol1+2,w
  2179  0369  00BE               	movwf	??_conversion_char+1
  2180  036A  01BF               	clrf	??_conversion_char+2
  2181  036B  083E               	movf	??_conversion_char+1,w
  2182  036C  00AD               	movwf	?_sprintf+1
  2183  036D  083F               	movf	??_conversion_char+2,w
  2184  036E  00AE               	movwf	?_sprintf+2
  2185  036F  086B               	movf	_vol1+1,w
  2186  0370  00C0               	movwf	??_conversion_char+3
  2187  0371  01C1               	clrf	??_conversion_char+4
  2188  0372  0840               	movf	??_conversion_char+3,w
  2189  0373  00AF               	movwf	?_sprintf+3
  2190  0374  0841               	movf	??_conversion_char+4,w
  2191  0375  00B0               	movwf	?_sprintf+4
  2192  0376  086A               	movf	_vol1,w
  2193  0377  00C2               	movwf	??_conversion_char+5
  2194  0378  01C3               	clrf	??_conversion_char+6
  2195  0379  0842               	movf	??_conversion_char+5,w
  2196  037A  00B1               	movwf	?_sprintf+5
  2197  037B  0843               	movf	??_conversion_char+6,w
  2198  037C  00B2               	movwf	?_sprintf+6
  2199  037D  305E               	movlw	(low (_buffer1| 0))& (0+255)
  2200  037E  120A  118A  2020  120A  118A  	fcall	_sprintf
  2201                           
  2202                           ;LAB2.c: 165:     divisor(cont2, vol2);
  2203  0383  3069               	movlw	(low (_vol2| 0))& (0+255)
  2204  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0386  00BD               	movwf	??_conversion_char
  2207  0387  083D               	movf	??_conversion_char,w
  2208  0388  00F5               	movwf	divisor@dig
  2209  0389  0848               	movf	_cont2,w
  2210  038A  120A  118A  240C  120A  118A  	fcall	_divisor
  2211                           
  2212                           ;LAB2.c: 166:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  2213  038F  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2214  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0392  00BD               	movwf	??_conversion_char
  2217  0393  083D               	movf	??_conversion_char,w
  2218  0394  00AC               	movwf	sprintf@f
  2219  0395  086B               	movf	_vol2+2,w
  2220  0396  00BE               	movwf	??_conversion_char+1
  2221  0397  01BF               	clrf	??_conversion_char+2
  2222  0398  083E               	movf	??_conversion_char+1,w
  2223  0399  00AD               	movwf	?_sprintf+1
  2224  039A  083F               	movf	??_conversion_char+2,w
  2225  039B  00AE               	movwf	?_sprintf+2
  2226  039C  086A               	movf	_vol2+1,w
  2227  039D  00C0               	movwf	??_conversion_char+3
  2228  039E  01C1               	clrf	??_conversion_char+4
  2229  039F  0840               	movf	??_conversion_char+3,w
  2230  03A0  00AF               	movwf	?_sprintf+3
  2231  03A1  0841               	movf	??_conversion_char+4,w
  2232  03A2  00B0               	movwf	?_sprintf+4
  2233  03A3  0869               	movf	_vol2,w
  2234  03A4  00C2               	movwf	??_conversion_char+5
  2235  03A5  01C3               	clrf	??_conversion_char+6
  2236  03A6  0842               	movf	??_conversion_char+5,w
  2237  03A7  00B1               	movwf	?_sprintf+5
  2238  03A8  0843               	movf	??_conversion_char+6,w
  2239  03A9  00B2               	movwf	?_sprintf+6
  2240  03AA  3054               	movlw	(low (_buffer2| 0))& (0+255)
  2241  03AB  120A  118A  2020  120A  118A  	fcall	_sprintf
  2242  03B0                     l117:
  2243  03B0  0008               	return
  2244  03B1                     __end_of_conversion_char:
  2245                           
  2246                           	psect	text8
  2247  0020                     __ptext8:	
  2248 ;; *************** function _sprintf *****************
  2249 ;; Defined at:
  2250 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  sp              1    wreg     PTR unsigned char 
  2253 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  2254 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2255 ;;		 -> STR_6(7), STR_5(8), STR_4(8), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  2258 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  2259 ;;  tmpval          4    0        struct .
  2260 ;;  val             2   25[BANK0 ] unsigned int 
  2261 ;;  cp              2    0        PTR const unsigned char 
  2262 ;;  len             2    0        unsigned int 
  2263 ;;  c               1   28[BANK0 ] unsigned char 
  2264 ;;  prec            1   24[BANK0 ] char 
  2265 ;;  flag            1   23[BANK0 ] unsigned char 
  2266 ;;  ap              1   22[BANK0 ] PTR void [1]
  2267 ;;		 -> ?_sprintf(2), 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2   12[BANK0 ] int 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       7       0       0       0
  2278 ;;      Locals:         0       7       0       0       0
  2279 ;;      Temps:          0       3       0       0       0
  2280 ;;      Totals:         0      17       0       0       0
  2281 ;;Total ram usage:       17 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 3
  2284 ;; This function calls:
  2285 ;;		___lwdiv
  2286 ;;		___lwmod
  2287 ;; This function is called by:
  2288 ;;		_conversion_char
  2289 ;;		_dato_recibido
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _sprintf
  2295  0020                     _sprintf:
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2299                           ;sprintf@sp stored from wreg
  2300  0020  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0021  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0022  00BB               	movwf	sprintf@sp
  2303  0023                     l2095:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2306  0023  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2307  0024  00B3               	movwf	??_sprintf
  2308  0025  0833               	movf	??_sprintf,w
  2309  0026  00B6               	movwf	sprintf@ap
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2312  0027  28F3               	goto	l2147
  2313  0028                     l2097:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2316  0028  3025               	movlw	37
  2317  0029  063C               	xorwf	sprintf@c,w
  2318  002A  1903               	btfsc	3,2
  2319  002B  282D               	goto	u1941
  2320  002C  282E               	goto	u1940
  2321  002D                     u1941:
  2322  002D  283A               	goto	l2103
  2323  002E                     u1940:
  2324  002E                     l2099:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2327  002E  083C               	movf	sprintf@c,w
  2328  002F  00B3               	movwf	??_sprintf
  2329  0030  083B               	movf	sprintf@sp,w
  2330  0031  0084               	movwf	4
  2331  0032  0833               	movf	??_sprintf,w
  2332  0033  1383               	bcf	3,7	;select IRP bank0
  2333  0034  0080               	movwf	0
  2334  0035                     l2101:
  2335  0035  3001               	movlw	1
  2336  0036  00B3               	movwf	??_sprintf
  2337  0037  0833               	movf	??_sprintf,w
  2338  0038  07BB               	addwf	sprintf@sp,f
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2341  0039  28F3               	goto	l2147
  2342  003A                     l2103:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2345  003A  01B7               	clrf	sprintf@flag
  2346  003B                     l2107:	
  2347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2348                           
  2349  003B  3001               	movlw	1
  2350  003C  07AC               	addwf	sprintf@f,f
  2351  003D  30FF               	movlw	-1
  2352  003E  072C               	addwf	sprintf@f,w
  2353  003F  0084               	movwf	4
  2354  0040  120A  118A  24BE  120A  118A  	fcall	stringdir
  2355  0045  00BC               	movwf	sprintf@c
  2356  0046  00B3               	movwf	??_sprintf
  2357  0047  01B4               	clrf	??_sprintf+1
  2358                           
  2359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2360                           ; Switch size 1, requested type "simple"
  2361                           ; Number of cases is 1, Range of values is 0 to 0
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            4     3 (average)
  2365                           ; direct_byte           11     8 (fixed)
  2366                           ; jumptable            260     6 (fixed)
  2367                           ;	Chosen strategy is simple_byte
  2368  0048  0834               	movf	??_sprintf+1,w
  2369  0049  3A00               	xorlw	0	; case 0
  2370  004A  1903               	skipnz
  2371  004B  284D               	goto	l2341
  2372  004C  28F3               	goto	l2147
  2373  004D                     l2341:
  2374                           
  2375                           ; Switch size 1, requested type "simple"
  2376                           ; Number of cases is 3, Range of values is 0 to 105
  2377                           ; switch strategies available:
  2378                           ; Name         Instructions Cycles
  2379                           ; simple_byte           10     6 (average)
  2380                           ; jumptable            260     6 (fixed)
  2381                           ;	Chosen strategy is simple_byte
  2382  004D  0833               	movf	??_sprintf,w
  2383  004E  3A00               	xorlw	0	; case 0
  2384  004F  1903               	skipnz
  2385  0050  2905               	goto	l2149
  2386  0051  3A64               	xorlw	100	; case 100
  2387  0052  1903               	skipnz
  2388  0053  2858               	goto	l2109
  2389  0054  3A0D               	xorlw	13	; case 105
  2390  0055  1903               	skipnz
  2391  0056  2858               	goto	l2109
  2392  0057  28F3               	goto	l2147
  2393  0058                     l2109:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2396  0058  0836               	movf	sprintf@ap,w
  2397  0059  0084               	movwf	4
  2398  005A  1383               	bcf	3,7	;select IRP bank0
  2399  005B  0800               	movf	0,w
  2400  005C  00B9               	movwf	sprintf@val
  2401  005D  0A84               	incf	4,f
  2402  005E  0800               	movf	0,w
  2403  005F  00BA               	movwf	sprintf@val+1
  2404  0060                     l2111:
  2405  0060  3002               	movlw	2
  2406  0061  00B3               	movwf	??_sprintf
  2407  0062  0833               	movf	??_sprintf,w
  2408  0063  07B6               	addwf	sprintf@ap,f
  2409  0064                     l2113:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2412  0064  1FBA               	btfss	sprintf@val+1,7
  2413  0065  2867               	goto	u1951
  2414  0066  2868               	goto	u1950
  2415  0067                     u1951:
  2416  0067  2871               	goto	l2119
  2417  0068                     u1950:
  2418  0068                     l2115:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2421  0068  3003               	movlw	3
  2422  0069  00B3               	movwf	??_sprintf
  2423  006A  0833               	movf	??_sprintf,w
  2424  006B  04B7               	iorwf	sprintf@flag,f
  2425  006C                     l2117:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2428  006C  09B9               	comf	sprintf@val,f
  2429  006D  09BA               	comf	sprintf@val+1,f
  2430  006E  0AB9               	incf	sprintf@val,f
  2431  006F  1903               	skipnz
  2432  0070  0ABA               	incf	sprintf@val+1,f
  2433  0071                     l2119:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2436  0071  01BC               	clrf	sprintf@c
  2437  0072  0ABC               	incf	sprintf@c,f
  2438  0073                     l2125:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2441  0073  083C               	movf	sprintf@c,w
  2442  0074  00B3               	movwf	??_sprintf
  2443  0075  0733               	addwf	??_sprintf,w
  2444  0076  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2445  0077  0084               	movwf	4
  2446  0078  120A  118A  24BE  120A  118A  	fcall	stringdir
  2447  007D  00B4               	movwf	??_sprintf+1
  2448  007E  120A  118A  24BE  120A  118A  	fcall	stringdir
  2449  0083  00B5               	movwf	??_sprintf+2
  2450  0084  0835               	movf	??_sprintf+2,w
  2451  0085  023A               	subwf	sprintf@val+1,w
  2452  0086  1D03               	skipz
  2453  0087  288A               	goto	u1965
  2454  0088  0834               	movf	??_sprintf+1,w
  2455  0089  0239               	subwf	sprintf@val,w
  2456  008A                     u1965:
  2457  008A  1803               	skipnc
  2458  008B  288D               	goto	u1961
  2459  008C  288E               	goto	u1960
  2460  008D                     u1961:
  2461  008D  288F               	goto	l2129
  2462  008E                     u1960:
  2463  008E  2899               	goto	l2131
  2464  008F                     l2129:
  2465  008F  3001               	movlw	1
  2466  0090  00B3               	movwf	??_sprintf
  2467  0091  0833               	movf	??_sprintf,w
  2468  0092  07BC               	addwf	sprintf@c,f
  2469  0093  3005               	movlw	5
  2470  0094  063C               	xorwf	sprintf@c,w
  2471  0095  1D03               	btfss	3,2
  2472  0096  2898               	goto	u1971
  2473  0097  2899               	goto	u1970
  2474  0098                     u1971:
  2475  0098  2873               	goto	l2125
  2476  0099                     u1970:
  2477  0099                     l2131:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2480  0099  0837               	movf	sprintf@flag,w
  2481  009A  3903               	andlw	3
  2482  009B  1903               	btfsc	3,2
  2483  009C  289E               	goto	u1981
  2484  009D  289F               	goto	u1980
  2485  009E                     u1981:
  2486  009E  28AA               	goto	l2137
  2487  009F                     u1980:
  2488  009F                     l2133:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2491  009F  302D               	movlw	45
  2492  00A0  00B3               	movwf	??_sprintf
  2493  00A1  083B               	movf	sprintf@sp,w
  2494  00A2  0084               	movwf	4
  2495  00A3  0833               	movf	??_sprintf,w
  2496  00A4  1383               	bcf	3,7	;select IRP bank0
  2497  00A5  0080               	movwf	0
  2498  00A6                     l2135:
  2499  00A6  3001               	movlw	1
  2500  00A7  00B3               	movwf	??_sprintf
  2501  00A8  0833               	movf	??_sprintf,w
  2502  00A9  07BB               	addwf	sprintf@sp,f
  2503  00AA                     l2137:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2506  00AA  083C               	movf	sprintf@c,w
  2507  00AB  00B3               	movwf	??_sprintf
  2508  00AC  0833               	movf	??_sprintf,w
  2509  00AD  00B8               	movwf	sprintf@prec
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2512  00AE  28EA               	goto	l2145
  2513  00AF                     l2139:
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2516  00AF  300A               	movlw	10
  2517  00B0  00A7               	movwf	___lwmod@divisor
  2518  00B1  3000               	movlw	0
  2519  00B2  00A8               	movwf	___lwmod@divisor+1
  2520  00B3  0838               	movf	sprintf@prec,w
  2521  00B4  00B3               	movwf	??_sprintf
  2522  00B5  0733               	addwf	??_sprintf,w
  2523  00B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2524  00B7  0084               	movwf	4
  2525  00B8  120A  118A  24BE  120A  118A  	fcall	stringdir
  2526  00BD  00A0               	movwf	___lwdiv@divisor
  2527  00BE  120A  118A  24BE  120A  118A  	fcall	stringdir
  2528  00C3  00A1               	movwf	___lwdiv@divisor+1
  2529  00C4  083A               	movf	sprintf@val+1,w
  2530  00C5  00A3               	movwf	___lwdiv@dividend+1
  2531  00C6  0839               	movf	sprintf@val,w
  2532  00C7  00A2               	movwf	___lwdiv@dividend
  2533  00C8  120A  118A  254B  120A  118A  	fcall	___lwdiv
  2534  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2535  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2536  00CF  0821               	movf	?___lwdiv+1,w
  2537  00D0  00AA               	movwf	___lwmod@dividend+1
  2538  00D1  0820               	movf	?___lwdiv,w
  2539  00D2  00A9               	movwf	___lwmod@dividend
  2540  00D3  120A  118A  2615  120A  118A  	fcall	___lwmod
  2541  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2542  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2543  00DA  0827               	movf	?___lwmod,w
  2544  00DB  3E30               	addlw	48
  2545  00DC  00B4               	movwf	??_sprintf+1
  2546  00DD  0834               	movf	??_sprintf+1,w
  2547  00DE  00BC               	movwf	sprintf@c
  2548  00DF                     l2141:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2551  00DF  083C               	movf	sprintf@c,w
  2552  00E0  00B3               	movwf	??_sprintf
  2553  00E1  083B               	movf	sprintf@sp,w
  2554  00E2  0084               	movwf	4
  2555  00E3  0833               	movf	??_sprintf,w
  2556  00E4  1383               	bcf	3,7	;select IRP bank0
  2557  00E5  0080               	movwf	0
  2558  00E6                     l2143:
  2559  00E6  3001               	movlw	1
  2560  00E7  00B3               	movwf	??_sprintf
  2561  00E8  0833               	movf	??_sprintf,w
  2562  00E9  07BB               	addwf	sprintf@sp,f
  2563  00EA                     l2145:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2566  00EA  30FF               	movlw	255
  2567  00EB  00B3               	movwf	??_sprintf
  2568  00EC  0833               	movf	??_sprintf,w
  2569  00ED  07B8               	addwf	sprintf@prec,f
  2570  00EE  0A38               	incf	sprintf@prec,w
  2571  00EF  1D03               	btfss	3,2
  2572  00F0  28F2               	goto	u1991
  2573  00F1  28F3               	goto	u1990
  2574  00F2                     u1991:
  2575  00F2  28AF               	goto	l2139
  2576  00F3                     u1990:
  2577  00F3                     l2147:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2580  00F3  3001               	movlw	1
  2581  00F4  07AC               	addwf	sprintf@f,f
  2582  00F5  30FF               	movlw	-1
  2583  00F6  072C               	addwf	sprintf@f,w
  2584  00F7  0084               	movwf	4
  2585  00F8  120A  118A  24BE  120A  118A  	fcall	stringdir
  2586  00FD  00B3               	movwf	??_sprintf
  2587  00FE  0833               	movf	??_sprintf,w
  2588  00FF  00BC               	movwf	sprintf@c
  2589  0100  083C               	movf	sprintf@c,w
  2590  0101  1D03               	btfss	3,2
  2591  0102  2904               	goto	u2001
  2592  0103  2905               	goto	u2000
  2593  0104                     u2001:
  2594  0104  2828               	goto	l2097
  2595  0105                     u2000:
  2596  0105                     l2149:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2599  0105  083B               	movf	sprintf@sp,w
  2600  0106  0084               	movwf	4
  2601  0107  1383               	bcf	3,7	;select IRP bank0
  2602  0108  0180               	clrf	0
  2603  0109                     l345:
  2604  0109  0008               	return
  2605  010A                     __end_of_sprintf:
  2606                           
  2607                           	psect	text9
  2608  0615                     __ptext9:	
  2609 ;; *************** function ___lwmod *****************
  2610 ;; Defined at:
  2611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  divisor         2    7[BANK0 ] unsigned int 
  2614 ;;  dividend        2    9[BANK0 ] unsigned int 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  counter         1   11[BANK0 ] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2    7[BANK0 ] unsigned int 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       4       0       0       0
  2627 ;;      Locals:         0       1       0       0       0
  2628 ;;      Temps:          1       0       0       0       0
  2629 ;;      Totals:         1       5       0       0       0
  2630 ;;Total ram usage:        6 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 2
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_sprintf
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           
  2641                           ;psect for function ___lwmod
  2642  0615                     ___lwmod:
  2643  0615                     l1487:	
  2644                           ;incstack = 0
  2645                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2646                           
  2647  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0617  0827               	movf	___lwmod@divisor,w
  2650  0618  0428               	iorwf	___lwmod@divisor+1,w
  2651  0619  1903               	btfsc	3,2
  2652  061A  2E1C               	goto	u1041
  2653  061B  2E1D               	goto	u1040
  2654  061C                     u1041:
  2655  061C  2E4C               	goto	l1505
  2656  061D                     u1040:
  2657  061D                     l1489:
  2658  061D  01AB               	clrf	___lwmod@counter
  2659  061E  0AAB               	incf	___lwmod@counter,f
  2660  061F  2E2B               	goto	l1495
  2661  0620                     l1491:
  2662  0620  3001               	movlw	1
  2663  0621                     u1055:
  2664  0621  1003               	clrc
  2665  0622  0DA7               	rlf	___lwmod@divisor,f
  2666  0623  0DA8               	rlf	___lwmod@divisor+1,f
  2667  0624  3EFF               	addlw	-1
  2668  0625  1D03               	skipz
  2669  0626  2E21               	goto	u1055
  2670  0627                     l1493:
  2671  0627  3001               	movlw	1
  2672  0628  00F5               	movwf	??___lwmod
  2673  0629  0875               	movf	??___lwmod,w
  2674  062A  07AB               	addwf	___lwmod@counter,f
  2675  062B                     l1495:
  2676  062B  1FA8               	btfss	___lwmod@divisor+1,7
  2677  062C  2E2E               	goto	u1061
  2678  062D  2E2F               	goto	u1060
  2679  062E                     u1061:
  2680  062E  2E20               	goto	l1491
  2681  062F                     u1060:
  2682  062F                     l1497:
  2683  062F  0828               	movf	___lwmod@divisor+1,w
  2684  0630  022A               	subwf	___lwmod@dividend+1,w
  2685  0631  1D03               	skipz
  2686  0632  2E35               	goto	u1075
  2687  0633  0827               	movf	___lwmod@divisor,w
  2688  0634  0229               	subwf	___lwmod@dividend,w
  2689  0635                     u1075:
  2690  0635  1C03               	skipc
  2691  0636  2E38               	goto	u1071
  2692  0637  2E39               	goto	u1070
  2693  0638                     u1071:
  2694  0638  2E3F               	goto	l1501
  2695  0639                     u1070:
  2696  0639                     l1499:
  2697  0639  0827               	movf	___lwmod@divisor,w
  2698  063A  02A9               	subwf	___lwmod@dividend,f
  2699  063B  0828               	movf	___lwmod@divisor+1,w
  2700  063C  1C03               	skipc
  2701  063D  03AA               	decf	___lwmod@dividend+1,f
  2702  063E  02AA               	subwf	___lwmod@dividend+1,f
  2703  063F                     l1501:
  2704  063F  3001               	movlw	1
  2705  0640                     u1085:
  2706  0640  1003               	clrc
  2707  0641  0CA8               	rrf	___lwmod@divisor+1,f
  2708  0642  0CA7               	rrf	___lwmod@divisor,f
  2709  0643  3EFF               	addlw	-1
  2710  0644  1D03               	skipz
  2711  0645  2E40               	goto	u1085
  2712  0646                     l1503:
  2713  0646  3001               	movlw	1
  2714  0647  02AB               	subwf	___lwmod@counter,f
  2715  0648  1D03               	btfss	3,2
  2716  0649  2E4B               	goto	u1091
  2717  064A  2E4C               	goto	u1090
  2718  064B                     u1091:
  2719  064B  2E2F               	goto	l1497
  2720  064C                     u1090:
  2721  064C                     l1505:
  2722  064C  082A               	movf	___lwmod@dividend+1,w
  2723  064D  00A8               	movwf	?___lwmod+1
  2724  064E  0829               	movf	___lwmod@dividend,w
  2725  064F  00A7               	movwf	?___lwmod
  2726  0650                     l631:
  2727  0650  0008               	return
  2728  0651                     __end_of___lwmod:
  2729                           
  2730                           	psect	text10
  2731  054B                     __ptext10:	
  2732 ;; *************** function ___lwdiv *****************
  2733 ;; Defined at:
  2734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  divisor         2    0[BANK0 ] unsigned int 
  2737 ;;  dividend        2    2[BANK0 ] unsigned int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  quotient        2    5[BANK0 ] unsigned int 
  2740 ;;  counter         1    4[BANK0 ] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2    0[BANK0 ] unsigned int 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       4       0       0       0
  2751 ;;      Locals:         0       3       0       0       0
  2752 ;;      Temps:          1       0       0       0       0
  2753 ;;      Totals:         1       7       0       0       0
  2754 ;;Total ram usage:        8 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 2
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_sprintf
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function ___lwdiv
  2766  054B                     ___lwdiv:
  2767  054B                     l1979:	
  2768                           ;incstack = 0
  2769                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2770                           
  2771  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2772  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2773  054D  01A5               	clrf	___lwdiv@quotient
  2774  054E  01A6               	clrf	___lwdiv@quotient+1
  2775  054F                     l1981:
  2776  054F  0820               	movf	___lwdiv@divisor,w
  2777  0550  0421               	iorwf	___lwdiv@divisor+1,w
  2778  0551  1903               	btfsc	3,2
  2779  0552  2D54               	goto	u1741
  2780  0553  2D55               	goto	u1740
  2781  0554                     u1741:
  2782  0554  2D8C               	goto	l2001
  2783  0555                     u1740:
  2784  0555                     l1983:
  2785  0555  01A4               	clrf	___lwdiv@counter
  2786  0556  0AA4               	incf	___lwdiv@counter,f
  2787  0557  2D63               	goto	l1989
  2788  0558                     l1985:
  2789  0558  3001               	movlw	1
  2790  0559                     u1755:
  2791  0559  1003               	clrc
  2792  055A  0DA0               	rlf	___lwdiv@divisor,f
  2793  055B  0DA1               	rlf	___lwdiv@divisor+1,f
  2794  055C  3EFF               	addlw	-1
  2795  055D  1D03               	skipz
  2796  055E  2D59               	goto	u1755
  2797  055F                     l1987:
  2798  055F  3001               	movlw	1
  2799  0560  00F4               	movwf	??___lwdiv
  2800  0561  0874               	movf	??___lwdiv,w
  2801  0562  07A4               	addwf	___lwdiv@counter,f
  2802  0563                     l1989:
  2803  0563  1FA1               	btfss	___lwdiv@divisor+1,7
  2804  0564  2D66               	goto	u1761
  2805  0565  2D67               	goto	u1760
  2806  0566                     u1761:
  2807  0566  2D58               	goto	l1985
  2808  0567                     u1760:
  2809  0567                     l1991:
  2810  0567  3001               	movlw	1
  2811  0568                     u1775:
  2812  0568  1003               	clrc
  2813  0569  0DA5               	rlf	___lwdiv@quotient,f
  2814  056A  0DA6               	rlf	___lwdiv@quotient+1,f
  2815  056B  3EFF               	addlw	-1
  2816  056C  1D03               	skipz
  2817  056D  2D68               	goto	u1775
  2818  056E  0821               	movf	___lwdiv@divisor+1,w
  2819  056F  0223               	subwf	___lwdiv@dividend+1,w
  2820  0570  1D03               	skipz
  2821  0571  2D74               	goto	u1785
  2822  0572  0820               	movf	___lwdiv@divisor,w
  2823  0573  0222               	subwf	___lwdiv@dividend,w
  2824  0574                     u1785:
  2825  0574  1C03               	skipc
  2826  0575  2D77               	goto	u1781
  2827  0576  2D78               	goto	u1780
  2828  0577                     u1781:
  2829  0577  2D7F               	goto	l1997
  2830  0578                     u1780:
  2831  0578                     l1993:
  2832  0578  0820               	movf	___lwdiv@divisor,w
  2833  0579  02A2               	subwf	___lwdiv@dividend,f
  2834  057A  0821               	movf	___lwdiv@divisor+1,w
  2835  057B  1C03               	skipc
  2836  057C  03A3               	decf	___lwdiv@dividend+1,f
  2837  057D  02A3               	subwf	___lwdiv@dividend+1,f
  2838  057E                     l1995:
  2839  057E  1425               	bsf	___lwdiv@quotient,0
  2840  057F                     l1997:
  2841  057F  3001               	movlw	1
  2842  0580                     u1795:
  2843  0580  1003               	clrc
  2844  0581  0CA1               	rrf	___lwdiv@divisor+1,f
  2845  0582  0CA0               	rrf	___lwdiv@divisor,f
  2846  0583  3EFF               	addlw	-1
  2847  0584  1D03               	skipz
  2848  0585  2D80               	goto	u1795
  2849  0586                     l1999:
  2850  0586  3001               	movlw	1
  2851  0587  02A4               	subwf	___lwdiv@counter,f
  2852  0588  1D03               	btfss	3,2
  2853  0589  2D8B               	goto	u1801
  2854  058A  2D8C               	goto	u1800
  2855  058B                     u1801:
  2856  058B  2D67               	goto	l1991
  2857  058C                     u1800:
  2858  058C                     l2001:
  2859  058C  0826               	movf	___lwdiv@quotient+1,w
  2860  058D  00A1               	movwf	?___lwdiv+1
  2861  058E  0825               	movf	___lwdiv@quotient,w
  2862  058F  00A0               	movwf	?___lwdiv
  2863  0590                     l621:
  2864  0590  0008               	return
  2865  0591                     __end_of___lwdiv:
  2866                           
  2867                           	psect	text11
  2868  040C                     __ptext11:	
  2869 ;; *************** function _divisor *****************
  2870 ;; Defined at:
  2871 ;;		line 169 in file "LAB2.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  a               1    wreg     unsigned char 
  2874 ;;  dig             1    5[COMMON] PTR unsigned char 
  2875 ;;		 -> vol2(1), vol1(1), 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  a               1   10[BANK0 ] unsigned char 
  2878 ;;  i               2   13[BANK0 ] int 
  2879 ;;  b               2   11[BANK0 ] int 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         1       0       0       0       0
  2890 ;;      Locals:         0       5       0       0       0
  2891 ;;      Temps:          0       2       0       0       0
  2892 ;;      Totals:         1       7       0       0       0
  2893 ;;Total ram usage:        8 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 3
  2896 ;; This function calls:
  2897 ;;		___awdiv
  2898 ;;		___awmod
  2899 ;; This function is called by:
  2900 ;;		_conversion_char
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _divisor
  2906  040C                     _divisor:
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2910                           ;divisor@a stored from wreg
  2911  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2912  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2913  040E  00AA               	movwf	divisor@a
  2914  040F                     l2081:
  2915                           
  2916                           ;LAB2.c: 170:     int b = 2*a;
  2917  040F  082A               	movf	divisor@a,w
  2918  0410  00A8               	movwf	??_divisor
  2919  0411  01A9               	clrf	??_divisor+1
  2920  0412  1003               	clrc
  2921  0413  0D28               	rlf	??_divisor,w
  2922  0414  00AB               	movwf	divisor@b
  2923  0415  0D29               	rlf	??_divisor+1,w
  2924  0416  00AC               	movwf	divisor@b+1
  2925  0417                     l2083:
  2926                           
  2927                           ;LAB2.c: 171:     for(int i = 0; i<3 ; i++){
  2928  0417  01AD               	clrf	divisor@i
  2929  0418  01AE               	clrf	divisor@i+1
  2930  0419                     l2089:
  2931                           
  2932                           ;LAB2.c: 172:         dig[i] = b % 10;
  2933  0419  300A               	movlw	10
  2934  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2935  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2936  041C  00A0               	movwf	___awmod@divisor
  2937  041D  3000               	movlw	0
  2938  041E  00A1               	movwf	___awmod@divisor+1
  2939  041F  082C               	movf	divisor@b+1,w
  2940  0420  00A3               	movwf	___awmod@dividend+1
  2941  0421  082B               	movf	divisor@b,w
  2942  0422  00A2               	movwf	___awmod@dividend
  2943  0423  120A  118A  23B1  120A  118A  	fcall	___awmod
  2944  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2946  042A  0820               	movf	?___awmod,w
  2947  042B  00A8               	movwf	??_divisor
  2948  042C  082D               	movf	divisor@i,w
  2949  042D  0775               	addwf	divisor@dig,w
  2950  042E  00A9               	movwf	??_divisor+1
  2951  042F  0829               	movf	??_divisor+1,w
  2952  0430  0084               	movwf	4
  2953  0431  0828               	movf	??_divisor,w
  2954  0432  1383               	bcf	3,7	;select IRP bank0
  2955  0433  0080               	movwf	0
  2956                           
  2957                           ;LAB2.c: 173:         b = (b - dig[i])/10;
  2958  0434  300A               	movlw	10
  2959  0435  00A0               	movwf	___awdiv@divisor
  2960  0436  3000               	movlw	0
  2961  0437  00A1               	movwf	___awdiv@divisor+1
  2962  0438  082D               	movf	divisor@i,w
  2963  0439  0775               	addwf	divisor@dig,w
  2964  043A  00A8               	movwf	??_divisor
  2965  043B  0828               	movf	??_divisor,w
  2966  043C  0084               	movwf	4
  2967  043D  0800               	movf	0,w
  2968  043E  022B               	subwf	divisor@b,w
  2969  043F  00A2               	movwf	___awdiv@dividend
  2970  0440  082C               	movf	divisor@b+1,w
  2971  0441  1C03               	skipc
  2972  0442  032C               	decf	divisor@b+1,w
  2973  0443  00A3               	movwf	___awdiv@dividend+1
  2974  0444  120A  118A  22ED  120A  118A  	fcall	___awdiv
  2975  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2976  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2977  044B  0821               	movf	?___awdiv+1,w
  2978  044C  00AC               	movwf	divisor@b+1
  2979  044D  0820               	movf	?___awdiv,w
  2980  044E  00AB               	movwf	divisor@b
  2981  044F                     l2091:
  2982                           
  2983                           ;LAB2.c: 174:     }
  2984  044F  3001               	movlw	1
  2985  0450  07AD               	addwf	divisor@i,f
  2986  0451  1803               	skipnc
  2987  0452  0AAE               	incf	divisor@i+1,f
  2988  0453  3000               	movlw	0
  2989  0454  07AE               	addwf	divisor@i+1,f
  2990  0455                     l2093:
  2991  0455  082E               	movf	divisor@i+1,w
  2992  0456  3A80               	xorlw	128
  2993  0457  00FF               	movwf	btemp+1
  2994  0458  3080               	movlw	128
  2995  0459  027F               	subwf	btemp+1,w
  2996  045A  1D03               	skipz
  2997  045B  2C5E               	goto	u1935
  2998  045C  3003               	movlw	3
  2999  045D  022D               	subwf	divisor@i,w
  3000  045E                     u1935:
  3001  045E  1C03               	skipc
  3002  045F  2C61               	goto	u1931
  3003  0460  2C62               	goto	u1930
  3004  0461                     u1931:
  3005  0461  2C19               	goto	l2089
  3006  0462                     u1930:
  3007  0462                     l122:
  3008  0462  0008               	return
  3009  0463                     __end_of_divisor:
  3010                           
  3011                           	psect	text12
  3012  03B1                     __ptext12:	
  3013 ;; *************** function ___awmod *****************
  3014 ;; Defined at:
  3015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  divisor         2    0[BANK0 ] int 
  3018 ;;  dividend        2    2[BANK0 ] int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  sign            1    5[BANK0 ] unsigned char 
  3021 ;;  counter         1    4[BANK0 ] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[BANK0 ] int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         0       4       0       0       0
  3032 ;;      Locals:         0       2       0       0       0
  3033 ;;      Temps:          1       0       0       0       0
  3034 ;;      Totals:         1       6       0       0       0
  3035 ;;Total ram usage:        7 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 2
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_divisor
  3042 ;;		_divisor1
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function ___awmod
  3048  03B1                     ___awmod:
  3049  03B1                     l1941:	
  3050                           ;incstack = 0
  3051                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3052                           
  3053  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3054  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3055  03B3  01A5               	clrf	___awmod@sign
  3056  03B4                     l1943:
  3057  03B4  1FA3               	btfss	___awmod@dividend+1,7
  3058  03B5  2BB7               	goto	u1651
  3059  03B6  2BB8               	goto	u1650
  3060  03B7                     u1651:
  3061  03B7  2BBF               	goto	l1949
  3062  03B8                     u1650:
  3063  03B8                     l1945:
  3064  03B8  09A2               	comf	___awmod@dividend,f
  3065  03B9  09A3               	comf	___awmod@dividend+1,f
  3066  03BA  0AA2               	incf	___awmod@dividend,f
  3067  03BB  1903               	skipnz
  3068  03BC  0AA3               	incf	___awmod@dividend+1,f
  3069  03BD                     l1947:
  3070  03BD  01A5               	clrf	___awmod@sign
  3071  03BE  0AA5               	incf	___awmod@sign,f
  3072  03BF                     l1949:
  3073  03BF  1FA1               	btfss	___awmod@divisor+1,7
  3074  03C0  2BC2               	goto	u1661
  3075  03C1  2BC3               	goto	u1660
  3076  03C2                     u1661:
  3077  03C2  2BC8               	goto	l1953
  3078  03C3                     u1660:
  3079  03C3                     l1951:
  3080  03C3  09A0               	comf	___awmod@divisor,f
  3081  03C4  09A1               	comf	___awmod@divisor+1,f
  3082  03C5  0AA0               	incf	___awmod@divisor,f
  3083  03C6  1903               	skipnz
  3084  03C7  0AA1               	incf	___awmod@divisor+1,f
  3085  03C8                     l1953:
  3086  03C8  0820               	movf	___awmod@divisor,w
  3087  03C9  0421               	iorwf	___awmod@divisor+1,w
  3088  03CA  1903               	btfsc	3,2
  3089  03CB  2BCD               	goto	u1671
  3090  03CC  2BCE               	goto	u1670
  3091  03CD                     u1671:
  3092  03CD  2BFD               	goto	l1971
  3093  03CE                     u1670:
  3094  03CE                     l1955:
  3095  03CE  01A4               	clrf	___awmod@counter
  3096  03CF  0AA4               	incf	___awmod@counter,f
  3097  03D0  2BDC               	goto	l1961
  3098  03D1                     l1957:
  3099  03D1  3001               	movlw	1
  3100  03D2                     u1685:
  3101  03D2  1003               	clrc
  3102  03D3  0DA0               	rlf	___awmod@divisor,f
  3103  03D4  0DA1               	rlf	___awmod@divisor+1,f
  3104  03D5  3EFF               	addlw	-1
  3105  03D6  1D03               	skipz
  3106  03D7  2BD2               	goto	u1685
  3107  03D8                     l1959:
  3108  03D8  3001               	movlw	1
  3109  03D9  00F4               	movwf	??___awmod
  3110  03DA  0874               	movf	??___awmod,w
  3111  03DB  07A4               	addwf	___awmod@counter,f
  3112  03DC                     l1961:
  3113  03DC  1FA1               	btfss	___awmod@divisor+1,7
  3114  03DD  2BDF               	goto	u1691
  3115  03DE  2BE0               	goto	u1690
  3116  03DF                     u1691:
  3117  03DF  2BD1               	goto	l1957
  3118  03E0                     u1690:
  3119  03E0                     l1963:
  3120  03E0  0821               	movf	___awmod@divisor+1,w
  3121  03E1  0223               	subwf	___awmod@dividend+1,w
  3122  03E2  1D03               	skipz
  3123  03E3  2BE6               	goto	u1705
  3124  03E4  0820               	movf	___awmod@divisor,w
  3125  03E5  0222               	subwf	___awmod@dividend,w
  3126  03E6                     u1705:
  3127  03E6  1C03               	skipc
  3128  03E7  2BE9               	goto	u1701
  3129  03E8  2BEA               	goto	u1700
  3130  03E9                     u1701:
  3131  03E9  2BF0               	goto	l1967
  3132  03EA                     u1700:
  3133  03EA                     l1965:
  3134  03EA  0820               	movf	___awmod@divisor,w
  3135  03EB  02A2               	subwf	___awmod@dividend,f
  3136  03EC  0821               	movf	___awmod@divisor+1,w
  3137  03ED  1C03               	skipc
  3138  03EE  03A3               	decf	___awmod@dividend+1,f
  3139  03EF  02A3               	subwf	___awmod@dividend+1,f
  3140  03F0                     l1967:
  3141  03F0  3001               	movlw	1
  3142  03F1                     u1715:
  3143  03F1  1003               	clrc
  3144  03F2  0CA1               	rrf	___awmod@divisor+1,f
  3145  03F3  0CA0               	rrf	___awmod@divisor,f
  3146  03F4  3EFF               	addlw	-1
  3147  03F5  1D03               	skipz
  3148  03F6  2BF1               	goto	u1715
  3149  03F7                     l1969:
  3150  03F7  3001               	movlw	1
  3151  03F8  02A4               	subwf	___awmod@counter,f
  3152  03F9  1D03               	btfss	3,2
  3153  03FA  2BFC               	goto	u1721
  3154  03FB  2BFD               	goto	u1720
  3155  03FC                     u1721:
  3156  03FC  2BE0               	goto	l1963
  3157  03FD                     u1720:
  3158  03FD                     l1971:
  3159  03FD  0825               	movf	___awmod@sign,w
  3160  03FE  1903               	btfsc	3,2
  3161  03FF  2C01               	goto	u1731
  3162  0400  2C02               	goto	u1730
  3163  0401                     u1731:
  3164  0401  2C07               	goto	l1975
  3165  0402                     u1730:
  3166  0402                     l1973:
  3167  0402  09A2               	comf	___awmod@dividend,f
  3168  0403  09A3               	comf	___awmod@dividend+1,f
  3169  0404  0AA2               	incf	___awmod@dividend,f
  3170  0405  1903               	skipnz
  3171  0406  0AA3               	incf	___awmod@dividend+1,f
  3172  0407                     l1975:
  3173  0407  0823               	movf	___awmod@dividend+1,w
  3174  0408  00A1               	movwf	?___awmod+1
  3175  0409  0822               	movf	___awmod@dividend,w
  3176  040A  00A0               	movwf	?___awmod
  3177  040B                     l515:
  3178  040B  0008               	return
  3179  040C                     __end_of___awmod:
  3180                           
  3181                           	psect	text13
  3182  02ED                     __ptext13:	
  3183 ;; *************** function ___awdiv *****************
  3184 ;; Defined at:
  3185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  divisor         2    0[BANK0 ] int 
  3188 ;;  dividend        2    2[BANK0 ] int 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  quotient        2    6[BANK0 ] int 
  3191 ;;  sign            1    5[BANK0 ] unsigned char 
  3192 ;;  counter         1    4[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  2    0[BANK0 ] int 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       4       0       0       0
  3203 ;;      Locals:         0       4       0       0       0
  3204 ;;      Temps:          1       0       0       0       0
  3205 ;;      Totals:         1       8       0       0       0
  3206 ;;Total ram usage:        9 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 2
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_divisor
  3213 ;;		_divisor1
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function ___awdiv
  3219  02ED                     ___awdiv:
  3220  02ED                     l1897:	
  3221                           ;incstack = 0
  3222                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3223                           
  3224  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3225  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  3226  02EF  01A5               	clrf	___awdiv@sign
  3227  02F0                     l1899:
  3228  02F0  1FA1               	btfss	___awdiv@divisor+1,7
  3229  02F1  2AF3               	goto	u1551
  3230  02F2  2AF4               	goto	u1550
  3231  02F3                     u1551:
  3232  02F3  2AFB               	goto	l1905
  3233  02F4                     u1550:
  3234  02F4                     l1901:
  3235  02F4  09A0               	comf	___awdiv@divisor,f
  3236  02F5  09A1               	comf	___awdiv@divisor+1,f
  3237  02F6  0AA0               	incf	___awdiv@divisor,f
  3238  02F7  1903               	skipnz
  3239  02F8  0AA1               	incf	___awdiv@divisor+1,f
  3240  02F9                     l1903:
  3241  02F9  01A5               	clrf	___awdiv@sign
  3242  02FA  0AA5               	incf	___awdiv@sign,f
  3243  02FB                     l1905:
  3244  02FB  1FA3               	btfss	___awdiv@dividend+1,7
  3245  02FC  2AFE               	goto	u1561
  3246  02FD  2AFF               	goto	u1560
  3247  02FE                     u1561:
  3248  02FE  2B08               	goto	l1911
  3249  02FF                     u1560:
  3250  02FF                     l1907:
  3251  02FF  09A2               	comf	___awdiv@dividend,f
  3252  0300  09A3               	comf	___awdiv@dividend+1,f
  3253  0301  0AA2               	incf	___awdiv@dividend,f
  3254  0302  1903               	skipnz
  3255  0303  0AA3               	incf	___awdiv@dividend+1,f
  3256  0304                     l1909:
  3257  0304  3001               	movlw	1
  3258  0305  00F4               	movwf	??___awdiv
  3259  0306  0874               	movf	??___awdiv,w
  3260  0307  06A5               	xorwf	___awdiv@sign,f
  3261  0308                     l1911:
  3262  0308  01A6               	clrf	___awdiv@quotient
  3263  0309  01A7               	clrf	___awdiv@quotient+1
  3264  030A                     l1913:
  3265  030A  0820               	movf	___awdiv@divisor,w
  3266  030B  0421               	iorwf	___awdiv@divisor+1,w
  3267  030C  1903               	btfsc	3,2
  3268  030D  2B0F               	goto	u1571
  3269  030E  2B10               	goto	u1570
  3270  030F                     u1571:
  3271  030F  2B47               	goto	l1933
  3272  0310                     u1570:
  3273  0310                     l1915:
  3274  0310  01A4               	clrf	___awdiv@counter
  3275  0311  0AA4               	incf	___awdiv@counter,f
  3276  0312  2B1E               	goto	l1921
  3277  0313                     l1917:
  3278  0313  3001               	movlw	1
  3279  0314                     u1585:
  3280  0314  1003               	clrc
  3281  0315  0DA0               	rlf	___awdiv@divisor,f
  3282  0316  0DA1               	rlf	___awdiv@divisor+1,f
  3283  0317  3EFF               	addlw	-1
  3284  0318  1D03               	skipz
  3285  0319  2B14               	goto	u1585
  3286  031A                     l1919:
  3287  031A  3001               	movlw	1
  3288  031B  00F4               	movwf	??___awdiv
  3289  031C  0874               	movf	??___awdiv,w
  3290  031D  07A4               	addwf	___awdiv@counter,f
  3291  031E                     l1921:
  3292  031E  1FA1               	btfss	___awdiv@divisor+1,7
  3293  031F  2B21               	goto	u1591
  3294  0320  2B22               	goto	u1590
  3295  0321                     u1591:
  3296  0321  2B13               	goto	l1917
  3297  0322                     u1590:
  3298  0322                     l1923:
  3299  0322  3001               	movlw	1
  3300  0323                     u1605:
  3301  0323  1003               	clrc
  3302  0324  0DA6               	rlf	___awdiv@quotient,f
  3303  0325  0DA7               	rlf	___awdiv@quotient+1,f
  3304  0326  3EFF               	addlw	-1
  3305  0327  1D03               	skipz
  3306  0328  2B23               	goto	u1605
  3307  0329  0821               	movf	___awdiv@divisor+1,w
  3308  032A  0223               	subwf	___awdiv@dividend+1,w
  3309  032B  1D03               	skipz
  3310  032C  2B2F               	goto	u1615
  3311  032D  0820               	movf	___awdiv@divisor,w
  3312  032E  0222               	subwf	___awdiv@dividend,w
  3313  032F                     u1615:
  3314  032F  1C03               	skipc
  3315  0330  2B32               	goto	u1611
  3316  0331  2B33               	goto	u1610
  3317  0332                     u1611:
  3318  0332  2B3A               	goto	l1929
  3319  0333                     u1610:
  3320  0333                     l1925:
  3321  0333  0820               	movf	___awdiv@divisor,w
  3322  0334  02A2               	subwf	___awdiv@dividend,f
  3323  0335  0821               	movf	___awdiv@divisor+1,w
  3324  0336  1C03               	skipc
  3325  0337  03A3               	decf	___awdiv@dividend+1,f
  3326  0338  02A3               	subwf	___awdiv@dividend+1,f
  3327  0339                     l1927:
  3328  0339  1426               	bsf	___awdiv@quotient,0
  3329  033A                     l1929:
  3330  033A  3001               	movlw	1
  3331  033B                     u1625:
  3332  033B  1003               	clrc
  3333  033C  0CA1               	rrf	___awdiv@divisor+1,f
  3334  033D  0CA0               	rrf	___awdiv@divisor,f
  3335  033E  3EFF               	addlw	-1
  3336  033F  1D03               	skipz
  3337  0340  2B3B               	goto	u1625
  3338  0341                     l1931:
  3339  0341  3001               	movlw	1
  3340  0342  02A4               	subwf	___awdiv@counter,f
  3341  0343  1D03               	btfss	3,2
  3342  0344  2B46               	goto	u1631
  3343  0345  2B47               	goto	u1630
  3344  0346                     u1631:
  3345  0346  2B22               	goto	l1923
  3346  0347                     u1630:
  3347  0347                     l1933:
  3348  0347  0825               	movf	___awdiv@sign,w
  3349  0348  1903               	btfsc	3,2
  3350  0349  2B4B               	goto	u1641
  3351  034A  2B4C               	goto	u1640
  3352  034B                     u1641:
  3353  034B  2B51               	goto	l1937
  3354  034C                     u1640:
  3355  034C                     l1935:
  3356  034C  09A6               	comf	___awdiv@quotient,f
  3357  034D  09A7               	comf	___awdiv@quotient+1,f
  3358  034E  0AA6               	incf	___awdiv@quotient,f
  3359  034F  1903               	skipnz
  3360  0350  0AA7               	incf	___awdiv@quotient+1,f
  3361  0351                     l1937:
  3362  0351  0827               	movf	___awdiv@quotient+1,w
  3363  0352  00A1               	movwf	?___awdiv+1
  3364  0353  0826               	movf	___awdiv@quotient,w
  3365  0354  00A0               	movwf	?___awdiv
  3366  0355                     l502:
  3367  0355  0008               	return
  3368  0356                     __end_of___awdiv:
  3369                           
  3370                           	psect	text14
  3371  06E9                     __ptext14:	
  3372 ;; *************** function _conversion *****************
  3373 ;; Defined at:
  3374 ;;		line 21 in file "ADC.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3388 ;;      Params:         0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0
  3390 ;;      Temps:          1       0       0       0       0
  3391 ;;      Totals:         1       0       0       0       0
  3392 ;;Total ram usage:        1 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 2
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           
  3403                           ;psect for function _conversion
  3404  06E9                     _conversion:
  3405  06E9                     l1795:	
  3406                           ;incstack = 0
  3407                           ; Regs used in _conversion: [wreg+status,2+status,0]
  3408                           
  3409                           
  3410                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  3411  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3412  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3413  06EB  189F               	btfsc	31,1	;volatile
  3414  06EC  2EEE               	goto	u1461
  3415  06ED  2EEF               	goto	u1460
  3416  06EE                     u1461:
  3417  06EE  2F14               	goto	l213
  3418  06EF                     u1460:
  3419  06EF                     l1797:
  3420                           
  3421                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  3422  06EF  0C1F               	rrf	31,w	;volatile
  3423  06F0  00F4               	movwf	??_conversion
  3424  06F1  0C74               	rrf	??_conversion,w
  3425  06F2  390F               	andlw	15
  3426  06F3  3A01               	xorlw	1
  3427  06F4  1D03               	skipz
  3428  06F5  2EF7               	goto	u1471
  3429  06F6  2EF8               	goto	u1470
  3430  06F7                     u1471:
  3431  06F7  2EFF               	goto	l1803
  3432  06F8                     u1470:
  3433  06F8                     l1799:
  3434                           
  3435                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  3436  06F8  30C3               	movlw	-61
  3437  06F9  059F               	andwf	31,f	;volatile
  3438  06FA                     l1801:
  3439                           
  3440                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  3441  06FA  3021               	movlw	33
  3442  06FB  00F4               	movwf	??_conversion
  3443  06FC                     u2197:
  3444  06FC  0BF4               	decfsz	??_conversion,f
  3445  06FD  2EFC               	goto	u2197
  3446                           
  3447                           ;ADC.c: 26:         }
  3448  06FE  2F0D               	goto	l1809
  3449  06FF                     l1803:
  3450  06FF  0C1F               	rrf	31,w	;volatile
  3451  0700  00F4               	movwf	??_conversion
  3452  0701  0C74               	rrf	??_conversion,w
  3453  0702  390F               	andlw	15
  3454  0703  3A00               	xorlw	0
  3455  0704  1D03               	skipz
  3456  0705  2F07               	goto	u1481
  3457  0706  2F08               	goto	u1480
  3458  0707                     u1481:
  3459  0707  2F0D               	goto	l1809
  3460  0708                     u1480:
  3461  0708                     l1805:
  3462                           
  3463                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  3464  0708  081F               	movf	31,w	;volatile
  3465  0709  39C3               	andlw	-61
  3466  070A  3804               	iorlw	4
  3467  070B  009F               	movwf	31	;volatile
  3468  070C  2EFA               	goto	l1801
  3469  070D                     l1809:
  3470                           
  3471                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  3472  070D  3021               	movlw	33
  3473  070E  00F4               	movwf	??_conversion
  3474  070F                     u2207:
  3475  070F  0BF4               	decfsz	??_conversion,f
  3476  0710  2F0F               	goto	u2207
  3477  0711                     l1811:
  3478                           
  3479                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  3480  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0712  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0713  149F               	bsf	31,1	;volatile
  3483  0714                     l213:
  3484  0714  0008               	return
  3485  0715                     __end_of_conversion:
  3486                           
  3487                           	psect	text15
  3488  0750                     __ptext15:	
  3489 ;; *************** function _Limpiar_pantallaLCD *****************
  3490 ;; Defined at:
  3491 ;;		line 63 in file "LCD.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0, pclath, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0
  3507 ;;      Temps:          0       2       0       0       0
  3508 ;;      Totals:         0       2       0       0       0
  3509 ;;Total ram usage:        2 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 4
  3512 ;; This function calls:
  3513 ;;		_Escribir_comandoLCD
  3514 ;; This function is called by:
  3515 ;;		_main
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function _Limpiar_pantallaLCD
  3521  0750                     _Limpiar_pantallaLCD:
  3522  0750                     l2241:	
  3523                           ;incstack = 0
  3524                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  3525                           
  3526                           
  3527                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  3528  0750  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0751  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0752  1287               	bcf	7,5	;volatile
  3531  0753  1208               	bcf	8,4	;volatile
  3532  0754                     l2243:
  3533                           
  3534                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  3535  0754  3001               	movlw	1
  3536  0755  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3537  075A                     l2245:
  3538                           
  3539                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3540  075A  301A               	movlw	26
  3541  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3542  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3543  075D  00A1               	movwf	??_Limpiar_pantallaLCD+1
  3544  075E  30F7               	movlw	247
  3545  075F  00A0               	movwf	??_Limpiar_pantallaLCD
  3546  0760                     u2217:
  3547  0760  0BA0               	decfsz	??_Limpiar_pantallaLCD,f
  3548  0761  2F60               	goto	u2217
  3549  0762  0BA1               	decfsz	??_Limpiar_pantallaLCD+1,f
  3550  0763  2F60               	goto	u2217
  3551  0764  2F65               	nop2
  3552  0765                     l2247:
  3553                           
  3554                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  3555  0765  3002               	movlw	2
  3556  0766  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3557  076B                     l172:
  3558  076B  0008               	return
  3559  076C                     __end_of_Limpiar_pantallaLCD:
  3560                           
  3561                           	psect	text16
  3562  0279                     __ptext16:	
  3563 ;; *************** function _Iniciar_LCD *****************
  3564 ;; Defined at:
  3565 ;;		line 30 in file "LCD.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0
  3581 ;;      Temps:          0       2       0       0       0
  3582 ;;      Totals:         0       2       0       0       0
  3583 ;;Total ram usage:        2 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 4
  3586 ;; This function calls:
  3587 ;;		_Escribir_comandoLCD
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _Iniciar_LCD
  3595  0279                     _Iniciar_LCD:
  3596  0279                     l2215:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3599                           
  3600                           
  3601                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  3602  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3603  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3604  027B  1287               	bcf	7,5	;volatile
  3605                           
  3606                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3607  027C  1208               	bcf	8,4	;volatile
  3608  027D                     l2217:
  3609                           
  3610                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3611  027D  3025               	movlw	37
  3612  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3613  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0280  00A1               	movwf	??_Iniciar_LCD+1
  3615  0281  305B               	movlw	91
  3616  0282  00A0               	movwf	??_Iniciar_LCD
  3617  0283                     u2227:
  3618  0283  0BA0               	decfsz	??_Iniciar_LCD,f
  3619  0284  2A83               	goto	u2227
  3620  0285  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3621  0286  2A83               	goto	u2227
  3622  0287                     l2219:
  3623                           
  3624                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3625  0287  3030               	movlw	48
  3626  0288  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3627  028D                     l2221:
  3628                           
  3629                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3630  028D  300B               	movlw	11
  3631  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3632  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0290  00A1               	movwf	??_Iniciar_LCD+1
  3634  0291  3061               	movlw	97
  3635  0292  00A0               	movwf	??_Iniciar_LCD
  3636  0293                     u2237:
  3637  0293  0BA0               	decfsz	??_Iniciar_LCD,f
  3638  0294  2A93               	goto	u2237
  3639  0295  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3640  0296  2A93               	goto	u2237
  3641  0297  2A98               	nop2
  3642                           
  3643                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3644  0298  3030               	movlw	48
  3645  0299  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3646  029E                     l2223:
  3647                           
  3648                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3649  029E  3041               	movlw	65
  3650  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3651  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3652  02A1  00A0               	movwf	??_Iniciar_LCD
  3653  02A2                     u2247:
  3654  02A2  0BA0               	decfsz	??_Iniciar_LCD,f
  3655  02A3  2AA2               	goto	u2247
  3656  02A4  2AA5               	nop2
  3657  02A5                     l2225:
  3658                           
  3659                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3660  02A5  3030               	movlw	48
  3661  02A6  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3662                           
  3663                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3664  02AB  3041               	movlw	65
  3665  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3666  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  3667  02AE  00A0               	movwf	??_Iniciar_LCD
  3668  02AF                     u2257:
  3669  02AF  0BA0               	decfsz	??_Iniciar_LCD,f
  3670  02B0  2AAF               	goto	u2257
  3671  02B1  2AB2               	nop2
  3672  02B2                     l2227:
  3673                           
  3674                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3675  02B2  3038               	movlw	56
  3676  02B3  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3677  02B8                     l2229:
  3678                           
  3679                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3680  02B8  3041               	movlw	65
  3681  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3682  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3683  02BB  00A0               	movwf	??_Iniciar_LCD
  3684  02BC                     u2267:
  3685  02BC  0BA0               	decfsz	??_Iniciar_LCD,f
  3686  02BD  2ABC               	goto	u2267
  3687  02BE  2ABF               	nop2
  3688                           
  3689                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3690  02BF  3008               	movlw	8
  3691  02C0  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3692  02C5                     l2231:
  3693                           
  3694                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3695  02C5  3041               	movlw	65
  3696  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3697  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3698  02C8  00A0               	movwf	??_Iniciar_LCD
  3699  02C9                     u2277:
  3700  02C9  0BA0               	decfsz	??_Iniciar_LCD,f
  3701  02CA  2AC9               	goto	u2277
  3702  02CB  2ACC               	nop2
  3703  02CC                     l2233:
  3704                           
  3705                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3706  02CC  3001               	movlw	1
  3707  02CD  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3708                           
  3709                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3710  02D2  3041               	movlw	65
  3711  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3712  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3713  02D5  00A0               	movwf	??_Iniciar_LCD
  3714  02D6                     u2287:
  3715  02D6  0BA0               	decfsz	??_Iniciar_LCD,f
  3716  02D7  2AD6               	goto	u2287
  3717  02D8  2AD9               	nop2
  3718  02D9                     l2235:
  3719                           
  3720                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3721  02D9  3006               	movlw	6
  3722  02DA  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3723  02DF                     l2237:
  3724                           
  3725                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3726  02DF  3041               	movlw	65
  3727  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3728  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3729  02E2  00A0               	movwf	??_Iniciar_LCD
  3730  02E3                     u2297:
  3731  02E3  0BA0               	decfsz	??_Iniciar_LCD,f
  3732  02E4  2AE3               	goto	u2297
  3733  02E5  2AE6               	nop2
  3734                           
  3735                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3736  02E6  300C               	movlw	12
  3737  02E7  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3738  02EC                     l163:
  3739  02EC  0008               	return
  3740  02ED                     __end_of_Iniciar_LCD:
  3741                           
  3742                           	psect	text17
  3743  068C                     __ptext17:	
  3744 ;; *************** function _Escribir_stringLCD *****************
  3745 ;; Defined at:
  3746 ;;		line 55 in file "LCD.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  3749 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3750 ;;		 -> STR_2(13), STR_1(5), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  i               1    3[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       2       0       0       0
  3763 ;;      Locals:         0       1       0       0       0
  3764 ;;      Temps:          0       1       0       0       0
  3765 ;;      Totals:         0       4       0       0       0
  3766 ;;Total ram usage:        4 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 4
  3769 ;; This function calls:
  3770 ;;		_Escribir_comandoLCD
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _Escribir_stringLCD
  3778  068C                     _Escribir_stringLCD:
  3779  068C                     l2273:	
  3780                           ;incstack = 0
  3781                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3782                           
  3783                           
  3784                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3785  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3786  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3787  068E  1687               	bsf	7,5	;volatile
  3788  068F  1208               	bcf	8,4	;volatile
  3789  0690                     l2275:
  3790                           
  3791                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3792  0690  01A3               	clrf	Escribir_stringLCD@i
  3793  0691  2EA9               	goto	l2281
  3794  0692                     l2277:
  3795                           
  3796                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3797  0692  0823               	movf	Escribir_stringLCD@i,w
  3798  0693  0720               	addwf	Escribir_stringLCD@d,w
  3799  0694  0084               	movwf	4
  3800  0695  0821               	movf	Escribir_stringLCD@d+1,w
  3801  0696  1803               	skipnc
  3802  0697  0A21               	incf	Escribir_stringLCD@d+1,w
  3803  0698  00FF               	movwf	btemp+1
  3804  0699  120A  118A  24B4  120A  118A  	fcall	stringtab
  3805  069E  120A  118A  2591  120A  118A  	fcall	_Escribir_comandoLCD
  3806  06A3                     l2279:
  3807                           
  3808                           ;LCD.c: 60:     }
  3809  06A3  3001               	movlw	1
  3810  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3811  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3812  06A6  00A2               	movwf	??_Escribir_stringLCD
  3813  06A7  0822               	movf	??_Escribir_stringLCD,w
  3814  06A8  07A3               	addwf	Escribir_stringLCD@i,f
  3815  06A9                     l2281:
  3816  06A9  0823               	movf	Escribir_stringLCD@i,w
  3817  06AA  0720               	addwf	Escribir_stringLCD@d,w
  3818  06AB  0084               	movwf	4
  3819  06AC  0821               	movf	Escribir_stringLCD@d+1,w
  3820  06AD  1803               	skipnc
  3821  06AE  0A21               	incf	Escribir_stringLCD@d+1,w
  3822  06AF  00FF               	movwf	btemp+1
  3823  06B0  120A  118A  24B4  120A  118A  	fcall	stringtab
  3824  06B5  3A00               	xorlw	0
  3825  06B6  1D03               	skipz
  3826  06B7  2EB9               	goto	u2141
  3827  06B8  2EBA               	goto	u2140
  3828  06B9                     u2141:
  3829  06B9  2E92               	goto	l2277
  3830  06BA                     u2140:
  3831  06BA                     l169:
  3832  06BA  0008               	return
  3833  06BB                     __end_of_Escribir_stringLCD:
  3834                           
  3835                           	psect	text18
  3836  0591                     __ptext18:	
  3837 ;; *************** function _Escribir_comandoLCD *****************
  3838 ;; Defined at:
  3839 ;;		line 17 in file "LCD.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  Comando         1    wreg     unsigned char 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  Comando         1    5[COMMON] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0, pclath, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3853 ;;      Params:         0       0       0       0       0
  3854 ;;      Locals:         1       0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0
  3856 ;;      Totals:         1       0       0       0       0
  3857 ;;Total ram usage:        1 bytes
  3858 ;; Hardware stack levels used: 1
  3859 ;; Hardware stack levels required when called: 3
  3860 ;; This function calls:
  3861 ;;		_prender_ELCD
  3862 ;; This function is called by:
  3863 ;;		_Iniciar_LCD
  3864 ;;		_Escribir_stringLCD
  3865 ;;		_Limpiar_pantallaLCD
  3866 ;;		_set_cursor
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           
  3871                           ;psect for function _Escribir_comandoLCD
  3872  0591                     _Escribir_comandoLCD:
  3873                           
  3874                           ;incstack = 0
  3875                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3876                           ;Escribir_comandoLCD@Comando stored from wreg
  3877  0591  00F5               	movwf	Escribir_comandoLCD@Comando
  3878  0592                     l2169:
  3879                           
  3880                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3881  0592  1C75               	btfss	Escribir_comandoLCD@Comando,0
  3882  0593  2D95               	goto	u2021
  3883  0594  2D96               	goto	u2020
  3884  0595                     u2021:
  3885  0595  2D9A               	goto	l144
  3886  0596                     u2020:
  3887  0596                     l2171:
  3888  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0598  1708               	bsf	8,6	;volatile
  3891  0599  2D9D               	goto	l145
  3892  059A                     l144:
  3893  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3894  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3895  059C  1308               	bcf	8,6	;volatile
  3896  059D                     l145:
  3897                           
  3898                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3899  059D  1CF5               	btfss	Escribir_comandoLCD@Comando,1
  3900  059E  2DA0               	goto	u2031
  3901  059F  2DA1               	goto	u2030
  3902  05A0                     u2031:
  3903  05A0  2DA3               	goto	l146
  3904  05A1                     u2030:
  3905  05A1                     l2173:
  3906  05A1  1788               	bsf	8,7	;volatile
  3907  05A2  2DA4               	goto	l147
  3908  05A3                     l146:
  3909  05A3  1388               	bcf	8,7	;volatile
  3910  05A4                     l147:
  3911                           
  3912                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3913  05A4  1D75               	btfss	Escribir_comandoLCD@Comando,2
  3914  05A5  2DA7               	goto	u2041
  3915  05A6  2DA8               	goto	u2040
  3916  05A7                     u2041:
  3917  05A7  2DAA               	goto	l148
  3918  05A8                     u2040:
  3919  05A8                     l2175:
  3920  05A8  1406               	bsf	6,0	;volatile
  3921  05A9  2DAB               	goto	l149
  3922  05AA                     l148:
  3923  05AA  1006               	bcf	6,0	;volatile
  3924  05AB                     l149:
  3925                           
  3926                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3927  05AB  1DF5               	btfss	Escribir_comandoLCD@Comando,3
  3928  05AC  2DAE               	goto	u2051
  3929  05AD  2DAF               	goto	u2050
  3930  05AE                     u2051:
  3931  05AE  2DB1               	goto	l150
  3932  05AF                     u2050:
  3933  05AF                     l2177:
  3934  05AF  1486               	bsf	6,1	;volatile
  3935  05B0  2DB2               	goto	l151
  3936  05B1                     l150:
  3937  05B1  1086               	bcf	6,1	;volatile
  3938  05B2                     l151:
  3939                           
  3940                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3941  05B2  1E75               	btfss	Escribir_comandoLCD@Comando,4
  3942  05B3  2DB5               	goto	u2061
  3943  05B4  2DB6               	goto	u2060
  3944  05B5                     u2061:
  3945  05B5  2DB8               	goto	l152
  3946  05B6                     u2060:
  3947  05B6                     l2179:
  3948  05B6  1506               	bsf	6,2	;volatile
  3949  05B7  2DB9               	goto	l153
  3950  05B8                     l152:
  3951  05B8  1106               	bcf	6,2	;volatile
  3952  05B9                     l153:
  3953                           
  3954                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3955  05B9  1EF5               	btfss	Escribir_comandoLCD@Comando,5
  3956  05BA  2DBC               	goto	u2071
  3957  05BB  2DBD               	goto	u2070
  3958  05BC                     u2071:
  3959  05BC  2DBF               	goto	l154
  3960  05BD                     u2070:
  3961  05BD                     l2181:
  3962  05BD  1586               	bsf	6,3	;volatile
  3963  05BE  2DC0               	goto	l155
  3964  05BF                     l154:
  3965  05BF  1186               	bcf	6,3	;volatile
  3966  05C0                     l155:
  3967                           
  3968                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3969  05C0  1F75               	btfss	Escribir_comandoLCD@Comando,6
  3970  05C1  2DC3               	goto	u2081
  3971  05C2  2DC4               	goto	u2080
  3972  05C3                     u2081:
  3973  05C3  2DC6               	goto	l156
  3974  05C4                     u2080:
  3975  05C4                     l2183:
  3976  05C4  1606               	bsf	6,4	;volatile
  3977  05C5  2DC7               	goto	l157
  3978  05C6                     l156:
  3979  05C6  1206               	bcf	6,4	;volatile
  3980  05C7                     l157:
  3981                           
  3982                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3983  05C7  1FF5               	btfss	Escribir_comandoLCD@Comando,7
  3984  05C8  2DCA               	goto	u2091
  3985  05C9  2DCB               	goto	u2090
  3986  05CA                     u2091:
  3987  05CA  2DCD               	goto	l158
  3988  05CB                     u2090:
  3989  05CB                     l2185:
  3990  05CB  1686               	bsf	6,5	;volatile
  3991  05CC  2DCE               	goto	l2187
  3992  05CD                     l158:
  3993  05CD  1286               	bcf	6,5	;volatile
  3994  05CE                     l2187:
  3995                           
  3996                           ;LCD.c: 27:     prender_ELCD();
  3997  05CE  120A  118A  276C  120A  118A  	fcall	_prender_ELCD
  3998  05D3                     l160:
  3999  05D3  0008               	return
  4000  05D4                     __end_of_Escribir_comandoLCD:
  4001                           
  4002                           	psect	text19
  4003  076C                     __ptext19:	
  4004 ;; *************** function _prender_ELCD *****************
  4005 ;; Defined at:
  4006 ;;		line 11 in file "LCD.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0
  4022 ;;      Temps:          1       0       0       0       0
  4023 ;;      Totals:         1       0       0       0       0
  4024 ;;Total ram usage:        1 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 2
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_Escribir_comandoLCD
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _prender_ELCD
  4036  076C                     _prender_ELCD:
  4037  076C                     l1891:	
  4038                           ;incstack = 0
  4039                           ; Regs used in _prender_ELCD: [wreg]
  4040                           
  4041                           
  4042                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4043  076C  1283               	bcf	3,5	;RP0=0, select bank0
  4044  076D  1303               	bcf	3,6	;RP1=0, select bank0
  4045  076E  1688               	bsf	8,5	;volatile
  4046  076F                     l1893:
  4047                           
  4048                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4049  076F  30C7               	movlw	199
  4050  0770  00F4               	movwf	??_prender_ELCD
  4051  0771                     u2307:
  4052  0771  2F72               	nop2
  4053  0772  0BF4               	decfsz	??_prender_ELCD,f
  4054  0773  2F71               	goto	u2307
  4055  0774  2F75               	nop2
  4056  0775  2F76               	nop2
  4057  0776                     l1895:
  4058                           
  4059                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4060  0776  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0777  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0778  1288               	bcf	8,5	;volatile
  4063  0779                     l141:
  4064  0779  0008               	return
  4065  077A                     __end_of_prender_ELCD:
  4066                           
  4067                           	psect	text20
  4068  0651                     __ptext20:	
  4069 ;; *************** function _isr *****************
  4070 ;; Defined at:
  4071 ;;		line 68 in file "LAB2.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0, pclath, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4085 ;;      Params:         0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0
  4087 ;;      Temps:          3       0       0       0       0
  4088 ;;      Totals:         3       0       0       0       0
  4089 ;;Total ram usage:        3 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 1
  4092 ;; This function calls:
  4093 ;;		_ADC
  4094 ;; This function is called by:
  4095 ;;		Interrupt level 1
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           
  4100                           ;psect for function _isr
  4101  0651                     _isr:
  4102  0651                     i1l1817:
  4103                           
  4104                           ;LAB2.c: 69:     if(PIR1bits.ADIF){
  4105  0651  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0652  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0653  1F0C               	btfss	12,6	;volatile
  4108  0654  2E56               	goto	u149_21
  4109  0655  2E57               	goto	u149_20
  4110  0656                     u149_21:
  4111  0656  2E5F               	goto	i1l1823
  4112  0657                     u149_20:
  4113  0657                     i1l1819:
  4114                           
  4115                           ;LAB2.c: 70:         ADC();
  4116  0657  120A  118A  2715  120A  118A  	fcall	_ADC
  4117  065C                     i1l1821:
  4118                           
  4119                           ;LAB2.c: 71:         PIR1bits.ADIF = 0;
  4120  065C  1283               	bcf	3,5	;RP0=0, select bank0
  4121  065D  1303               	bcf	3,6	;RP1=0, select bank0
  4122  065E  130C               	bcf	12,6	;volatile
  4123  065F                     i1l1823:
  4124                           
  4125                           ;LAB2.c: 73:     if(PIR1bits.RCIF){
  4126  065F  1E8C               	btfss	12,5	;volatile
  4127  0660  2E62               	goto	u150_21
  4128  0661  2E63               	goto	u150_20
  4129  0662                     u150_21:
  4130  0662  2E85               	goto	i1l103
  4131  0663                     u150_20:
  4132  0663                     i1l1825:
  4133                           
  4134                           ;LAB2.c: 74:         dato = RCREG;
  4135  0663  081A               	movf	26,w	;volatile
  4136  0664  00F1               	movwf	??_isr
  4137  0665  0871               	movf	??_isr,w
  4138  0666  00F6               	movwf	_dato
  4139  0667                     i1l1827:
  4140                           
  4141                           ;LAB2.c: 75:         if(dato == 0x2B || dato == 77){
  4142  0667  302B               	movlw	43
  4143  0668  0676               	xorwf	_dato,w
  4144  0669  1903               	btfsc	3,2
  4145  066A  2E6C               	goto	u151_21
  4146  066B  2E6D               	goto	u151_20
  4147  066C                     u151_21:
  4148  066C  2E73               	goto	i1l1831
  4149  066D                     u151_20:
  4150  066D                     i1l1829:
  4151  066D  304D               	movlw	77
  4152  066E  0676               	xorwf	_dato,w
  4153  066F  1D03               	btfss	3,2
  4154  0670  2E72               	goto	u152_21
  4155  0671  2E73               	goto	u152_20
  4156  0672                     u152_21:
  4157  0672  2E77               	goto	i1l97
  4158  0673                     u152_20:
  4159  0673                     i1l1831:
  4160                           
  4161                           ;LAB2.c: 76:             Cont_U++;
  4162  0673  3001               	movlw	1
  4163  0674  00F1               	movwf	??_isr
  4164  0675  0871               	movf	??_isr,w
  4165  0676  07C7               	addwf	_Cont_U,f
  4166  0677                     i1l97:	
  4167                           ;LAB2.c: 77:         }
  4168                           
  4169                           
  4170                           ;LAB2.c: 78:         if(dato == 0x2D || dato == 75){
  4171  0677  302D               	movlw	45
  4172  0678  0676               	xorwf	_dato,w
  4173  0679  1903               	btfsc	3,2
  4174  067A  2E7C               	goto	u153_21
  4175  067B  2E7D               	goto	u153_20
  4176  067C                     u153_21:
  4177  067C  2E83               	goto	i1l1835
  4178  067D                     u153_20:
  4179  067D                     i1l1833:
  4180  067D  304B               	movlw	75
  4181  067E  0676               	xorwf	_dato,w
  4182  067F  1D03               	btfss	3,2
  4183  0680  2E82               	goto	u154_21
  4184  0681  2E83               	goto	u154_20
  4185  0682                     u154_21:
  4186  0682  2E85               	goto	i1l103
  4187  0683                     u154_20:
  4188  0683                     i1l1835:
  4189                           
  4190                           ;LAB2.c: 79:             Cont_U--;
  4191  0683  3001               	movlw	1
  4192  0684  02C7               	subwf	_Cont_U,f
  4193  0685                     i1l103:
  4194  0685  0873               	movf	??_isr+2,w
  4195  0686  008A               	movwf	10
  4196  0687  0E72               	swapf	??_isr+1,w
  4197  0688  0083               	movwf	3
  4198  0689  0EFE               	swapf	btemp,f
  4199  068A  0E7E               	swapf	btemp,w
  4200  068B  0009               	retfie
  4201  068C                     __end_of_isr:
  4202                           
  4203                           	psect	intentry
  4204  0004                     __pintentry:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4207                           
  4208  0004                     interrupt_function:
  4209  007E                     saved_w	set	btemp
  4210  0004  00FE               	movwf	btemp
  4211  0005  0E03               	swapf	3,w
  4212  0006  00F2               	movwf	??_isr+1
  4213  0007  080A               	movf	10,w
  4214  0008  00F3               	movwf	??_isr+2
  4215  0009  120A  118A  2E51   	ljmp	_isr
  4216                           
  4217                           	psect	text21
  4218  0715                     __ptext21:	
  4219 ;; *************** function _ADC *****************
  4220 ;; Defined at:
  4221 ;;		line 11 in file "ADC.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0
  4237 ;;      Temps:          1       0       0       0       0
  4238 ;;      Totals:         1       0       0       0       0
  4239 ;;Total ram usage:        1 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_isr
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _ADC
  4250  0715                     _ADC:
  4251  0715                     i1l1693:	
  4252                           ;incstack = 0
  4253                           ; Regs used in _ADC: [wreg+status,2+status,0]
  4254                           
  4255                           
  4256                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  4257  0715  1283               	bcf	3,5	;RP0=0, select bank0
  4258  0716  1303               	bcf	3,6	;RP1=0, select bank0
  4259  0717  0C1F               	rrf	31,w	;volatile
  4260  0718  00F0               	movwf	??_ADC
  4261  0719  0C70               	rrf	??_ADC,w
  4262  071A  390F               	andlw	15
  4263  071B  3A00               	xorlw	0
  4264  071C  1D03               	skipz
  4265  071D  2F1F               	goto	u139_21
  4266  071E  2F20               	goto	u139_20
  4267  071F                     u139_21:
  4268  071F  2F25               	goto	i1l1697
  4269  0720                     u139_20:
  4270  0720                     i1l1695:
  4271                           
  4272                           ;ADC.c: 13:         cont1 = ADRESH;
  4273  0720  081E               	movf	30,w	;volatile
  4274  0721  00F0               	movwf	??_ADC
  4275  0722  0870               	movf	??_ADC,w
  4276  0723  00C9               	movwf	_cont1
  4277                           
  4278                           ;ADC.c: 14:     }
  4279  0724  2F32               	goto	i1l206
  4280  0725                     i1l1697:
  4281  0725  0C1F               	rrf	31,w	;volatile
  4282  0726  00F0               	movwf	??_ADC
  4283  0727  0C70               	rrf	??_ADC,w
  4284  0728  390F               	andlw	15
  4285  0729  3A01               	xorlw	1
  4286  072A  1D03               	skipz
  4287  072B  2F2D               	goto	u140_21
  4288  072C  2F2E               	goto	u140_20
  4289  072D                     u140_21:
  4290  072D  2F32               	goto	i1l206
  4291  072E                     u140_20:
  4292  072E                     i1l1699:
  4293                           
  4294                           ;ADC.c: 16:         cont2 = ADRESH;
  4295  072E  081E               	movf	30,w	;volatile
  4296  072F  00F0               	movwf	??_ADC
  4297  0730  0870               	movf	??_ADC,w
  4298  0731  00C8               	movwf	_cont2
  4299  0732                     i1l206:
  4300  0732  0008               	return
  4301  0733                     __end_of_ADC:
  4302  007E                     btemp	set	126	;btemp
  4303  007E                     wtemp0	set	126
  4304                           
  4305                           	psect	config
  4306                           
  4307                           ;Config register CONFIG1 @ 0x2007
  4308                           ;	Oscillator Selection bits
  4309                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4310                           ;	Watchdog Timer Enable bit
  4311                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4312                           ;	Power-up Timer Enable bit
  4313                           ;	PWRTE = OFF, PWRT disabled
  4314                           ;	RE3/MCLR pin function select bit
  4315                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4316                           ;	Code Protection bit
  4317                           ;	CP = OFF, Program memory code protection is disabled
  4318                           ;	Data Code Protection bit
  4319                           ;	CPD = OFF, Data memory code protection is disabled
  4320                           ;	Brown Out Reset Selection bits
  4321                           ;	BOREN = OFF, BOR disabled
  4322                           ;	Internal External Switchover bit
  4323                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4324                           ;	Fail-Safe Clock Monitor Enabled bit
  4325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4326                           ;	Low Voltage Programming Enable bit
  4327                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4328                           ;	In-Circuit Debugger Mode bit
  4329                           ;	DEBUG = 0x1, unprogrammed default
  4330  2007                     	org	8199
  4331  2007  20D4               	dw	8404
  4332                           
  4333                           ;Config register CONFIG2 @ 0x2008
  4334                           ;	Brown-out Reset Selection bit
  4335                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4336                           ;	Flash Program Memory Self Write Enable bits
  4337                           ;	WRT = OFF, Write protection off
  4338  2008                     	org	8200
  4339  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     39      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[13]), STR_1(CODE[5]), 

    divisor1@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _setup->_config_ADC
    _set_cursor->_Escribir_comandoLCD
    _dato_recibido->_divisor1
    _divisor1->___awdiv
    _divisor1->___awmod
    _conversion_char->_divisor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _setup->_Config_USART
    _dato_recibido->_sprintf
    _divisor1->___awdiv
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10628
                                             36 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     673
                       _Config_USART
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2     121
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     552
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              0 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3751
                                             29 BANK0      7     7      0
                           _divisor1
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _divisor1                                             8     7      1    1945
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3875
                                             29 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             12 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    2069
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              0 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor1
       ___awdiv
       ___awmod
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _config_ADC

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 12:07:16 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0023                           l122 0462                           l130 06E8  
                         l114 0614                           l141 0779                           l213 0714  
                         l117 03B0                           l150 05B1                           l151 05B2  
                         l127 04B3                           l160 05D3                           l152 05B8  
                         l144 059A                           l216 074F                           l153 05B9  
                         l145 059D                           l154 05BF                           l146 05A3  
                         l155 05C0                           l147 05A4                           l163 02EC  
                         l235 0278                           l156 05C6                           l148 05AA  
                         l172 076B                           l157 05C7                           l149 05AB  
                         l158 05CD                           l502 0355                           l182 054A  
                         _ADC 0715                           l169 06BA                           l345 0109  
                         l515 040B                           l621 0590                           l631 0650  
                         _dec 0078                           _cen 0077                           _isr 0651  
                         fsr0 0004                           _uni 0079                           indf 0000  
                ___awmod@sign 0025                          ?_ADC 0070                          l2001 058C  
                        l2011 0748                          l2101 0035                          l2021 01E1  
                        l2013 01C4                          l2005 0733                          l2111 0060  
                        l2103 003A                          l2031 01FE                          l2015 01CF  
                        l2023 01E2                          l2007 0738                          l2113 0064  
                        l2041 021A                          l2025 01EC                          l2033 01FF  
                        l2017 01D6                          l2009 0747                          l2201 05F7  
                        l2131 0099                          l2115 0068                          l2107 003B  
                        l2051 0237                          l2035 0209                          l2043 021B  
                        l2027 01F3                          l2019 01DD                          l2211 0604  
                        l2203 05FA                          l2221 028D                          l1501 063F  
                        l2141 00DF                          l2133 009F                          l2125 0073  
                        l2117 006C                          l2109 0058                          l2061 0254  
                        l2045 0225                          l2053 0238                          l2037 020F  
                        l2029 01FA                          l2213 0605                          l2205 05FD  
                        l2301 0160                          l2231 02C5                          l2223 029E  
                        l2215 0279                          l1503 0646                          l2143 00E6  
                        l2135 00A6                          l2119 0071                          l2071 0270  
                        l2055 0242                          l2063 0255                          l2047 022C  
                        l2039 0216                          l2207 0600                          l2311 018D  
                        l2303 0169                          l2233 02CC                          l2225 02A5  
                        l2217 027D                          l2241 0750                          l2081 040F  
                        l1505 064C                          l2145 00EA                          l2137 00AA  
                        l2129 008F                          l2065 025F                          l2073 0271  
                        l2057 0249                          l2049 0233                          l2209 0603  
                        l2313 0199                          l2305 0174                          l2171 0596  
                        l2235 02D9                          l2227 02B2                          l2219 0287  
                        l2243 0754                          l2091 044F                          l2083 0417  
                        l2139 00AF                          l2147 00F3                          l2163 0468  
                        l2251 0505                          l2075 0273                          l2067 0265  
                        l2059 0250                          l2315 01A4                          l2307 0179  
                        l2181 05BD                          l2173 05A1                          l2237 02DF  
                        l2229 02B8                          l2245 075A                          l2093 0455  
                        l2149 0105                          l2341 004D                          l2165 04A0  
                        l2157 0466                          l2261 0528                          l2253 050A  
                        l2077 0274                          l2069 026C                          l2317 01A9  
                        l2309 0182                          l2183 05C4                          l2175 05A8  
                        l2247 0765                          l2095 0023                          l2167 04A6  
                        l2271 053F                          l2255 0511                          l2079 0275  
                        l2191 05D8                          l2319 01B5                          l2185 05CB  
                        l2177 05AF                          l2169 0592                          l2281 06A9  
                        l2273 068C                          l1801 06FA                          l2089 0419  
                        l2097 0028                          l2265 0530                          l2257 0517  
                        l2249 0503                          l2193 05D9                          l2187 05CE  
                        l2179 05B6                          l2275 0690                          l1811 0711  
                        l1803 06FF                          l1491 0620                          l2099 002E  
                        l2283 0356                          l2267 0536                          l2259 051D  
                        l2195 05E8                          l2291 012D                          l2277 0692  
                        l1805 0708                          l1901 02F4                          l1493 0627  
                        l2285 06BB                          l2269 053A                          l2197 05EE  
                        l2189 05D4                          l2293 0144                          l2279 06A3  
                        l1911 0308                          l1903 02F9                          l1495 062B  
                        l1487 0615                          l2199 05EF                          l2295 0153  
                        l2287 010A                          l1809 070D                          l1921 031E  
                        l1913 030A                          l1905 02FB                          l1497 062F  
                        l1489 061D                          l2297 0156                          l2289 0122  
                        l1931 0341                          l1923 0322                          l1915 0310  
                        l1907 02FF                          l1499 0639                          l2299 015B  
                        l1925 0333                          l1917 0313                          l1933 0347  
                        l1909 0304                          l1941 03B1                          l1935 034C  
                        l1927 0339                          l1919 031A                          l1951 03C3  
                        l1943 03B4                          l1937 0351                          l1929 033A  
                        l1961 03DC                          l1953 03C8                          l1945 03B8  
                        l1891 076C                          l1795 06E9                          l1963 03E0  
                        l1955 03CE                          l1971 03FD                          l1947 03BD  
                        l1893 076F                          l1797 06EF                          l1973 0402  
                        l1965 03EA                          l1957 03D1                          l1949 03BF  
                        l1981 054F                          l1895 0776                          l1799 06F8  
                        l1975 0407                          l1967 03F0                          l1959 03D8  
                        l1991 0567                          l1983 0555                          l1897 02ED  
                        l1969 03F7                          l1993 0578                          l1985 0558  
                        l1899 02F0                          l1995 057E                          l1987 055F  
                        l1979 054B                          l1997 057F                          l1989 0563  
                        l1999 0586                          ?_isr 0070                          STR_1 04FB  
                        STR_2 04DF                          STR_3 04CE                          STR_4 04EC  
                        STR_5 04EC                          STR_6 04F4                          u1040 061D  
                        u2000 0105                          u1041 061C                          u2001 0104  
                        u2010 04B3                          u2011 04B2                          u2020 0596  
                        u1060 062F                          u2100 050A                          u2021 0595  
                        u1061 062E                          u2101 0509                          u2030 05A1  
                        u1070 0639                          u2110 0517                          u2031 05A0  
                        u1071 0638                          u1055 0621                          u2015 04AF  
                        u2111 0516                          u2040 05A8                          u2120 052F  
                        u2041 05A7                          u2121 052E                          u2050 05AF  
                        u1090 064C                          u2130 053F                          u2051 05AE  
                        u1091 064B                          u1075 0635                          u2131 053E  
                        u2060 05B6                          u2140 06BA                          u2061 05B5  
                        u2141 06B9                          u1085 0640                          u2070 05BD  
                        u2071 05BC                          u2207 070F                          u2080 05C4  
                        u2081 05C3                          u2217 0760                          u2090 05CB  
                        u1610 0333                          u2307 0771                          u2091 05CA  
                        u2227 0283                          u1611 0332                          u1460 06EF  
                        u1700 03EA                          u2237 0293                          u1461 06EE  
                        u1605 0323                          u1701 03E9                          u2157 014C  
                        u1470 06F8                          u1630 0347                          u1550 02F4  
                        u2247 02A2                          u1471 06F7                          u1631 0346  
                        u1615 032F                          u1551 02F3                          u2167 074C  
                        u1480 0708                          u1640 034C                          u1560 02FF  
                        u1720 03FD                          u1800 058C                          u2257 02AF  
                        u1481 0707                          u1641 034B                          u1625 033B  
                        u1561 02FE                          u1721 03FC                          u1705 03E6  
                        u1801 058B                          u2177 0523                          u1570 0310  
                        u1730 0402                          u1650 03B8                          u1810 01CF  
                        u2267 02BC                          u1571 030F                          u1731 0401  
                        u1715 03F1                          u1651 03B7                          u2187 0545  
                        u1811 01CE                          u1660 03C3                          u1740 0555  
                        u1900 0249                          u1820 01D6                          u2277 02C9  
                        u2197 06FC                          u1661 03C2                          u1741 0554  
                        u1901 0248                          u1821 01D5                          u1590 0322  
                        u1670 03CE                          u1910 025F                          u1830 01EC  
                        u2287 02D6                          u1591 0321                          u1671 03CD  
                        u1911 025E                          u1831 01EB                          u1760 0567  
                        u1920 0265                          u1840 01F3                          u2297 02E3  
                        u1585 0314                          u1761 0566                          u1921 0264  
                        u1841 01F2                          u1690 03E0                          u1930 0462  
                        u1850 0209                          u1691 03DF                          u1931 0461  
                        u1755 0559                          u1851 0208                          u1780 0578  
                        u1940 002E                          u1860 020F                          u1685 03D2  
                        u1781 0577                          u1941 002D                          u1861 020E  
                        u1950 0068                          u1870 0225                          u1935 045E  
                        u1775 0568                          u1951 0067                          u1871 0224  
                        u1960 008E                          u1880 022C                          u1785 0574  
                        u1961 008D                          u1881 022B                          u1970 0099  
                        u1890 0242                          u1795 0580                          u1971 0098  
                        u1891 0241                          u1980 009F                          u1981 009E  
                        u1965 008A                          u1990 00F3                          u1991 00F2  
                        i1l97 0677                 ??_Iniciar_LCD 0020                          _dato 0076  
                        _main 010A                          _vol1 006A                          _vol2 0069  
                        _vol3 0068                          btemp 007E                          start 000C  
                 divisor1@dig 0075                         ??_ADC 0070                         ??_isr 0071  
  __end_of_Escribir_stringLCD 06BB                         ?_main 0070               __end_of___awdiv 0356  
             __end_of___awmod 040C                         _ANSEL 0188               ___awdiv@divisor 0020  
             __end_of___lwdiv 0591                         i1l103 0685                         i1l206 0732  
             __end_of___lwmod 0651               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089               __end_of_divisor 0463  
                       _cont1 0049                         _cont2 0048               __end_of_dpowers 04CE  
                       _setup 05D4           _Limpiar_pantallaLCD 0750                         pclath 000A  
           ??_conversion_char 003D                         status 0003                         wtemp0 007E  
             __end_of_sprintf 010A          __end_of_Config_USART 0279               __initialization 000F  
         __end_of_Iniciar_LCD 02ED                  __end_of_main 01C4          ?_Limpiar_pantallaLCD 0070  
                      ??_main 0044            set_cursor@posicion 0020                        _ADRESH 001E  
            ___awdiv@dividend 0022                        ?_setup 0070                        _ANSELH 0189  
                      i1l1821 065C                        i1l1831 0673                        i1l1823 065F  
                      i1l1833 067D                        i1l1825 0663                        i1l1817 0651  
                      i1l1835 0683                        i1l1827 0667                        i1l1819 0657  
                      i1l1693 0715                        i1l1829 066D                        i1l1695 0720  
                      i1l1697 0725                        i1l1699 072E                        u140_20 072E  
                      u140_21 072D                        u150_20 0663                        u150_21 0662  
                      u151_20 066D                        u151_21 066C                        u152_20 0673  
                      u152_21 0672                        u153_20 067D                        u153_21 067C  
                      u154_20 0683                        u154_21 0682                        u139_20 0720  
                      u139_21 071F                        u149_20 0657                        u149_21 0656  
                      _SPBRGH 009A                        _Cont_U 0047              __end_of_divisor1 04B4  
       ??_Limpiar_pantallaLCD 0020                     ??___awdiv 0074                     ??___awmod 0074  
       __end_of_dato_recibido 06E9                     ??___lwdiv 0074                     ??___lwmod 0075  
            ___awdiv@quotient 0026               ___awmod@divisor 0020               ___awmod@counter 0024  
                   ??_divisor 0028                        saved_w 007E                     ??_sprintf 0033  
     __end_of__initialization 001C                   _Iniciar_LCD 0279                __pcstackCOMMON 0070  
               __end_of_setup 0615                       ??_setup 0076                    __pbssBANK0 0047  
       __size_of_Config_USART 00B5                    __pmaintext 010A                    __pintentry 0004  
__size_of_Escribir_comandoLCD 0043               _conversion_char 0356                    _config_ADC 0733  
                _Config_USART 01C4                     ?_divisor1 0075            _Escribir_stringLCD 068C  
                  __stringtab 04B4                    _conversion 06E9           ?_Escribir_stringLCD 0020  
                     ___awdiv 02ED                       ___awmod 03B1                       ___lwdiv 054B  
                     ___lwmod 0615                       __ptext1 05D4                       __ptext2 0733  
                     __ptext3 01C4                       __ptext4 0500                       __ptext5 06BB  
                     __ptext6 0463                       __ptext7 0356                       __ptext8 0020  
                     __ptext9 0615                       _buffer1 005E                       _buffer2 0054  
                     _buffer3 004A                  __size_of_ADC 001E                       _divisor 040C  
        ??_Escribir_stringLCD 0022                       _dpowers 04C4                  __size_of_isr 003B  
            ___awmod@dividend 0022                 ?_prender_ELCD 0070                       _sprintf 0020  
                     clrloop0 077B                    ??_divisor1 0028          end_of_initialization 001C  
                  _set_cursor 0500                     _RCSTAbits 0018       __end_of_conversion_char 03B1  
                   _PORTBbits 0006                     _PORTCbits 0007                     _PORTDbits 0008  
              ??_prender_ELCD 0074                   ?_config_ADC 0074                  ?_Iniciar_LCD 0070  
                 ?_conversion 0070                     _TXSTAbits 0098   __end_of_Limpiar_pantallaLCD 076C  
                  divisor@dig 0075                   _BAUDCTLbits 0187           start_initialization 000F  
                 __end_of_ADC 0733                   __end_of_isr 068C        __size_of_dato_recibido 002E  
         _Escribir_comandoLCD 0591    Escribir_comandoLCD@Comando 0075           __size_of_config_ADC 001D  
                 ?_set_cursor 0020              ?_conversion_char 0070          ?_Escribir_comandoLCD 0070  
         __size_of_conversion 002C                   __pbssCOMMON 0076                     ___latbits 0002  
               __pcstackBANK0 0020                   sprintf@flag 0037             __size_of_divisor1 0051  
                 sprintf@prec 0038          __end_of_prender_ELCD 077A              ___lwdiv@dividend 0022  
                    ?___awdiv 0020                      ?___awmod 0020                      ?___lwdiv 0020  
                    ?___lwmod 0027         ??_Escribir_comandoLCD 0075                 _dato_recibido 06BB  
                   __pstrings 04B4                      ?_divisor 0075             config_ADC@channel 0074  
            ___lwdiv@quotient 0025           __size_of_set_cursor 004B                      ?_sprintf 002C  
              __size_of_setup 0041             interrupt_function 0004                     clear_ram0 077A  
                    _PIE1bits 008C          __size_of_Iniciar_LCD 0074                      _PIR1bits 000C  
              ?_dato_recibido 0070                    _ADCON0bits 001F                   __stringbase 04C3  
                  _ADCON1bits 009F                  ??_config_ADC 0020   __size_of_Escribir_stringLCD 002F  
                   divisor1@a 002C                     divisor1@i 002D                  ??_conversion 0074  
         Escribir_stringLCD@d 0020           Escribir_stringLCD@i 0023            __end_of_config_ADC 0750  
            __size_of___awdiv 0069              __size_of___awmod 005B              __size_of___lwdiv 0046  
            __size_of___lwmod 003C            __end_of__stringtab 04C4                    sprintf@val 0039  
            __size_of_divisor 0057            __end_of_conversion 0715               ___lwdiv@divisor 0020  
             ___lwdiv@counter 0024                      __ptext10 054B                      __ptext11 040C  
                    __ptext20 0651                      __ptext12 03B1                      __ptext21 0715  
                    __ptext13 02ED                      __ptext14 06E9                      __ptext15 0750  
                    __ptext16 0279                      __ptext17 068C                      __ptext18 0591  
                    __ptext19 076C                      _divisor1 0463              __size_of_sprintf 00EA  
       __size_of_prender_ELCD 000E                 __size_of_main 00BA                  ??_set_cursor 0021  
             ??_dato_recibido 003D  __size_of_Limpiar_pantallaLCD 001C                      divisor@a 002A  
                    divisor@b 002B                      divisor@i 002D                    _INTCONbits 000B  
                _prender_ELCD 076C                 ?_Config_USART 0020              Config_USART@Freq 0022  
          __end_of_set_cursor 054B                      intlevel1 0000                     sprintf@ap 0036  
                   sprintf@sp 003B              ___lwmod@dividend 0029                     stringcode 04BE  
                  _OSCCONbits 008F                      sprintf@c 003C                      sprintf@f 002C  
             ___lwmod@divisor 0027                ??_Config_USART 0074               ___lwmod@counter 002B  
    __size_of_conversion_char 005B                      stringdir 04BE                      stringtab 04B4  
       Config_USART@baud_rate 0020   __end_of_Escribir_comandoLCD 05D4  
