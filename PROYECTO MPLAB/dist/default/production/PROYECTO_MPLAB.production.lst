

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 04 14:58:03 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381                           
   382                           	psect	strings
   383  0403                     __pstrings:
   384  0403                     stringtab:
   385  0403                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388  0403  1BFF               	btfsc	btemp+1,7
   389  0404  2C0D               	ljmp	stringcode
   390  0405  1383               	bcf	3,7
   391  0406  187F               	btfsc	btemp+1,0
   392  0407  1783               	bsf	3,7
   393  0408  0800               	movf	0,w
   394  0409  0A84               	incf	4,f
   395  040A  1903               	skipnz
   396  040B  0AFF               	incf	btemp+1,f
   397  040C  0008               	return
   398  040D                     stringcode:
   399  040D                     stringdir:
   400  040D  3004               	movlw	high stringdir
   401  040E  008A               	movwf	10
   402  040F  0804               	movf	4,w
   403  0410  0A84               	incf	4,f
   404  0411  0782               	addwf	2,f
   405  0412                     __stringbase:
   406  0412  3400               	retlw	0
   407  0413                     __end_of__stringtab:
   408  0413                     _dpowers:
   409  0413  3401               	retlw	1
   410  0414  3400               	retlw	0
   411  0415  340A               	retlw	10
   412  0416  3400               	retlw	0
   413  0417  3464               	retlw	100
   414  0418  3400               	retlw	0
   415  0419  34E8               	retlw	232
   416  041A  3403               	retlw	3
   417  041B  3410               	retlw	16
   418  041C  3427               	retlw	39
   419  041D                     __end_of_dpowers:
   420  001E                     _ADRESH	set	30
   421  0008                     _PORTD	set	8
   422  0018                     _RCSTAbits	set	24
   423  000B                     _INTCONbits	set	11
   424  0006                     _PORTB	set	6
   425  0009                     _PORTE	set	9
   426  0005                     _PORTA	set	5
   427  001F                     _ADCON0bits	set	31
   428  001A                     _RCREG	set	26
   429  000C                     _PIR1bits	set	12
   430  0038                     _RC0	set	56
   431  0039                     _RC1	set	57
   432  0088                     _TRISD	set	136
   433  009A                     _SPBRGH	set	154
   434  0099                     _SPBRG	set	153
   435  0098                     _TXSTAbits	set	152
   436  008C                     _PIE1bits	set	140
   437  009F                     _ADCON1bits	set	159
   438  008F                     _OSCCONbits	set	143
   439  0089                     _TRISE	set	137
   440  0086                     _TRISB	set	134
   441  0085                     _TRISA	set	133
   442  0438                     _TRISC0	set	1080
   443  0439                     _TRISC1	set	1081
   444  0187                     _BAUDCTLbits	set	391
   445  0189                     _ANSELH	set	393
   446  0188                     _ANSEL	set	392
   447  041D                     STR_1:
   448  041D  3453               	retlw	83	;'S'
   449  041E  3431               	retlw	49	;'1'
   450  041F  343A               	retlw	58	;':'
   451  0420  3420               	retlw	32	;' '
   452  0421  3420               	retlw	32	;' '
   453  0422  3420               	retlw	32	;' '
   454  0423  3420               	retlw	32	;' '
   455  0424  3453               	retlw	83	;'S'
   456  0425  3432               	retlw	50	;'2'
   457  0426  343A               	retlw	58	;':'
   458  0427  3420               	retlw	32	;' '
   459  0428  3420               	retlw	32	;' '
   460  0429  3420               	retlw	32	;' '
   461  042A  3453               	retlw	83	;'S'
   462  042B  3433               	retlw	51	;'3'
   463  042C  343A               	retlw	58	;':'
   464  042D  3400               	retlw	0
   465  042E                     STR_2:
   466  042E  3425               	retlw	37	;'%'
   467  042F  3464               	retlw	100	;'d'
   468  0430  342E               	retlw	46	;'.'
   469  0431  3425               	retlw	37	;'%'
   470  0432  3464               	retlw	100	;'d'
   471  0433  3425               	retlw	37	;'%'
   472  0434  3464               	retlw	100	;'d'
   473  0435  3400               	retlw	0
   474  042E                     
   475                           	psect	cinit
   476  000F                     start_initialization:	
   477                           ; #config settings
   478                           
   479  000F                     __initialization:
   480                           
   481                           ; Clear objects allocated to COMMON
   482  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   483  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   484  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   485                           
   486                           ; Clear objects allocated to BANK0
   487  0012  1383               	bcf	3,7	;select IRP bank0
   488  0013  3020               	movlw	low __pbssBANK0
   489  0014  0084               	movwf	4
   490  0015  3045               	movlw	low (__pbssBANK0+37)
   491  0016  120A  118A  2546  120A  118A  	fcall	clear_ram0
   492  001B                     end_of_initialization:	
   493                           ;End of C runtime variable initialization code
   494                           
   495  001B                     __end_of__initialization:
   496  001B  0183               	clrf	3
   497  001C  120A  118A  2909   	ljmp	_main	;jump to C main() function
   498                           
   499                           	psect	bssCOMMON
   500  0077                     __pbssCOMMON:
   501  0077                     _cen:
   502  0077                     	ds	1
   503  0078                     _dec:
   504  0078                     	ds	1
   505  0079                     _uni:
   506  0079                     	ds	1
   507                           
   508                           	psect	bssBANK0
   509  0020                     __pbssBANK0:
   510  0020                     _Cont_U:
   511  0020                     	ds	1
   512  0021                     _dato:
   513  0021                     	ds	1
   514  0022                     _cont2:
   515  0022                     	ds	1
   516  0023                     _cont1:
   517  0023                     	ds	1
   518  0024                     _buffer3:
   519  0024                     	ds	10
   520  002E                     _buffer2:
   521  002E                     	ds	10
   522  0038                     _buffer1:
   523  0038                     	ds	10
   524  0042                     _vol3:
   525  0042                     	ds	1
   526  0043                     _vol2:
   527  0043                     	ds	1
   528  0044                     _vol1:
   529  0044                     	ds	1
   530                           
   531                           	psect	clrtext
   532  0546                     clear_ram0:	
   533                           ;	Called with FSR containing the base address, and
   534                           ;	W with the last address+1
   535                           
   536  0546  0064               	clrwdt	;clear the watchdog before getting into this loop
   537  0547                     clrloop0:
   538  0547  0180               	clrf	0	;clear RAM location pointed to by FSR
   539  0548  0A84               	incf	4,f	;increment pointer
   540  0549  0604               	xorwf	4,w	;XOR with final address
   541  054A  1903               	btfsc	3,2	;have we reached the end yet?
   542  054B  3400               	retlw	0	;all done for this memory range, return
   543  054C  0604               	xorwf	4,w	;XOR again to restore value
   544  054D  2D47               	goto	clrloop0	;do the next byte
   545                           
   546                           	psect	cstackCOMMON
   547  0070                     __pcstackCOMMON:
   548  0070                     ?_ADC:
   549  0070                     ??_ADC:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_setup:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_conversion:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_conversion_char:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_dato_recibido:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Iniciar_LCD:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_Limpiar_pantallaLCD:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_isr:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_prender_ELCD:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_Escribir_comandoLCD:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_Escribir_datosLCD:	
   583                           ; 1 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587  0070                     	ds	1
   588  0071                     ??_isr:
   589                           
   590                           ; 1 bytes @ 0x1
   591  0071                     	ds	3
   592  0074                     ??_conversion:
   593  0074                     ??_prender_ELCD:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0074                     ??___awdiv:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0074                     ??___awmod:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     ??___lwdiv:	
   603                           ; 1 bytes @ 0x4
   604                           
   605                           
   606                           ; 1 bytes @ 0x4
   607  0074                     	ds	1
   608  0075                     ??_Escribir_comandoLCD:
   609  0075                     ??_Escribir_datosLCD:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0075                     ??___lwmod:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0075                     Escribir_comandoLCD@Comando:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     Escribir_datosLCD@LCDchar:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ___awmod@counter:	
   622                           ; 1 bytes @ 0x5
   623                           
   624                           
   625                           ; 1 bytes @ 0x5
   626  0075                     	ds	1
   627  0076                     ??_setup:
   628  0076                     ?_set_cursor:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0076                     ??_Escribir_stringLCD:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0076                     ??_Iniciar_LCD:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     set_cursor@b:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     ___awmod@sign:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0076                     ___lwmod@counter:	
   644                           ; 1 bytes @ 0x6
   645                           
   646                           
   647                           ; 1 bytes @ 0x6
   648  0076                     	ds	1
   649  0077                     ??_set_cursor:
   650                           
   651                           	psect	cstackBANK0
   652  0045                     __pcstackBANK0:	
   653                           ; 1 bytes @ 0x7
   654                           
   655  0045                     ?_Escribir_stringLCD:
   656  0045                     ??_Limpiar_pantallaLCD:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0045                     ?___awdiv:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0045                     ?___awmod:	
   663                           ; 2 bytes @ 0x0
   664                           
   665  0045                     ?___lwdiv:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0045                     set_cursor@a:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0045                     Escribir_stringLCD@d:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0045                     ___awdiv@divisor:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  0045                     ___awmod@divisor:	
   678                           ; 2 bytes @ 0x0
   679                           
   680  0045                     ___lwdiv@divisor:	
   681                           ; 2 bytes @ 0x0
   682                           
   683                           
   684                           ; 2 bytes @ 0x0
   685  0045                     	ds	2
   686  0047                     ___awdiv@dividend:
   687  0047                     ___awmod@dividend:	
   688                           ; 2 bytes @ 0x2
   689                           
   690  0047                     ___lwdiv@dividend:	
   691                           ; 2 bytes @ 0x2
   692                           
   693                           
   694                           ; 2 bytes @ 0x2
   695  0047                     	ds	2
   696  0049                     ___awdiv@counter:
   697  0049                     ___lwdiv@counter:	
   698                           ; 1 bytes @ 0x4
   699                           
   700                           
   701                           ; 1 bytes @ 0x4
   702  0049                     	ds	1
   703  004A                     ___awdiv@sign:
   704  004A                     ___lwdiv@quotient:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 2 bytes @ 0x5
   709  004A                     	ds	1
   710  004B                     ___awdiv@quotient:
   711                           
   712                           ; 2 bytes @ 0x6
   713  004B                     	ds	1
   714  004C                     ?___lwmod:
   715  004C                     ___lwmod@divisor:	
   716                           ; 2 bytes @ 0x7
   717                           
   718                           
   719                           ; 2 bytes @ 0x7
   720  004C                     	ds	1
   721  004D                     ?_divisor:
   722  004D                     divisor@dig:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 1 bytes @ 0x8
   727  004D                     	ds	1
   728  004E                     ??_divisor:
   729  004E                     ___lwmod@dividend:	
   730                           ; 1 bytes @ 0x9
   731                           
   732                           
   733                           ; 2 bytes @ 0x9
   734  004E                     	ds	2
   735  0050                     ?_sprintf:
   736  0050                     divisor@a:	
   737                           ; 2 bytes @ 0xB
   738                           
   739  0050                     sprintf@f:	
   740                           ; 1 bytes @ 0xB
   741                           
   742                           
   743                           ; 1 bytes @ 0xB
   744  0050                     	ds	1
   745  0051                     divisor@b:
   746                           
   747                           ; 2 bytes @ 0xC
   748  0051                     	ds	2
   749  0053                     divisor@i:
   750                           
   751                           ; 2 bytes @ 0xE
   752  0053                     	ds	4
   753  0057                     ??_sprintf:
   754                           
   755                           ; 1 bytes @ 0x12
   756  0057                     	ds	3
   757  005A                     sprintf@ap:
   758                           
   759                           ; 1 bytes @ 0x15
   760  005A                     	ds	1
   761  005B                     sprintf@flag:
   762                           
   763                           ; 1 bytes @ 0x16
   764  005B                     	ds	1
   765  005C                     sprintf@prec:
   766                           
   767                           ; 1 bytes @ 0x17
   768  005C                     	ds	1
   769  005D                     sprintf@val:
   770                           
   771                           ; 2 bytes @ 0x18
   772  005D                     	ds	2
   773  005F                     sprintf@sp:
   774                           
   775                           ; 1 bytes @ 0x1A
   776  005F                     	ds	1
   777  0060                     sprintf@c:
   778                           
   779                           ; 1 bytes @ 0x1B
   780  0060                     	ds	1
   781  0061                     ??_conversion_char:
   782  0061                     ??_dato_recibido:	
   783                           ; 1 bytes @ 0x1C
   784                           
   785                           
   786                           ; 1 bytes @ 0x1C
   787  0061                     	ds	7
   788  0068                     ??_main:
   789                           
   790                           ; 1 bytes @ 0x23
   791  0068                     	ds	1
   792                           
   793                           	psect	maintext
   794  0109                     __pmaintext:	
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 78 in file "LAB2.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : B00/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0
   816 ;;      Temps:          0       1       0       0       0
   817 ;;      Totals:         0       1       0       0       0
   818 ;;Total ram usage:        1 bytes
   819 ;; Hardware stack levels required when called: 6
   820 ;; This function calls:
   821 ;;		_Escribir_stringLCD
   822 ;;		_conversion
   823 ;;		_conversion_char
   824 ;;		_dato_recibido
   825 ;;		_set_cursor
   826 ;;		_setup
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _main
   834  0109                     _main:
   835  0109                     l1958:	
   836                           ;incstack = 0
   837                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   838                           
   839                           
   840                           ;LAB2.c: 79:     setup();
   841  0109  120A  118A  22EE  120A  118A  	fcall	_setup
   842  010E                     l1960:
   843                           
   844                           ;LAB2.c: 80:     ADCON0bits.GO = 1;
   845  010E  1283               	bcf	3,5	;RP0=0, select bank0
   846  010F  1303               	bcf	3,6	;RP1=0, select bank0
   847  0110  149F               	bsf	31,1	;volatile
   848  0111                     l102:	
   849                           ;LAB2.c: 81:     while(1){
   850                           
   851                           
   852                           ;LAB2.c: 83:         conversion();
   853  0111  120A  118A  2436  120A  118A  	fcall	_conversion
   854                           
   855                           ;LAB2.c: 86:         set_cursor(1,1);
   856  0116  01F6               	clrf	set_cursor@b
   857  0117  0AF6               	incf	set_cursor@b,f
   858  0118  3001               	movlw	1
   859  0119  120A  118A  24AD  120A  118A  	fcall	_set_cursor
   860  011E                     l1962:
   861                           
   862                           ;LAB2.c: 87:         Escribir_stringLCD("S1:    S2:   S3:");
   863  011E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   864  011F  1283               	bcf	3,5	;RP0=0, select bank0
   865  0120  1303               	bcf	3,6	;RP1=0, select bank0
   866  0121  00C5               	movwf	Escribir_stringLCD@d
   867  0122  3080               	movlw	128
   868  0123  00C6               	movwf	Escribir_stringLCD@d+1
   869  0124  120A  118A  2462  120A  118A  	fcall	_Escribir_stringLCD
   870  0129                     l1964:
   871                           
   872                           ;LAB2.c: 89:         conversion_char();
   873  0129  120A  118A  21E1  120A  118A  	fcall	_conversion_char
   874                           
   875                           ;LAB2.c: 91:         set_cursor(2,1);
   876  012E  01F6               	clrf	set_cursor@b
   877  012F  0AF6               	incf	set_cursor@b,f
   878  0130  3002               	movlw	2
   879  0131  120A  118A  24AD  120A  118A  	fcall	_set_cursor
   880  0136                     l1966:
   881                           
   882                           ;LAB2.c: 92:         Escribir_stringLCD(buffer1);
   883  0136  3038               	movlw	(low (_buffer1| 0))& (0+255)
   884  0137  1283               	bcf	3,5	;RP0=0, select bank0
   885  0138  1303               	bcf	3,6	;RP1=0, select bank0
   886  0139  00C5               	movwf	Escribir_stringLCD@d
   887  013A  3000               	movlw	0
   888  013B  00C6               	movwf	Escribir_stringLCD@d+1
   889  013C  120A  118A  2462  120A  118A  	fcall	_Escribir_stringLCD
   890  0141                     l1968:
   891                           
   892                           ;LAB2.c: 93:         set_cursor(2,7);
   893  0141  3007               	movlw	7
   894  0142  1283               	bcf	3,5	;RP0=0, select bank0
   895  0143  1303               	bcf	3,6	;RP1=0, select bank0
   896  0144  00E8               	movwf	??_main
   897  0145  0868               	movf	??_main,w
   898  0146  00F6               	movwf	set_cursor@b
   899  0147  3002               	movlw	2
   900  0148  120A  118A  24AD  120A  118A  	fcall	_set_cursor
   901                           
   902                           ;LAB2.c: 94:         Escribir_stringLCD(buffer2);
   903  014D  302E               	movlw	(low (_buffer2| 0))& (0+255)
   904  014E  1283               	bcf	3,5	;RP0=0, select bank0
   905  014F  1303               	bcf	3,6	;RP1=0, select bank0
   906  0150  00C5               	movwf	Escribir_stringLCD@d
   907  0151  3000               	movlw	0
   908  0152  00C6               	movwf	Escribir_stringLCD@d+1
   909  0153  120A  118A  2462  120A  118A  	fcall	_Escribir_stringLCD
   910                           
   911                           ;LAB2.c: 97:         dato_recibido();
   912  0158  120A  118A  2387  120A  118A  	fcall	_dato_recibido
   913  015D                     l1970:
   914                           
   915                           ;LAB2.c: 99:         set_cursor(2,13);
   916  015D  300D               	movlw	13
   917  015E  1283               	bcf	3,5	;RP0=0, select bank0
   918  015F  1303               	bcf	3,6	;RP1=0, select bank0
   919  0160  00E8               	movwf	??_main
   920  0161  0868               	movf	??_main,w
   921  0162  00F6               	movwf	set_cursor@b
   922  0163  3002               	movlw	2
   923  0164  120A  118A  24AD  120A  118A  	fcall	_set_cursor
   924  0169                     l1972:
   925                           
   926                           ;LAB2.c: 100:         Escribir_stringLCD(buffer3);
   927  0169  3024               	movlw	(low (_buffer3| 0))& (0+255)
   928  016A  1283               	bcf	3,5	;RP0=0, select bank0
   929  016B  1303               	bcf	3,6	;RP1=0, select bank0
   930  016C  00C5               	movwf	Escribir_stringLCD@d
   931  016D  3000               	movlw	0
   932  016E  00C6               	movwf	Escribir_stringLCD@d+1
   933  016F  120A  118A  2462  120A  118A  	fcall	_Escribir_stringLCD
   934  0174  2911               	goto	l102
   935  0175  120A  118A  280C   	ljmp	start
   936  0178                     __end_of_main:
   937                           
   938                           	psect	text1
   939  02EE                     __ptext1:	
   940 ;; *************** function _setup *****************
   941 ;; Defined at:
   942 ;;		line 105 in file "LAB2.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          1       0       0       0       0
   959 ;;      Totals:         1       0       0       0       0
   960 ;;Total ram usage:        1 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 5
   963 ;; This function calls:
   964 ;;		_Iniciar_LCD
   965 ;;		_Limpiar_pantallaLCD
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _setup
   973  02EE                     _setup:
   974  02EE                     l1872:	
   975                           ;incstack = 0
   976                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   977                           
   978                           
   979                           ;LAB2.c: 108:     ANSEL = 0b0011;
   980  02EE  3003               	movlw	3
   981  02EF  1683               	bsf	3,5	;RP0=1, select bank3
   982  02F0  1703               	bsf	3,6	;RP1=1, select bank3
   983  02F1  0088               	movwf	8	;volatile
   984  02F2                     l1874:
   985                           
   986                           ;LAB2.c: 109:     ANSELH = 0;
   987  02F2  0189               	clrf	9	;volatile
   988  02F3                     l1876:
   989                           
   990                           ;LAB2.c: 111:     TRISA = 0b0011;
   991  02F3  3003               	movlw	3
   992  02F4  1683               	bsf	3,5	;RP0=1, select bank1
   993  02F5  1303               	bcf	3,6	;RP1=0, select bank1
   994  02F6  0085               	movwf	5	;volatile
   995                           
   996                           ;LAB2.c: 112:     TRISB = 0;
   997  02F7  0186               	clrf	6	;volatile
   998                           
   999                           ;LAB2.c: 113:     TRISE = 0;
  1000  02F8  0189               	clrf	9	;volatile
  1001                           
  1002                           ;LAB2.c: 115:     PORTA = 0;
  1003  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1004  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1005  02FB  0185               	clrf	5	;volatile
  1006                           
  1007                           ;LAB2.c: 116:     PORTE = 0;
  1008  02FC  0189               	clrf	9	;volatile
  1009                           
  1010                           ;LAB2.c: 117:     PORTB = 0;
  1011  02FD  0186               	clrf	6	;volatile
  1012  02FE                     l1878:
  1013                           
  1014                           ;LAB2.c: 120:     OSCCONbits.IRCF = 0b0110;
  1015  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  1016  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  1017  0300  080F               	movf	15,w	;volatile
  1018  0301  398F               	andlw	-113
  1019  0302  3860               	iorlw	96
  1020  0303  008F               	movwf	15	;volatile
  1021  0304                     l1880:
  1022                           
  1023                           ;LAB2.c: 121:     OSCCONbits.SCS = 1;
  1024  0304  140F               	bsf	15,0	;volatile
  1025  0305                     l1882:
  1026                           
  1027                           ;LAB2.c: 124:     ADCON1bits.ADFM = 0;
  1028  0305  139F               	bcf	31,7	;volatile
  1029  0306                     l1884:
  1030                           
  1031                           ;LAB2.c: 125:     ADCON1bits.VCFG0 = 0;
  1032  0306  121F               	bcf	31,4	;volatile
  1033  0307                     l1886:
  1034                           
  1035                           ;LAB2.c: 126:     ADCON1bits.VCFG1 = 0;
  1036  0307  129F               	bcf	31,5	;volatile
  1037  0308                     l1888:
  1038                           
  1039                           ;LAB2.c: 128:     ADCON0bits.ADCS = 0b01;
  1040  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1042  030A  081F               	movf	31,w	;volatile
  1043  030B  393F               	andlw	-193
  1044  030C  3840               	iorlw	64
  1045  030D  009F               	movwf	31	;volatile
  1046  030E                     l1890:
  1047                           
  1048                           ;LAB2.c: 129:     ADCON0bits.CHS = 0;
  1049  030E  30C3               	movlw	-61
  1050  030F  059F               	andwf	31,f	;volatile
  1051  0310                     l1892:
  1052                           
  1053                           ;LAB2.c: 130:     ADCON0bits.ADON = 1;
  1054  0310  141F               	bsf	31,0	;volatile
  1055  0311                     l1894:
  1056                           
  1057                           ;LAB2.c: 131:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1058  0311  3010               	movlw	16
  1059  0312  00F6               	movwf	??_setup
  1060  0313                     u1507:
  1061  0313  0BF6               	decfsz	??_setup,f
  1062  0314  2B13               	goto	u1507
  1063  0315  0000               	nop
  1064  0316                     l1896:
  1065                           
  1066                           ;LAB2.c: 134:     PIR1bits.ADIF = 0;
  1067  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0318  130C               	bcf	12,6	;volatile
  1070  0319                     l1898:
  1071                           
  1072                           ;LAB2.c: 135:     PIE1bits.ADIE = 1;
  1073  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1074  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1075  031B  170C               	bsf	12,6	;volatile
  1076  031C                     l1900:
  1077                           
  1078                           ;LAB2.c: 136:     PIR1bits.RCIF = 0;
  1079  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1080  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1081  031E  128C               	bcf	12,5	;volatile
  1082  031F                     l1902:
  1083                           
  1084                           ;LAB2.c: 137:     PIE1bits.RCIE = 1;
  1085  031F  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0320  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0321  168C               	bsf	12,5	;volatile
  1088  0322                     l1904:
  1089                           
  1090                           ;LAB2.c: 138:     INTCONbits.PEIE = 1;
  1091  0322  170B               	bsf	11,6	;volatile
  1092  0323                     l1906:
  1093                           
  1094                           ;LAB2.c: 139:     INTCONbits.GIE = 1;
  1095  0323  178B               	bsf	11,7	;volatile
  1096  0324                     l1908:
  1097                           
  1098                           ;LAB2.c: 142:     TXSTAbits.SYNC = 0;
  1099  0324  1218               	bcf	24,4	;volatile
  1100  0325                     l1910:
  1101                           
  1102                           ;LAB2.c: 143:     TXSTAbits.BRGH = 1;
  1103  0325  1518               	bsf	24,2	;volatile
  1104  0326                     l1912:
  1105                           
  1106                           ;LAB2.c: 145:     BAUDCTLbits.BRG16 = 0;
  1107  0326  1683               	bsf	3,5	;RP0=1, select bank3
  1108  0327  1703               	bsf	3,6	;RP1=1, select bank3
  1109  0328  1187               	bcf	7,3	;volatile
  1110  0329                     l1914:
  1111                           
  1112                           ;LAB2.c: 147:     SPBRG = 23;
  1113  0329  3017               	movlw	23
  1114  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1115  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1116  032C  0099               	movwf	25	;volatile
  1117  032D                     l1916:
  1118                           
  1119                           ;LAB2.c: 148:     SPBRGH = 0;
  1120  032D  019A               	clrf	26	;volatile
  1121  032E                     l1918:
  1122                           
  1123                           ;LAB2.c: 150:     RCSTAbits.SPEN = 1;
  1124  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1125  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0330  1798               	bsf	24,7	;volatile
  1127  0331                     l1920:
  1128                           
  1129                           ;LAB2.c: 151:     RCSTAbits.RX9 = 0;
  1130  0331  1318               	bcf	24,6	;volatile
  1131  0332                     l1922:
  1132                           
  1133                           ;LAB2.c: 152:     RCSTAbits.CREN = 1;
  1134  0332  1618               	bsf	24,4	;volatile
  1135  0333                     l1924:
  1136                           
  1137                           ;LAB2.c: 154:     TXSTAbits.TXEN = 1;
  1138  0333  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0334  1303               	bcf	3,6	;RP1=0, select bank1
  1140  0335  1698               	bsf	24,5	;volatile
  1141  0336                     l1926:
  1142                           
  1143                           ;LAB2.c: 157:     Iniciar_LCD();
  1144  0336  120A  118A  248A  120A  118A  	fcall	_Iniciar_LCD
  1145  033B                     l1928:
  1146                           
  1147                           ;LAB2.c: 158:     Limpiar_pantallaLCD();
  1148  033B  120A  118A  251C  120A  118A  	fcall	_Limpiar_pantallaLCD
  1149  0340                     l108:
  1150  0340  0008               	return
  1151  0341                     __end_of_setup:
  1152                           
  1153                           	psect	text2
  1154  051C                     __ptext2:	
  1155 ;; *************** function _Limpiar_pantallaLCD *****************
  1156 ;; Defined at:
  1157 ;;		line 52 in file "LCD.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0
  1173 ;;      Temps:          0       2       0       0       0
  1174 ;;      Totals:         0       2       0       0       0
  1175 ;;Total ram usage:        2 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 4
  1178 ;; This function calls:
  1179 ;;		_Escribir_comandoLCD
  1180 ;; This function is called by:
  1181 ;;		_setup
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _Limpiar_pantallaLCD
  1187  051C                     _Limpiar_pantallaLCD:
  1188  051C                     l1786:	
  1189                           ;incstack = 0
  1190                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  1191                           
  1192                           
  1193                           ;LCD.c: 53:     Escribir_comandoLCD(0x01);
  1194  051C  3001               	movlw	1
  1195  051D  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1196  0522                     l1788:
  1197                           
  1198                           ;LCD.c: 54:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1199  0522  300B               	movlw	11
  1200  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0525  00C6               	movwf	??_Limpiar_pantallaLCD+1
  1203  0526  3061               	movlw	97
  1204  0527  00C5               	movwf	??_Limpiar_pantallaLCD
  1205  0528                     u1517:
  1206  0528  0BC5               	decfsz	??_Limpiar_pantallaLCD,f
  1207  0529  2D28               	goto	u1517
  1208  052A  0BC6               	decfsz	??_Limpiar_pantallaLCD+1,f
  1209  052B  2D28               	goto	u1517
  1210  052C  2D2D               	nop2
  1211  052D                     l156:
  1212  052D  0008               	return
  1213  052E                     __end_of_Limpiar_pantallaLCD:
  1214                           
  1215                           	psect	text3
  1216  048A                     __ptext3:	
  1217 ;; *************** function _Iniciar_LCD *****************
  1218 ;; Defined at:
  1219 ;;		line 32 in file "LCD.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, pclath, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 4
  1240 ;; This function calls:
  1241 ;;		_Escribir_comandoLCD
  1242 ;; This function is called by:
  1243 ;;		_setup
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _Iniciar_LCD
  1249  048A                     _Iniciar_LCD:
  1250  048A                     l1770:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  1253                           
  1254                           
  1255                           ;LCD.c: 33:     RC1 = 0;
  1256  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1257  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1258  048C  1087               	bcf	7,1	;volatile
  1259                           
  1260                           ;LCD.c: 34:     RC0 = 0;
  1261  048D  1007               	bcf	7,0	;volatile
  1262  048E                     l1772:
  1263                           
  1264                           ;LCD.c: 35:     PORTD = 0;
  1265  048E  0188               	clrf	8	;volatile
  1266  048F                     l1774:
  1267                           
  1268                           ;LCD.c: 36:     TRISC1 = 0;
  1269  048F  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0490  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0491  1087               	bcf	7,1	;volatile
  1272  0492                     l1776:
  1273                           
  1274                           ;LCD.c: 37:     TRISC0 = 0;
  1275  0492  1007               	bcf	7,0	;volatile
  1276                           
  1277                           ;LCD.c: 38:     TRISD = 0;
  1278  0493  0188               	clrf	8	;volatile
  1279  0494                     l1778:
  1280                           
  1281                           ;LCD.c: 40:     Escribir_comandoLCD(0x38);
  1282  0494  3038               	movlw	56
  1283  0495  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1284  049A                     l1780:
  1285                           
  1286                           ;LCD.c: 41:     Escribir_comandoLCD(0x0C);
  1287  049A  300C               	movlw	12
  1288  049B  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1289  04A0                     l1782:
  1290                           
  1291                           ;LCD.c: 42:     Escribir_comandoLCD(0x01);
  1292  04A0  3001               	movlw	1
  1293  04A1  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1294  04A6                     l1784:
  1295                           
  1296                           ;LCD.c: 43:     Escribir_comandoLCD(0x06);
  1297  04A6  3006               	movlw	6
  1298  04A7  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1299  04AC                     l147:
  1300  04AC  0008               	return
  1301  04AD                     __end_of_Iniciar_LCD:
  1302                           
  1303                           	psect	text4
  1304  04AD                     __ptext4:	
  1305 ;; *************** function _set_cursor *****************
  1306 ;; Defined at:
  1307 ;;		line 57 in file "LCD.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  a               1    wreg     unsigned char 
  1310 ;;  b               1    6[COMMON] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  a               1    0[BANK0 ] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         1       0       0       0       0
  1323 ;;      Locals:         0       1       0       0       0
  1324 ;;      Temps:          0       0       0       0       0
  1325 ;;      Totals:         1       1       0       0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 4
  1329 ;; This function calls:
  1330 ;;		_Escribir_comandoLCD
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function _set_cursor
  1338  04AD                     _set_cursor:
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1342                           ;set_cursor@a stored from wreg
  1343  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1344  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1345  04AF  00C5               	movwf	set_cursor@a
  1346  04B0                     l1930:
  1347                           
  1348                           ;LCD.c: 58:     if(a == 1){
  1349  04B0  0345               	decf	set_cursor@a,w
  1350  04B1  1D03               	btfss	3,2
  1351  04B2  2CB4               	goto	u1451
  1352  04B3  2CB5               	goto	u1450
  1353  04B4                     u1451:
  1354  04B4  2CBC               	goto	l1934
  1355  04B5                     u1450:
  1356  04B5                     l1932:
  1357                           
  1358                           ;LCD.c: 59:         Escribir_comandoLCD(0x80 + (b-1));
  1359  04B5  0876               	movf	set_cursor@b,w
  1360  04B6  3E7F               	addlw	127
  1361  04B7  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1362  04BC                     l1934:
  1363                           
  1364                           ;LCD.c: 61:     if(a == 2){
  1365  04BC  3002               	movlw	2
  1366  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1367  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1368  04BF  0645               	xorwf	set_cursor@a,w
  1369  04C0  1D03               	btfss	3,2
  1370  04C1  2CC3               	goto	u1461
  1371  04C2  2CC4               	goto	u1460
  1372  04C3                     u1461:
  1373  04C3  2CCB               	goto	l161
  1374  04C4                     u1460:
  1375  04C4                     l1936:
  1376                           
  1377                           ;LCD.c: 62:         Escribir_comandoLCD(0xC0 + (b-1));
  1378  04C4  0876               	movf	set_cursor@b,w
  1379  04C5  3EBF               	addlw	191
  1380  04C6  120A  118A  252E  120A  118A  	fcall	_Escribir_comandoLCD
  1381  04CB                     l161:
  1382  04CB  0008               	return
  1383  04CC                     __end_of_set_cursor:
  1384                           
  1385                           	psect	text5
  1386  052E                     __ptext5:	
  1387 ;; *************** function _Escribir_comandoLCD *****************
  1388 ;; Defined at:
  1389 ;;		line 18 in file "LCD.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  Comando         1    wreg     unsigned char 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  Comando         1    5[COMMON] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, pclath, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         1       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         1       0       0       0       0
  1407 ;;Total ram usage:        1 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 3
  1410 ;; This function calls:
  1411 ;;		_prender_ELCD
  1412 ;; This function is called by:
  1413 ;;		_Iniciar_LCD
  1414 ;;		_Limpiar_pantallaLCD
  1415 ;;		_set_cursor
  1416 ;;		_shift_right
  1417 ;;		_shift_left
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _Escribir_comandoLCD
  1423  052E                     _Escribir_comandoLCD:
  1424                           
  1425                           ;incstack = 0
  1426                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  1427                           ;Escribir_comandoLCD@Comando stored from wreg
  1428  052E  00F5               	movwf	Escribir_comandoLCD@Comando
  1429  052F                     l1634:
  1430                           
  1431                           ;LCD.c: 19:     RC0 = 0;
  1432  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0531  1007               	bcf	7,0	;volatile
  1435  0532                     l1636:
  1436                           
  1437                           ;LCD.c: 20:     PORTD = Comando;
  1438  0532  0875               	movf	Escribir_comandoLCD@Comando,w
  1439  0533  0088               	movwf	8	;volatile
  1440  0534                     l1638:
  1441                           
  1442                           ;LCD.c: 22:     prender_ELCD();
  1443  0534  120A  118A  2507  120A  118A  	fcall	_prender_ELCD
  1444  0539                     l141:
  1445  0539  0008               	return
  1446  053A                     __end_of_Escribir_comandoLCD:
  1447                           
  1448                           	psect	text6
  1449  0387                     __ptext6:	
  1450 ;; *************** function _dato_recibido *****************
  1451 ;; Defined at:
  1452 ;;		line 177 in file "LAB2.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0
  1468 ;;      Temps:          0       7       0       0       0
  1469 ;;      Totals:         0       7       0       0       0
  1470 ;;Total ram usage:        7 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 4
  1473 ;; This function calls:
  1474 ;;		_divisor
  1475 ;;		_sprintf
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _dato_recibido
  1483  0387                     _dato_recibido:
  1484  0387                     l1948:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1487                           
  1488                           
  1489                           ;LAB2.c: 178:     if(dato == 75){
  1490  0387  304B               	movlw	75
  1491  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1493  038A  0621               	xorwf	_dato,w
  1494  038B  1D03               	btfss	3,2
  1495  038C  2B8E               	goto	u1481
  1496  038D  2B8F               	goto	u1480
  1497  038E                     u1481:
  1498  038E  2B93               	goto	l119
  1499  038F                     u1480:
  1500  038F                     l1950:
  1501                           
  1502                           ;LAB2.c: 179:         Cont_U++;
  1503  038F  3001               	movlw	1
  1504  0390  00E1               	movwf	??_dato_recibido
  1505  0391  0861               	movf	??_dato_recibido,w
  1506  0392  07A0               	addwf	_Cont_U,f
  1507  0393                     l119:	
  1508                           ;LAB2.c: 180:     }
  1509                           
  1510                           
  1511                           ;LAB2.c: 181:     if(dato == 77){
  1512  0393  304D               	movlw	77
  1513  0394  0621               	xorwf	_dato,w
  1514  0395  1D03               	btfss	3,2
  1515  0396  2B98               	goto	u1491
  1516  0397  2B99               	goto	u1490
  1517  0398                     u1491:
  1518  0398  2B9B               	goto	l1954
  1519  0399                     u1490:
  1520  0399                     l1952:
  1521                           
  1522                           ;LAB2.c: 182:         Cont_U--;
  1523  0399  3001               	movlw	1
  1524  039A  02A0               	subwf	_Cont_U,f
  1525  039B                     l1954:
  1526                           
  1527                           ;LAB2.c: 185:     divisor(Cont_U, vol3);
  1528  039B  3042               	movlw	(low (_vol3| 0))& (0+255)
  1529  039C  00E1               	movwf	??_dato_recibido
  1530  039D  0861               	movf	??_dato_recibido,w
  1531  039E  00CD               	movwf	divisor@dig
  1532  039F  0820               	movf	_Cont_U,w
  1533  03A0  120A  118A  2297  120A  118A  	fcall	_divisor
  1534  03A5                     l1956:
  1535                           
  1536                           ;LAB2.c: 186:     sprintf(buffer3, "%d.%d%d", vol3[2], vol3[1], vol3[0]);
  1537  03A5  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1538  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1539  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1540  03A8  00E1               	movwf	??_dato_recibido
  1541  03A9  0861               	movf	??_dato_recibido,w
  1542  03AA  00D0               	movwf	sprintf@f
  1543  03AB  0844               	movf	_vol3+2,w
  1544  03AC  00E2               	movwf	??_dato_recibido+1
  1545  03AD  01E3               	clrf	??_dato_recibido+2
  1546  03AE  0862               	movf	??_dato_recibido+1,w
  1547  03AF  00D1               	movwf	?_sprintf+1
  1548  03B0  0863               	movf	??_dato_recibido+2,w
  1549  03B1  00D2               	movwf	?_sprintf+2
  1550  03B2  0843               	movf	_vol3+1,w
  1551  03B3  00E4               	movwf	??_dato_recibido+3
  1552  03B4  01E5               	clrf	??_dato_recibido+4
  1553  03B5  0864               	movf	??_dato_recibido+3,w
  1554  03B6  00D3               	movwf	?_sprintf+3
  1555  03B7  0865               	movf	??_dato_recibido+4,w
  1556  03B8  00D4               	movwf	?_sprintf+4
  1557  03B9  0842               	movf	_vol3,w
  1558  03BA  00E6               	movwf	??_dato_recibido+5
  1559  03BB  01E7               	clrf	??_dato_recibido+6
  1560  03BC  0866               	movf	??_dato_recibido+5,w
  1561  03BD  00D5               	movwf	?_sprintf+5
  1562  03BE  0867               	movf	??_dato_recibido+6,w
  1563  03BF  00D6               	movwf	?_sprintf+6
  1564  03C0  3024               	movlw	(low (_buffer3| 0))& (0+255)
  1565  03C1  120A  118A  201F  120A  118A  	fcall	_sprintf
  1566  03C6                     l121:
  1567  03C6  0008               	return
  1568  03C7                     __end_of_dato_recibido:
  1569                           
  1570                           	psect	text7
  1571  01E1                     __ptext7:	
  1572 ;; *************** function _conversion_char *****************
  1573 ;; Defined at:
  1574 ;;		line 161 in file "LAB2.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0
  1590 ;;      Temps:          0       7       0       0       0
  1591 ;;      Totals:         0       7       0       0       0
  1592 ;;Total ram usage:        7 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 4
  1595 ;; This function calls:
  1596 ;;		_divisor
  1597 ;;		_sprintf
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _conversion_char
  1605  01E1                     _conversion_char:
  1606  01E1                     l1946:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1609                           
  1610                           
  1611                           ;LAB2.c: 162:     divisor(cont1, vol1);
  1612  01E1  3044               	movlw	(low (_vol1| 0))& (0+255)
  1613  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1614  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1615  01E4  00E1               	movwf	??_conversion_char
  1616  01E5  0861               	movf	??_conversion_char,w
  1617  01E6  00CD               	movwf	divisor@dig
  1618  01E7  0823               	movf	_cont1,w
  1619  01E8  120A  118A  2297  120A  118A  	fcall	_divisor
  1620                           
  1621                           ;LAB2.c: 163:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1622  01ED  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1623  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1624  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1625  01F0  00E1               	movwf	??_conversion_char
  1626  01F1  0861               	movf	??_conversion_char,w
  1627  01F2  00D0               	movwf	sprintf@f
  1628  01F3  0846               	movf	_vol1+2,w
  1629  01F4  00E2               	movwf	??_conversion_char+1
  1630  01F5  01E3               	clrf	??_conversion_char+2
  1631  01F6  0862               	movf	??_conversion_char+1,w
  1632  01F7  00D1               	movwf	?_sprintf+1
  1633  01F8  0863               	movf	??_conversion_char+2,w
  1634  01F9  00D2               	movwf	?_sprintf+2
  1635  01FA  0845               	movf	_vol1+1,w
  1636  01FB  00E4               	movwf	??_conversion_char+3
  1637  01FC  01E5               	clrf	??_conversion_char+4
  1638  01FD  0864               	movf	??_conversion_char+3,w
  1639  01FE  00D3               	movwf	?_sprintf+3
  1640  01FF  0865               	movf	??_conversion_char+4,w
  1641  0200  00D4               	movwf	?_sprintf+4
  1642  0201  0844               	movf	_vol1,w
  1643  0202  00E6               	movwf	??_conversion_char+5
  1644  0203  01E7               	clrf	??_conversion_char+6
  1645  0204  0866               	movf	??_conversion_char+5,w
  1646  0205  00D5               	movwf	?_sprintf+5
  1647  0206  0867               	movf	??_conversion_char+6,w
  1648  0207  00D6               	movwf	?_sprintf+6
  1649  0208  3038               	movlw	(low (_buffer1| 0))& (0+255)
  1650  0209  120A  118A  201F  120A  118A  	fcall	_sprintf
  1651                           
  1652                           ;LAB2.c: 165:     divisor(cont2, vol2);
  1653  020E  3043               	movlw	(low (_vol2| 0))& (0+255)
  1654  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0211  00E1               	movwf	??_conversion_char
  1657  0212  0861               	movf	??_conversion_char,w
  1658  0213  00CD               	movwf	divisor@dig
  1659  0214  0822               	movf	_cont2,w
  1660  0215  120A  118A  2297  120A  118A  	fcall	_divisor
  1661                           
  1662                           ;LAB2.c: 166:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1663  021A  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1664  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1665  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1666  021D  00E1               	movwf	??_conversion_char
  1667  021E  0861               	movf	??_conversion_char,w
  1668  021F  00D0               	movwf	sprintf@f
  1669  0220  0845               	movf	_vol2+2,w
  1670  0221  00E2               	movwf	??_conversion_char+1
  1671  0222  01E3               	clrf	??_conversion_char+2
  1672  0223  0862               	movf	??_conversion_char+1,w
  1673  0224  00D1               	movwf	?_sprintf+1
  1674  0225  0863               	movf	??_conversion_char+2,w
  1675  0226  00D2               	movwf	?_sprintf+2
  1676  0227  0844               	movf	_vol2+1,w
  1677  0228  00E4               	movwf	??_conversion_char+3
  1678  0229  01E5               	clrf	??_conversion_char+4
  1679  022A  0864               	movf	??_conversion_char+3,w
  1680  022B  00D3               	movwf	?_sprintf+3
  1681  022C  0865               	movf	??_conversion_char+4,w
  1682  022D  00D4               	movwf	?_sprintf+4
  1683  022E  0843               	movf	_vol2,w
  1684  022F  00E6               	movwf	??_conversion_char+5
  1685  0230  01E7               	clrf	??_conversion_char+6
  1686  0231  0866               	movf	??_conversion_char+5,w
  1687  0232  00D5               	movwf	?_sprintf+5
  1688  0233  0867               	movf	??_conversion_char+6,w
  1689  0234  00D6               	movwf	?_sprintf+6
  1690  0235  302E               	movlw	(low (_buffer2| 0))& (0+255)
  1691  0236  120A  118A  201F  120A  118A  	fcall	_sprintf
  1692  023B                     l111:
  1693  023B  0008               	return
  1694  023C                     __end_of_conversion_char:
  1695                           
  1696                           	psect	text8
  1697  001F                     __ptext8:	
  1698 ;; *************** function _sprintf *****************
  1699 ;; Defined at:
  1700 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  sp              1    wreg     PTR unsigned char 
  1703 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1704 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1705 ;;		 -> STR_4(8), STR_3(8), STR_2(8), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  1708 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1709 ;;  tmpval          4    0        struct .
  1710 ;;  val             2   24[BANK0 ] unsigned int 
  1711 ;;  cp              2    0        PTR const unsigned char 
  1712 ;;  len             2    0        unsigned int 
  1713 ;;  c               1   27[BANK0 ] unsigned char 
  1714 ;;  prec            1   23[BANK0 ] char 
  1715 ;;  flag            1   22[BANK0 ] unsigned char 
  1716 ;;  ap              1   21[BANK0 ] PTR void [1]
  1717 ;;		 -> ?_sprintf(2), 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2   11[BANK0 ] int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       7       0       0       0
  1728 ;;      Locals:         0       7       0       0       0
  1729 ;;      Temps:          0       3       0       0       0
  1730 ;;      Totals:         0      17       0       0       0
  1731 ;;Total ram usage:       17 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 3
  1734 ;; This function calls:
  1735 ;;		___lwdiv
  1736 ;;		___lwmod
  1737 ;; This function is called by:
  1738 ;;		_conversion_char
  1739 ;;		_dato_recibido
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _sprintf
  1745  001F                     _sprintf:
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1749                           ;sprintf@sp stored from wreg
  1750  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0021  00DF               	movwf	sprintf@sp
  1753  0022                     l1804:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1756  0022  3051               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1757  0023  00D7               	movwf	??_sprintf
  1758  0024  0857               	movf	??_sprintf,w
  1759  0025  00DA               	movwf	sprintf@ap
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1762  0026  28F2               	goto	l1856
  1763  0027                     l1806:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1766  0027  3025               	movlw	37
  1767  0028  0660               	xorwf	sprintf@c,w
  1768  0029  1903               	btfsc	3,2
  1769  002A  282C               	goto	u1381
  1770  002B  282D               	goto	u1380
  1771  002C                     u1381:
  1772  002C  2839               	goto	l1812
  1773  002D                     u1380:
  1774  002D                     l1808:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1777  002D  0860               	movf	sprintf@c,w
  1778  002E  00D7               	movwf	??_sprintf
  1779  002F  085F               	movf	sprintf@sp,w
  1780  0030  0084               	movwf	4
  1781  0031  0857               	movf	??_sprintf,w
  1782  0032  1383               	bcf	3,7	;select IRP bank0
  1783  0033  0080               	movwf	0
  1784  0034                     l1810:
  1785  0034  3001               	movlw	1
  1786  0035  00D7               	movwf	??_sprintf
  1787  0036  0857               	movf	??_sprintf,w
  1788  0037  07DF               	addwf	sprintf@sp,f
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1791  0038  28F2               	goto	l1856
  1792  0039                     l1812:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1795  0039  01DB               	clrf	sprintf@flag
  1796  003A                     l1816:	
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1798                           
  1799  003A  3001               	movlw	1
  1800  003B  07D0               	addwf	sprintf@f,f
  1801  003C  30FF               	movlw	-1
  1802  003D  0750               	addwf	sprintf@f,w
  1803  003E  0084               	movwf	4
  1804  003F  120A  118A  240D  120A  118A  	fcall	stringdir
  1805  0044  00E0               	movwf	sprintf@c
  1806  0045  00D7               	movwf	??_sprintf
  1807  0046  01D8               	clrf	??_sprintf+1
  1808                           
  1809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1810                           ; Switch size 1, requested type "simple"
  1811                           ; Number of cases is 1, Range of values is 0 to 0
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            4     3 (average)
  1815                           ; direct_byte           11     8 (fixed)
  1816                           ; jumptable            260     6 (fixed)
  1817                           ;	Chosen strategy is simple_byte
  1818  0047  0858               	movf	??_sprintf+1,w
  1819  0048  3A00               	xorlw	0	; case 0
  1820  0049  1903               	skipnz
  1821  004A  284C               	goto	l1998
  1822  004B  28F2               	goto	l1856
  1823  004C                     l1998:
  1824                           
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 3, Range of values is 0 to 105
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte           10     6 (average)
  1830                           ; jumptable            260     6 (fixed)
  1831                           ;	Chosen strategy is simple_byte
  1832  004C  0857               	movf	??_sprintf,w
  1833  004D  3A00               	xorlw	0	; case 0
  1834  004E  1903               	skipnz
  1835  004F  2904               	goto	l1858
  1836  0050  3A64               	xorlw	100	; case 100
  1837  0051  1903               	skipnz
  1838  0052  2857               	goto	l1818
  1839  0053  3A0D               	xorlw	13	; case 105
  1840  0054  1903               	skipnz
  1841  0055  2857               	goto	l1818
  1842  0056  28F2               	goto	l1856
  1843  0057                     l1818:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1846  0057  085A               	movf	sprintf@ap,w
  1847  0058  0084               	movwf	4
  1848  0059  1383               	bcf	3,7	;select IRP bank0
  1849  005A  0800               	movf	0,w
  1850  005B  00DD               	movwf	sprintf@val
  1851  005C  0A84               	incf	4,f
  1852  005D  0800               	movf	0,w
  1853  005E  00DE               	movwf	sprintf@val+1
  1854  005F                     l1820:
  1855  005F  3002               	movlw	2
  1856  0060  00D7               	movwf	??_sprintf
  1857  0061  0857               	movf	??_sprintf,w
  1858  0062  07DA               	addwf	sprintf@ap,f
  1859  0063                     l1822:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1862  0063  1FDE               	btfss	sprintf@val+1,7
  1863  0064  2866               	goto	u1391
  1864  0065  2867               	goto	u1390
  1865  0066                     u1391:
  1866  0066  2870               	goto	l1828
  1867  0067                     u1390:
  1868  0067                     l1824:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1871  0067  3003               	movlw	3
  1872  0068  00D7               	movwf	??_sprintf
  1873  0069  0857               	movf	??_sprintf,w
  1874  006A  04DB               	iorwf	sprintf@flag,f
  1875  006B                     l1826:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1878  006B  09DD               	comf	sprintf@val,f
  1879  006C  09DE               	comf	sprintf@val+1,f
  1880  006D  0ADD               	incf	sprintf@val,f
  1881  006E  1903               	skipnz
  1882  006F  0ADE               	incf	sprintf@val+1,f
  1883  0070                     l1828:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1886  0070  01E0               	clrf	sprintf@c
  1887  0071  0AE0               	incf	sprintf@c,f
  1888  0072                     l1834:
  1889                           
  1890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1891  0072  0860               	movf	sprintf@c,w
  1892  0073  00D7               	movwf	??_sprintf
  1893  0074  0757               	addwf	??_sprintf,w
  1894  0075  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1895  0076  0084               	movwf	4
  1896  0077  120A  118A  240D  120A  118A  	fcall	stringdir
  1897  007C  00D8               	movwf	??_sprintf+1
  1898  007D  120A  118A  240D  120A  118A  	fcall	stringdir
  1899  0082  00D9               	movwf	??_sprintf+2
  1900  0083  0859               	movf	??_sprintf+2,w
  1901  0084  025E               	subwf	sprintf@val+1,w
  1902  0085  1D03               	skipz
  1903  0086  2889               	goto	u1405
  1904  0087  0858               	movf	??_sprintf+1,w
  1905  0088  025D               	subwf	sprintf@val,w
  1906  0089                     u1405:
  1907  0089  1803               	skipnc
  1908  008A  288C               	goto	u1401
  1909  008B  288D               	goto	u1400
  1910  008C                     u1401:
  1911  008C  288E               	goto	l1838
  1912  008D                     u1400:
  1913  008D  2898               	goto	l1840
  1914  008E                     l1838:
  1915  008E  3001               	movlw	1
  1916  008F  00D7               	movwf	??_sprintf
  1917  0090  0857               	movf	??_sprintf,w
  1918  0091  07E0               	addwf	sprintf@c,f
  1919  0092  3005               	movlw	5
  1920  0093  0660               	xorwf	sprintf@c,w
  1921  0094  1D03               	btfss	3,2
  1922  0095  2897               	goto	u1411
  1923  0096  2898               	goto	u1410
  1924  0097                     u1411:
  1925  0097  2872               	goto	l1834
  1926  0098                     u1410:
  1927  0098                     l1840:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1930  0098  085B               	movf	sprintf@flag,w
  1931  0099  3903               	andlw	3
  1932  009A  1903               	btfsc	3,2
  1933  009B  289D               	goto	u1421
  1934  009C  289E               	goto	u1420
  1935  009D                     u1421:
  1936  009D  28A9               	goto	l1846
  1937  009E                     u1420:
  1938  009E                     l1842:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1941  009E  302D               	movlw	45
  1942  009F  00D7               	movwf	??_sprintf
  1943  00A0  085F               	movf	sprintf@sp,w
  1944  00A1  0084               	movwf	4
  1945  00A2  0857               	movf	??_sprintf,w
  1946  00A3  1383               	bcf	3,7	;select IRP bank0
  1947  00A4  0080               	movwf	0
  1948  00A5                     l1844:
  1949  00A5  3001               	movlw	1
  1950  00A6  00D7               	movwf	??_sprintf
  1951  00A7  0857               	movf	??_sprintf,w
  1952  00A8  07DF               	addwf	sprintf@sp,f
  1953  00A9                     l1846:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1956  00A9  0860               	movf	sprintf@c,w
  1957  00AA  00D7               	movwf	??_sprintf
  1958  00AB  0857               	movf	??_sprintf,w
  1959  00AC  00DC               	movwf	sprintf@prec
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1962  00AD  28E9               	goto	l1854
  1963  00AE                     l1848:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1966  00AE  300A               	movlw	10
  1967  00AF  00CC               	movwf	___lwmod@divisor
  1968  00B0  3000               	movlw	0
  1969  00B1  00CD               	movwf	___lwmod@divisor+1
  1970  00B2  085C               	movf	sprintf@prec,w
  1971  00B3  00D7               	movwf	??_sprintf
  1972  00B4  0757               	addwf	??_sprintf,w
  1973  00B5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1974  00B6  0084               	movwf	4
  1975  00B7  120A  118A  240D  120A  118A  	fcall	stringdir
  1976  00BC  00C5               	movwf	___lwdiv@divisor
  1977  00BD  120A  118A  240D  120A  118A  	fcall	stringdir
  1978  00C2  00C6               	movwf	___lwdiv@divisor+1
  1979  00C3  085E               	movf	sprintf@val+1,w
  1980  00C4  00C8               	movwf	___lwdiv@dividend+1
  1981  00C5  085D               	movf	sprintf@val,w
  1982  00C6  00C7               	movwf	___lwdiv@dividend
  1983  00C7  120A  118A  2341  120A  118A  	fcall	___lwdiv
  1984  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1985  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1986  00CE  0846               	movf	?___lwdiv+1,w
  1987  00CF  00CF               	movwf	___lwmod@dividend+1
  1988  00D0  0845               	movf	?___lwdiv,w
  1989  00D1  00CE               	movwf	___lwmod@dividend
  1990  00D2  120A  118A  23C7  120A  118A  	fcall	___lwmod
  1991  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1993  00D9  084C               	movf	?___lwmod,w
  1994  00DA  3E30               	addlw	48
  1995  00DB  00D8               	movwf	??_sprintf+1
  1996  00DC  0858               	movf	??_sprintf+1,w
  1997  00DD  00E0               	movwf	sprintf@c
  1998  00DE                     l1850:
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2001  00DE  0860               	movf	sprintf@c,w
  2002  00DF  00D7               	movwf	??_sprintf
  2003  00E0  085F               	movf	sprintf@sp,w
  2004  00E1  0084               	movwf	4
  2005  00E2  0857               	movf	??_sprintf,w
  2006  00E3  1383               	bcf	3,7	;select IRP bank0
  2007  00E4  0080               	movwf	0
  2008  00E5                     l1852:
  2009  00E5  3001               	movlw	1
  2010  00E6  00D7               	movwf	??_sprintf
  2011  00E7  0857               	movf	??_sprintf,w
  2012  00E8  07DF               	addwf	sprintf@sp,f
  2013  00E9                     l1854:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2016  00E9  30FF               	movlw	255
  2017  00EA  00D7               	movwf	??_sprintf
  2018  00EB  0857               	movf	??_sprintf,w
  2019  00EC  07DC               	addwf	sprintf@prec,f
  2020  00ED  0A5C               	incf	sprintf@prec,w
  2021  00EE  1D03               	btfss	3,2
  2022  00EF  28F1               	goto	u1431
  2023  00F0  28F2               	goto	u1430
  2024  00F1                     u1431:
  2025  00F1  28AE               	goto	l1848
  2026  00F2                     u1430:
  2027  00F2                     l1856:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2030  00F2  3001               	movlw	1
  2031  00F3  07D0               	addwf	sprintf@f,f
  2032  00F4  30FF               	movlw	-1
  2033  00F5  0750               	addwf	sprintf@f,w
  2034  00F6  0084               	movwf	4
  2035  00F7  120A  118A  240D  120A  118A  	fcall	stringdir
  2036  00FC  00D7               	movwf	??_sprintf
  2037  00FD  0857               	movf	??_sprintf,w
  2038  00FE  00E0               	movwf	sprintf@c
  2039  00FF  0860               	movf	sprintf@c,w
  2040  0100  1D03               	btfss	3,2
  2041  0101  2903               	goto	u1441
  2042  0102  2904               	goto	u1440
  2043  0103                     u1441:
  2044  0103  2827               	goto	l1806
  2045  0104                     u1440:
  2046  0104                     l1858:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2049  0104  085F               	movf	sprintf@sp,w
  2050  0105  0084               	movwf	4
  2051  0106  1383               	bcf	3,7	;select IRP bank0
  2052  0107  0180               	clrf	0
  2053  0108                     l306:
  2054  0108  0008               	return
  2055  0109                     __end_of_sprintf:
  2056                           
  2057                           	psect	text9
  2058  03C7                     __ptext9:	
  2059 ;; *************** function ___lwmod *****************
  2060 ;; Defined at:
  2061 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  divisor         2    7[BANK0 ] unsigned int 
  2064 ;;  dividend        2    9[BANK0 ] unsigned int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  counter         1    6[COMMON] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  2    7[BANK0 ] unsigned int 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         0       4       0       0       0
  2077 ;;      Locals:         1       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0
  2079 ;;      Totals:         2       4       0       0       0
  2080 ;;Total ram usage:        6 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 2
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_sprintf
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function ___lwmod
  2092  03C7                     ___lwmod:
  2093  03C7                     l1748:	
  2094                           ;incstack = 0
  2095                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2096                           
  2097  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2098  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2099  03C9  084C               	movf	___lwmod@divisor,w
  2100  03CA  044D               	iorwf	___lwmod@divisor+1,w
  2101  03CB  1903               	btfsc	3,2
  2102  03CC  2BCE               	goto	u1311
  2103  03CD  2BCF               	goto	u1310
  2104  03CE                     u1311:
  2105  03CE  2BFE               	goto	l1766
  2106  03CF                     u1310:
  2107  03CF                     l1750:
  2108  03CF  01F6               	clrf	___lwmod@counter
  2109  03D0  0AF6               	incf	___lwmod@counter,f
  2110  03D1  2BDD               	goto	l1756
  2111  03D2                     l1752:
  2112  03D2  3001               	movlw	1
  2113  03D3                     u1325:
  2114  03D3  1003               	clrc
  2115  03D4  0DCC               	rlf	___lwmod@divisor,f
  2116  03D5  0DCD               	rlf	___lwmod@divisor+1,f
  2117  03D6  3EFF               	addlw	-1
  2118  03D7  1D03               	skipz
  2119  03D8  2BD3               	goto	u1325
  2120  03D9                     l1754:
  2121  03D9  3001               	movlw	1
  2122  03DA  00F5               	movwf	??___lwmod
  2123  03DB  0875               	movf	??___lwmod,w
  2124  03DC  07F6               	addwf	___lwmod@counter,f
  2125  03DD                     l1756:
  2126  03DD  1FCD               	btfss	___lwmod@divisor+1,7
  2127  03DE  2BE0               	goto	u1331
  2128  03DF  2BE1               	goto	u1330
  2129  03E0                     u1331:
  2130  03E0  2BD2               	goto	l1752
  2131  03E1                     u1330:
  2132  03E1                     l1758:
  2133  03E1  084D               	movf	___lwmod@divisor+1,w
  2134  03E2  024F               	subwf	___lwmod@dividend+1,w
  2135  03E3  1D03               	skipz
  2136  03E4  2BE7               	goto	u1345
  2137  03E5  084C               	movf	___lwmod@divisor,w
  2138  03E6  024E               	subwf	___lwmod@dividend,w
  2139  03E7                     u1345:
  2140  03E7  1C03               	skipc
  2141  03E8  2BEA               	goto	u1341
  2142  03E9  2BEB               	goto	u1340
  2143  03EA                     u1341:
  2144  03EA  2BF1               	goto	l1762
  2145  03EB                     u1340:
  2146  03EB                     l1760:
  2147  03EB  084C               	movf	___lwmod@divisor,w
  2148  03EC  02CE               	subwf	___lwmod@dividend,f
  2149  03ED  084D               	movf	___lwmod@divisor+1,w
  2150  03EE  1C03               	skipc
  2151  03EF  03CF               	decf	___lwmod@dividend+1,f
  2152  03F0  02CF               	subwf	___lwmod@dividend+1,f
  2153  03F1                     l1762:
  2154  03F1  3001               	movlw	1
  2155  03F2                     u1355:
  2156  03F2  1003               	clrc
  2157  03F3  0CCD               	rrf	___lwmod@divisor+1,f
  2158  03F4  0CCC               	rrf	___lwmod@divisor,f
  2159  03F5  3EFF               	addlw	-1
  2160  03F6  1D03               	skipz
  2161  03F7  2BF2               	goto	u1355
  2162  03F8                     l1764:
  2163  03F8  3001               	movlw	1
  2164  03F9  02F6               	subwf	___lwmod@counter,f
  2165  03FA  1D03               	btfss	3,2
  2166  03FB  2BFD               	goto	u1361
  2167  03FC  2BFE               	goto	u1360
  2168  03FD                     u1361:
  2169  03FD  2BE1               	goto	l1758
  2170  03FE                     u1360:
  2171  03FE                     l1766:
  2172  03FE  084F               	movf	___lwmod@dividend+1,w
  2173  03FF  00CD               	movwf	?___lwmod+1
  2174  0400  084E               	movf	___lwmod@dividend,w
  2175  0401  00CC               	movwf	?___lwmod
  2176  0402                     l592:
  2177  0402  0008               	return
  2178  0403                     __end_of___lwmod:
  2179                           
  2180                           	psect	text10
  2181  0341                     __ptext10:	
  2182 ;; *************** function ___lwdiv *****************
  2183 ;; Defined at:
  2184 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  divisor         2    0[BANK0 ] unsigned int 
  2187 ;;  dividend        2    2[BANK0 ] unsigned int 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  quotient        2    5[BANK0 ] unsigned int 
  2190 ;;  counter         1    4[BANK0 ] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2    0[BANK0 ] unsigned int 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       4       0       0       0
  2201 ;;      Locals:         0       3       0       0       0
  2202 ;;      Temps:          1       0       0       0       0
  2203 ;;      Totals:         1       7       0       0       0
  2204 ;;Total ram usage:        8 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 2
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_sprintf
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function ___lwdiv
  2216  0341                     ___lwdiv:
  2217  0341                     l1722:	
  2218                           ;incstack = 0
  2219                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2220                           
  2221  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0343  01CA               	clrf	___lwdiv@quotient
  2224  0344  01CB               	clrf	___lwdiv@quotient+1
  2225  0345                     l1724:
  2226  0345  0845               	movf	___lwdiv@divisor,w
  2227  0346  0446               	iorwf	___lwdiv@divisor+1,w
  2228  0347  1903               	btfsc	3,2
  2229  0348  2B4A               	goto	u1241
  2230  0349  2B4B               	goto	u1240
  2231  034A                     u1241:
  2232  034A  2B82               	goto	l1744
  2233  034B                     u1240:
  2234  034B                     l1726:
  2235  034B  01C9               	clrf	___lwdiv@counter
  2236  034C  0AC9               	incf	___lwdiv@counter,f
  2237  034D  2B59               	goto	l1732
  2238  034E                     l1728:
  2239  034E  3001               	movlw	1
  2240  034F                     u1255:
  2241  034F  1003               	clrc
  2242  0350  0DC5               	rlf	___lwdiv@divisor,f
  2243  0351  0DC6               	rlf	___lwdiv@divisor+1,f
  2244  0352  3EFF               	addlw	-1
  2245  0353  1D03               	skipz
  2246  0354  2B4F               	goto	u1255
  2247  0355                     l1730:
  2248  0355  3001               	movlw	1
  2249  0356  00F4               	movwf	??___lwdiv
  2250  0357  0874               	movf	??___lwdiv,w
  2251  0358  07C9               	addwf	___lwdiv@counter,f
  2252  0359                     l1732:
  2253  0359  1FC6               	btfss	___lwdiv@divisor+1,7
  2254  035A  2B5C               	goto	u1261
  2255  035B  2B5D               	goto	u1260
  2256  035C                     u1261:
  2257  035C  2B4E               	goto	l1728
  2258  035D                     u1260:
  2259  035D                     l1734:
  2260  035D  3001               	movlw	1
  2261  035E                     u1275:
  2262  035E  1003               	clrc
  2263  035F  0DCA               	rlf	___lwdiv@quotient,f
  2264  0360  0DCB               	rlf	___lwdiv@quotient+1,f
  2265  0361  3EFF               	addlw	-1
  2266  0362  1D03               	skipz
  2267  0363  2B5E               	goto	u1275
  2268  0364  0846               	movf	___lwdiv@divisor+1,w
  2269  0365  0248               	subwf	___lwdiv@dividend+1,w
  2270  0366  1D03               	skipz
  2271  0367  2B6A               	goto	u1285
  2272  0368  0845               	movf	___lwdiv@divisor,w
  2273  0369  0247               	subwf	___lwdiv@dividend,w
  2274  036A                     u1285:
  2275  036A  1C03               	skipc
  2276  036B  2B6D               	goto	u1281
  2277  036C  2B6E               	goto	u1280
  2278  036D                     u1281:
  2279  036D  2B75               	goto	l1740
  2280  036E                     u1280:
  2281  036E                     l1736:
  2282  036E  0845               	movf	___lwdiv@divisor,w
  2283  036F  02C7               	subwf	___lwdiv@dividend,f
  2284  0370  0846               	movf	___lwdiv@divisor+1,w
  2285  0371  1C03               	skipc
  2286  0372  03C8               	decf	___lwdiv@dividend+1,f
  2287  0373  02C8               	subwf	___lwdiv@dividend+1,f
  2288  0374                     l1738:
  2289  0374  144A               	bsf	___lwdiv@quotient,0
  2290  0375                     l1740:
  2291  0375  3001               	movlw	1
  2292  0376                     u1295:
  2293  0376  1003               	clrc
  2294  0377  0CC6               	rrf	___lwdiv@divisor+1,f
  2295  0378  0CC5               	rrf	___lwdiv@divisor,f
  2296  0379  3EFF               	addlw	-1
  2297  037A  1D03               	skipz
  2298  037B  2B76               	goto	u1295
  2299  037C                     l1742:
  2300  037C  3001               	movlw	1
  2301  037D  02C9               	subwf	___lwdiv@counter,f
  2302  037E  1D03               	btfss	3,2
  2303  037F  2B81               	goto	u1301
  2304  0380  2B82               	goto	u1300
  2305  0381                     u1301:
  2306  0381  2B5D               	goto	l1734
  2307  0382                     u1300:
  2308  0382                     l1744:
  2309  0382  084B               	movf	___lwdiv@quotient+1,w
  2310  0383  00C6               	movwf	?___lwdiv+1
  2311  0384  084A               	movf	___lwdiv@quotient,w
  2312  0385  00C5               	movwf	?___lwdiv
  2313  0386                     l582:
  2314  0386  0008               	return
  2315  0387                     __end_of___lwdiv:
  2316                           
  2317                           	psect	text11
  2318  0297                     __ptext11:	
  2319 ;; *************** function _divisor *****************
  2320 ;; Defined at:
  2321 ;;		line 169 in file "LAB2.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  a               1    wreg     unsigned char 
  2324 ;;  dig             1    8[BANK0 ] PTR unsigned char 
  2325 ;;		 -> vol3(1), vol2(1), vol1(1), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  a               1   11[BANK0 ] unsigned char 
  2328 ;;  i               2   14[BANK0 ] int 
  2329 ;;  b               2   12[BANK0 ] int 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       1       0       0       0
  2340 ;;      Locals:         0       5       0       0       0
  2341 ;;      Temps:          0       2       0       0       0
  2342 ;;      Totals:         0       8       0       0       0
  2343 ;;Total ram usage:        8 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 3
  2346 ;; This function calls:
  2347 ;;		___awdiv
  2348 ;;		___awmod
  2349 ;; This function is called by:
  2350 ;;		_conversion_char
  2351 ;;		_dato_recibido
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _divisor
  2357  0297                     _divisor:
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2361                           ;divisor@a stored from wreg
  2362  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2364  0299  00D0               	movwf	divisor@a
  2365  029A                     l1790:
  2366                           
  2367                           ;LAB2.c: 170:     int b = 2*a;
  2368  029A  0850               	movf	divisor@a,w
  2369  029B  00CE               	movwf	??_divisor
  2370  029C  01CF               	clrf	??_divisor+1
  2371  029D  1003               	clrc
  2372  029E  0D4E               	rlf	??_divisor,w
  2373  029F  00D1               	movwf	divisor@b
  2374  02A0  0D4F               	rlf	??_divisor+1,w
  2375  02A1  00D2               	movwf	divisor@b+1
  2376  02A2                     l1792:
  2377                           
  2378                           ;LAB2.c: 171:     for(int i = 0; i<3 ; i++){
  2379  02A2  01D3               	clrf	divisor@i
  2380  02A3  01D4               	clrf	divisor@i+1
  2381  02A4                     l1798:
  2382                           
  2383                           ;LAB2.c: 172:         dig[i] = b % 10;
  2384  02A4  300A               	movlw	10
  2385  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2386  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2387  02A7  00C5               	movwf	___awmod@divisor
  2388  02A8  3000               	movlw	0
  2389  02A9  00C6               	movwf	___awmod@divisor+1
  2390  02AA  0852               	movf	divisor@b+1,w
  2391  02AB  00C8               	movwf	___awmod@dividend+1
  2392  02AC  0851               	movf	divisor@b,w
  2393  02AD  00C7               	movwf	___awmod@dividend
  2394  02AE  120A  118A  223C  120A  118A  	fcall	___awmod
  2395  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2396  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2397  02B5  0845               	movf	?___awmod,w
  2398  02B6  00CE               	movwf	??_divisor
  2399  02B7  0853               	movf	divisor@i,w
  2400  02B8  074D               	addwf	divisor@dig,w
  2401  02B9  00CF               	movwf	??_divisor+1
  2402  02BA  084F               	movf	??_divisor+1,w
  2403  02BB  0084               	movwf	4
  2404  02BC  084E               	movf	??_divisor,w
  2405  02BD  1383               	bcf	3,7	;select IRP bank0
  2406  02BE  0080               	movwf	0
  2407                           
  2408                           ;LAB2.c: 173:         b = (b - dig[i])/10;
  2409  02BF  300A               	movlw	10
  2410  02C0  00C5               	movwf	___awdiv@divisor
  2411  02C1  3000               	movlw	0
  2412  02C2  00C6               	movwf	___awdiv@divisor+1
  2413  02C3  0853               	movf	divisor@i,w
  2414  02C4  074D               	addwf	divisor@dig,w
  2415  02C5  00CE               	movwf	??_divisor
  2416  02C6  084E               	movf	??_divisor,w
  2417  02C7  0084               	movwf	4
  2418  02C8  0800               	movf	0,w
  2419  02C9  0251               	subwf	divisor@b,w
  2420  02CA  00C7               	movwf	___awdiv@dividend
  2421  02CB  0852               	movf	divisor@b+1,w
  2422  02CC  1C03               	skipc
  2423  02CD  0352               	decf	divisor@b+1,w
  2424  02CE  00C8               	movwf	___awdiv@dividend+1
  2425  02CF  120A  118A  2178  120A  118A  	fcall	___awdiv
  2426  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2427  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2428  02D6  0846               	movf	?___awdiv+1,w
  2429  02D7  00D2               	movwf	divisor@b+1
  2430  02D8  0845               	movf	?___awdiv,w
  2431  02D9  00D1               	movwf	divisor@b
  2432  02DA                     l1800:
  2433                           
  2434                           ;LAB2.c: 174:     }
  2435  02DA  3001               	movlw	1
  2436  02DB  07D3               	addwf	divisor@i,f
  2437  02DC  1803               	skipnc
  2438  02DD  0AD4               	incf	divisor@i+1,f
  2439  02DE  3000               	movlw	0
  2440  02DF  07D4               	addwf	divisor@i+1,f
  2441  02E0                     l1802:
  2442  02E0  0854               	movf	divisor@i+1,w
  2443  02E1  3A80               	xorlw	128
  2444  02E2  00FF               	movwf	btemp+1
  2445  02E3  3080               	movlw	128
  2446  02E4  027F               	subwf	btemp+1,w
  2447  02E5  1D03               	skipz
  2448  02E6  2AE9               	goto	u1375
  2449  02E7  3003               	movlw	3
  2450  02E8  0253               	subwf	divisor@i,w
  2451  02E9                     u1375:
  2452  02E9  1C03               	skipc
  2453  02EA  2AEC               	goto	u1371
  2454  02EB  2AED               	goto	u1370
  2455  02EC                     u1371:
  2456  02EC  2AA4               	goto	l1798
  2457  02ED                     u1370:
  2458  02ED                     l116:
  2459  02ED  0008               	return
  2460  02EE                     __end_of_divisor:
  2461                           
  2462                           	psect	text12
  2463  023C                     __ptext12:	
  2464 ;; *************** function ___awmod *****************
  2465 ;; Defined at:
  2466 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  divisor         2    0[BANK0 ] int 
  2469 ;;  dividend        2    2[BANK0 ] int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  sign            1    6[COMMON] unsigned char 
  2472 ;;  counter         1    5[COMMON] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[BANK0 ] int 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       4       0       0       0
  2483 ;;      Locals:         2       0       0       0       0
  2484 ;;      Temps:          1       0       0       0       0
  2485 ;;      Totals:         3       4       0       0       0
  2486 ;;Total ram usage:        7 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 2
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_divisor
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function ___awmod
  2498  023C                     ___awmod:
  2499  023C                     l1684:	
  2500                           ;incstack = 0
  2501                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2502                           
  2503  023C  01F6               	clrf	___awmod@sign
  2504  023D                     l1686:
  2505  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2506  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2507  023F  1FC8               	btfss	___awmod@dividend+1,7
  2508  0240  2A42               	goto	u1151
  2509  0241  2A43               	goto	u1150
  2510  0242                     u1151:
  2511  0242  2A4A               	goto	l1692
  2512  0243                     u1150:
  2513  0243                     l1688:
  2514  0243  09C7               	comf	___awmod@dividend,f
  2515  0244  09C8               	comf	___awmod@dividend+1,f
  2516  0245  0AC7               	incf	___awmod@dividend,f
  2517  0246  1903               	skipnz
  2518  0247  0AC8               	incf	___awmod@dividend+1,f
  2519  0248                     l1690:
  2520  0248  01F6               	clrf	___awmod@sign
  2521  0249  0AF6               	incf	___awmod@sign,f
  2522  024A                     l1692:
  2523  024A  1FC6               	btfss	___awmod@divisor+1,7
  2524  024B  2A4D               	goto	u1161
  2525  024C  2A4E               	goto	u1160
  2526  024D                     u1161:
  2527  024D  2A53               	goto	l1696
  2528  024E                     u1160:
  2529  024E                     l1694:
  2530  024E  09C5               	comf	___awmod@divisor,f
  2531  024F  09C6               	comf	___awmod@divisor+1,f
  2532  0250  0AC5               	incf	___awmod@divisor,f
  2533  0251  1903               	skipnz
  2534  0252  0AC6               	incf	___awmod@divisor+1,f
  2535  0253                     l1696:
  2536  0253  0845               	movf	___awmod@divisor,w
  2537  0254  0446               	iorwf	___awmod@divisor+1,w
  2538  0255  1903               	btfsc	3,2
  2539  0256  2A58               	goto	u1171
  2540  0257  2A59               	goto	u1170
  2541  0258                     u1171:
  2542  0258  2A88               	goto	l1714
  2543  0259                     u1170:
  2544  0259                     l1698:
  2545  0259  01F5               	clrf	___awmod@counter
  2546  025A  0AF5               	incf	___awmod@counter,f
  2547  025B  2A67               	goto	l1704
  2548  025C                     l1700:
  2549  025C  3001               	movlw	1
  2550  025D                     u1185:
  2551  025D  1003               	clrc
  2552  025E  0DC5               	rlf	___awmod@divisor,f
  2553  025F  0DC6               	rlf	___awmod@divisor+1,f
  2554  0260  3EFF               	addlw	-1
  2555  0261  1D03               	skipz
  2556  0262  2A5D               	goto	u1185
  2557  0263                     l1702:
  2558  0263  3001               	movlw	1
  2559  0264  00F4               	movwf	??___awmod
  2560  0265  0874               	movf	??___awmod,w
  2561  0266  07F5               	addwf	___awmod@counter,f
  2562  0267                     l1704:
  2563  0267  1FC6               	btfss	___awmod@divisor+1,7
  2564  0268  2A6A               	goto	u1191
  2565  0269  2A6B               	goto	u1190
  2566  026A                     u1191:
  2567  026A  2A5C               	goto	l1700
  2568  026B                     u1190:
  2569  026B                     l1706:
  2570  026B  0846               	movf	___awmod@divisor+1,w
  2571  026C  0248               	subwf	___awmod@dividend+1,w
  2572  026D  1D03               	skipz
  2573  026E  2A71               	goto	u1205
  2574  026F  0845               	movf	___awmod@divisor,w
  2575  0270  0247               	subwf	___awmod@dividend,w
  2576  0271                     u1205:
  2577  0271  1C03               	skipc
  2578  0272  2A74               	goto	u1201
  2579  0273  2A75               	goto	u1200
  2580  0274                     u1201:
  2581  0274  2A7B               	goto	l1710
  2582  0275                     u1200:
  2583  0275                     l1708:
  2584  0275  0845               	movf	___awmod@divisor,w
  2585  0276  02C7               	subwf	___awmod@dividend,f
  2586  0277  0846               	movf	___awmod@divisor+1,w
  2587  0278  1C03               	skipc
  2588  0279  03C8               	decf	___awmod@dividend+1,f
  2589  027A  02C8               	subwf	___awmod@dividend+1,f
  2590  027B                     l1710:
  2591  027B  3001               	movlw	1
  2592  027C                     u1215:
  2593  027C  1003               	clrc
  2594  027D  0CC6               	rrf	___awmod@divisor+1,f
  2595  027E  0CC5               	rrf	___awmod@divisor,f
  2596  027F  3EFF               	addlw	-1
  2597  0280  1D03               	skipz
  2598  0281  2A7C               	goto	u1215
  2599  0282                     l1712:
  2600  0282  3001               	movlw	1
  2601  0283  02F5               	subwf	___awmod@counter,f
  2602  0284  1D03               	btfss	3,2
  2603  0285  2A87               	goto	u1221
  2604  0286  2A88               	goto	u1220
  2605  0287                     u1221:
  2606  0287  2A6B               	goto	l1706
  2607  0288                     u1220:
  2608  0288                     l1714:
  2609  0288  0876               	movf	___awmod@sign,w
  2610  0289  1903               	btfsc	3,2
  2611  028A  2A8C               	goto	u1231
  2612  028B  2A8D               	goto	u1230
  2613  028C                     u1231:
  2614  028C  2A92               	goto	l1718
  2615  028D                     u1230:
  2616  028D                     l1716:
  2617  028D  09C7               	comf	___awmod@dividend,f
  2618  028E  09C8               	comf	___awmod@dividend+1,f
  2619  028F  0AC7               	incf	___awmod@dividend,f
  2620  0290  1903               	skipnz
  2621  0291  0AC8               	incf	___awmod@dividend+1,f
  2622  0292                     l1718:
  2623  0292  0848               	movf	___awmod@dividend+1,w
  2624  0293  00C6               	movwf	?___awmod+1
  2625  0294  0847               	movf	___awmod@dividend,w
  2626  0295  00C5               	movwf	?___awmod
  2627  0296                     l476:
  2628  0296  0008               	return
  2629  0297                     __end_of___awmod:
  2630                           
  2631                           	psect	text13
  2632  0178                     __ptext13:	
  2633 ;; *************** function ___awdiv *****************
  2634 ;; Defined at:
  2635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  divisor         2    0[BANK0 ] int 
  2638 ;;  dividend        2    2[BANK0 ] int 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  quotient        2    6[BANK0 ] int 
  2641 ;;  sign            1    5[BANK0 ] unsigned char 
  2642 ;;  counter         1    4[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2    0[BANK0 ] int 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       4       0       0       0
  2653 ;;      Locals:         0       4       0       0       0
  2654 ;;      Temps:          1       0       0       0       0
  2655 ;;      Totals:         1       8       0       0       0
  2656 ;;Total ram usage:        9 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 2
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_divisor
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function ___awdiv
  2668  0178                     ___awdiv:
  2669  0178                     l1640:	
  2670                           ;incstack = 0
  2671                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2672                           
  2673  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2675  017A  01CA               	clrf	___awdiv@sign
  2676  017B                     l1642:
  2677  017B  1FC6               	btfss	___awdiv@divisor+1,7
  2678  017C  297E               	goto	u1051
  2679  017D  297F               	goto	u1050
  2680  017E                     u1051:
  2681  017E  2986               	goto	l1648
  2682  017F                     u1050:
  2683  017F                     l1644:
  2684  017F  09C5               	comf	___awdiv@divisor,f
  2685  0180  09C6               	comf	___awdiv@divisor+1,f
  2686  0181  0AC5               	incf	___awdiv@divisor,f
  2687  0182  1903               	skipnz
  2688  0183  0AC6               	incf	___awdiv@divisor+1,f
  2689  0184                     l1646:
  2690  0184  01CA               	clrf	___awdiv@sign
  2691  0185  0ACA               	incf	___awdiv@sign,f
  2692  0186                     l1648:
  2693  0186  1FC8               	btfss	___awdiv@dividend+1,7
  2694  0187  2989               	goto	u1061
  2695  0188  298A               	goto	u1060
  2696  0189                     u1061:
  2697  0189  2993               	goto	l1654
  2698  018A                     u1060:
  2699  018A                     l1650:
  2700  018A  09C7               	comf	___awdiv@dividend,f
  2701  018B  09C8               	comf	___awdiv@dividend+1,f
  2702  018C  0AC7               	incf	___awdiv@dividend,f
  2703  018D  1903               	skipnz
  2704  018E  0AC8               	incf	___awdiv@dividend+1,f
  2705  018F                     l1652:
  2706  018F  3001               	movlw	1
  2707  0190  00F4               	movwf	??___awdiv
  2708  0191  0874               	movf	??___awdiv,w
  2709  0192  06CA               	xorwf	___awdiv@sign,f
  2710  0193                     l1654:
  2711  0193  01CB               	clrf	___awdiv@quotient
  2712  0194  01CC               	clrf	___awdiv@quotient+1
  2713  0195                     l1656:
  2714  0195  0845               	movf	___awdiv@divisor,w
  2715  0196  0446               	iorwf	___awdiv@divisor+1,w
  2716  0197  1903               	btfsc	3,2
  2717  0198  299A               	goto	u1071
  2718  0199  299B               	goto	u1070
  2719  019A                     u1071:
  2720  019A  29D2               	goto	l1676
  2721  019B                     u1070:
  2722  019B                     l1658:
  2723  019B  01C9               	clrf	___awdiv@counter
  2724  019C  0AC9               	incf	___awdiv@counter,f
  2725  019D  29A9               	goto	l1664
  2726  019E                     l1660:
  2727  019E  3001               	movlw	1
  2728  019F                     u1085:
  2729  019F  1003               	clrc
  2730  01A0  0DC5               	rlf	___awdiv@divisor,f
  2731  01A1  0DC6               	rlf	___awdiv@divisor+1,f
  2732  01A2  3EFF               	addlw	-1
  2733  01A3  1D03               	skipz
  2734  01A4  299F               	goto	u1085
  2735  01A5                     l1662:
  2736  01A5  3001               	movlw	1
  2737  01A6  00F4               	movwf	??___awdiv
  2738  01A7  0874               	movf	??___awdiv,w
  2739  01A8  07C9               	addwf	___awdiv@counter,f
  2740  01A9                     l1664:
  2741  01A9  1FC6               	btfss	___awdiv@divisor+1,7
  2742  01AA  29AC               	goto	u1091
  2743  01AB  29AD               	goto	u1090
  2744  01AC                     u1091:
  2745  01AC  299E               	goto	l1660
  2746  01AD                     u1090:
  2747  01AD                     l1666:
  2748  01AD  3001               	movlw	1
  2749  01AE                     u1105:
  2750  01AE  1003               	clrc
  2751  01AF  0DCB               	rlf	___awdiv@quotient,f
  2752  01B0  0DCC               	rlf	___awdiv@quotient+1,f
  2753  01B1  3EFF               	addlw	-1
  2754  01B2  1D03               	skipz
  2755  01B3  29AE               	goto	u1105
  2756  01B4  0846               	movf	___awdiv@divisor+1,w
  2757  01B5  0248               	subwf	___awdiv@dividend+1,w
  2758  01B6  1D03               	skipz
  2759  01B7  29BA               	goto	u1115
  2760  01B8  0845               	movf	___awdiv@divisor,w
  2761  01B9  0247               	subwf	___awdiv@dividend,w
  2762  01BA                     u1115:
  2763  01BA  1C03               	skipc
  2764  01BB  29BD               	goto	u1111
  2765  01BC  29BE               	goto	u1110
  2766  01BD                     u1111:
  2767  01BD  29C5               	goto	l1672
  2768  01BE                     u1110:
  2769  01BE                     l1668:
  2770  01BE  0845               	movf	___awdiv@divisor,w
  2771  01BF  02C7               	subwf	___awdiv@dividend,f
  2772  01C0  0846               	movf	___awdiv@divisor+1,w
  2773  01C1  1C03               	skipc
  2774  01C2  03C8               	decf	___awdiv@dividend+1,f
  2775  01C3  02C8               	subwf	___awdiv@dividend+1,f
  2776  01C4                     l1670:
  2777  01C4  144B               	bsf	___awdiv@quotient,0
  2778  01C5                     l1672:
  2779  01C5  3001               	movlw	1
  2780  01C6                     u1125:
  2781  01C6  1003               	clrc
  2782  01C7  0CC6               	rrf	___awdiv@divisor+1,f
  2783  01C8  0CC5               	rrf	___awdiv@divisor,f
  2784  01C9  3EFF               	addlw	-1
  2785  01CA  1D03               	skipz
  2786  01CB  29C6               	goto	u1125
  2787  01CC                     l1674:
  2788  01CC  3001               	movlw	1
  2789  01CD  02C9               	subwf	___awdiv@counter,f
  2790  01CE  1D03               	btfss	3,2
  2791  01CF  29D1               	goto	u1131
  2792  01D0  29D2               	goto	u1130
  2793  01D1                     u1131:
  2794  01D1  29AD               	goto	l1666
  2795  01D2                     u1130:
  2796  01D2                     l1676:
  2797  01D2  084A               	movf	___awdiv@sign,w
  2798  01D3  1903               	btfsc	3,2
  2799  01D4  29D6               	goto	u1141
  2800  01D5  29D7               	goto	u1140
  2801  01D6                     u1141:
  2802  01D6  29DC               	goto	l1680
  2803  01D7                     u1140:
  2804  01D7                     l1678:
  2805  01D7  09CB               	comf	___awdiv@quotient,f
  2806  01D8  09CC               	comf	___awdiv@quotient+1,f
  2807  01D9  0ACB               	incf	___awdiv@quotient,f
  2808  01DA  1903               	skipnz
  2809  01DB  0ACC               	incf	___awdiv@quotient+1,f
  2810  01DC                     l1680:
  2811  01DC  084C               	movf	___awdiv@quotient+1,w
  2812  01DD  00C6               	movwf	?___awdiv+1
  2813  01DE  084B               	movf	___awdiv@quotient,w
  2814  01DF  00C5               	movwf	?___awdiv
  2815  01E0                     l463:
  2816  01E0  0008               	return
  2817  01E1                     __end_of___awdiv:
  2818                           
  2819                           	psect	text14
  2820  0436                     __ptext14:	
  2821 ;; *************** function _conversion *****************
  2822 ;; Defined at:
  2823 ;;		line 21 in file "ADC.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0
  2839 ;;      Temps:          1       0       0       0       0
  2840 ;;      Totals:         1       0       0       0       0
  2841 ;;Total ram usage:        1 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 2
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _conversion
  2853  0436                     _conversion:
  2854  0436                     l1532:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _conversion: [wreg+status,2+status,0]
  2857                           
  2858                           
  2859                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  2860  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0438  189F               	btfsc	31,1	;volatile
  2863  0439  2C3B               	goto	u951
  2864  043A  2C3C               	goto	u950
  2865  043B                     u951:
  2866  043B  2C61               	goto	l196
  2867  043C                     u950:
  2868  043C                     l1534:
  2869                           
  2870                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  2871  043C  0C1F               	rrf	31,w	;volatile
  2872  043D  00F4               	movwf	??_conversion
  2873  043E  0C74               	rrf	??_conversion,w
  2874  043F  390F               	andlw	15
  2875  0440  3A01               	xorlw	1
  2876  0441  1D03               	skipz
  2877  0442  2C44               	goto	u961
  2878  0443  2C45               	goto	u960
  2879  0444                     u961:
  2880  0444  2C4C               	goto	l1540
  2881  0445                     u960:
  2882  0445                     l1536:
  2883                           
  2884                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  2885  0445  30C3               	movlw	-61
  2886  0446  059F               	andwf	31,f	;volatile
  2887  0447                     l1538:
  2888                           
  2889                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  2890  0447  3021               	movlw	33
  2891  0448  00F4               	movwf	??_conversion
  2892  0449                     u1527:
  2893  0449  0BF4               	decfsz	??_conversion,f
  2894  044A  2C49               	goto	u1527
  2895                           
  2896                           ;ADC.c: 26:         }
  2897  044B  2C5A               	goto	l1546
  2898  044C                     l1540:
  2899  044C  0C1F               	rrf	31,w	;volatile
  2900  044D  00F4               	movwf	??_conversion
  2901  044E  0C74               	rrf	??_conversion,w
  2902  044F  390F               	andlw	15
  2903  0450  3A00               	xorlw	0
  2904  0451  1D03               	skipz
  2905  0452  2C54               	goto	u971
  2906  0453  2C55               	goto	u970
  2907  0454                     u971:
  2908  0454  2C5A               	goto	l1546
  2909  0455                     u970:
  2910  0455                     l1542:
  2911                           
  2912                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  2913  0455  081F               	movf	31,w	;volatile
  2914  0456  39C3               	andlw	-61
  2915  0457  3804               	iorlw	4
  2916  0458  009F               	movwf	31	;volatile
  2917  0459  2C47               	goto	l1538
  2918  045A                     l1546:
  2919                           
  2920                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2921  045A  3021               	movlw	33
  2922  045B  00F4               	movwf	??_conversion
  2923  045C                     u1537:
  2924  045C  0BF4               	decfsz	??_conversion,f
  2925  045D  2C5C               	goto	u1537
  2926  045E                     l1548:
  2927                           
  2928                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  2929  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2930  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0460  149F               	bsf	31,1	;volatile
  2932  0461                     l196:
  2933  0461  0008               	return
  2934  0462                     __end_of_conversion:
  2935                           
  2936                           	psect	text15
  2937  0462                     __ptext15:	
  2938 ;; *************** function _Escribir_stringLCD *****************
  2939 ;; Defined at:
  2940 ;;		line 46 in file "LCD.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  2943 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_1(17), 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       2       0       0       0
  2956 ;;      Locals:         0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0
  2958 ;;      Totals:         0       2       0       0       0
  2959 ;;Total ram usage:        2 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 4
  2962 ;; This function calls:
  2963 ;;		_Escribir_datosLCD
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function _Escribir_stringLCD
  2971  0462                     _Escribir_stringLCD:
  2972  0462                     l1938:	
  2973                           ;incstack = 0
  2974                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2975                           
  2976                           
  2977                           ;LCD.c: 47:     while(*d){
  2978  0462  2C79               	goto	l1944
  2979  0463                     l1940:
  2980                           
  2981                           ;LCD.c: 48:         Escribir_datosLCD(*d++);
  2982  0463  0846               	movf	Escribir_stringLCD@d+1,w
  2983  0464  00FF               	movwf	btemp+1
  2984  0465  0845               	movf	Escribir_stringLCD@d,w
  2985  0466  0084               	movwf	4
  2986  0467  120A  118A  2403  120A  118A  	fcall	stringtab
  2987  046C  120A  118A  253A  120A  118A  	fcall	_Escribir_datosLCD
  2988  0471                     l1942:
  2989  0471  3001               	movlw	1
  2990  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0474  07C5               	addwf	Escribir_stringLCD@d,f
  2993  0475  1803               	skipnc
  2994  0476  0AC6               	incf	Escribir_stringLCD@d+1,f
  2995  0477  3000               	movlw	0
  2996  0478  07C6               	addwf	Escribir_stringLCD@d+1,f
  2997  0479                     l1944:
  2998                           
  2999                           ;LCD.c: 47:     while(*d){
  3000  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3001  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3002  047B  0846               	movf	Escribir_stringLCD@d+1,w
  3003  047C  00FF               	movwf	btemp+1
  3004  047D  0845               	movf	Escribir_stringLCD@d,w
  3005  047E  0084               	movwf	4
  3006  047F  120A  118A  2403  120A  118A  	fcall	stringtab
  3007  0484  3A00               	xorlw	0
  3008  0485  1D03               	skipz
  3009  0486  2C88               	goto	u1471
  3010  0487  2C89               	goto	u1470
  3011  0488                     u1471:
  3012  0488  2C63               	goto	l1940
  3013  0489                     u1470:
  3014  0489                     l153:
  3015  0489  0008               	return
  3016  048A                     __end_of_Escribir_stringLCD:
  3017                           
  3018                           	psect	text16
  3019  053A                     __ptext16:	
  3020 ;; *************** function _Escribir_datosLCD *****************
  3021 ;; Defined at:
  3022 ;;		line 25 in file "LCD.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  LCDchar         1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  LCDchar         1    5[COMMON] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         1       0       0       0       0
  3040 ;;Total ram usage:        1 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 3
  3043 ;; This function calls:
  3044 ;;		_prender_ELCD
  3045 ;; This function is called by:
  3046 ;;		_Escribir_stringLCD
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _Escribir_datosLCD
  3052  053A                     _Escribir_datosLCD:
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _Escribir_datosLCD: [wreg+status,2+status,0+pclath+cstack]
  3056                           ;Escribir_datosLCD@LCDchar stored from wreg
  3057  053A  00F5               	movwf	Escribir_datosLCD@LCDchar
  3058  053B                     l1866:
  3059                           
  3060                           ;LCD.c: 26:     RC0 = 1;
  3061  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3062  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3063  053D  1407               	bsf	7,0	;volatile
  3064  053E                     l1868:
  3065                           
  3066                           ;LCD.c: 27:     PORTD = LCDchar;
  3067  053E  0875               	movf	Escribir_datosLCD@LCDchar,w
  3068  053F  0088               	movwf	8	;volatile
  3069  0540                     l1870:
  3070                           
  3071                           ;LCD.c: 29:     prender_ELCD();
  3072  0540  120A  118A  2507  120A  118A  	fcall	_prender_ELCD
  3073  0545                     l144:
  3074  0545  0008               	return
  3075  0546                     __end_of_Escribir_datosLCD:
  3076                           
  3077                           	psect	text17
  3078  0507                     __ptext17:	
  3079 ;; *************** function _prender_ELCD *****************
  3080 ;; Defined at:
  3081 ;;		line 11 in file "LCD.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         0       0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0
  3097 ;;      Temps:          1       0       0       0       0
  3098 ;;      Totals:         1       0       0       0       0
  3099 ;;Total ram usage:        1 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 2
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_Escribir_comandoLCD
  3106 ;;		_Escribir_datosLCD
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _prender_ELCD
  3112  0507                     _prender_ELCD:
  3113  0507                     l1628:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _prender_ELCD: [wreg]
  3116                           
  3117                           
  3118                           ;LCD.c: 12:     RC1 = 1;
  3119  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0509  1487               	bsf	7,1	;volatile
  3122  050A                     l1630:
  3123                           
  3124                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3125  050A  30C7               	movlw	199
  3126  050B  00F4               	movwf	??_prender_ELCD
  3127  050C                     u1547:
  3128  050C  2D0D               	nop2
  3129  050D  0BF4               	decfsz	??_prender_ELCD,f
  3130  050E  2D0C               	goto	u1547
  3131  050F  2D10               	nop2
  3132  0510  2D11               	nop2
  3133  0511                     l1632:
  3134                           
  3135                           ;LCD.c: 14:     RC1 = 0;
  3136  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0513  1087               	bcf	7,1	;volatile
  3139                           
  3140                           ;LCD.c: 15:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3141  0514  30C7               	movlw	199
  3142  0515  00F4               	movwf	??_prender_ELCD
  3143  0516                     u1557:
  3144  0516  2D17               	nop2
  3145  0517  0BF4               	decfsz	??_prender_ELCD,f
  3146  0518  2D16               	goto	u1557
  3147  0519  2D1A               	nop2
  3148  051A  2D1B               	nop2
  3149  051B                     l138:
  3150  051B  0008               	return
  3151  051C                     __end_of_prender_ELCD:
  3152                           
  3153                           	psect	text18
  3154  04EA                     __ptext18:	
  3155 ;; *************** function _isr *****************
  3156 ;; Defined at:
  3157 ;;		line 65 in file "LAB2.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0
  3173 ;;      Temps:          3       0       0       0       0
  3174 ;;      Totals:         3       0       0       0       0
  3175 ;;Total ram usage:        3 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 1
  3178 ;; This function calls:
  3179 ;;		_ADC
  3180 ;; This function is called by:
  3181 ;;		Interrupt level 1
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _isr
  3187  04EA                     _isr:
  3188  04EA                     i1l1578:
  3189                           
  3190                           ;LAB2.c: 66:     if(PIR1bits.ADIF){
  3191  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3192  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3193  04EC  1F0C               	btfss	12,6	;volatile
  3194  04ED  2CEF               	goto	u103_21
  3195  04EE  2CF0               	goto	u103_20
  3196  04EF                     u103_21:
  3197  04EF  2CF8               	goto	i1l1584
  3198  04F0                     u103_20:
  3199  04F0                     i1l1580:
  3200                           
  3201                           ;LAB2.c: 67:         ADC();
  3202  04F0  120A  118A  24CC  120A  118A  	fcall	_ADC
  3203  04F5                     i1l1582:
  3204                           
  3205                           ;LAB2.c: 68:         PIR1bits.ADIF = 0;
  3206  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3207  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3208  04F7  130C               	bcf	12,6	;volatile
  3209  04F8                     i1l1584:
  3210                           
  3211                           ;LAB2.c: 70:     if(PIR1bits.RCIF){
  3212  04F8  1E8C               	btfss	12,5	;volatile
  3213  04F9  2CFB               	goto	u104_21
  3214  04FA  2CFC               	goto	u104_20
  3215  04FB                     u104_21:
  3216  04FB  2D00               	goto	i1l97
  3217  04FC                     u104_20:
  3218  04FC                     i1l1586:
  3219                           
  3220                           ;LAB2.c: 71:         dato = RCREG;
  3221  04FC  081A               	movf	26,w	;volatile
  3222  04FD  00F1               	movwf	??_isr
  3223  04FE  0871               	movf	??_isr,w
  3224  04FF  00A1               	movwf	_dato
  3225  0500                     i1l97:
  3226  0500  0873               	movf	??_isr+2,w
  3227  0501  008A               	movwf	10
  3228  0502  0E72               	swapf	??_isr+1,w
  3229  0503  0083               	movwf	3
  3230  0504  0EFE               	swapf	btemp,f
  3231  0505  0E7E               	swapf	btemp,w
  3232  0506  0009               	retfie
  3233  0507                     __end_of_isr:
  3234                           
  3235                           	psect	intentry
  3236  0004                     __pintentry:	
  3237                           ;incstack = 0
  3238                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3239                           
  3240  0004                     interrupt_function:
  3241  007E                     saved_w	set	btemp
  3242  0004  00FE               	movwf	btemp
  3243  0005  0E03               	swapf	3,w
  3244  0006  00F2               	movwf	??_isr+1
  3245  0007  080A               	movf	10,w
  3246  0008  00F3               	movwf	??_isr+2
  3247  0009  120A  118A  2CEA   	ljmp	_isr
  3248                           
  3249                           	psect	text19
  3250  04CC                     __ptext19:	
  3251 ;; *************** function _ADC *****************
  3252 ;; Defined at:
  3253 ;;		line 11 in file "ADC.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          1       0       0       0       0
  3270 ;;      Totals:         1       0       0       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_isr
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _ADC
  3282  04CC                     _ADC:
  3283  04CC                     i1l1466:	
  3284                           ;incstack = 0
  3285                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3286                           
  3287                           
  3288                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3289  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3290  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3291  04CE  0C1F               	rrf	31,w	;volatile
  3292  04CF  00F0               	movwf	??_ADC
  3293  04D0  0C70               	rrf	??_ADC,w
  3294  04D1  390F               	andlw	15
  3295  04D2  3A00               	xorlw	0
  3296  04D3  1D03               	skipz
  3297  04D4  2CD6               	goto	u93_21
  3298  04D5  2CD7               	goto	u93_20
  3299  04D6                     u93_21:
  3300  04D6  2CDC               	goto	i1l1470
  3301  04D7                     u93_20:
  3302  04D7                     i1l1468:
  3303                           
  3304                           ;ADC.c: 13:         cont1 = ADRESH;
  3305  04D7  081E               	movf	30,w	;volatile
  3306  04D8  00F0               	movwf	??_ADC
  3307  04D9  0870               	movf	??_ADC,w
  3308  04DA  00A3               	movwf	_cont1
  3309                           
  3310                           ;ADC.c: 14:     }
  3311  04DB  2CE9               	goto	i1l189
  3312  04DC                     i1l1470:
  3313  04DC  0C1F               	rrf	31,w	;volatile
  3314  04DD  00F0               	movwf	??_ADC
  3315  04DE  0C70               	rrf	??_ADC,w
  3316  04DF  390F               	andlw	15
  3317  04E0  3A01               	xorlw	1
  3318  04E1  1D03               	skipz
  3319  04E2  2CE4               	goto	u94_21
  3320  04E3  2CE5               	goto	u94_20
  3321  04E4                     u94_21:
  3322  04E4  2CE9               	goto	i1l189
  3323  04E5                     u94_20:
  3324  04E5                     i1l1472:
  3325                           
  3326                           ;ADC.c: 16:         cont2 = ADRESH;
  3327  04E5  081E               	movf	30,w	;volatile
  3328  04E6  00F0               	movwf	??_ADC
  3329  04E7  0870               	movf	??_ADC,w
  3330  04E8  00A2               	movwf	_cont2
  3331  04E9                     i1l189:
  3332  04E9  0008               	return
  3333  04EA                     __end_of_ADC:
  3334  007E                     btemp	set	126	;btemp
  3335  007E                     wtemp0	set	126
  3336                           
  3337                           	psect	config
  3338                           
  3339                           ;Config register CONFIG1 @ 0x2007
  3340                           ;	Oscillator Selection bits
  3341                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3342                           ;	Watchdog Timer Enable bit
  3343                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3344                           ;	Power-up Timer Enable bit
  3345                           ;	PWRTE = OFF, PWRT disabled
  3346                           ;	RE3/MCLR pin function select bit
  3347                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3348                           ;	Code Protection bit
  3349                           ;	CP = OFF, Program memory code protection is disabled
  3350                           ;	Data Code Protection bit
  3351                           ;	CPD = OFF, Data memory code protection is disabled
  3352                           ;	Brown Out Reset Selection bits
  3353                           ;	BOREN = OFF, BOR disabled
  3354                           ;	Internal External Switchover bit
  3355                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3356                           ;	Fail-Safe Clock Monitor Enabled bit
  3357                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3358                           ;	Low Voltage Programming Enable bit
  3359                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3360                           ;	In-Circuit Debugger Mode bit
  3361                           ;	DEBUG = 0x1, unprogrammed default
  3362  2007                     	org	8199
  3363  2007  20D4               	dw	8404
  3364                           
  3365                           ;Config register CONFIG2 @ 0x2008
  3366                           ;	Brown-out Reset Selection bit
  3367                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3368                           ;	Flash Program Memory Self Write Enable bits
  3369                           ;	WRT = OFF, Write protection off
  3370  2008                     	org	8200
  3371  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     36      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_1(CODE[17]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_set_cursor
    _main->_setup
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _set_cursor->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awmod
    _Escribir_stringLCD->_Escribir_datosLCD
    _Escribir_datosLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _setup->_Limpiar_pantallaLCD
    _dato_recibido->_sprintf
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8445
                                             35 BANK0      1     1      0
                 _Escribir_stringLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0      62
                                              6 COMMON     1     1      0
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0      31
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          0     0      0      31
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           2     1      1     515
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0      31
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3706
                                             28 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3706
                                             28 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1907
                                             11 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    1799
                                              8 BANK0      8     7      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   2     0      2     456
                                              0 BANK0      2     0      2
                  _Escribir_datosLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_datosLCD                                    1     1      0      31
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (6) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_datosLCD
       _prender_ELCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
       _prender_ELCD
   _setup
     _Iniciar_LCD
       _Escribir_comandoLCD
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      53       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      53      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 04 14:58:03 2022

                           pc 0002                  ___awdiv@sign 004A                            fsr 0004  
                         l102 0111                           l111 023B                           l121 03C6  
                         l116 02ED                           l108 0340                           l141 0539  
                         l119 0393                           l144 0545                           l153 0489  
                         l161 04CB                           l138 051B                           l306 0108  
                         l147 04AC                           l156 052D                           _ADC 04CC  
                         l196 0461                           l463 01E0                           l476 0296  
                         l582 0386                           l592 0402                           _RC0 0038  
                         _RC1 0039                           u950 043C                           u951 043B  
                         u960 0445                           u961 0444                           u970 0455  
                         u971 0454                           _dec 0078                           _cen 0077  
                         _isr 04EA                           fsr0 0004                           _uni 0079  
                         indf 0000                  ___awmod@sign 0076                          ?_ADC 0070  
                        l1540 044C                          l1532 0436                          l1700 025C  
                        l1630 050A                          l1542 0455                          l1534 043C  
                        l1710 027B                          l1702 0263                          l1632 0511  
                        l1536 0445                          l1640 0178                          l1712 0282  
                        l1704 0267                          l1800 02DA                          l1546 045A  
                        l1538 0447                          l1650 018A                          l1642 017B  
                        l1706 026B                          l1714 0288                          l1802 02E0  
                        l1730 0355                          l1722 0341                          l1810 0034  
                        l1634 052F                          l1628 0507                          l1548 045E  
                        l1660 019E                          l1652 018F                          l1644 017F  
                        l1716 028D                          l1708 0275                          l1740 0375  
                        l1732 0359                          l1724 0345                          l1820 005F  
                        l1812 0039                          l1804 0022                          l1636 0532  
                        l1900 031C                          l1670 01C4                          l1662 01A5  
                        l1654 0193                          l1646 0184                          l1718 0292  
                        l1742 037C                          l1734 035D                          l1726 034B  
                        l1750 03CF                          l1822 0063                          l1806 0027  
                        l1638 0534                          l1910 0325                          l1902 031F  
                        l1680 01DC                          l1672 01C5                          l1664 01A9  
                        l1656 0195                          l1648 0186                          l1736 036E  
                        l1728 034E                          l1744 0382                          l1760 03EB  
                        l1752 03D2                          l1840 0098                          l1824 0067  
                        l1816 003A                          l1808 002D                          l1920 0331  
                        l1912 0326                          l1904 0322                          l1674 01CC  
                        l1666 01AD                          l1658 019B                          l1690 0248  
                        l1738 0374                          l1762 03F1                          l1754 03D9  
                        l1850 00DE                          l1842 009E                          l1834 0072  
                        l1826 006B                          l1818 0057                          l1930 04B0  
                        l1770 048A                          l1922 0332                          l1914 0329  
                        l1906 0323                          l1940 0463                          l1668 01BE  
                        l1676 01D2                          l1692 024A                          l1684 023C  
                        l1764 03F8                          l1756 03DD                          l1748 03C7  
                        l1852 00E5                          l1844 00A5                          l1828 0070  
                        l1932 04B5                          l1780 049A                          l1772 048E  
                        l1924 0333                          l1916 032D                          l1908 0324  
                        l1870 0540                          l1942 0471                          l1678 01D7  
                        l1694 024E                          l1686 023D                          l1790 029A  
                        l1758 03E1                          l1766 03FE                          l1854 00E9  
                        l1846 00A9                          l1838 008E                          l1950 038F  
                        l1934 04BC                          l1782 04A0                          l1774 048F  
                        l1926 0336                          l1918 032E                          l1944 0479  
                        l1696 0253                          l1688 0243                          l1792 02A2  
                        l1848 00AE                          l1856 00F2                          l1952 0399  
                        l1936 04C4                          l1784 04A6                          l1776 0492  
                        l1928 033B                          l1880 0304                          l1872 02EE  
                        l1960 010E                          l1866 053B                          l1938 0462  
                        l1698 0259                          l1858 0104                          l1946 01E1  
                        l1954 039B                          l1778 0494                          l1786 051C  
                        l1890 030E                          l1882 0305                          l1874 02F2  
                        l1970 015D                          l1962 011E                          l1868 053E  
                        l1956 03A5                          l1948 0387                          l1788 0522  
                        l1892 0310                          l1884 0306                          l1876 02F3  
                        l1972 0169                          l1964 0129                          l1798 02A4  
                        l1894 0311                          l1886 0307                          l1878 02FE  
                        l1966 0136                          l1958 0109                          l1896 0316  
                        l1888 0308                          l1968 0141                          l1898 0319  
                        l1998 004C                          ?_isr 0070                          STR_1 041D  
                        STR_2 042E                          STR_3 042E                          STR_4 042E  
                        u1110 01BE                          u1111 01BD                          u1200 0275  
                        u1105 01AE                          u1201 0274                          u1130 01D2  
                        u1050 017F                          u1131 01D1                          u1115 01BA  
                        u1051 017E                          u1140 01D7                          u1060 018A  
                        u1220 0288                          u1300 0382                          u1141 01D6  
                        u1125 01C6                          u1061 0189                          u1221 0287  
                        u1205 0271                          u1301 0381                          u1070 019B  
                        u1230 028D                          u1150 0243                          u1310 03CF  
                        u1071 019A                          u1231 028C                          u1215 027C  
                        u1151 0242                          u1311 03CE                          u1160 024E  
                        u1240 034B                          u1400 008D                          u1161 024D  
                        u1241 034A                          u1401 008C                          u1090 01AD  
                        u1170 0259                          u1330 03E1                          u1410 0098  
                        u1091 01AC                          u1171 0258                          u1331 03E0  
                        u1411 0097                          u1260 035D                          u1340 03EB  
                        u1420 009E                          u1085 019F                          u1261 035C  
                        u1341 03EA                          u1325 03D3                          u1421 009D  
                        u1405 0089                          u1190 026B                          u1430 00F2  
                        u1191 026A                          u1255 034F                          u1431 00F1  
                        u1280 036E                          u1360 03FE                          u1440 0104  
                        u1185 025D                          u1281 036D                          u1361 03FD  
                        u1345 03E7                          u1441 0103                          u1370 02ED  
                        u1450 04B5                          u1371 02EC                          u1275 035E  
                        u1355 03F2                          u1451 04B4                          u1507 0313  
                        u1380 002D                          u1460 04C4                          u1285 036A  
                        u1381 002C                          u1461 04C3                          u1517 0528  
                        u1470 0489                          u1390 0067                          u1471 0488  
                        u1527 0449                          u1375 02E9                          u1295 0376  
                        u1391 0066                          u1480 038F                          u1537 045C  
                        u1481 038E                          u1490 0399                          u1547 050C  
                        u1491 0398                          u1557 0516                          i1l97 0500  
               ??_Iniciar_LCD 0076                          _dato 0021                          _main 0109  
                        _vol1 0044                          _vol2 0043                          _vol3 0042  
                        btemp 007E                          start 000C                         ??_ADC 0070  
                       ??_isr 0071    __end_of_Escribir_stringLCD 048A                         ?_main 0070  
             __end_of___awdiv 01E1               __end_of___awmod 0297                         _ANSEL 0188  
             ___awdiv@divisor 0045               __end_of___lwdiv 0387               __end_of___lwmod 0403  
                       i1l189 04E9               ___awdiv@counter 0049                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISD 0088                         _TRISE 0089  
                       u93_20 04D7                         u93_21 04D6                         u94_20 04E5  
                       u94_21 04E4               __end_of_divisor 02EE                         _cont1 0023  
                       _cont2 0022               __end_of_dpowers 041D                         _setup 02EE  
         _Limpiar_pantallaLCD 051C                         pclath 000A             ??_conversion_char 0061  
                       status 0003                         wtemp0 007E               __end_of_sprintf 0109  
             __initialization 000F           __end_of_Iniciar_LCD 04AD                  __end_of_main 0178  
           _Escribir_datosLCD 053A          ?_Limpiar_pantallaLCD 0070            ?_Escribir_datosLCD 0070  
                      ??_main 0068           ??_Escribir_datosLCD 0075                        _ADRESH 001E  
            ___awdiv@dividend 0047                        ?_setup 0070                        _ANSELH 0189  
                      u103_20 04F0                        u103_21 04EF                        u104_20 04FC  
                      u104_21 04FB                        i1l1470 04DC                        i1l1472 04E5  
                      i1l1466 04CC                        i1l1468 04D7                        i1l1580 04F0  
                      i1l1582 04F5                        i1l1584 04F8                        i1l1586 04FC  
                      i1l1578 04EA                        _SPBRGH 009A                        _TRISC0 0438  
                      _TRISC1 0439                        _Cont_U 0020     __end_of_Escribir_datosLCD 0546  
       ??_Limpiar_pantallaLCD 0045                     ??___awdiv 0074                     ??___awmod 0074  
       __end_of_dato_recibido 03C7                     ??___lwdiv 0074                     ??___lwmod 0075  
            ___awdiv@quotient 004B               ___awmod@divisor 0045               ___awmod@counter 0075  
                   ??_divisor 004E                        saved_w 007E                     ??_sprintf 0057  
     __end_of__initialization 001B                   _Iniciar_LCD 048A                __pcstackCOMMON 0070  
               __end_of_setup 0341                       ??_setup 0076                    __pbssBANK0 0020  
  __size_of_Escribir_datosLCD 000C                    __pmaintext 0109                    __pintentry 0004  
__size_of_Escribir_comandoLCD 000C      Escribir_datosLCD@LCDchar 0075               _conversion_char 01E1  
          _Escribir_stringLCD 0462                    __stringtab 0403                    _conversion 0436  
         ?_Escribir_stringLCD 0045                       ___awdiv 0178                       ___awmod 023C  
                     ___lwdiv 0341                       ___lwmod 03C7                       __ptext1 02EE  
                     __ptext2 051C                       __ptext3 048A                       __ptext4 04AD  
                     __ptext5 052E                       __ptext6 0387                       __ptext7 01E1  
                     __ptext8 001F                       __ptext9 03C7                       _buffer1 0038  
                     _buffer2 002E                       _buffer3 0024                  __size_of_ADC 001E  
                     _divisor 0297          ??_Escribir_stringLCD 0076                       _dpowers 0413  
                __size_of_isr 001D              ___awmod@dividend 0047                 ?_prender_ELCD 0070  
                 set_cursor@a 0045                   set_cursor@b 0076                       _sprintf 001F  
                     clrloop0 0547          end_of_initialization 001B                    _set_cursor 04AD  
                   _RCSTAbits 0018       __end_of_conversion_char 023C                ??_prender_ELCD 0074  
                ?_Iniciar_LCD 0070                   ?_conversion 0070                     _TXSTAbits 0098  
 __end_of_Limpiar_pantallaLCD 052E                    divisor@dig 004D                   _BAUDCTLbits 0187  
         start_initialization 000F                   __end_of_ADC 04EA                   __end_of_isr 0507  
      __size_of_dato_recibido 0040           _Escribir_comandoLCD 052E    Escribir_comandoLCD@Comando 0075  
                 ?_set_cursor 0076              ?_conversion_char 0070          ?_Escribir_comandoLCD 0070  
         __size_of_conversion 002C                   __pbssCOMMON 0077                     ___latbits 0002  
               __pcstackBANK0 0045                   sprintf@flag 005B                   sprintf@prec 005C  
        __end_of_prender_ELCD 051C              ___lwdiv@dividend 0047                      ?___awdiv 0045  
                    ?___awmod 0045                      ?___lwdiv 0045                      ?___lwmod 004C  
       ??_Escribir_comandoLCD 0075                 _dato_recibido 0387                     __pstrings 0403  
                    ?_divisor 004D              ___lwdiv@quotient 004A           __size_of_set_cursor 001F  
                    ?_sprintf 0050                __size_of_setup 0053             interrupt_function 0004  
                   clear_ram0 0546                      _PIE1bits 008C          __size_of_Iniciar_LCD 0023  
                    _PIR1bits 000C                ?_dato_recibido 0070                    _ADCON0bits 001F  
                 __stringbase 0412                    _ADCON1bits 009F   __size_of_Escribir_stringLCD 0028  
                ??_conversion 0074           Escribir_stringLCD@d 0045              __size_of___awdiv 0069  
            __size_of___awmod 005B              __size_of___lwdiv 0046              __size_of___lwmod 003C  
          __end_of__stringtab 0413                    sprintf@val 005D              __size_of_divisor 0057  
          __end_of_conversion 0462               ___lwdiv@divisor 0045               ___lwdiv@counter 0049  
                    __ptext10 0341                      __ptext11 0297                      __ptext12 023C  
                    __ptext13 0178                      __ptext14 0436                      __ptext15 0462  
                    __ptext16 053A                      __ptext17 0507                      __ptext18 04EA  
                    __ptext19 04CC              __size_of_sprintf 00EA         __size_of_prender_ELCD 0015  
               __size_of_main 006F                  ??_set_cursor 0077               ??_dato_recibido 0061  
__size_of_Limpiar_pantallaLCD 0012                      divisor@a 0050                      divisor@b 0051  
                    divisor@i 0053                    _INTCONbits 000B                  _prender_ELCD 0507  
          __end_of_set_cursor 04CC                      intlevel1 0000                     sprintf@ap 005A  
                   sprintf@sp 005F              ___lwmod@dividend 004E                     stringcode 040D  
                  _OSCCONbits 008F                      sprintf@c 0060                      sprintf@f 0050  
             ___lwmod@divisor 004C               ___lwmod@counter 0076      __size_of_conversion_char 005B  
                    stringdir 040D                      stringtab 0403   __end_of_Escribir_comandoLCD 053A  
