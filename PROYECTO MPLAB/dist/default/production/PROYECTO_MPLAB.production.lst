

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 10:01:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381                           
   382                           	psect	strings
   383  0497                     __pstrings:
   384  0497                     stringtab:
   385  0497                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388  0497  1BFF               	btfsc	btemp+1,7
   389  0498  2CA1               	ljmp	stringcode
   390  0499  1383               	bcf	3,7
   391  049A  187F               	btfsc	btemp+1,0
   392  049B  1783               	bsf	3,7
   393  049C  0800               	movf	0,w
   394  049D  0A84               	incf	4,f
   395  049E  1903               	skipnz
   396  049F  0AFF               	incf	btemp+1,f
   397  04A0  0008               	return
   398  04A1                     stringcode:
   399  04A1                     stringdir:
   400  04A1  3004               	movlw	high stringdir
   401  04A2  008A               	movwf	10
   402  04A3  0804               	movf	4,w
   403  04A4  0A84               	incf	4,f
   404  04A5  0782               	addwf	2,f
   405  04A6                     __stringbase:
   406  04A6  3400               	retlw	0
   407  04A7                     __end_of__stringtab:
   408  04A7                     _dpowers:
   409  04A7  3401               	retlw	1
   410  04A8  3400               	retlw	0
   411  04A9  340A               	retlw	10
   412  04AA  3400               	retlw	0
   413  04AB  3464               	retlw	100
   414  04AC  3400               	retlw	0
   415  04AD  34E8               	retlw	232
   416  04AE  3403               	retlw	3
   417  04AF  3410               	retlw	16
   418  04B0  3427               	retlw	39
   419  04B1                     __end_of_dpowers:
   420  001E                     _ADRESH	set	30
   421  0007                     _PORTCbits	set	7
   422  0006                     _PORTBbits	set	6
   423  0008                     _PORTDbits	set	8
   424  0018                     _RCSTAbits	set	24
   425  000B                     _INTCONbits	set	11
   426  0006                     _PORTB	set	6
   427  0009                     _PORTE	set	9
   428  0007                     _PORTC	set	7
   429  0008                     _PORTD	set	8
   430  0005                     _PORTA	set	5
   431  001F                     _ADCON0bits	set	31
   432  001A                     _RCREG	set	26
   433  000C                     _PIR1bits	set	12
   434  009A                     _SPBRGH	set	154
   435  0099                     _SPBRG	set	153
   436  0098                     _TXSTAbits	set	152
   437  008C                     _PIE1bits	set	140
   438  009F                     _ADCON1bits	set	159
   439  008F                     _OSCCONbits	set	143
   440  0089                     _TRISE	set	137
   441  0087                     _TRISC	set	135
   442  0088                     _TRISD	set	136
   443  0086                     _TRISB	set	134
   444  0085                     _TRISA	set	133
   445  0187                     _BAUDCTLbits	set	391
   446  0189                     _ANSELH	set	393
   447  0188                     _ANSEL	set	392
   448  04B1                     STR_3:
   449  04B1  3453               	retlw	83	;'S'
   450  04B2  3431               	retlw	49	;'1'
   451  04B3  343A               	retlw	58	;':'
   452  04B4  3420               	retlw	32	;' '
   453  04B5  3420               	retlw	32	;' '
   454  04B6  3420               	retlw	32	;' '
   455  04B7  3420               	retlw	32	;' '
   456  04B8  3453               	retlw	83	;'S'
   457  04B9  3432               	retlw	50	;'2'
   458  04BA  343A               	retlw	58	;':'
   459  04BB  3420               	retlw	32	;' '
   460  04BC  3420               	retlw	32	;' '
   461  04BD  3420               	retlw	32	;' '
   462  04BE  3453               	retlw	83	;'S'
   463  04BF  3433               	retlw	51	;'3'
   464  04C0  343A               	retlw	58	;':'
   465  04C1  3400               	retlw	0
   466  04C2                     STR_4:
   467  04C2  3425               	retlw	37	;'%'
   468  04C3  3464               	retlw	100	;'d'
   469  04C4  342E               	retlw	46	;'.'
   470  04C5  3425               	retlw	37	;'%'
   471  04C6  3464               	retlw	100	;'d'
   472  04C7  3425               	retlw	37	;'%'
   473  04C8  3464               	retlw	100	;'d'
   474  04C9  3400               	retlw	0
   475  04CA                     STR_6:
   476  04CA  3425               	retlw	37	;'%'
   477  04CB  3464               	retlw	100	;'d'
   478  04CC  3425               	retlw	37	;'%'
   479  04CD  3464               	retlw	100	;'d'
   480  04CE  3425               	retlw	37	;'%'
   481  04CF  3464               	retlw	100	;'d'
   482  04D0  3400               	retlw	0
   483  04D1                     STR_2:
   484  04D1  3454               	retlw	84	;'T'
   485  04D2  3465               	retlw	101	;'e'
   486  04D3  3469               	retlw	105	;'i'
   487  04D4  3470               	retlw	112	;'p'
   488  04D5  3469               	retlw	105	;'i'
   489  04D6  346F               	retlw	111	;'o'
   490  04D7  3400               	retlw	0
   491  04D8                     STR_1:
   492  04D8  3448               	retlw	72	;'H'
   493  04D9  346F               	retlw	111	;'o'
   494  04DA  346C               	retlw	108	;'l'
   495  04DB  3461               	retlw	97	;'a'
   496  04DC  3400               	retlw	0
   497  04C2                     
   498                           	psect	cinit
   499  000F                     start_initialization:	
   500                           ; #config settings
   501                           
   502  000F                     __initialization:
   503                           
   504                           ; Clear objects allocated to COMMON
   505  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   506  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   507  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   508  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   509                           
   510                           ; Clear objects allocated to BANK0
   511  0013  1383               	bcf	3,7	;select IRP bank0
   512  0014  3047               	movlw	low __pbssBANK0
   513  0015  0084               	movwf	4
   514  0016  306B               	movlw	low (__pbssBANK0+36)
   515  0017  120A  118A  26A2  120A  118A  	fcall	clear_ram0
   516  001C                     end_of_initialization:	
   517                           ;End of C runtime variable initialization code
   518                           
   519  001C                     __end_of__initialization:
   520  001C  0183               	clrf	3
   521  001D  120A  118A  290A   	ljmp	_main	;jump to C main() function
   522                           
   523                           	psect	bssCOMMON
   524  0076                     __pbssCOMMON:
   525  0076                     _dato:
   526  0076                     	ds	1
   527  0077                     _cen:
   528  0077                     	ds	1
   529  0078                     _dec:
   530  0078                     	ds	1
   531  0079                     _uni:
   532  0079                     	ds	1
   533                           
   534                           	psect	bssBANK0
   535  0047                     __pbssBANK0:
   536  0047                     _Cont_U:
   537  0047                     	ds	1
   538  0048                     _cont2:
   539  0048                     	ds	1
   540  0049                     _cont1:
   541  0049                     	ds	1
   542  004A                     _buffer3:
   543  004A                     	ds	10
   544  0054                     _buffer2:
   545  0054                     	ds	10
   546  005E                     _buffer1:
   547  005E                     	ds	10
   548  0068                     _vol3:
   549  0068                     	ds	1
   550  0069                     _vol2:
   551  0069                     	ds	1
   552  006A                     _vol1:
   553  006A                     	ds	1
   554                           
   555                           	psect	clrtext
   556  06A2                     clear_ram0:	
   557                           ;	Called with FSR containing the base address, and
   558                           ;	W with the last address+1
   559                           
   560  06A2  0064               	clrwdt	;clear the watchdog before getting into this loop
   561  06A3                     clrloop0:
   562  06A3  0180               	clrf	0	;clear RAM location pointed to by FSR
   563  06A4  0A84               	incf	4,f	;increment pointer
   564  06A5  0604               	xorwf	4,w	;XOR with final address
   565  06A6  1903               	btfsc	3,2	;have we reached the end yet?
   566  06A7  3400               	retlw	0	;all done for this memory range, return
   567  06A8  0604               	xorwf	4,w	;XOR again to restore value
   568  06A9  2EA3               	goto	clrloop0	;do the next byte
   569                           
   570                           	psect	cstackCOMMON
   571  0070                     __pcstackCOMMON:
   572  0070                     ?_ADC:
   573  0070                     ??_ADC:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_setup:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_Iniciar_LCD:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_Limpiar_pantallaLCD:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_conversion:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_conversion_char:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_dato_recibido:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_isr:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_prender_ELCD:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Escribir_comandoLCD:	
   604                           ; 1 bytes @ 0x0
   605                           
   606                           
   607                           ; 1 bytes @ 0x0
   608  0070                     	ds	1
   609  0071                     ??_isr:
   610                           
   611                           ; 1 bytes @ 0x1
   612  0071                     	ds	3
   613  0074                     ??_setup:
   614  0074                     ??_conversion:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     ??_prender_ELCD:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0074                     ??___awdiv:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     ??___awmod:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0074                     ??___lwdiv:	
   627                           ; 1 bytes @ 0x4
   628                           
   629                           
   630                           ; 1 bytes @ 0x4
   631  0074                     	ds	1
   632  0075                     ?_divisor:
   633  0075                     ?_divisor1:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     ??_Escribir_comandoLCD:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0075                     ??___lwmod:	
   640                           ; 1 bytes @ 0x5
   641                           
   642  0075                     divisor@dig:	
   643                           ; 1 bytes @ 0x5
   644                           
   645  0075                     divisor1@dig:	
   646                           ; 1 bytes @ 0x5
   647                           
   648  0075                     Escribir_comandoLCD@Comando:	
   649                           ; 1 bytes @ 0x5
   650                           
   651                           
   652                           ; 1 bytes @ 0x5
   653  0075                     	ds	1
   654                           
   655                           	psect	cstackBANK0
   656  0020                     __pcstackBANK0:
   657  0020                     ??_Iniciar_LCD:
   658  0020                     ??_Limpiar_pantallaLCD:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0020                     ?_set_cursor:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0020                     ?_Escribir_stringLCD:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0020                     ?___awdiv:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0020                     ?___awmod:	
   671                           ; 2 bytes @ 0x0
   672                           
   673  0020                     ?___lwdiv:	
   674                           ; 2 bytes @ 0x0
   675                           
   676  0020                     set_cursor@posicion:	
   677                           ; 2 bytes @ 0x0
   678                           
   679  0020                     Escribir_stringLCD@d:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0020                     ___awdiv@divisor:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0020                     ___awmod@divisor:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0020                     ___lwdiv@divisor:	
   689                           ; 2 bytes @ 0x0
   690                           
   691                           
   692                           ; 2 bytes @ 0x0
   693  0020                     	ds	1
   694  0021                     ??_set_cursor:
   695                           
   696                           ; 1 bytes @ 0x1
   697  0021                     	ds	1
   698  0022                     ??_Escribir_stringLCD:
   699  0022                     ___awdiv@dividend:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0022                     ___awmod@dividend:	
   703                           ; 2 bytes @ 0x2
   704                           
   705  0022                     ___lwdiv@dividend:	
   706                           ; 2 bytes @ 0x2
   707                           
   708                           
   709                           ; 2 bytes @ 0x2
   710  0022                     	ds	1
   711  0023                     Escribir_stringLCD@i:
   712  0023                     set_cursor@linea:	
   713                           ; 1 bytes @ 0x3
   714                           
   715                           
   716                           ; 1 bytes @ 0x3
   717  0023                     	ds	1
   718  0024                     ___awdiv@counter:
   719  0024                     ___awmod@counter:	
   720                           ; 1 bytes @ 0x4
   721                           
   722  0024                     ___lwdiv@counter:	
   723                           ; 1 bytes @ 0x4
   724                           
   725                           
   726                           ; 1 bytes @ 0x4
   727  0024                     	ds	1
   728  0025                     ___awdiv@sign:
   729  0025                     ___awmod@sign:	
   730                           ; 1 bytes @ 0x5
   731                           
   732  0025                     ___lwdiv@quotient:	
   733                           ; 1 bytes @ 0x5
   734                           
   735                           
   736                           ; 2 bytes @ 0x5
   737  0025                     	ds	1
   738  0026                     ___awdiv@quotient:
   739                           
   740                           ; 2 bytes @ 0x6
   741  0026                     	ds	1
   742  0027                     ?___lwmod:
   743  0027                     ___lwmod@divisor:	
   744                           ; 2 bytes @ 0x7
   745                           
   746                           
   747                           ; 2 bytes @ 0x7
   748  0027                     	ds	1
   749  0028                     ??_divisor:
   750  0028                     ??_divisor1:	
   751                           ; 1 bytes @ 0x8
   752                           
   753                           
   754                           ; 1 bytes @ 0x8
   755  0028                     	ds	1
   756  0029                     ___lwmod@dividend:
   757                           
   758                           ; 2 bytes @ 0x9
   759  0029                     	ds	1
   760  002A                     divisor@a:
   761                           
   762                           ; 1 bytes @ 0xA
   763  002A                     	ds	1
   764  002B                     ___lwmod@counter:
   765  002B                     divisor@b:	
   766                           ; 1 bytes @ 0xB
   767                           
   768                           
   769                           ; 2 bytes @ 0xB
   770  002B                     	ds	1
   771  002C                     ?_sprintf:
   772  002C                     divisor1@a:	
   773                           ; 2 bytes @ 0xC
   774                           
   775  002C                     sprintf@f:	
   776                           ; 1 bytes @ 0xC
   777                           
   778                           
   779                           ; 1 bytes @ 0xC
   780  002C                     	ds	1
   781  002D                     divisor@i:
   782  002D                     divisor1@i:	
   783                           ; 2 bytes @ 0xD
   784                           
   785                           
   786                           ; 2 bytes @ 0xD
   787  002D                     	ds	6
   788  0033                     ??_sprintf:
   789                           
   790                           ; 1 bytes @ 0x13
   791  0033                     	ds	3
   792  0036                     sprintf@ap:
   793                           
   794                           ; 1 bytes @ 0x16
   795  0036                     	ds	1
   796  0037                     sprintf@flag:
   797                           
   798                           ; 1 bytes @ 0x17
   799  0037                     	ds	1
   800  0038                     sprintf@prec:
   801                           
   802                           ; 1 bytes @ 0x18
   803  0038                     	ds	1
   804  0039                     sprintf@val:
   805                           
   806                           ; 2 bytes @ 0x19
   807  0039                     	ds	2
   808  003B                     sprintf@sp:
   809                           
   810                           ; 1 bytes @ 0x1B
   811  003B                     	ds	1
   812  003C                     sprintf@c:
   813                           
   814                           ; 1 bytes @ 0x1C
   815  003C                     	ds	1
   816  003D                     ??_conversion_char:
   817  003D                     ??_dato_recibido:	
   818                           ; 1 bytes @ 0x1D
   819                           
   820                           
   821                           ; 1 bytes @ 0x1D
   822  003D                     	ds	7
   823  0044                     ??_main:
   824                           
   825                           ; 1 bytes @ 0x24
   826  0044                     	ds	3
   827                           
   828                           	psect	maintext
   829  010A                     __pmaintext:	
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 86 in file "LAB2.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : B00/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       3       0       0       0
   852 ;;      Totals:         0       3       0       0       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels required when called: 5
   855 ;; This function calls:
   856 ;;		_Escribir_stringLCD
   857 ;;		_Iniciar_LCD
   858 ;;		_Limpiar_pantallaLCD
   859 ;;		_conversion
   860 ;;		_conversion_char
   861 ;;		_dato_recibido
   862 ;;		_set_cursor
   863 ;;		_setup
   864 ;; This function is called by:
   865 ;;		Startup code after reset
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _main
   871  010A                     _main:
   872  010A                     l2061:	
   873                           ;incstack = 0
   874                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   875                           
   876                           
   877                           ;LAB2.c: 87:     setup();
   878  010A  120A  118A  23FF  120A  118A  	fcall	_setup
   879                           
   880                           ;LAB2.c: 88:     Iniciar_LCD();
   881  010F  120A  118A  21C4  120A  118A  	fcall	_Iniciar_LCD
   882                           
   883                           ;LAB2.c: 89:     Limpiar_pantallaLCD();
   884  0114  120A  118A  2678  120A  118A  	fcall	_Limpiar_pantallaLCD
   885                           
   886                           ;LAB2.c: 90:     set_cursor(1,0);
   887  0119  1283               	bcf	3,5	;RP0=0, select bank0
   888  011A  1303               	bcf	3,6	;RP1=0, select bank0
   889  011B  01A0               	clrf	set_cursor@posicion
   890  011C  3001               	movlw	1
   891  011D  120A  118A  244C  120A  118A  	fcall	_set_cursor
   892  0122                     l2063:
   893                           
   894                           ;LAB2.c: 91:     Escribir_stringLCD("Hola");
   895  0122  3032               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   896  0123  1283               	bcf	3,5	;RP0=0, select bank0
   897  0124  1303               	bcf	3,6	;RP1=0, select bank0
   898  0125  00A0               	movwf	Escribir_stringLCD@d
   899  0126  3080               	movlw	128
   900  0127  00A1               	movwf	Escribir_stringLCD@d+1
   901  0128  120A  118A  25A2  120A  118A  	fcall	_Escribir_stringLCD
   902  012D                     l2065:
   903                           
   904                           ;LAB2.c: 92:     set_cursor(2,2);
   905  012D  3002               	movlw	2
   906  012E  1283               	bcf	3,5	;RP0=0, select bank0
   907  012F  1303               	bcf	3,6	;RP1=0, select bank0
   908  0130  00C4               	movwf	??_main
   909  0131  0844               	movf	??_main,w
   910  0132  00A0               	movwf	set_cursor@posicion
   911  0133  3002               	movlw	2
   912  0134  120A  118A  244C  120A  118A  	fcall	_set_cursor
   913                           
   914                           ;LAB2.c: 93:     Escribir_stringLCD("Teipio");
   915  0139  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   916  013A  1283               	bcf	3,5	;RP0=0, select bank0
   917  013B  1303               	bcf	3,6	;RP1=0, select bank0
   918  013C  00A0               	movwf	Escribir_stringLCD@d
   919  013D  3080               	movlw	128
   920  013E  00A1               	movwf	Escribir_stringLCD@d+1
   921  013F  120A  118A  25A2  120A  118A  	fcall	_Escribir_stringLCD
   922  0144                     l2067:
   923                           
   924                           ;LAB2.c: 94:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   925  0144  301A               	movlw	26
   926  0145  1283               	bcf	3,5	;RP0=0, select bank0
   927  0146  1303               	bcf	3,6	;RP1=0, select bank0
   928  0147  00C6               	movwf	??_main+2
   929  0148  305E               	movlw	94
   930  0149  00C5               	movwf	??_main+1
   931  014A  306D               	movlw	109
   932  014B  00C4               	movwf	??_main
   933  014C                     u1757:
   934  014C  0BC4               	decfsz	??_main,f
   935  014D  294C               	goto	u1757
   936  014E  0BC5               	decfsz	??_main+1,f
   937  014F  294C               	goto	u1757
   938  0150  0BC6               	decfsz	??_main+2,f
   939  0151  294C               	goto	u1757
   940  0152  2953               	nop2
   941  0153                     l2069:
   942                           
   943                           ;LAB2.c: 95:     ADCON0bits.GO = 1;
   944  0153  1283               	bcf	3,5	;RP0=0, select bank0
   945  0154  1303               	bcf	3,6	;RP1=0, select bank0
   946  0155  149F               	bsf	31,1	;volatile
   947  0156                     l2071:
   948                           
   949                           ;LAB2.c: 97:     Limpiar_pantallaLCD();
   950  0156  120A  118A  2678  120A  118A  	fcall	_Limpiar_pantallaLCD
   951  015B                     l2073:
   952                           
   953                           ;LAB2.c: 100:         conversion();
   954  015B  120A  118A  262E  120A  118A  	fcall	_conversion
   955  0160                     l2075:
   956                           
   957                           ;LAB2.c: 103:         set_cursor(1,0);
   958  0160  1283               	bcf	3,5	;RP0=0, select bank0
   959  0161  1303               	bcf	3,6	;RP1=0, select bank0
   960  0162  01A0               	clrf	set_cursor@posicion
   961  0163  3001               	movlw	1
   962  0164  120A  118A  244C  120A  118A  	fcall	_set_cursor
   963  0169                     l2077:
   964                           
   965                           ;LAB2.c: 104:         Escribir_stringLCD("S1:    S2:   S3:");
   966  0169  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   967  016A  1283               	bcf	3,5	;RP0=0, select bank0
   968  016B  1303               	bcf	3,6	;RP1=0, select bank0
   969  016C  00A0               	movwf	Escribir_stringLCD@d
   970  016D  3080               	movlw	128
   971  016E  00A1               	movwf	Escribir_stringLCD@d+1
   972  016F  120A  118A  25A2  120A  118A  	fcall	_Escribir_stringLCD
   973  0174                     l2079:
   974                           
   975                           ;LAB2.c: 106:         conversion_char();
   976  0174  120A  118A  22A1  120A  118A  	fcall	_conversion_char
   977  0179                     l2081:
   978                           
   979                           ;LAB2.c: 108:         set_cursor(2,0);
   980  0179  1283               	bcf	3,5	;RP0=0, select bank0
   981  017A  1303               	bcf	3,6	;RP1=0, select bank0
   982  017B  01A0               	clrf	set_cursor@posicion
   983  017C  3002               	movlw	2
   984  017D  120A  118A  244C  120A  118A  	fcall	_set_cursor
   985  0182                     l2083:
   986                           
   987                           ;LAB2.c: 109:         Escribir_stringLCD(buffer1);
   988  0182  305E               	movlw	(low (_buffer1| 0))& (0+255)
   989  0183  1283               	bcf	3,5	;RP0=0, select bank0
   990  0184  1303               	bcf	3,6	;RP1=0, select bank0
   991  0185  00A0               	movwf	Escribir_stringLCD@d
   992  0186  3000               	movlw	0
   993  0187  00A1               	movwf	Escribir_stringLCD@d+1
   994  0188  120A  118A  25A2  120A  118A  	fcall	_Escribir_stringLCD
   995  018D                     l2085:
   996                           
   997                           ;LAB2.c: 110:         set_cursor(2,7);
   998  018D  3007               	movlw	7
   999  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1000  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0190  00C4               	movwf	??_main
  1002  0191  0844               	movf	??_main,w
  1003  0192  00A0               	movwf	set_cursor@posicion
  1004  0193  3002               	movlw	2
  1005  0194  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1006  0199                     l2087:
  1007                           
  1008                           ;LAB2.c: 111:         Escribir_stringLCD(buffer2);
  1009  0199  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1010  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1011  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1012  019C  00A0               	movwf	Escribir_stringLCD@d
  1013  019D  3000               	movlw	0
  1014  019E  00A1               	movwf	Escribir_stringLCD@d+1
  1015  019F  120A  118A  25A2  120A  118A  	fcall	_Escribir_stringLCD
  1016  01A4                     l2089:
  1017                           
  1018                           ;LAB2.c: 114:         dato_recibido();
  1019  01A4  120A  118A  2600  120A  118A  	fcall	_dato_recibido
  1020  01A9                     l2091:
  1021                           
  1022                           ;LAB2.c: 116:         set_cursor(2,13);
  1023  01A9  300D               	movlw	13
  1024  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1025  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1026  01AC  00C4               	movwf	??_main
  1027  01AD  0844               	movf	??_main,w
  1028  01AE  00A0               	movwf	set_cursor@posicion
  1029  01AF  3002               	movlw	2
  1030  01B0  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1031  01B5                     l2093:
  1032                           
  1033                           ;LAB2.c: 117:         Escribir_stringLCD(buffer3);
  1034  01B5  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1035  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1036  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1037  01B8  00A0               	movwf	Escribir_stringLCD@d
  1038  01B9  3000               	movlw	0
  1039  01BA  00A1               	movwf	Escribir_stringLCD@d+1
  1040  01BB  120A  118A  25A2  120A  118A  	fcall	_Escribir_stringLCD
  1041  01C0  295B               	goto	l2073
  1042  01C1  120A  118A  280C   	ljmp	start
  1043  01C4                     __end_of_main:
  1044                           
  1045                           	psect	text1
  1046  03FF                     __ptext1:	
  1047 ;; *************** function _setup *****************
  1048 ;; Defined at:
  1049 ;;		line 122 in file "LAB2.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          1       0       0       0       0
  1066 ;;      Totals:         1       0       0       0       0
  1067 ;;Total ram usage:        1 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 2
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _setup
  1079  03FF                     _setup:
  1080  03FF                     l1553:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _setup: [wreg+status,2+status,0]
  1083                           
  1084                           
  1085                           ;LAB2.c: 125:     ANSEL = 0b0011;
  1086  03FF  3003               	movlw	3
  1087  0400  1683               	bsf	3,5	;RP0=1, select bank3
  1088  0401  1703               	bsf	3,6	;RP1=1, select bank3
  1089  0402  0088               	movwf	8	;volatile
  1090  0403                     l1555:
  1091                           
  1092                           ;LAB2.c: 126:     ANSELH = 0;
  1093  0403  0189               	clrf	9	;volatile
  1094  0404                     l1557:
  1095                           
  1096                           ;LAB2.c: 128:     TRISA = 0b0011;
  1097  0404  3003               	movlw	3
  1098  0405  1683               	bsf	3,5	;RP0=1, select bank1
  1099  0406  1303               	bcf	3,6	;RP1=0, select bank1
  1100  0407  0085               	movwf	5	;volatile
  1101                           
  1102                           ;LAB2.c: 129:     TRISB = 0;
  1103  0408  0186               	clrf	6	;volatile
  1104                           
  1105                           ;LAB2.c: 130:     TRISD = 0;
  1106  0409  0188               	clrf	8	;volatile
  1107                           
  1108                           ;LAB2.c: 131:     TRISC = 0;
  1109  040A  0187               	clrf	7	;volatile
  1110                           
  1111                           ;LAB2.c: 132:     TRISE = 0;
  1112  040B  0189               	clrf	9	;volatile
  1113                           
  1114                           ;LAB2.c: 134:     PORTA = 0;
  1115  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1116  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1117  040E  0185               	clrf	5	;volatile
  1118                           
  1119                           ;LAB2.c: 135:     PORTD = 0;
  1120  040F  0188               	clrf	8	;volatile
  1121                           
  1122                           ;LAB2.c: 136:     PORTC = 0;
  1123  0410  0187               	clrf	7	;volatile
  1124                           
  1125                           ;LAB2.c: 137:     PORTE = 0;
  1126  0411  0189               	clrf	9	;volatile
  1127                           
  1128                           ;LAB2.c: 138:     PORTB = 0;
  1129  0412  0186               	clrf	6	;volatile
  1130  0413                     l1559:
  1131                           
  1132                           ;LAB2.c: 141:     OSCCONbits.IRCF = 0b0110;
  1133  0413  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0414  1303               	bcf	3,6	;RP1=0, select bank1
  1135  0415  080F               	movf	15,w	;volatile
  1136  0416  398F               	andlw	-113
  1137  0417  3860               	iorlw	96
  1138  0418  008F               	movwf	15	;volatile
  1139  0419                     l1561:
  1140                           
  1141                           ;LAB2.c: 142:     OSCCONbits.SCS = 1;
  1142  0419  140F               	bsf	15,0	;volatile
  1143  041A                     l1563:
  1144                           
  1145                           ;LAB2.c: 145:     ADCON1bits.ADFM = 0;
  1146  041A  139F               	bcf	31,7	;volatile
  1147  041B                     l1565:
  1148                           
  1149                           ;LAB2.c: 146:     ADCON1bits.VCFG0 = 0;
  1150  041B  121F               	bcf	31,4	;volatile
  1151  041C                     l1567:
  1152                           
  1153                           ;LAB2.c: 147:     ADCON1bits.VCFG1 = 0;
  1154  041C  129F               	bcf	31,5	;volatile
  1155  041D                     l1569:
  1156                           
  1157                           ;LAB2.c: 149:     ADCON0bits.ADCS = 0b01;
  1158  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1159  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1160  041F  081F               	movf	31,w	;volatile
  1161  0420  393F               	andlw	-193
  1162  0421  3840               	iorlw	64
  1163  0422  009F               	movwf	31	;volatile
  1164  0423                     l1571:
  1165                           
  1166                           ;LAB2.c: 150:     ADCON0bits.CHS = 0;
  1167  0423  30C3               	movlw	-61
  1168  0424  059F               	andwf	31,f	;volatile
  1169  0425                     l1573:
  1170                           
  1171                           ;LAB2.c: 151:     ADCON0bits.ADON = 1;
  1172  0425  141F               	bsf	31,0	;volatile
  1173  0426                     l1575:
  1174                           
  1175                           ;LAB2.c: 152:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1176  0426  3010               	movlw	16
  1177  0427  00F4               	movwf	??_setup
  1178  0428                     u1767:
  1179  0428  0BF4               	decfsz	??_setup,f
  1180  0429  2C28               	goto	u1767
  1181  042A  0000               	nop
  1182  042B                     l1577:
  1183                           
  1184                           ;LAB2.c: 155:     PIR1bits.ADIF = 0;
  1185  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1186  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1187  042D  130C               	bcf	12,6	;volatile
  1188  042E                     l1579:
  1189                           
  1190                           ;LAB2.c: 156:     PIE1bits.ADIE = 1;
  1191  042E  1683               	bsf	3,5	;RP0=1, select bank1
  1192  042F  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0430  170C               	bsf	12,6	;volatile
  1194  0431                     l1581:
  1195                           
  1196                           ;LAB2.c: 157:     PIR1bits.RCIF = 0;
  1197  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0433  128C               	bcf	12,5	;volatile
  1200  0434                     l1583:
  1201                           
  1202                           ;LAB2.c: 158:     PIE1bits.RCIE = 1;
  1203  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0436  168C               	bsf	12,5	;volatile
  1206  0437                     l1585:
  1207                           
  1208                           ;LAB2.c: 159:     INTCONbits.PEIE = 1;
  1209  0437  170B               	bsf	11,6	;volatile
  1210  0438                     l1587:
  1211                           
  1212                           ;LAB2.c: 160:     INTCONbits.GIE = 1;
  1213  0438  178B               	bsf	11,7	;volatile
  1214  0439                     l1589:
  1215                           
  1216                           ;LAB2.c: 163:     TXSTAbits.SYNC = 0;
  1217  0439  1218               	bcf	24,4	;volatile
  1218  043A                     l1591:
  1219                           
  1220                           ;LAB2.c: 164:     TXSTAbits.BRGH = 1;
  1221  043A  1518               	bsf	24,2	;volatile
  1222  043B                     l1593:
  1223                           
  1224                           ;LAB2.c: 166:     BAUDCTLbits.BRG16 = 0;
  1225  043B  1683               	bsf	3,5	;RP0=1, select bank3
  1226  043C  1703               	bsf	3,6	;RP1=1, select bank3
  1227  043D  1187               	bcf	7,3	;volatile
  1228  043E                     l1595:
  1229                           
  1230                           ;LAB2.c: 168:     SPBRG = 23;
  1231  043E  3017               	movlw	23
  1232  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0441  0099               	movwf	25	;volatile
  1235  0442                     l1597:
  1236                           
  1237                           ;LAB2.c: 169:     SPBRGH = 0;
  1238  0442  019A               	clrf	26	;volatile
  1239  0443                     l1599:
  1240                           
  1241                           ;LAB2.c: 171:     RCSTAbits.SPEN = 1;
  1242  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0445  1798               	bsf	24,7	;volatile
  1245  0446                     l1601:
  1246                           
  1247                           ;LAB2.c: 172:     RCSTAbits.RX9 = 0;
  1248  0446  1318               	bcf	24,6	;volatile
  1249  0447                     l1603:
  1250                           
  1251                           ;LAB2.c: 173:     RCSTAbits.CREN = 1;
  1252  0447  1618               	bsf	24,4	;volatile
  1253  0448                     l1605:
  1254                           
  1255                           ;LAB2.c: 175:     TXSTAbits.TXEN = 1;
  1256  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1258  044A  1698               	bsf	24,5	;volatile
  1259  044B                     l118:
  1260  044B  0008               	return
  1261  044C                     __end_of_setup:
  1262                           
  1263                           	psect	text2
  1264  044C                     __ptext2:	
  1265 ;; *************** function _set_cursor *****************
  1266 ;; Defined at:
  1267 ;;		line 71 in file "LCD.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  linea           1    wreg     unsigned char 
  1270 ;;  posicion        1    0[BANK0 ] unsigned char 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  linea           1    3[BANK0 ] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       1       0       0       0
  1283 ;;      Locals:         0       1       0       0       0
  1284 ;;      Temps:          0       2       0       0       0
  1285 ;;      Totals:         0       4       0       0       0
  1286 ;;Total ram usage:        4 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 4
  1289 ;; This function calls:
  1290 ;;		_Escribir_comandoLCD
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _set_cursor
  1298  044C                     _set_cursor:
  1299                           
  1300                           ;incstack = 0
  1301                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1302                           ;set_cursor@linea stored from wreg
  1303  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1304  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1305  044E  00A3               	movwf	set_cursor@linea
  1306  044F                     l2023:
  1307                           
  1308                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1309  044F  1287               	bcf	7,5	;volatile
  1310  0450  1208               	bcf	8,4	;volatile
  1311  0451                     l2025:
  1312                           
  1313                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1314  0451  0323               	decf	set_cursor@linea,w
  1315  0452  1D03               	btfss	3,2
  1316  0453  2C55               	goto	u1701
  1317  0454  2C56               	goto	u1700
  1318  0455                     u1701:
  1319  0455  2C5D               	goto	l2029
  1320  0456                     u1700:
  1321  0456                     l2027:
  1322  0456  3080               	movlw	128
  1323  0457  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  1324  045C  2C69               	goto	l2033
  1325  045D                     l2029:
  1326  045D  3002               	movlw	2
  1327  045E  0623               	xorwf	set_cursor@linea,w
  1328  045F  1D03               	btfss	3,2
  1329  0460  2C62               	goto	u1711
  1330  0461  2C63               	goto	u1710
  1331  0462                     u1711:
  1332  0462  2C69               	goto	l2033
  1333  0463                     u1710:
  1334  0463                     l2031:
  1335  0463  30C0               	movlw	192
  1336  0464  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  1337  0469                     l2033:
  1338                           
  1339                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1340  0469  3068               	movlw	104
  1341  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1342  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1343  046C  00A2               	movwf	??_set_cursor+1
  1344  046D  30E3               	movlw	227
  1345  046E  00A1               	movwf	??_set_cursor
  1346  046F                     u1777:
  1347  046F  0BA1               	decfsz	??_set_cursor,f
  1348  0470  2C6F               	goto	u1777
  1349  0471  0BA2               	decfsz	??_set_cursor+1,f
  1350  0472  2C6F               	goto	u1777
  1351  0473  2C74               	nop2
  1352  0474                     l2035:
  1353                           
  1354                           ;LCD.c: 80:     if (posicion != 0){
  1355  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0476  0820               	movf	set_cursor@posicion,w
  1358  0477  1903               	btfsc	3,2
  1359  0478  2C7A               	goto	u1721
  1360  0479  2C7B               	goto	u1720
  1361  047A                     u1721:
  1362  047A  2C96               	goto	l186
  1363  047B                     u1720:
  1364  047B  2C86               	goto	l2043
  1365  047C                     l2039:
  1366                           
  1367                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1368  047C  3014               	movlw	20
  1369  047D  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  1370  0482                     l2041:
  1371                           
  1372                           ;LCD.c: 83:             posicion--;
  1373  0482  3001               	movlw	1
  1374  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0485  02A0               	subwf	set_cursor@posicion,f
  1377  0486                     l2043:
  1378                           
  1379                           ;LCD.c: 81:         while(posicion > 0){
  1380  0486  0820               	movf	set_cursor@posicion,w
  1381  0487  1D03               	btfss	3,2
  1382  0488  2C8A               	goto	u1731
  1383  0489  2C8B               	goto	u1730
  1384  048A                     u1731:
  1385  048A  2C7C               	goto	l2039
  1386  048B                     u1730:
  1387  048B                     l2045:
  1388                           
  1389                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1390  048B  3068               	movlw	104
  1391  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1392  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1393  048E  00A2               	movwf	??_set_cursor+1
  1394  048F  30E3               	movlw	227
  1395  0490  00A1               	movwf	??_set_cursor
  1396  0491                     u1787:
  1397  0491  0BA1               	decfsz	??_set_cursor,f
  1398  0492  2C91               	goto	u1787
  1399  0493  0BA2               	decfsz	??_set_cursor+1,f
  1400  0494  2C91               	goto	u1787
  1401  0495  2C96               	nop2
  1402  0496                     l186:
  1403  0496  0008               	return
  1404  0497                     __end_of_set_cursor:
  1405                           
  1406                           	psect	text3
  1407  0600                     __ptext3:	
  1408 ;; *************** function _dato_recibido *****************
  1409 ;; Defined at:
  1410 ;;		line 202 in file "LAB2.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          0       7       0       0       0
  1427 ;;      Totals:         0       7       0       0       0
  1428 ;;Total ram usage:        7 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 4
  1431 ;; This function calls:
  1432 ;;		_divisor1
  1433 ;;		_sprintf
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _dato_recibido
  1441  0600                     _dato_recibido:
  1442  0600                     l2059:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1445                           
  1446                           
  1447                           ;LAB2.c: 203:     divisor1(Cont_U, vol3);
  1448  0600  3068               	movlw	(low (_vol3| 0))& (0+255)
  1449  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0603  00BD               	movwf	??_dato_recibido
  1452  0604  083D               	movf	??_dato_recibido,w
  1453  0605  00F5               	movwf	divisor1@dig
  1454  0606  0847               	movf	_Cont_U,w
  1455  0607  120A  118A  23AE  120A  118A  	fcall	_divisor1
  1456                           
  1457                           ;LAB2.c: 204:     sprintf(buffer3, "%d%d%d", vol3[2], vol3[1], vol3[0]);
  1458  060C  3024               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1459  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1460  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1461  060F  00BD               	movwf	??_dato_recibido
  1462  0610  083D               	movf	??_dato_recibido,w
  1463  0611  00AC               	movwf	sprintf@f
  1464  0612  086A               	movf	_vol3+2,w
  1465  0613  00BE               	movwf	??_dato_recibido+1
  1466  0614  01BF               	clrf	??_dato_recibido+2
  1467  0615  083E               	movf	??_dato_recibido+1,w
  1468  0616  00AD               	movwf	?_sprintf+1
  1469  0617  083F               	movf	??_dato_recibido+2,w
  1470  0618  00AE               	movwf	?_sprintf+2
  1471  0619  0869               	movf	_vol3+1,w
  1472  061A  00C0               	movwf	??_dato_recibido+3
  1473  061B  01C1               	clrf	??_dato_recibido+4
  1474  061C  0840               	movf	??_dato_recibido+3,w
  1475  061D  00AF               	movwf	?_sprintf+3
  1476  061E  0841               	movf	??_dato_recibido+4,w
  1477  061F  00B0               	movwf	?_sprintf+4
  1478  0620  0868               	movf	_vol3,w
  1479  0621  00C2               	movwf	??_dato_recibido+5
  1480  0622  01C3               	clrf	??_dato_recibido+6
  1481  0623  0842               	movf	??_dato_recibido+5,w
  1482  0624  00B1               	movwf	?_sprintf+5
  1483  0625  0843               	movf	??_dato_recibido+6,w
  1484  0626  00B2               	movwf	?_sprintf+6
  1485  0627  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1486  0628  120A  118A  2020  120A  118A  	fcall	_sprintf
  1487  062D                     l134:
  1488  062D  0008               	return
  1489  062E                     __end_of_dato_recibido:
  1490                           
  1491                           	psect	text4
  1492  03AE                     __ptext4:	
  1493 ;; *************** function _divisor1 *****************
  1494 ;; Defined at:
  1495 ;;		line 195 in file "LAB2.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  a               1    wreg     unsigned char 
  1498 ;;  dig             1    5[COMMON] PTR unsigned char 
  1499 ;;		 -> vol3(1), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  a               1   12[BANK0 ] unsigned char 
  1502 ;;  i               2   13[BANK0 ] int 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         1       0       0       0       0
  1513 ;;      Locals:         0       3       0       0       0
  1514 ;;      Temps:          0       4       0       0       0
  1515 ;;      Totals:         1       7       0       0       0
  1516 ;;Total ram usage:        8 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 3
  1519 ;; This function calls:
  1520 ;;		___awdiv
  1521 ;;		___awmod
  1522 ;; This function is called by:
  1523 ;;		_dato_recibido
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _divisor1
  1529  03AE                     _divisor1:
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _divisor1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1533                           ;divisor1@a stored from wreg
  1534  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1535  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1536  03B0  00AC               	movwf	divisor1@a
  1537  03B1                     l1957:
  1538                           
  1539                           ;LAB2.c: 196:     for(int i = 0; i<3 ; i++){
  1540  03B1  01AD               	clrf	divisor1@i
  1541  03B2  01AE               	clrf	divisor1@i+1
  1542  03B3                     l1963:
  1543                           
  1544                           ;LAB2.c: 197:         dig[i] = a % 10;
  1545  03B3  300A               	movlw	10
  1546  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1547  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1548  03B6  00A0               	movwf	___awmod@divisor
  1549  03B7  3000               	movlw	0
  1550  03B8  00A1               	movwf	___awmod@divisor+1
  1551  03B9  082C               	movf	divisor1@a,w
  1552  03BA  00A8               	movwf	??_divisor1
  1553  03BB  01A9               	clrf	??_divisor1+1
  1554  03BC  0828               	movf	??_divisor1,w
  1555  03BD  00A2               	movwf	___awmod@dividend
  1556  03BE  0829               	movf	??_divisor1+1,w
  1557  03BF  00A3               	movwf	___awmod@dividend+1
  1558  03C0  120A  118A  22FC  120A  118A  	fcall	___awmod
  1559  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1560  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1561  03C7  0820               	movf	?___awmod,w
  1562  03C8  00AA               	movwf	??_divisor1+2
  1563  03C9  082D               	movf	divisor1@i,w
  1564  03CA  0775               	addwf	divisor1@dig,w
  1565  03CB  00AB               	movwf	??_divisor1+3
  1566  03CC  082B               	movf	??_divisor1+3,w
  1567  03CD  0084               	movwf	4
  1568  03CE  082A               	movf	??_divisor1+2,w
  1569  03CF  1383               	bcf	3,7	;select IRP bank0
  1570  03D0  0080               	movwf	0
  1571                           
  1572                           ;LAB2.c: 198:         a = (a - dig[i])/10;
  1573  03D1  300A               	movlw	10
  1574  03D2  00A0               	movwf	___awdiv@divisor
  1575  03D3  3000               	movlw	0
  1576  03D4  00A1               	movwf	___awdiv@divisor+1
  1577  03D5  082D               	movf	divisor1@i,w
  1578  03D6  0775               	addwf	divisor1@dig,w
  1579  03D7  00A8               	movwf	??_divisor1
  1580  03D8  0828               	movf	??_divisor1,w
  1581  03D9  0084               	movwf	4
  1582  03DA  0800               	movf	0,w
  1583  03DB  022C               	subwf	divisor1@a,w
  1584  03DC  00A2               	movwf	___awdiv@dividend
  1585  03DD  01A3               	clrf	___awdiv@dividend+1
  1586  03DE  1C03               	skipc
  1587  03DF  03A3               	decf	___awdiv@dividend+1,f
  1588  03E0  120A  118A  2238  120A  118A  	fcall	___awdiv
  1589  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1590  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1591  03E7  0820               	movf	?___awdiv,w
  1592  03E8  00A9               	movwf	??_divisor1+1
  1593  03E9  0829               	movf	??_divisor1+1,w
  1594  03EA  00AC               	movwf	divisor1@a
  1595  03EB                     l1965:
  1596                           
  1597                           ;LAB2.c: 199:     }
  1598  03EB  3001               	movlw	1
  1599  03EC  07AD               	addwf	divisor1@i,f
  1600  03ED  1803               	skipnc
  1601  03EE  0AAE               	incf	divisor1@i+1,f
  1602  03EF  3000               	movlw	0
  1603  03F0  07AE               	addwf	divisor1@i+1,f
  1604  03F1                     l1967:
  1605  03F1  082E               	movf	divisor1@i+1,w
  1606  03F2  3A80               	xorlw	128
  1607  03F3  00FF               	movwf	btemp+1
  1608  03F4  3080               	movlw	128
  1609  03F5  027F               	subwf	btemp+1,w
  1610  03F6  1D03               	skipz
  1611  03F7  2BFA               	goto	u1615
  1612  03F8  3003               	movlw	3
  1613  03F9  022D               	subwf	divisor1@i,w
  1614  03FA                     u1615:
  1615  03FA  1C03               	skipc
  1616  03FB  2BFD               	goto	u1611
  1617  03FC  2BFE               	goto	u1610
  1618  03FD                     u1611:
  1619  03FD  2BB3               	goto	l1963
  1620  03FE                     u1610:
  1621  03FE                     l131:
  1622  03FE  0008               	return
  1623  03FF                     __end_of_divisor1:
  1624                           
  1625                           	psect	text5
  1626  02A1                     __ptext5:	
  1627 ;; *************** function _conversion_char *****************
  1628 ;; Defined at:
  1629 ;;		line 179 in file "LAB2.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0
  1645 ;;      Temps:          0       7       0       0       0
  1646 ;;      Totals:         0       7       0       0       0
  1647 ;;Total ram usage:        7 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 4
  1650 ;; This function calls:
  1651 ;;		_divisor
  1652 ;;		_sprintf
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _conversion_char
  1660  02A1                     _conversion_char:
  1661  02A1                     l2057:	
  1662                           ;incstack = 0
  1663                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1664                           
  1665                           
  1666                           ;LAB2.c: 180:     divisor(cont1, vol1);
  1667  02A1  306A               	movlw	(low (_vol1| 0))& (0+255)
  1668  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1669  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1670  02A4  00BD               	movwf	??_conversion_char
  1671  02A5  083D               	movf	??_conversion_char,w
  1672  02A6  00F5               	movwf	divisor@dig
  1673  02A7  0849               	movf	_cont1,w
  1674  02A8  120A  118A  2357  120A  118A  	fcall	_divisor
  1675                           
  1676                           ;LAB2.c: 181:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1677  02AD  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1678  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1679  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1680  02B0  00BD               	movwf	??_conversion_char
  1681  02B1  083D               	movf	??_conversion_char,w
  1682  02B2  00AC               	movwf	sprintf@f
  1683  02B3  086C               	movf	_vol1+2,w
  1684  02B4  00BE               	movwf	??_conversion_char+1
  1685  02B5  01BF               	clrf	??_conversion_char+2
  1686  02B6  083E               	movf	??_conversion_char+1,w
  1687  02B7  00AD               	movwf	?_sprintf+1
  1688  02B8  083F               	movf	??_conversion_char+2,w
  1689  02B9  00AE               	movwf	?_sprintf+2
  1690  02BA  086B               	movf	_vol1+1,w
  1691  02BB  00C0               	movwf	??_conversion_char+3
  1692  02BC  01C1               	clrf	??_conversion_char+4
  1693  02BD  0840               	movf	??_conversion_char+3,w
  1694  02BE  00AF               	movwf	?_sprintf+3
  1695  02BF  0841               	movf	??_conversion_char+4,w
  1696  02C0  00B0               	movwf	?_sprintf+4
  1697  02C1  086A               	movf	_vol1,w
  1698  02C2  00C2               	movwf	??_conversion_char+5
  1699  02C3  01C3               	clrf	??_conversion_char+6
  1700  02C4  0842               	movf	??_conversion_char+5,w
  1701  02C5  00B1               	movwf	?_sprintf+5
  1702  02C6  0843               	movf	??_conversion_char+6,w
  1703  02C7  00B2               	movwf	?_sprintf+6
  1704  02C8  305E               	movlw	(low (_buffer1| 0))& (0+255)
  1705  02C9  120A  118A  2020  120A  118A  	fcall	_sprintf
  1706                           
  1707                           ;LAB2.c: 183:     divisor(cont2, vol2);
  1708  02CE  3069               	movlw	(low (_vol2| 0))& (0+255)
  1709  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1710  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1711  02D1  00BD               	movwf	??_conversion_char
  1712  02D2  083D               	movf	??_conversion_char,w
  1713  02D3  00F5               	movwf	divisor@dig
  1714  02D4  0848               	movf	_cont2,w
  1715  02D5  120A  118A  2357  120A  118A  	fcall	_divisor
  1716                           
  1717                           ;LAB2.c: 184:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1718  02DA  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1719  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1720  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1721  02DD  00BD               	movwf	??_conversion_char
  1722  02DE  083D               	movf	??_conversion_char,w
  1723  02DF  00AC               	movwf	sprintf@f
  1724  02E0  086B               	movf	_vol2+2,w
  1725  02E1  00BE               	movwf	??_conversion_char+1
  1726  02E2  01BF               	clrf	??_conversion_char+2
  1727  02E3  083E               	movf	??_conversion_char+1,w
  1728  02E4  00AD               	movwf	?_sprintf+1
  1729  02E5  083F               	movf	??_conversion_char+2,w
  1730  02E6  00AE               	movwf	?_sprintf+2
  1731  02E7  086A               	movf	_vol2+1,w
  1732  02E8  00C0               	movwf	??_conversion_char+3
  1733  02E9  01C1               	clrf	??_conversion_char+4
  1734  02EA  0840               	movf	??_conversion_char+3,w
  1735  02EB  00AF               	movwf	?_sprintf+3
  1736  02EC  0841               	movf	??_conversion_char+4,w
  1737  02ED  00B0               	movwf	?_sprintf+4
  1738  02EE  0869               	movf	_vol2,w
  1739  02EF  00C2               	movwf	??_conversion_char+5
  1740  02F0  01C3               	clrf	??_conversion_char+6
  1741  02F1  0842               	movf	??_conversion_char+5,w
  1742  02F2  00B1               	movwf	?_sprintf+5
  1743  02F3  0843               	movf	??_conversion_char+6,w
  1744  02F4  00B2               	movwf	?_sprintf+6
  1745  02F5  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1746  02F6  120A  118A  2020  120A  118A  	fcall	_sprintf
  1747  02FB                     l121:
  1748  02FB  0008               	return
  1749  02FC                     __end_of_conversion_char:
  1750                           
  1751                           	psect	text6
  1752  0020                     __ptext6:	
  1753 ;; *************** function _sprintf *****************
  1754 ;; Defined at:
  1755 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  sp              1    wreg     PTR unsigned char 
  1758 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1759 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1760 ;;		 -> STR_6(7), STR_5(8), STR_4(8), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1763 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1764 ;;  tmpval          4    0        struct .
  1765 ;;  val             2   25[BANK0 ] unsigned int 
  1766 ;;  cp              2    0        PTR const unsigned char 
  1767 ;;  len             2    0        unsigned int 
  1768 ;;  c               1   28[BANK0 ] unsigned char 
  1769 ;;  prec            1   24[BANK0 ] char 
  1770 ;;  flag            1   23[BANK0 ] unsigned char 
  1771 ;;  ap              1   22[BANK0 ] PTR void [1]
  1772 ;;		 -> ?_sprintf(2), 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2   12[BANK0 ] int 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         0       7       0       0       0
  1783 ;;      Locals:         0       7       0       0       0
  1784 ;;      Temps:          0       3       0       0       0
  1785 ;;      Totals:         0      17       0       0       0
  1786 ;;Total ram usage:       17 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 3
  1789 ;; This function calls:
  1790 ;;		___lwdiv
  1791 ;;		___lwmod
  1792 ;; This function is called by:
  1793 ;;		_conversion_char
  1794 ;;		_dato_recibido
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _sprintf
  1800  0020                     _sprintf:
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1804                           ;sprintf@sp stored from wreg
  1805  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0022  00BB               	movwf	sprintf@sp
  1808  0023                     l1895:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1811  0023  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1812  0024  00B3               	movwf	??_sprintf
  1813  0025  0833               	movf	??_sprintf,w
  1814  0026  00B6               	movwf	sprintf@ap
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1817  0027  28F3               	goto	l1947
  1818  0028                     l1897:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1821  0028  3025               	movlw	37
  1822  0029  063C               	xorwf	sprintf@c,w
  1823  002A  1903               	btfsc	3,2
  1824  002B  282D               	goto	u1541
  1825  002C  282E               	goto	u1540
  1826  002D                     u1541:
  1827  002D  283A               	goto	l1903
  1828  002E                     u1540:
  1829  002E                     l1899:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1832  002E  083C               	movf	sprintf@c,w
  1833  002F  00B3               	movwf	??_sprintf
  1834  0030  083B               	movf	sprintf@sp,w
  1835  0031  0084               	movwf	4
  1836  0032  0833               	movf	??_sprintf,w
  1837  0033  1383               	bcf	3,7	;select IRP bank0
  1838  0034  0080               	movwf	0
  1839  0035                     l1901:
  1840  0035  3001               	movlw	1
  1841  0036  00B3               	movwf	??_sprintf
  1842  0037  0833               	movf	??_sprintf,w
  1843  0038  07BB               	addwf	sprintf@sp,f
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1846  0039  28F3               	goto	l1947
  1847  003A                     l1903:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1850  003A  01B7               	clrf	sprintf@flag
  1851  003B                     l1907:	
  1852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1853                           
  1854  003B  3001               	movlw	1
  1855  003C  07AC               	addwf	sprintf@f,f
  1856  003D  30FF               	movlw	-1
  1857  003E  072C               	addwf	sprintf@f,w
  1858  003F  0084               	movwf	4
  1859  0040  120A  118A  24A1  120A  118A  	fcall	stringdir
  1860  0045  00BC               	movwf	sprintf@c
  1861  0046  00B3               	movwf	??_sprintf
  1862  0047  01B4               	clrf	??_sprintf+1
  1863                           
  1864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 1, Range of values is 0 to 0
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte            4     3 (average)
  1870                           ; direct_byte           11     8 (fixed)
  1871                           ; jumptable            260     6 (fixed)
  1872                           ;	Chosen strategy is simple_byte
  1873  0048  0834               	movf	??_sprintf+1,w
  1874  0049  3A00               	xorlw	0	; case 0
  1875  004A  1903               	skipnz
  1876  004B  284D               	goto	l2115
  1877  004C  28F3               	goto	l1947
  1878  004D                     l2115:
  1879                           
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 3, Range of values is 0 to 105
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte           10     6 (average)
  1885                           ; jumptable            260     6 (fixed)
  1886                           ;	Chosen strategy is simple_byte
  1887  004D  0833               	movf	??_sprintf,w
  1888  004E  3A00               	xorlw	0	; case 0
  1889  004F  1903               	skipnz
  1890  0050  2905               	goto	l1949
  1891  0051  3A64               	xorlw	100	; case 100
  1892  0052  1903               	skipnz
  1893  0053  2858               	goto	l1909
  1894  0054  3A0D               	xorlw	13	; case 105
  1895  0055  1903               	skipnz
  1896  0056  2858               	goto	l1909
  1897  0057  28F3               	goto	l1947
  1898  0058                     l1909:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1901  0058  0836               	movf	sprintf@ap,w
  1902  0059  0084               	movwf	4
  1903  005A  1383               	bcf	3,7	;select IRP bank0
  1904  005B  0800               	movf	0,w
  1905  005C  00B9               	movwf	sprintf@val
  1906  005D  0A84               	incf	4,f
  1907  005E  0800               	movf	0,w
  1908  005F  00BA               	movwf	sprintf@val+1
  1909  0060                     l1911:
  1910  0060  3002               	movlw	2
  1911  0061  00B3               	movwf	??_sprintf
  1912  0062  0833               	movf	??_sprintf,w
  1913  0063  07B6               	addwf	sprintf@ap,f
  1914  0064                     l1913:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1917  0064  1FBA               	btfss	sprintf@val+1,7
  1918  0065  2867               	goto	u1551
  1919  0066  2868               	goto	u1550
  1920  0067                     u1551:
  1921  0067  2871               	goto	l1919
  1922  0068                     u1550:
  1923  0068                     l1915:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1926  0068  3003               	movlw	3
  1927  0069  00B3               	movwf	??_sprintf
  1928  006A  0833               	movf	??_sprintf,w
  1929  006B  04B7               	iorwf	sprintf@flag,f
  1930  006C                     l1917:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1933  006C  09B9               	comf	sprintf@val,f
  1934  006D  09BA               	comf	sprintf@val+1,f
  1935  006E  0AB9               	incf	sprintf@val,f
  1936  006F  1903               	skipnz
  1937  0070  0ABA               	incf	sprintf@val+1,f
  1938  0071                     l1919:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1941  0071  01BC               	clrf	sprintf@c
  1942  0072  0ABC               	incf	sprintf@c,f
  1943  0073                     l1925:
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1946  0073  083C               	movf	sprintf@c,w
  1947  0074  00B3               	movwf	??_sprintf
  1948  0075  0733               	addwf	??_sprintf,w
  1949  0076  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1950  0077  0084               	movwf	4
  1951  0078  120A  118A  24A1  120A  118A  	fcall	stringdir
  1952  007D  00B4               	movwf	??_sprintf+1
  1953  007E  120A  118A  24A1  120A  118A  	fcall	stringdir
  1954  0083  00B5               	movwf	??_sprintf+2
  1955  0084  0835               	movf	??_sprintf+2,w
  1956  0085  023A               	subwf	sprintf@val+1,w
  1957  0086  1D03               	skipz
  1958  0087  288A               	goto	u1565
  1959  0088  0834               	movf	??_sprintf+1,w
  1960  0089  0239               	subwf	sprintf@val,w
  1961  008A                     u1565:
  1962  008A  1803               	skipnc
  1963  008B  288D               	goto	u1561
  1964  008C  288E               	goto	u1560
  1965  008D                     u1561:
  1966  008D  288F               	goto	l1929
  1967  008E                     u1560:
  1968  008E  2899               	goto	l1931
  1969  008F                     l1929:
  1970  008F  3001               	movlw	1
  1971  0090  00B3               	movwf	??_sprintf
  1972  0091  0833               	movf	??_sprintf,w
  1973  0092  07BC               	addwf	sprintf@c,f
  1974  0093  3005               	movlw	5
  1975  0094  063C               	xorwf	sprintf@c,w
  1976  0095  1D03               	btfss	3,2
  1977  0096  2898               	goto	u1571
  1978  0097  2899               	goto	u1570
  1979  0098                     u1571:
  1980  0098  2873               	goto	l1925
  1981  0099                     u1570:
  1982  0099                     l1931:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1985  0099  0837               	movf	sprintf@flag,w
  1986  009A  3903               	andlw	3
  1987  009B  1903               	btfsc	3,2
  1988  009C  289E               	goto	u1581
  1989  009D  289F               	goto	u1580
  1990  009E                     u1581:
  1991  009E  28AA               	goto	l1937
  1992  009F                     u1580:
  1993  009F                     l1933:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1996  009F  302D               	movlw	45
  1997  00A0  00B3               	movwf	??_sprintf
  1998  00A1  083B               	movf	sprintf@sp,w
  1999  00A2  0084               	movwf	4
  2000  00A3  0833               	movf	??_sprintf,w
  2001  00A4  1383               	bcf	3,7	;select IRP bank0
  2002  00A5  0080               	movwf	0
  2003  00A6                     l1935:
  2004  00A6  3001               	movlw	1
  2005  00A7  00B3               	movwf	??_sprintf
  2006  00A8  0833               	movf	??_sprintf,w
  2007  00A9  07BB               	addwf	sprintf@sp,f
  2008  00AA                     l1937:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2011  00AA  083C               	movf	sprintf@c,w
  2012  00AB  00B3               	movwf	??_sprintf
  2013  00AC  0833               	movf	??_sprintf,w
  2014  00AD  00B8               	movwf	sprintf@prec
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2017  00AE  28EA               	goto	l1945
  2018  00AF                     l1939:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2021  00AF  300A               	movlw	10
  2022  00B0  00A7               	movwf	___lwmod@divisor
  2023  00B1  3000               	movlw	0
  2024  00B2  00A8               	movwf	___lwmod@divisor+1
  2025  00B3  0838               	movf	sprintf@prec,w
  2026  00B4  00B3               	movwf	??_sprintf
  2027  00B5  0733               	addwf	??_sprintf,w
  2028  00B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2029  00B7  0084               	movwf	4
  2030  00B8  120A  118A  24A1  120A  118A  	fcall	stringdir
  2031  00BD  00A0               	movwf	___lwdiv@divisor
  2032  00BE  120A  118A  24A1  120A  118A  	fcall	stringdir
  2033  00C3  00A1               	movwf	___lwdiv@divisor+1
  2034  00C4  083A               	movf	sprintf@val+1,w
  2035  00C5  00A3               	movwf	___lwdiv@dividend+1
  2036  00C6  0839               	movf	sprintf@val,w
  2037  00C7  00A2               	movwf	___lwdiv@dividend
  2038  00C8  120A  118A  24DD  120A  118A  	fcall	___lwdiv
  2039  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2040  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2041  00CF  0821               	movf	?___lwdiv+1,w
  2042  00D0  00AA               	movwf	___lwmod@dividend+1
  2043  00D1  0820               	movf	?___lwdiv,w
  2044  00D2  00A9               	movwf	___lwmod@dividend
  2045  00D3  120A  118A  2566  120A  118A  	fcall	___lwmod
  2046  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2047  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2048  00DA  0827               	movf	?___lwmod,w
  2049  00DB  3E30               	addlw	48
  2050  00DC  00B4               	movwf	??_sprintf+1
  2051  00DD  0834               	movf	??_sprintf+1,w
  2052  00DE  00BC               	movwf	sprintf@c
  2053  00DF                     l1941:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2056  00DF  083C               	movf	sprintf@c,w
  2057  00E0  00B3               	movwf	??_sprintf
  2058  00E1  083B               	movf	sprintf@sp,w
  2059  00E2  0084               	movwf	4
  2060  00E3  0833               	movf	??_sprintf,w
  2061  00E4  1383               	bcf	3,7	;select IRP bank0
  2062  00E5  0080               	movwf	0
  2063  00E6                     l1943:
  2064  00E6  3001               	movlw	1
  2065  00E7  00B3               	movwf	??_sprintf
  2066  00E8  0833               	movf	??_sprintf,w
  2067  00E9  07BB               	addwf	sprintf@sp,f
  2068  00EA                     l1945:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2071  00EA  30FF               	movlw	255
  2072  00EB  00B3               	movwf	??_sprintf
  2073  00EC  0833               	movf	??_sprintf,w
  2074  00ED  07B8               	addwf	sprintf@prec,f
  2075  00EE  0A38               	incf	sprintf@prec,w
  2076  00EF  1D03               	btfss	3,2
  2077  00F0  28F2               	goto	u1591
  2078  00F1  28F3               	goto	u1590
  2079  00F2                     u1591:
  2080  00F2  28AF               	goto	l1939
  2081  00F3                     u1590:
  2082  00F3                     l1947:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2085  00F3  3001               	movlw	1
  2086  00F4  07AC               	addwf	sprintf@f,f
  2087  00F5  30FF               	movlw	-1
  2088  00F6  072C               	addwf	sprintf@f,w
  2089  00F7  0084               	movwf	4
  2090  00F8  120A  118A  24A1  120A  118A  	fcall	stringdir
  2091  00FD  00B3               	movwf	??_sprintf
  2092  00FE  0833               	movf	??_sprintf,w
  2093  00FF  00BC               	movwf	sprintf@c
  2094  0100  083C               	movf	sprintf@c,w
  2095  0101  1D03               	btfss	3,2
  2096  0102  2904               	goto	u1601
  2097  0103  2905               	goto	u1600
  2098  0104                     u1601:
  2099  0104  2828               	goto	l1897
  2100  0105                     u1600:
  2101  0105                     l1949:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2104  0105  083B               	movf	sprintf@sp,w
  2105  0106  0084               	movwf	4
  2106  0107  1383               	bcf	3,7	;select IRP bank0
  2107  0108  0180               	clrf	0
  2108  0109                     l325:
  2109  0109  0008               	return
  2110  010A                     __end_of_sprintf:
  2111                           
  2112                           	psect	text7
  2113  0566                     __ptext7:	
  2114 ;; *************** function ___lwmod *****************
  2115 ;; Defined at:
  2116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  divisor         2    7[BANK0 ] unsigned int 
  2119 ;;  dividend        2    9[BANK0 ] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  counter         1   11[BANK0 ] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  2    7[BANK0 ] unsigned int 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       4       0       0       0
  2132 ;;      Locals:         0       1       0       0       0
  2133 ;;      Temps:          1       0       0       0       0
  2134 ;;      Totals:         1       5       0       0       0
  2135 ;;Total ram usage:        6 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 2
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_sprintf
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function ___lwmod
  2147  0566                     ___lwmod:
  2148  0566                     l1415:	
  2149                           ;incstack = 0
  2150                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2151                           
  2152  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0568  0827               	movf	___lwmod@divisor,w
  2155  0569  0428               	iorwf	___lwmod@divisor+1,w
  2156  056A  1903               	btfsc	3,2
  2157  056B  2D6D               	goto	u901
  2158  056C  2D6E               	goto	u900
  2159  056D                     u901:
  2160  056D  2D9D               	goto	l1433
  2161  056E                     u900:
  2162  056E                     l1417:
  2163  056E  01AB               	clrf	___lwmod@counter
  2164  056F  0AAB               	incf	___lwmod@counter,f
  2165  0570  2D7C               	goto	l1423
  2166  0571                     l1419:
  2167  0571  3001               	movlw	1
  2168  0572                     u915:
  2169  0572  1003               	clrc
  2170  0573  0DA7               	rlf	___lwmod@divisor,f
  2171  0574  0DA8               	rlf	___lwmod@divisor+1,f
  2172  0575  3EFF               	addlw	-1
  2173  0576  1D03               	skipz
  2174  0577  2D72               	goto	u915
  2175  0578                     l1421:
  2176  0578  3001               	movlw	1
  2177  0579  00F5               	movwf	??___lwmod
  2178  057A  0875               	movf	??___lwmod,w
  2179  057B  07AB               	addwf	___lwmod@counter,f
  2180  057C                     l1423:
  2181  057C  1FA8               	btfss	___lwmod@divisor+1,7
  2182  057D  2D7F               	goto	u921
  2183  057E  2D80               	goto	u920
  2184  057F                     u921:
  2185  057F  2D71               	goto	l1419
  2186  0580                     u920:
  2187  0580                     l1425:
  2188  0580  0828               	movf	___lwmod@divisor+1,w
  2189  0581  022A               	subwf	___lwmod@dividend+1,w
  2190  0582  1D03               	skipz
  2191  0583  2D86               	goto	u935
  2192  0584  0827               	movf	___lwmod@divisor,w
  2193  0585  0229               	subwf	___lwmod@dividend,w
  2194  0586                     u935:
  2195  0586  1C03               	skipc
  2196  0587  2D89               	goto	u931
  2197  0588  2D8A               	goto	u930
  2198  0589                     u931:
  2199  0589  2D90               	goto	l1429
  2200  058A                     u930:
  2201  058A                     l1427:
  2202  058A  0827               	movf	___lwmod@divisor,w
  2203  058B  02A9               	subwf	___lwmod@dividend,f
  2204  058C  0828               	movf	___lwmod@divisor+1,w
  2205  058D  1C03               	skipc
  2206  058E  03AA               	decf	___lwmod@dividend+1,f
  2207  058F  02AA               	subwf	___lwmod@dividend+1,f
  2208  0590                     l1429:
  2209  0590  3001               	movlw	1
  2210  0591                     u945:
  2211  0591  1003               	clrc
  2212  0592  0CA8               	rrf	___lwmod@divisor+1,f
  2213  0593  0CA7               	rrf	___lwmod@divisor,f
  2214  0594  3EFF               	addlw	-1
  2215  0595  1D03               	skipz
  2216  0596  2D91               	goto	u945
  2217  0597                     l1431:
  2218  0597  3001               	movlw	1
  2219  0598  02AB               	subwf	___lwmod@counter,f
  2220  0599  1D03               	btfss	3,2
  2221  059A  2D9C               	goto	u951
  2222  059B  2D9D               	goto	u950
  2223  059C                     u951:
  2224  059C  2D80               	goto	l1425
  2225  059D                     u950:
  2226  059D                     l1433:
  2227  059D  082A               	movf	___lwmod@dividend+1,w
  2228  059E  00A8               	movwf	?___lwmod+1
  2229  059F  0829               	movf	___lwmod@dividend,w
  2230  05A0  00A7               	movwf	?___lwmod
  2231  05A1                     l611:
  2232  05A1  0008               	return
  2233  05A2                     __end_of___lwmod:
  2234                           
  2235                           	psect	text8
  2236  04DD                     __ptext8:	
  2237 ;; *************** function ___lwdiv *****************
  2238 ;; Defined at:
  2239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  divisor         2    0[BANK0 ] unsigned int 
  2242 ;;  dividend        2    2[BANK0 ] unsigned int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  quotient        2    5[BANK0 ] unsigned int 
  2245 ;;  counter         1    4[BANK0 ] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2    0[BANK0 ] unsigned int 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       4       0       0       0
  2256 ;;      Locals:         0       3       0       0       0
  2257 ;;      Temps:          1       0       0       0       0
  2258 ;;      Totals:         1       7       0       0       0
  2259 ;;Total ram usage:        8 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 2
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_sprintf
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function ___lwdiv
  2271  04DD                     ___lwdiv:
  2272  04DD                     l1855:	
  2273                           ;incstack = 0
  2274                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2275                           
  2276  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2277  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2278  04DF  01A5               	clrf	___lwdiv@quotient
  2279  04E0  01A6               	clrf	___lwdiv@quotient+1
  2280  04E1                     l1857:
  2281  04E1  0820               	movf	___lwdiv@divisor,w
  2282  04E2  0421               	iorwf	___lwdiv@divisor+1,w
  2283  04E3  1903               	btfsc	3,2
  2284  04E4  2CE6               	goto	u1461
  2285  04E5  2CE7               	goto	u1460
  2286  04E6                     u1461:
  2287  04E6  2D1E               	goto	l1877
  2288  04E7                     u1460:
  2289  04E7                     l1859:
  2290  04E7  01A4               	clrf	___lwdiv@counter
  2291  04E8  0AA4               	incf	___lwdiv@counter,f
  2292  04E9  2CF5               	goto	l1865
  2293  04EA                     l1861:
  2294  04EA  3001               	movlw	1
  2295  04EB                     u1475:
  2296  04EB  1003               	clrc
  2297  04EC  0DA0               	rlf	___lwdiv@divisor,f
  2298  04ED  0DA1               	rlf	___lwdiv@divisor+1,f
  2299  04EE  3EFF               	addlw	-1
  2300  04EF  1D03               	skipz
  2301  04F0  2CEB               	goto	u1475
  2302  04F1                     l1863:
  2303  04F1  3001               	movlw	1
  2304  04F2  00F4               	movwf	??___lwdiv
  2305  04F3  0874               	movf	??___lwdiv,w
  2306  04F4  07A4               	addwf	___lwdiv@counter,f
  2307  04F5                     l1865:
  2308  04F5  1FA1               	btfss	___lwdiv@divisor+1,7
  2309  04F6  2CF8               	goto	u1481
  2310  04F7  2CF9               	goto	u1480
  2311  04F8                     u1481:
  2312  04F8  2CEA               	goto	l1861
  2313  04F9                     u1480:
  2314  04F9                     l1867:
  2315  04F9  3001               	movlw	1
  2316  04FA                     u1495:
  2317  04FA  1003               	clrc
  2318  04FB  0DA5               	rlf	___lwdiv@quotient,f
  2319  04FC  0DA6               	rlf	___lwdiv@quotient+1,f
  2320  04FD  3EFF               	addlw	-1
  2321  04FE  1D03               	skipz
  2322  04FF  2CFA               	goto	u1495
  2323  0500  0821               	movf	___lwdiv@divisor+1,w
  2324  0501  0223               	subwf	___lwdiv@dividend+1,w
  2325  0502  1D03               	skipz
  2326  0503  2D06               	goto	u1505
  2327  0504  0820               	movf	___lwdiv@divisor,w
  2328  0505  0222               	subwf	___lwdiv@dividend,w
  2329  0506                     u1505:
  2330  0506  1C03               	skipc
  2331  0507  2D09               	goto	u1501
  2332  0508  2D0A               	goto	u1500
  2333  0509                     u1501:
  2334  0509  2D11               	goto	l1873
  2335  050A                     u1500:
  2336  050A                     l1869:
  2337  050A  0820               	movf	___lwdiv@divisor,w
  2338  050B  02A2               	subwf	___lwdiv@dividend,f
  2339  050C  0821               	movf	___lwdiv@divisor+1,w
  2340  050D  1C03               	skipc
  2341  050E  03A3               	decf	___lwdiv@dividend+1,f
  2342  050F  02A3               	subwf	___lwdiv@dividend+1,f
  2343  0510                     l1871:
  2344  0510  1425               	bsf	___lwdiv@quotient,0
  2345  0511                     l1873:
  2346  0511  3001               	movlw	1
  2347  0512                     u1515:
  2348  0512  1003               	clrc
  2349  0513  0CA1               	rrf	___lwdiv@divisor+1,f
  2350  0514  0CA0               	rrf	___lwdiv@divisor,f
  2351  0515  3EFF               	addlw	-1
  2352  0516  1D03               	skipz
  2353  0517  2D12               	goto	u1515
  2354  0518                     l1875:
  2355  0518  3001               	movlw	1
  2356  0519  02A4               	subwf	___lwdiv@counter,f
  2357  051A  1D03               	btfss	3,2
  2358  051B  2D1D               	goto	u1521
  2359  051C  2D1E               	goto	u1520
  2360  051D                     u1521:
  2361  051D  2CF9               	goto	l1867
  2362  051E                     u1520:
  2363  051E                     l1877:
  2364  051E  0826               	movf	___lwdiv@quotient+1,w
  2365  051F  00A1               	movwf	?___lwdiv+1
  2366  0520  0825               	movf	___lwdiv@quotient,w
  2367  0521  00A0               	movwf	?___lwdiv
  2368  0522                     l601:
  2369  0522  0008               	return
  2370  0523                     __end_of___lwdiv:
  2371                           
  2372                           	psect	text9
  2373  0357                     __ptext9:	
  2374 ;; *************** function _divisor *****************
  2375 ;; Defined at:
  2376 ;;		line 187 in file "LAB2.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  a               1    wreg     unsigned char 
  2379 ;;  dig             1    5[COMMON] PTR unsigned char 
  2380 ;;		 -> vol2(1), vol1(1), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  a               1   10[BANK0 ] unsigned char 
  2383 ;;  i               2   13[BANK0 ] int 
  2384 ;;  b               2   11[BANK0 ] int 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         1       0       0       0       0
  2395 ;;      Locals:         0       5       0       0       0
  2396 ;;      Temps:          0       2       0       0       0
  2397 ;;      Totals:         1       7       0       0       0
  2398 ;;Total ram usage:        8 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 3
  2401 ;; This function calls:
  2402 ;;		___awdiv
  2403 ;;		___awmod
  2404 ;; This function is called by:
  2405 ;;		_conversion_char
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _divisor
  2411  0357                     _divisor:
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2415                           ;divisor@a stored from wreg
  2416  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0359  00AA               	movwf	divisor@a
  2419  035A                     l1881:
  2420                           
  2421                           ;LAB2.c: 188:     int b = 2*a;
  2422  035A  082A               	movf	divisor@a,w
  2423  035B  00A8               	movwf	??_divisor
  2424  035C  01A9               	clrf	??_divisor+1
  2425  035D  1003               	clrc
  2426  035E  0D28               	rlf	??_divisor,w
  2427  035F  00AB               	movwf	divisor@b
  2428  0360  0D29               	rlf	??_divisor+1,w
  2429  0361  00AC               	movwf	divisor@b+1
  2430  0362                     l1883:
  2431                           
  2432                           ;LAB2.c: 189:     for(int i = 0; i<3 ; i++){
  2433  0362  01AD               	clrf	divisor@i
  2434  0363  01AE               	clrf	divisor@i+1
  2435  0364                     l1889:
  2436                           
  2437                           ;LAB2.c: 190:         dig[i] = b % 10;
  2438  0364  300A               	movlw	10
  2439  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0367  00A0               	movwf	___awmod@divisor
  2442  0368  3000               	movlw	0
  2443  0369  00A1               	movwf	___awmod@divisor+1
  2444  036A  082C               	movf	divisor@b+1,w
  2445  036B  00A3               	movwf	___awmod@dividend+1
  2446  036C  082B               	movf	divisor@b,w
  2447  036D  00A2               	movwf	___awmod@dividend
  2448  036E  120A  118A  22FC  120A  118A  	fcall	___awmod
  2449  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0375  0820               	movf	?___awmod,w
  2452  0376  00A8               	movwf	??_divisor
  2453  0377  082D               	movf	divisor@i,w
  2454  0378  0775               	addwf	divisor@dig,w
  2455  0379  00A9               	movwf	??_divisor+1
  2456  037A  0829               	movf	??_divisor+1,w
  2457  037B  0084               	movwf	4
  2458  037C  0828               	movf	??_divisor,w
  2459  037D  1383               	bcf	3,7	;select IRP bank0
  2460  037E  0080               	movwf	0
  2461                           
  2462                           ;LAB2.c: 191:         b = (b - dig[i])/10;
  2463  037F  300A               	movlw	10
  2464  0380  00A0               	movwf	___awdiv@divisor
  2465  0381  3000               	movlw	0
  2466  0382  00A1               	movwf	___awdiv@divisor+1
  2467  0383  082D               	movf	divisor@i,w
  2468  0384  0775               	addwf	divisor@dig,w
  2469  0385  00A8               	movwf	??_divisor
  2470  0386  0828               	movf	??_divisor,w
  2471  0387  0084               	movwf	4
  2472  0388  0800               	movf	0,w
  2473  0389  022B               	subwf	divisor@b,w
  2474  038A  00A2               	movwf	___awdiv@dividend
  2475  038B  082C               	movf	divisor@b+1,w
  2476  038C  1C03               	skipc
  2477  038D  032C               	decf	divisor@b+1,w
  2478  038E  00A3               	movwf	___awdiv@dividend+1
  2479  038F  120A  118A  2238  120A  118A  	fcall	___awdiv
  2480  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0396  0821               	movf	?___awdiv+1,w
  2483  0397  00AC               	movwf	divisor@b+1
  2484  0398  0820               	movf	?___awdiv,w
  2485  0399  00AB               	movwf	divisor@b
  2486  039A                     l1891:
  2487                           
  2488                           ;LAB2.c: 192:     }
  2489  039A  3001               	movlw	1
  2490  039B  07AD               	addwf	divisor@i,f
  2491  039C  1803               	skipnc
  2492  039D  0AAE               	incf	divisor@i+1,f
  2493  039E  3000               	movlw	0
  2494  039F  07AE               	addwf	divisor@i+1,f
  2495  03A0                     l1893:
  2496  03A0  082E               	movf	divisor@i+1,w
  2497  03A1  3A80               	xorlw	128
  2498  03A2  00FF               	movwf	btemp+1
  2499  03A3  3080               	movlw	128
  2500  03A4  027F               	subwf	btemp+1,w
  2501  03A5  1D03               	skipz
  2502  03A6  2BA9               	goto	u1535
  2503  03A7  3003               	movlw	3
  2504  03A8  022D               	subwf	divisor@i,w
  2505  03A9                     u1535:
  2506  03A9  1C03               	skipc
  2507  03AA  2BAC               	goto	u1531
  2508  03AB  2BAD               	goto	u1530
  2509  03AC                     u1531:
  2510  03AC  2B64               	goto	l1889
  2511  03AD                     u1530:
  2512  03AD                     l126:
  2513  03AD  0008               	return
  2514  03AE                     __end_of_divisor:
  2515                           
  2516                           	psect	text10
  2517  02FC                     __ptext10:	
  2518 ;; *************** function ___awmod *****************
  2519 ;; Defined at:
  2520 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  divisor         2    0[BANK0 ] int 
  2523 ;;  dividend        2    2[BANK0 ] int 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  sign            1    5[BANK0 ] unsigned char 
  2526 ;;  counter         1    4[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[BANK0 ] int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       4       0       0       0
  2537 ;;      Locals:         0       2       0       0       0
  2538 ;;      Temps:          1       0       0       0       0
  2539 ;;      Totals:         1       6       0       0       0
  2540 ;;Total ram usage:        7 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 2
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_divisor
  2547 ;;		_divisor1
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function ___awmod
  2553  02FC                     ___awmod:
  2554  02FC                     l1817:	
  2555                           ;incstack = 0
  2556                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2557                           
  2558  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2559  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2560  02FE  01A5               	clrf	___awmod@sign
  2561  02FF                     l1819:
  2562  02FF  1FA3               	btfss	___awmod@dividend+1,7
  2563  0300  2B02               	goto	u1371
  2564  0301  2B03               	goto	u1370
  2565  0302                     u1371:
  2566  0302  2B0A               	goto	l1825
  2567  0303                     u1370:
  2568  0303                     l1821:
  2569  0303  09A2               	comf	___awmod@dividend,f
  2570  0304  09A3               	comf	___awmod@dividend+1,f
  2571  0305  0AA2               	incf	___awmod@dividend,f
  2572  0306  1903               	skipnz
  2573  0307  0AA3               	incf	___awmod@dividend+1,f
  2574  0308                     l1823:
  2575  0308  01A5               	clrf	___awmod@sign
  2576  0309  0AA5               	incf	___awmod@sign,f
  2577  030A                     l1825:
  2578  030A  1FA1               	btfss	___awmod@divisor+1,7
  2579  030B  2B0D               	goto	u1381
  2580  030C  2B0E               	goto	u1380
  2581  030D                     u1381:
  2582  030D  2B13               	goto	l1829
  2583  030E                     u1380:
  2584  030E                     l1827:
  2585  030E  09A0               	comf	___awmod@divisor,f
  2586  030F  09A1               	comf	___awmod@divisor+1,f
  2587  0310  0AA0               	incf	___awmod@divisor,f
  2588  0311  1903               	skipnz
  2589  0312  0AA1               	incf	___awmod@divisor+1,f
  2590  0313                     l1829:
  2591  0313  0820               	movf	___awmod@divisor,w
  2592  0314  0421               	iorwf	___awmod@divisor+1,w
  2593  0315  1903               	btfsc	3,2
  2594  0316  2B18               	goto	u1391
  2595  0317  2B19               	goto	u1390
  2596  0318                     u1391:
  2597  0318  2B48               	goto	l1847
  2598  0319                     u1390:
  2599  0319                     l1831:
  2600  0319  01A4               	clrf	___awmod@counter
  2601  031A  0AA4               	incf	___awmod@counter,f
  2602  031B  2B27               	goto	l1837
  2603  031C                     l1833:
  2604  031C  3001               	movlw	1
  2605  031D                     u1405:
  2606  031D  1003               	clrc
  2607  031E  0DA0               	rlf	___awmod@divisor,f
  2608  031F  0DA1               	rlf	___awmod@divisor+1,f
  2609  0320  3EFF               	addlw	-1
  2610  0321  1D03               	skipz
  2611  0322  2B1D               	goto	u1405
  2612  0323                     l1835:
  2613  0323  3001               	movlw	1
  2614  0324  00F4               	movwf	??___awmod
  2615  0325  0874               	movf	??___awmod,w
  2616  0326  07A4               	addwf	___awmod@counter,f
  2617  0327                     l1837:
  2618  0327  1FA1               	btfss	___awmod@divisor+1,7
  2619  0328  2B2A               	goto	u1411
  2620  0329  2B2B               	goto	u1410
  2621  032A                     u1411:
  2622  032A  2B1C               	goto	l1833
  2623  032B                     u1410:
  2624  032B                     l1839:
  2625  032B  0821               	movf	___awmod@divisor+1,w
  2626  032C  0223               	subwf	___awmod@dividend+1,w
  2627  032D  1D03               	skipz
  2628  032E  2B31               	goto	u1425
  2629  032F  0820               	movf	___awmod@divisor,w
  2630  0330  0222               	subwf	___awmod@dividend,w
  2631  0331                     u1425:
  2632  0331  1C03               	skipc
  2633  0332  2B34               	goto	u1421
  2634  0333  2B35               	goto	u1420
  2635  0334                     u1421:
  2636  0334  2B3B               	goto	l1843
  2637  0335                     u1420:
  2638  0335                     l1841:
  2639  0335  0820               	movf	___awmod@divisor,w
  2640  0336  02A2               	subwf	___awmod@dividend,f
  2641  0337  0821               	movf	___awmod@divisor+1,w
  2642  0338  1C03               	skipc
  2643  0339  03A3               	decf	___awmod@dividend+1,f
  2644  033A  02A3               	subwf	___awmod@dividend+1,f
  2645  033B                     l1843:
  2646  033B  3001               	movlw	1
  2647  033C                     u1435:
  2648  033C  1003               	clrc
  2649  033D  0CA1               	rrf	___awmod@divisor+1,f
  2650  033E  0CA0               	rrf	___awmod@divisor,f
  2651  033F  3EFF               	addlw	-1
  2652  0340  1D03               	skipz
  2653  0341  2B3C               	goto	u1435
  2654  0342                     l1845:
  2655  0342  3001               	movlw	1
  2656  0343  02A4               	subwf	___awmod@counter,f
  2657  0344  1D03               	btfss	3,2
  2658  0345  2B47               	goto	u1441
  2659  0346  2B48               	goto	u1440
  2660  0347                     u1441:
  2661  0347  2B2B               	goto	l1839
  2662  0348                     u1440:
  2663  0348                     l1847:
  2664  0348  0825               	movf	___awmod@sign,w
  2665  0349  1903               	btfsc	3,2
  2666  034A  2B4C               	goto	u1451
  2667  034B  2B4D               	goto	u1450
  2668  034C                     u1451:
  2669  034C  2B52               	goto	l1851
  2670  034D                     u1450:
  2671  034D                     l1849:
  2672  034D  09A2               	comf	___awmod@dividend,f
  2673  034E  09A3               	comf	___awmod@dividend+1,f
  2674  034F  0AA2               	incf	___awmod@dividend,f
  2675  0350  1903               	skipnz
  2676  0351  0AA3               	incf	___awmod@dividend+1,f
  2677  0352                     l1851:
  2678  0352  0823               	movf	___awmod@dividend+1,w
  2679  0353  00A1               	movwf	?___awmod+1
  2680  0354  0822               	movf	___awmod@dividend,w
  2681  0355  00A0               	movwf	?___awmod
  2682  0356                     l495:
  2683  0356  0008               	return
  2684  0357                     __end_of___awmod:
  2685                           
  2686                           	psect	text11
  2687  0238                     __ptext11:	
  2688 ;; *************** function ___awdiv *****************
  2689 ;; Defined at:
  2690 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  divisor         2    0[BANK0 ] int 
  2693 ;;  dividend        2    2[BANK0 ] int 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  quotient        2    6[BANK0 ] int 
  2696 ;;  sign            1    5[BANK0 ] unsigned char 
  2697 ;;  counter         1    4[BANK0 ] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  2    0[BANK0 ] int 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         0       4       0       0       0
  2708 ;;      Locals:         0       4       0       0       0
  2709 ;;      Temps:          1       0       0       0       0
  2710 ;;      Totals:         1       8       0       0       0
  2711 ;;Total ram usage:        9 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 2
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_divisor
  2718 ;;		_divisor1
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function ___awdiv
  2724  0238                     ___awdiv:
  2725  0238                     l1773:	
  2726                           ;incstack = 0
  2727                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2728                           
  2729  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2731  023A  01A5               	clrf	___awdiv@sign
  2732  023B                     l1775:
  2733  023B  1FA1               	btfss	___awdiv@divisor+1,7
  2734  023C  2A3E               	goto	u1271
  2735  023D  2A3F               	goto	u1270
  2736  023E                     u1271:
  2737  023E  2A46               	goto	l1781
  2738  023F                     u1270:
  2739  023F                     l1777:
  2740  023F  09A0               	comf	___awdiv@divisor,f
  2741  0240  09A1               	comf	___awdiv@divisor+1,f
  2742  0241  0AA0               	incf	___awdiv@divisor,f
  2743  0242  1903               	skipnz
  2744  0243  0AA1               	incf	___awdiv@divisor+1,f
  2745  0244                     l1779:
  2746  0244  01A5               	clrf	___awdiv@sign
  2747  0245  0AA5               	incf	___awdiv@sign,f
  2748  0246                     l1781:
  2749  0246  1FA3               	btfss	___awdiv@dividend+1,7
  2750  0247  2A49               	goto	u1281
  2751  0248  2A4A               	goto	u1280
  2752  0249                     u1281:
  2753  0249  2A53               	goto	l1787
  2754  024A                     u1280:
  2755  024A                     l1783:
  2756  024A  09A2               	comf	___awdiv@dividend,f
  2757  024B  09A3               	comf	___awdiv@dividend+1,f
  2758  024C  0AA2               	incf	___awdiv@dividend,f
  2759  024D  1903               	skipnz
  2760  024E  0AA3               	incf	___awdiv@dividend+1,f
  2761  024F                     l1785:
  2762  024F  3001               	movlw	1
  2763  0250  00F4               	movwf	??___awdiv
  2764  0251  0874               	movf	??___awdiv,w
  2765  0252  06A5               	xorwf	___awdiv@sign,f
  2766  0253                     l1787:
  2767  0253  01A6               	clrf	___awdiv@quotient
  2768  0254  01A7               	clrf	___awdiv@quotient+1
  2769  0255                     l1789:
  2770  0255  0820               	movf	___awdiv@divisor,w
  2771  0256  0421               	iorwf	___awdiv@divisor+1,w
  2772  0257  1903               	btfsc	3,2
  2773  0258  2A5A               	goto	u1291
  2774  0259  2A5B               	goto	u1290
  2775  025A                     u1291:
  2776  025A  2A92               	goto	l1809
  2777  025B                     u1290:
  2778  025B                     l1791:
  2779  025B  01A4               	clrf	___awdiv@counter
  2780  025C  0AA4               	incf	___awdiv@counter,f
  2781  025D  2A69               	goto	l1797
  2782  025E                     l1793:
  2783  025E  3001               	movlw	1
  2784  025F                     u1305:
  2785  025F  1003               	clrc
  2786  0260  0DA0               	rlf	___awdiv@divisor,f
  2787  0261  0DA1               	rlf	___awdiv@divisor+1,f
  2788  0262  3EFF               	addlw	-1
  2789  0263  1D03               	skipz
  2790  0264  2A5F               	goto	u1305
  2791  0265                     l1795:
  2792  0265  3001               	movlw	1
  2793  0266  00F4               	movwf	??___awdiv
  2794  0267  0874               	movf	??___awdiv,w
  2795  0268  07A4               	addwf	___awdiv@counter,f
  2796  0269                     l1797:
  2797  0269  1FA1               	btfss	___awdiv@divisor+1,7
  2798  026A  2A6C               	goto	u1311
  2799  026B  2A6D               	goto	u1310
  2800  026C                     u1311:
  2801  026C  2A5E               	goto	l1793
  2802  026D                     u1310:
  2803  026D                     l1799:
  2804  026D  3001               	movlw	1
  2805  026E                     u1325:
  2806  026E  1003               	clrc
  2807  026F  0DA6               	rlf	___awdiv@quotient,f
  2808  0270  0DA7               	rlf	___awdiv@quotient+1,f
  2809  0271  3EFF               	addlw	-1
  2810  0272  1D03               	skipz
  2811  0273  2A6E               	goto	u1325
  2812  0274  0821               	movf	___awdiv@divisor+1,w
  2813  0275  0223               	subwf	___awdiv@dividend+1,w
  2814  0276  1D03               	skipz
  2815  0277  2A7A               	goto	u1335
  2816  0278  0820               	movf	___awdiv@divisor,w
  2817  0279  0222               	subwf	___awdiv@dividend,w
  2818  027A                     u1335:
  2819  027A  1C03               	skipc
  2820  027B  2A7D               	goto	u1331
  2821  027C  2A7E               	goto	u1330
  2822  027D                     u1331:
  2823  027D  2A85               	goto	l1805
  2824  027E                     u1330:
  2825  027E                     l1801:
  2826  027E  0820               	movf	___awdiv@divisor,w
  2827  027F  02A2               	subwf	___awdiv@dividend,f
  2828  0280  0821               	movf	___awdiv@divisor+1,w
  2829  0281  1C03               	skipc
  2830  0282  03A3               	decf	___awdiv@dividend+1,f
  2831  0283  02A3               	subwf	___awdiv@dividend+1,f
  2832  0284                     l1803:
  2833  0284  1426               	bsf	___awdiv@quotient,0
  2834  0285                     l1805:
  2835  0285  3001               	movlw	1
  2836  0286                     u1345:
  2837  0286  1003               	clrc
  2838  0287  0CA1               	rrf	___awdiv@divisor+1,f
  2839  0288  0CA0               	rrf	___awdiv@divisor,f
  2840  0289  3EFF               	addlw	-1
  2841  028A  1D03               	skipz
  2842  028B  2A86               	goto	u1345
  2843  028C                     l1807:
  2844  028C  3001               	movlw	1
  2845  028D  02A4               	subwf	___awdiv@counter,f
  2846  028E  1D03               	btfss	3,2
  2847  028F  2A91               	goto	u1351
  2848  0290  2A92               	goto	u1350
  2849  0291                     u1351:
  2850  0291  2A6D               	goto	l1799
  2851  0292                     u1350:
  2852  0292                     l1809:
  2853  0292  0825               	movf	___awdiv@sign,w
  2854  0293  1903               	btfsc	3,2
  2855  0294  2A96               	goto	u1361
  2856  0295  2A97               	goto	u1360
  2857  0296                     u1361:
  2858  0296  2A9C               	goto	l1813
  2859  0297                     u1360:
  2860  0297                     l1811:
  2861  0297  09A6               	comf	___awdiv@quotient,f
  2862  0298  09A7               	comf	___awdiv@quotient+1,f
  2863  0299  0AA6               	incf	___awdiv@quotient,f
  2864  029A  1903               	skipnz
  2865  029B  0AA7               	incf	___awdiv@quotient+1,f
  2866  029C                     l1813:
  2867  029C  0827               	movf	___awdiv@quotient+1,w
  2868  029D  00A1               	movwf	?___awdiv+1
  2869  029E  0826               	movf	___awdiv@quotient,w
  2870  029F  00A0               	movwf	?___awdiv
  2871  02A0                     l482:
  2872  02A0  0008               	return
  2873  02A1                     __end_of___awdiv:
  2874                           
  2875                           	psect	text12
  2876  062E                     __ptext12:	
  2877 ;; *************** function _conversion *****************
  2878 ;; Defined at:
  2879 ;;		line 21 in file "ADC.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0
  2895 ;;      Temps:          1       0       0       0       0
  2896 ;;      Totals:         1       0       0       0       0
  2897 ;;Total ram usage:        1 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 2
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _conversion
  2909  062E                     _conversion:
  2910  062E                     l1675:	
  2911                           ;incstack = 0
  2912                           ; Regs used in _conversion: [wreg+status,2+status,0]
  2913                           
  2914                           
  2915                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  2916  062E  1283               	bcf	3,5	;RP0=0, select bank0
  2917  062F  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0630  189F               	btfsc	31,1	;volatile
  2919  0631  2E33               	goto	u1201
  2920  0632  2E34               	goto	u1200
  2921  0633                     u1201:
  2922  0633  2E59               	goto	l215
  2923  0634                     u1200:
  2924  0634                     l1677:
  2925                           
  2926                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  2927  0634  0C1F               	rrf	31,w	;volatile
  2928  0635  00F4               	movwf	??_conversion
  2929  0636  0C74               	rrf	??_conversion,w
  2930  0637  390F               	andlw	15
  2931  0638  3A01               	xorlw	1
  2932  0639  1D03               	skipz
  2933  063A  2E3C               	goto	u1211
  2934  063B  2E3D               	goto	u1210
  2935  063C                     u1211:
  2936  063C  2E44               	goto	l1683
  2937  063D                     u1210:
  2938  063D                     l1679:
  2939                           
  2940                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  2941  063D  30C3               	movlw	-61
  2942  063E  059F               	andwf	31,f	;volatile
  2943  063F                     l1681:
  2944                           
  2945                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  2946  063F  3021               	movlw	33
  2947  0640  00F4               	movwf	??_conversion
  2948  0641                     u1797:
  2949  0641  0BF4               	decfsz	??_conversion,f
  2950  0642  2E41               	goto	u1797
  2951                           
  2952                           ;ADC.c: 26:         }
  2953  0643  2E52               	goto	l1689
  2954  0644                     l1683:
  2955  0644  0C1F               	rrf	31,w	;volatile
  2956  0645  00F4               	movwf	??_conversion
  2957  0646  0C74               	rrf	??_conversion,w
  2958  0647  390F               	andlw	15
  2959  0648  3A00               	xorlw	0
  2960  0649  1D03               	skipz
  2961  064A  2E4C               	goto	u1221
  2962  064B  2E4D               	goto	u1220
  2963  064C                     u1221:
  2964  064C  2E52               	goto	l1689
  2965  064D                     u1220:
  2966  064D                     l1685:
  2967                           
  2968                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  2969  064D  081F               	movf	31,w	;volatile
  2970  064E  39C3               	andlw	-61
  2971  064F  3804               	iorlw	4
  2972  0650  009F               	movwf	31	;volatile
  2973  0651  2E3F               	goto	l1681
  2974  0652                     l1689:
  2975                           
  2976                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2977  0652  3021               	movlw	33
  2978  0653  00F4               	movwf	??_conversion
  2979  0654                     u1807:
  2980  0654  0BF4               	decfsz	??_conversion,f
  2981  0655  2E54               	goto	u1807
  2982  0656                     l1691:
  2983                           
  2984                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  2985  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0658  149F               	bsf	31,1	;volatile
  2988  0659                     l215:
  2989  0659  0008               	return
  2990  065A                     __end_of_conversion:
  2991                           
  2992                           	psect	text13
  2993  0678                     __ptext13:	
  2994 ;; *************** function _Limpiar_pantallaLCD *****************
  2995 ;; Defined at:
  2996 ;;		line 63 in file "LCD.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0
  3012 ;;      Temps:          0       2       0       0       0
  3013 ;;      Totals:         0       2       0       0       0
  3014 ;;Total ram usage:        2 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 4
  3017 ;; This function calls:
  3018 ;;		_Escribir_comandoLCD
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _Limpiar_pantallaLCD
  3026  0678                     _Limpiar_pantallaLCD:
  3027  0678                     l2015:	
  3028                           ;incstack = 0
  3029                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  3030                           
  3031                           
  3032                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  3033  0678  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0679  1303               	bcf	3,6	;RP1=0, select bank0
  3035  067A  1287               	bcf	7,5	;volatile
  3036  067B  1208               	bcf	8,4	;volatile
  3037  067C                     l2017:
  3038                           
  3039                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  3040  067C  3001               	movlw	1
  3041  067D  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3042  0682                     l2019:
  3043                           
  3044                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3045  0682  301A               	movlw	26
  3046  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0685  00A1               	movwf	??_Limpiar_pantallaLCD+1
  3049  0686  30F7               	movlw	247
  3050  0687  00A0               	movwf	??_Limpiar_pantallaLCD
  3051  0688                     u1817:
  3052  0688  0BA0               	decfsz	??_Limpiar_pantallaLCD,f
  3053  0689  2E88               	goto	u1817
  3054  068A  0BA1               	decfsz	??_Limpiar_pantallaLCD+1,f
  3055  068B  2E88               	goto	u1817
  3056  068C  2E8D               	nop2
  3057  068D                     l2021:
  3058                           
  3059                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  3060  068D  3002               	movlw	2
  3061  068E  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3062  0693                     l176:
  3063  0693  0008               	return
  3064  0694                     __end_of_Limpiar_pantallaLCD:
  3065                           
  3066                           	psect	text14
  3067  01C4                     __ptext14:	
  3068 ;; *************** function _Iniciar_LCD *****************
  3069 ;; Defined at:
  3070 ;;		line 30 in file "LCD.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       2       0       0       0
  3087 ;;      Totals:         0       2       0       0       0
  3088 ;;Total ram usage:        2 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 4
  3091 ;; This function calls:
  3092 ;;		_Escribir_comandoLCD
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           
  3099                           ;psect for function _Iniciar_LCD
  3100  01C4                     _Iniciar_LCD:
  3101  01C4                     l1989:	
  3102                           ;incstack = 0
  3103                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3104                           
  3105                           
  3106                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  3107  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3108  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3109  01C6  1287               	bcf	7,5	;volatile
  3110                           
  3111                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3112  01C7  1208               	bcf	8,4	;volatile
  3113  01C8                     l1991:
  3114                           
  3115                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3116  01C8  3025               	movlw	37
  3117  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3118  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3119  01CB  00A1               	movwf	??_Iniciar_LCD+1
  3120  01CC  305B               	movlw	91
  3121  01CD  00A0               	movwf	??_Iniciar_LCD
  3122  01CE                     u1827:
  3123  01CE  0BA0               	decfsz	??_Iniciar_LCD,f
  3124  01CF  29CE               	goto	u1827
  3125  01D0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3126  01D1  29CE               	goto	u1827
  3127  01D2                     l1993:
  3128                           
  3129                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3130  01D2  3030               	movlw	48
  3131  01D3  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3132  01D8                     l1995:
  3133                           
  3134                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3135  01D8  300B               	movlw	11
  3136  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3137  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3138  01DB  00A1               	movwf	??_Iniciar_LCD+1
  3139  01DC  3061               	movlw	97
  3140  01DD  00A0               	movwf	??_Iniciar_LCD
  3141  01DE                     u1837:
  3142  01DE  0BA0               	decfsz	??_Iniciar_LCD,f
  3143  01DF  29DE               	goto	u1837
  3144  01E0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3145  01E1  29DE               	goto	u1837
  3146  01E2  29E3               	nop2
  3147                           
  3148                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3149  01E3  3030               	movlw	48
  3150  01E4  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3151  01E9                     l1997:
  3152                           
  3153                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3154  01E9  3041               	movlw	65
  3155  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3156  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3157  01EC  00A0               	movwf	??_Iniciar_LCD
  3158  01ED                     u1847:
  3159  01ED  0BA0               	decfsz	??_Iniciar_LCD,f
  3160  01EE  29ED               	goto	u1847
  3161  01EF  29F0               	nop2
  3162  01F0                     l1999:
  3163                           
  3164                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3165  01F0  3030               	movlw	48
  3166  01F1  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3167                           
  3168                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3169  01F6  3041               	movlw	65
  3170  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3171  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3172  01F9  00A0               	movwf	??_Iniciar_LCD
  3173  01FA                     u1857:
  3174  01FA  0BA0               	decfsz	??_Iniciar_LCD,f
  3175  01FB  29FA               	goto	u1857
  3176  01FC  29FD               	nop2
  3177  01FD                     l2001:
  3178                           
  3179                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3180  01FD  3038               	movlw	56
  3181  01FE  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3182  0203                     l2003:
  3183                           
  3184                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3185  0203  3041               	movlw	65
  3186  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0206  00A0               	movwf	??_Iniciar_LCD
  3189  0207                     u1867:
  3190  0207  0BA0               	decfsz	??_Iniciar_LCD,f
  3191  0208  2A07               	goto	u1867
  3192  0209  2A0A               	nop2
  3193                           
  3194                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3195  020A  3008               	movlw	8
  3196  020B  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3197  0210                     l2005:
  3198                           
  3199                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3200  0210  3041               	movlw	65
  3201  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0213  00A0               	movwf	??_Iniciar_LCD
  3204  0214                     u1877:
  3205  0214  0BA0               	decfsz	??_Iniciar_LCD,f
  3206  0215  2A14               	goto	u1877
  3207  0216  2A17               	nop2
  3208  0217                     l2007:
  3209                           
  3210                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3211  0217  3001               	movlw	1
  3212  0218  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3213                           
  3214                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3215  021D  3041               	movlw	65
  3216  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3217  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0220  00A0               	movwf	??_Iniciar_LCD
  3219  0221                     u1887:
  3220  0221  0BA0               	decfsz	??_Iniciar_LCD,f
  3221  0222  2A21               	goto	u1887
  3222  0223  2A24               	nop2
  3223  0224                     l2009:
  3224                           
  3225                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3226  0224  3006               	movlw	6
  3227  0225  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3228  022A                     l2011:
  3229                           
  3230                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3231  022A  3041               	movlw	65
  3232  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3233  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3234  022D  00A0               	movwf	??_Iniciar_LCD
  3235  022E                     u1897:
  3236  022E  0BA0               	decfsz	??_Iniciar_LCD,f
  3237  022F  2A2E               	goto	u1897
  3238  0230  2A31               	nop2
  3239                           
  3240                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3241  0231  300C               	movlw	12
  3242  0232  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3243  0237                     l167:
  3244  0237  0008               	return
  3245  0238                     __end_of_Iniciar_LCD:
  3246                           
  3247                           	psect	text15
  3248  05A2                     __ptext15:	
  3249 ;; *************** function _Escribir_stringLCD *****************
  3250 ;; Defined at:
  3251 ;;		line 55 in file "LCD.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  3254 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3255 ;;		 -> STR_2(7), STR_1(5), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  i               1    3[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       2       0       0       0
  3268 ;;      Locals:         0       1       0       0       0
  3269 ;;      Temps:          0       1       0       0       0
  3270 ;;      Totals:         0       4       0       0       0
  3271 ;;Total ram usage:        4 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 4
  3274 ;; This function calls:
  3275 ;;		_Escribir_comandoLCD
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _Escribir_stringLCD
  3283  05A2                     _Escribir_stringLCD:
  3284  05A2                     l2047:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3287                           
  3288                           
  3289                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3290  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3291  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3292  05A4  1687               	bsf	7,5	;volatile
  3293  05A5  1208               	bcf	8,4	;volatile
  3294  05A6                     l2049:
  3295                           
  3296                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3297  05A6  01A3               	clrf	Escribir_stringLCD@i
  3298  05A7  2DBF               	goto	l2055
  3299  05A8                     l2051:
  3300                           
  3301                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3302  05A8  0823               	movf	Escribir_stringLCD@i,w
  3303  05A9  0720               	addwf	Escribir_stringLCD@d,w
  3304  05AA  0084               	movwf	4
  3305  05AB  0821               	movf	Escribir_stringLCD@d+1,w
  3306  05AC  1803               	skipnc
  3307  05AD  0A21               	incf	Escribir_stringLCD@d+1,w
  3308  05AE  00FF               	movwf	btemp+1
  3309  05AF  120A  118A  2497  120A  118A  	fcall	stringtab
  3310  05B4  120A  118A  2523  120A  118A  	fcall	_Escribir_comandoLCD
  3311  05B9                     l2053:
  3312                           
  3313                           ;LCD.c: 60:     }
  3314  05B9  3001               	movlw	1
  3315  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3316  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3317  05BC  00A2               	movwf	??_Escribir_stringLCD
  3318  05BD  0822               	movf	??_Escribir_stringLCD,w
  3319  05BE  07A3               	addwf	Escribir_stringLCD@i,f
  3320  05BF                     l2055:
  3321  05BF  0823               	movf	Escribir_stringLCD@i,w
  3322  05C0  0720               	addwf	Escribir_stringLCD@d,w
  3323  05C1  0084               	movwf	4
  3324  05C2  0821               	movf	Escribir_stringLCD@d+1,w
  3325  05C3  1803               	skipnc
  3326  05C4  0A21               	incf	Escribir_stringLCD@d+1,w
  3327  05C5  00FF               	movwf	btemp+1
  3328  05C6  120A  118A  2497  120A  118A  	fcall	stringtab
  3329  05CB  3A00               	xorlw	0
  3330  05CC  1D03               	skipz
  3331  05CD  2DCF               	goto	u1741
  3332  05CE  2DD0               	goto	u1740
  3333  05CF                     u1741:
  3334  05CF  2DA8               	goto	l2051
  3335  05D0                     u1740:
  3336  05D0                     l173:
  3337  05D0  0008               	return
  3338  05D1                     __end_of_Escribir_stringLCD:
  3339                           
  3340                           	psect	text16
  3341  0523                     __ptext16:	
  3342 ;; *************** function _Escribir_comandoLCD *****************
  3343 ;; Defined at:
  3344 ;;		line 17 in file "LCD.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  Comando         1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  Comando         1    5[COMMON] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         0       0       0       0       0
  3359 ;;      Locals:         1       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         1       0       0       0       0
  3362 ;;Total ram usage:        1 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 3
  3365 ;; This function calls:
  3366 ;;		_prender_ELCD
  3367 ;; This function is called by:
  3368 ;;		_Iniciar_LCD
  3369 ;;		_Escribir_stringLCD
  3370 ;;		_Limpiar_pantallaLCD
  3371 ;;		_set_cursor
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _Escribir_comandoLCD
  3377  0523                     _Escribir_comandoLCD:
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3381                           ;Escribir_comandoLCD@Comando stored from wreg
  3382  0523  00F5               	movwf	Escribir_comandoLCD@Comando
  3383  0524                     l1969:
  3384                           
  3385                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3386  0524  1C75               	btfss	Escribir_comandoLCD@Comando,0
  3387  0525  2D27               	goto	u1621
  3388  0526  2D28               	goto	u1620
  3389  0527                     u1621:
  3390  0527  2D2C               	goto	l148
  3391  0528                     u1620:
  3392  0528                     l1971:
  3393  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3395  052A  1708               	bsf	8,6	;volatile
  3396  052B  2D2F               	goto	l149
  3397  052C                     l148:
  3398  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3399  052D  1303               	bcf	3,6	;RP1=0, select bank0
  3400  052E  1308               	bcf	8,6	;volatile
  3401  052F                     l149:
  3402                           
  3403                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3404  052F  1CF5               	btfss	Escribir_comandoLCD@Comando,1
  3405  0530  2D32               	goto	u1631
  3406  0531  2D33               	goto	u1630
  3407  0532                     u1631:
  3408  0532  2D35               	goto	l150
  3409  0533                     u1630:
  3410  0533                     l1973:
  3411  0533  1788               	bsf	8,7	;volatile
  3412  0534  2D36               	goto	l151
  3413  0535                     l150:
  3414  0535  1388               	bcf	8,7	;volatile
  3415  0536                     l151:
  3416                           
  3417                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3418  0536  1D75               	btfss	Escribir_comandoLCD@Comando,2
  3419  0537  2D39               	goto	u1641
  3420  0538  2D3A               	goto	u1640
  3421  0539                     u1641:
  3422  0539  2D3C               	goto	l152
  3423  053A                     u1640:
  3424  053A                     l1975:
  3425  053A  1406               	bsf	6,0	;volatile
  3426  053B  2D3D               	goto	l153
  3427  053C                     l152:
  3428  053C  1006               	bcf	6,0	;volatile
  3429  053D                     l153:
  3430                           
  3431                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3432  053D  1DF5               	btfss	Escribir_comandoLCD@Comando,3
  3433  053E  2D40               	goto	u1651
  3434  053F  2D41               	goto	u1650
  3435  0540                     u1651:
  3436  0540  2D43               	goto	l154
  3437  0541                     u1650:
  3438  0541                     l1977:
  3439  0541  1486               	bsf	6,1	;volatile
  3440  0542  2D44               	goto	l155
  3441  0543                     l154:
  3442  0543  1086               	bcf	6,1	;volatile
  3443  0544                     l155:
  3444                           
  3445                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3446  0544  1E75               	btfss	Escribir_comandoLCD@Comando,4
  3447  0545  2D47               	goto	u1661
  3448  0546  2D48               	goto	u1660
  3449  0547                     u1661:
  3450  0547  2D4A               	goto	l156
  3451  0548                     u1660:
  3452  0548                     l1979:
  3453  0548  1506               	bsf	6,2	;volatile
  3454  0549  2D4B               	goto	l157
  3455  054A                     l156:
  3456  054A  1106               	bcf	6,2	;volatile
  3457  054B                     l157:
  3458                           
  3459                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3460  054B  1EF5               	btfss	Escribir_comandoLCD@Comando,5
  3461  054C  2D4E               	goto	u1671
  3462  054D  2D4F               	goto	u1670
  3463  054E                     u1671:
  3464  054E  2D51               	goto	l158
  3465  054F                     u1670:
  3466  054F                     l1981:
  3467  054F  1586               	bsf	6,3	;volatile
  3468  0550  2D52               	goto	l159
  3469  0551                     l158:
  3470  0551  1186               	bcf	6,3	;volatile
  3471  0552                     l159:
  3472                           
  3473                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3474  0552  1F75               	btfss	Escribir_comandoLCD@Comando,6
  3475  0553  2D55               	goto	u1681
  3476  0554  2D56               	goto	u1680
  3477  0555                     u1681:
  3478  0555  2D58               	goto	l160
  3479  0556                     u1680:
  3480  0556                     l1983:
  3481  0556  1606               	bsf	6,4	;volatile
  3482  0557  2D59               	goto	l161
  3483  0558                     l160:
  3484  0558  1206               	bcf	6,4	;volatile
  3485  0559                     l161:
  3486                           
  3487                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3488  0559  1FF5               	btfss	Escribir_comandoLCD@Comando,7
  3489  055A  2D5C               	goto	u1691
  3490  055B  2D5D               	goto	u1690
  3491  055C                     u1691:
  3492  055C  2D5F               	goto	l162
  3493  055D                     u1690:
  3494  055D                     l1985:
  3495  055D  1686               	bsf	6,5	;volatile
  3496  055E  2D60               	goto	l1987
  3497  055F                     l162:
  3498  055F  1286               	bcf	6,5	;volatile
  3499  0560                     l1987:
  3500                           
  3501                           ;LCD.c: 27:     prender_ELCD();
  3502  0560  120A  118A  2694  120A  118A  	fcall	_prender_ELCD
  3503  0565                     l164:
  3504  0565  0008               	return
  3505  0566                     __end_of_Escribir_comandoLCD:
  3506                           
  3507                           	psect	text17
  3508  0694                     __ptext17:	
  3509 ;; *************** function _prender_ELCD *****************
  3510 ;; Defined at:
  3511 ;;		line 11 in file "LCD.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0
  3527 ;;      Temps:          1       0       0       0       0
  3528 ;;      Totals:         1       0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 2
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_Escribir_comandoLCD
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function _prender_ELCD
  3541  0694                     _prender_ELCD:
  3542  0694                     l1767:	
  3543                           ;incstack = 0
  3544                           ; Regs used in _prender_ELCD: [wreg]
  3545                           
  3546                           
  3547                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3548  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0696  1688               	bsf	8,5	;volatile
  3551  0697                     l1769:
  3552                           
  3553                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3554  0697  30C7               	movlw	199
  3555  0698  00F4               	movwf	??_prender_ELCD
  3556  0699                     u1907:
  3557  0699  2E9A               	nop2
  3558  069A  0BF4               	decfsz	??_prender_ELCD,f
  3559  069B  2E99               	goto	u1907
  3560  069C  2E9D               	nop2
  3561  069D  2E9E               	nop2
  3562  069E                     l1771:
  3563                           
  3564                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3565  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3566  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3567  06A0  1288               	bcf	8,5	;volatile
  3568  06A1                     l145:
  3569  06A1  0008               	return
  3570  06A2                     __end_of_prender_ELCD:
  3571                           
  3572                           	psect	text18
  3573  05D1                     __ptext18:	
  3574 ;; *************** function _isr *****************
  3575 ;; Defined at:
  3576 ;;		line 67 in file "LAB2.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0
  3592 ;;      Temps:          3       0       0       0       0
  3593 ;;      Totals:         3       0       0       0       0
  3594 ;;Total ram usage:        3 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		_ADC
  3599 ;; This function is called by:
  3600 ;;		Interrupt level 1
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _isr
  3606  05D1                     _isr:
  3607  05D1                     i1l1697:
  3608                           
  3609                           ;LAB2.c: 68:     if(PIR1bits.ADIF){
  3610  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3611  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3612  05D3  1F0C               	btfss	12,6	;volatile
  3613  05D4  2DD6               	goto	u123_21
  3614  05D5  2DD7               	goto	u123_20
  3615  05D6                     u123_21:
  3616  05D6  2DDF               	goto	i1l1703
  3617  05D7                     u123_20:
  3618  05D7                     i1l1699:
  3619                           
  3620                           ;LAB2.c: 69:         ADC();
  3621  05D7  120A  118A  265A  120A  118A  	fcall	_ADC
  3622  05DC                     i1l1701:
  3623                           
  3624                           ;LAB2.c: 70:         PIR1bits.ADIF = 0;
  3625  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3626  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3627  05DE  130C               	bcf	12,6	;volatile
  3628  05DF                     i1l1703:
  3629                           
  3630                           ;LAB2.c: 72:     if(PIR1bits.RCIF){
  3631  05DF  1E8C               	btfss	12,5	;volatile
  3632  05E0  2DE2               	goto	u124_21
  3633  05E1  2DE3               	goto	u124_20
  3634  05E2                     u124_21:
  3635  05E2  2DF9               	goto	i1l107
  3636  05E3                     u124_20:
  3637  05E3                     i1l1705:
  3638                           
  3639                           ;LAB2.c: 73:         dato = RCREG;
  3640  05E3  081A               	movf	26,w	;volatile
  3641  05E4  00F1               	movwf	??_isr
  3642  05E5  0871               	movf	??_isr,w
  3643  05E6  00F6               	movwf	_dato
  3644  05E7                     i1l1707:
  3645                           
  3646                           ;LAB2.c: 74:         if(dato == 75){
  3647  05E7  304B               	movlw	75
  3648  05E8  0676               	xorwf	_dato,w
  3649  05E9  1D03               	btfss	3,2
  3650  05EA  2DEC               	goto	u125_21
  3651  05EB  2DED               	goto	u125_20
  3652  05EC                     u125_21:
  3653  05EC  2DF1               	goto	i1l105
  3654  05ED                     u125_20:
  3655  05ED                     i1l1709:
  3656                           
  3657                           ;LAB2.c: 75:             Cont_U++;
  3658  05ED  3001               	movlw	1
  3659  05EE  00F1               	movwf	??_isr
  3660  05EF  0871               	movf	??_isr,w
  3661  05F0  07C7               	addwf	_Cont_U,f
  3662  05F1                     i1l105:	
  3663                           ;LAB2.c: 76:         }
  3664                           
  3665                           
  3666                           ;LAB2.c: 77:         if(dato == 77){
  3667  05F1  304D               	movlw	77
  3668  05F2  0676               	xorwf	_dato,w
  3669  05F3  1D03               	btfss	3,2
  3670  05F4  2DF6               	goto	u126_21
  3671  05F5  2DF7               	goto	u126_20
  3672  05F6                     u126_21:
  3673  05F6  2DF9               	goto	i1l107
  3674  05F7                     u126_20:
  3675  05F7                     i1l1711:
  3676                           
  3677                           ;LAB2.c: 78:             Cont_U--;
  3678  05F7  3001               	movlw	1
  3679  05F8  02C7               	subwf	_Cont_U,f
  3680  05F9                     i1l107:
  3681  05F9  0873               	movf	??_isr+2,w
  3682  05FA  008A               	movwf	10
  3683  05FB  0E72               	swapf	??_isr+1,w
  3684  05FC  0083               	movwf	3
  3685  05FD  0EFE               	swapf	btemp,f
  3686  05FE  0E7E               	swapf	btemp,w
  3687  05FF  0009               	retfie
  3688  0600                     __end_of_isr:
  3689                           
  3690                           	psect	intentry
  3691  0004                     __pintentry:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3694                           
  3695  0004                     interrupt_function:
  3696  007E                     saved_w	set	btemp
  3697  0004  00FE               	movwf	btemp
  3698  0005  0E03               	swapf	3,w
  3699  0006  00F2               	movwf	??_isr+1
  3700  0007  080A               	movf	10,w
  3701  0008  00F3               	movwf	??_isr+2
  3702  0009  120A  118A  2DD1   	ljmp	_isr
  3703                           
  3704                           	psect	text19
  3705  065A                     __ptext19:	
  3706 ;; *************** function _ADC *****************
  3707 ;; Defined at:
  3708 ;;		line 11 in file "ADC.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          1       0       0       0       0
  3725 ;;      Totals:         1       0       0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_isr
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _ADC
  3737  065A                     _ADC:
  3738  065A                     i1l1545:	
  3739                           ;incstack = 0
  3740                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3741                           
  3742                           
  3743                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3744  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3745  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3746  065C  0C1F               	rrf	31,w	;volatile
  3747  065D  00F0               	movwf	??_ADC
  3748  065E  0C70               	rrf	??_ADC,w
  3749  065F  390F               	andlw	15
  3750  0660  3A00               	xorlw	0
  3751  0661  1D03               	skipz
  3752  0662  2E64               	goto	u113_21
  3753  0663  2E65               	goto	u113_20
  3754  0664                     u113_21:
  3755  0664  2E6A               	goto	i1l1549
  3756  0665                     u113_20:
  3757  0665                     i1l1547:
  3758                           
  3759                           ;ADC.c: 13:         cont1 = ADRESH;
  3760  0665  081E               	movf	30,w	;volatile
  3761  0666  00F0               	movwf	??_ADC
  3762  0667  0870               	movf	??_ADC,w
  3763  0668  00C9               	movwf	_cont1
  3764                           
  3765                           ;ADC.c: 14:     }
  3766  0669  2E77               	goto	i1l208
  3767  066A                     i1l1549:
  3768  066A  0C1F               	rrf	31,w	;volatile
  3769  066B  00F0               	movwf	??_ADC
  3770  066C  0C70               	rrf	??_ADC,w
  3771  066D  390F               	andlw	15
  3772  066E  3A01               	xorlw	1
  3773  066F  1D03               	skipz
  3774  0670  2E72               	goto	u114_21
  3775  0671  2E73               	goto	u114_20
  3776  0672                     u114_21:
  3777  0672  2E77               	goto	i1l208
  3778  0673                     u114_20:
  3779  0673                     i1l1551:
  3780                           
  3781                           ;ADC.c: 16:         cont2 = ADRESH;
  3782  0673  081E               	movf	30,w	;volatile
  3783  0674  00F0               	movwf	??_ADC
  3784  0675  0870               	movf	??_ADC,w
  3785  0676  00C8               	movwf	_cont2
  3786  0677                     i1l208:
  3787  0677  0008               	return
  3788  0678                     __end_of_ADC:
  3789  007E                     btemp	set	126	;btemp
  3790  007E                     wtemp0	set	126
  3791                           
  3792                           	psect	config
  3793                           
  3794                           ;Config register CONFIG1 @ 0x2007
  3795                           ;	Oscillator Selection bits
  3796                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3797                           ;	Watchdog Timer Enable bit
  3798                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3799                           ;	Power-up Timer Enable bit
  3800                           ;	PWRTE = OFF, PWRT disabled
  3801                           ;	RE3/MCLR pin function select bit
  3802                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3803                           ;	Code Protection bit
  3804                           ;	CP = OFF, Program memory code protection is disabled
  3805                           ;	Data Code Protection bit
  3806                           ;	CPD = OFF, Data memory code protection is disabled
  3807                           ;	Brown Out Reset Selection bits
  3808                           ;	BOREN = OFF, BOR disabled
  3809                           ;	Internal External Switchover bit
  3810                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3811                           ;	Fail-Safe Clock Monitor Enabled bit
  3812                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3813                           ;	Low Voltage Programming Enable bit
  3814                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3815                           ;	In-Circuit Debugger Mode bit
  3816                           ;	DEBUG = 0x1, unprogrammed default
  3817  2007                     	org	8199
  3818  2007  20D4               	dw	8404
  3819                           
  3820                           ;Config register CONFIG2 @ 0x2008
  3821                           ;	Brown-out Reset Selection bit
  3822                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3823                           ;	Flash Program Memory Self Write Enable bits
  3824                           ;	WRT = OFF, Write protection off
  3825  2008                     	org	8200
  3826  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     39      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[7]), STR_1(CODE[5]), 

    divisor1@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _set_cursor->_Escribir_comandoLCD
    _dato_recibido->_divisor1
    _divisor1->___awdiv
    _divisor1->___awmod
    _conversion_char->_divisor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _dato_recibido->_sprintf
    _divisor1->___awdiv
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9955
                                             36 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              0 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3751
                                             29 BANK0      7     7      0
                           _divisor1
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _divisor1                                             8     7      1    1945
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3875
                                             29 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             12 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    2069
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              0 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor1
       ___awdiv
       ___awmod
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 10:01:27 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0023                           l121 02FB                           l131 03FE  
                         l150 0535                           l126 03AD                           l134 062D  
                         l118 044B                           l151 0536                           l215 0659  
                         l160 0558                           l152 053C                           l145 06A1  
                         l161 0559                           l153 053D                           l162 055F  
                         l154 0543                           l155 0544                           l164 0565  
                         l156 054A                           l148 052C                           l157 054B  
                         l149 052F                           l173 05D0                           l325 0109  
                         l158 0551                           l159 0552                           l167 0237  
                         _ADC 065A                           l176 0693                           l601 0522  
                         l186 0496                           l611 05A1                           l482 02A0  
                         l495 0356                           u900 056E                           u901 056D  
                         u920 0580                           u921 057F                           u930 058A  
                         u931 0589                           u915 0572                           u950 059D  
                         u951 059C                           u935 0586                           u945 0591  
                         _dec 0078                           _cen 0077                           _isr 05D1  
                         fsr0 0004                           _uni 0079                           indf 0000  
                ___awmod@sign 0025                          ?_ADC 0070                          l2001 01FD  
                        l2011 022A                          l2003 0203                          l2005 0210  
                        l2021 068D                          l2007 0217                          l2015 0678  
                        l2031 0463                          l2023 044F                          l2009 0224  
                        l2017 067C                          l2041 0482                          l2033 0469  
                        l2025 0451                          l2051 05A8                          l2019 0682  
                        l2115 004D                          l2043 0486                          l2035 0474  
                        l2027 0456                          l2053 05B9                          l1421 0578  
                        l2045 048B                          l2029 045D                          l2061 010A  
                        l2055 05BF                          l2047 05A2                          l1431 0597  
                        l1423 057C                          l1415 0566                          l2039 047C  
                        l2071 0156                          l2063 0122                          l2049 05A6  
                        l1425 0580                          l1417 056E                          l1433 059D  
                        l2057 02A1                          l1601 0446                          l2081 0179  
                        l2073 015B                          l2065 012D                          l1427 058A  
                        l1419 0571                          l2059 0600                          l1603 0447  
                        l2091 01A9                          l2083 0182                          l2075 0160  
                        l2067 0144                          l1429 0590                          l1605 0448  
                        l2093 01B5                          l2085 018D                          l2077 0169  
                        l2069 0153                          l2087 0199                          l2079 0174  
                        l1801 027E                          l1561 0419                          l1553 03FF  
                        l2089 01A4                          l1811 0297                          l1803 0284  
                        l1571 0423                          l1563 041A                          l1555 0403  
                        l1813 029C                          l1805 0285                          l1821 0303  
                        l1901 0035                          l1581 0431                          l1573 0425  
                        l1565 041B                          l1557 0404                          l1807 028C  
                        l1831 0319                          l1823 0308                          l1911 0060  
                        l1903 003A                          l1591 043A                          l1583 0434  
                        l1575 0426                          l1567 041C                          l1559 0413  
                        l1681 063F                          l1809 0292                          l1841 0335  
                        l1833 031C                          l1825 030A                          l1817 02FC  
                        l1913 0064                          l1593 043B                          l1585 0437  
                        l1577 042B                          l1569 041D                          l1771 069E  
                        l1691 0656                          l1683 0644                          l1675 062E  
                        l1851 0352                          l1843 033B                          l1835 0323  
                        l1827 030E                          l1819 02FF                          l1931 0099  
                        l1915 0068                          l1907 003B                          l1595 043E  
                        l1587 0438                          l1579 042E                          l1685 064D  
                        l1677 0634                          l1781 0246                          l1773 0238  
                        l1845 0342                          l1837 0327                          l1829 0313  
                        l1861 04EA                          l1941 00DF                          l1933 009F  
                        l1925 0073                          l1917 006C                          l1909 0058  
                        l1597 0442                          l1589 0439                          l1767 0694  
                        l1679 063D                          l1791 025B                          l1783 024A  
                        l1775 023B                          l1839 032B                          l1847 0348  
                        l1871 0510                          l1863 04F1                          l1855 04DD  
                        l1943 00E6                          l1935 00A6                          l1919 0071  
                        l1599 0443                          l1769 0697                          l1689 0652  
                        l1793 025E                          l1785 024F                          l1777 023F  
                        l1849 034D                          l1881 035A                          l1873 0511  
                        l1865 04F5                          l1857 04E1                          l1945 00EA  
                        l1937 00AA                          l1929 008F                          l1971 0528  
                        l1795 0265                          l1787 0253                          l1779 0244  
                        l1891 039A                          l1883 0362                          l1875 0518  
                        l1867 04F9                          l1859 04E7                          l1939 00AF  
                        l1947 00F3                          l1963 03B3                          l1981 054F  
                        l1973 0533                          l1797 0269                          l1789 0255  
                        l1893 03A0                          l1869 050A                          l1877 051E  
                        l1949 0105                          l1965 03EB                          l1957 03B1  
                        l1983 0556                          l1975 053A                          l1991 01C8  
                        l1799 026D                          l1895 0023                          l1967 03F1  
                        l1985 055D                          l1977 0541                          l1969 0524  
                        l1993 01D2                          l1889 0364                          l1897 0028  
                        l1987 0560                          l1979 0548                          l1995 01D8  
                        l1899 002E                          l1997 01E9                          l1989 01C4  
                        l1999 01F0                          ?_isr 0070                          STR_1 04D8  
                        STR_2 04D1                          STR_3 04B1                          STR_4 04C2  
                        STR_5 04C2                          STR_6 04CA                          u1200 0634  
                        u1201 0633                          u1210 063D                          u1211 063C  
                        u1220 064D                          u1221 064C                          u1310 026D  
                        u1311 026C                          u1305 025F                          u1330 027E  
                        u1410 032B                          u1331 027D                          u1411 032A  
                        u1420 0335                          u1500 050A                          u1325 026E  
                        u1421 0334                          u1405 031D                          u1501 0509  
                        u1350 0292                          u1270 023F                          u1351 0291  
                        u1335 027A                          u1271 023E                          u1360 0297  
                        u1280 024A                          u1440 0348                          u1520 051E  
                        u1600 0105                          u1361 0296                          u1345 0286  
                        u1281 0249                          u1441 0347                          u1425 0331  
                        u1521 051D                          u1505 0506                          u1601 0104  
                        u1290 025B                          u1450 034D                          u1370 0303  
                        u1530 03AD                          u1610 03FE                          u1291 025A  
                        u1451 034C                          u1435 033C                          u1371 0302  
                        u1531 03AC                          u1515 0512                          u1611 03FD  
                        u1620 0528                          u1380 030E                          u1460 04E7  
                        u1540 002E                          u1700 0456                          u1621 0527  
                        u1381 030D                          u1461 04E6                          u1541 002D  
                        u1701 0455                          u1630 0533                          u1390 0319  
                        u1550 0068                          u1710 0463                          u1631 0532  
                        u1391 0318                          u1535 03A9                          u1551 0067  
                        u1615 03FA                          u1711 0462                          u1640 053A  
                        u1480 04F9                          u1560 008E                          u1720 047B  
                        u1641 0539                          u1481 04F8                          u1561 008D  
                        u1721 047A                          u1650 0541                          u1570 0099  
                        u1730 048B                          u1651 0540                          u1475 04EB  
                        u1571 0098                          u1731 048A                          u1660 0548  
                        u1740 05D0                          u1580 009F                          u1661 0547  
                        u1741 05CF                          u1581 009E                          u1565 008A  
                        u1670 054F                          u1590 00F3                          u1671 054E  
                        u1807 0654                          u1495 04FA                          u1591 00F2  
                        u1680 0556                          u1681 0555                          u1817 0688  
                        u1690 055D                          u1907 0699                          u1691 055C  
                        u1827 01CE                          u1837 01DE                          u1757 014C  
                        u1847 01ED                          u1767 0428                          u1857 01FA  
                        u1777 046F                          u1867 0207                          u1787 0491  
                        u1877 0214                          u1797 0641                          u1887 0221  
                        u1897 022E                 ??_Iniciar_LCD 0020                          _dato 0076  
                        _main 010A                          _vol1 006A                          _vol2 0069  
                        _vol3 0068                          btemp 007E                          start 000C  
                 divisor1@dig 0075                         ??_ADC 0070                         ??_isr 0071  
  __end_of_Escribir_stringLCD 05D1                         ?_main 0070               __end_of___awdiv 02A1  
             __end_of___awmod 0357                         _ANSEL 0188               ___awdiv@divisor 0020  
             __end_of___lwdiv 0523                         i1l105 05F1                         i1l107 05F9  
                       i1l208 0677               __end_of___lwmod 05A2               ___awdiv@counter 0024  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
             __end_of_divisor 03AE                         _cont1 0049                         _cont2 0048  
             __end_of_dpowers 04B1                         _setup 03FF           _Limpiar_pantallaLCD 0678  
                       pclath 000A             ??_conversion_char 003D                         status 0003  
                       wtemp0 007E               __end_of_sprintf 010A               __initialization 000F  
         __end_of_Iniciar_LCD 0238                  __end_of_main 01C4          ?_Limpiar_pantallaLCD 0070  
                      ??_main 0044            set_cursor@posicion 0020                        _ADRESH 001E  
            ___awdiv@dividend 0022                        ?_setup 0070                        _ANSELH 0189  
                      i1l1701 05DC                        i1l1551 0673                        i1l1711 05F7  
                      i1l1703 05DF                        u113_20 0665                        u113_21 0664  
                      i1l1545 065A                        i1l1705 05E3                        i1l1547 0665  
                      i1l1707 05E7                        i1l1549 066A                        i1l1709 05ED  
                      u114_20 0673                        u114_21 0672                        u123_20 05D7  
                      u123_21 05D6                        i1l1697 05D1                        i1l1699 05D7  
                      u124_20 05E3                        u124_21 05E2                        u125_20 05ED  
                      u125_21 05EC                        u126_20 05F7                        u126_21 05F6  
                      _SPBRGH 009A                        _Cont_U 0047              __end_of_divisor1 03FF  
       ??_Limpiar_pantallaLCD 0020                     ??___awdiv 0074                     ??___awmod 0074  
       __end_of_dato_recibido 062E                     ??___lwdiv 0074                     ??___lwmod 0075  
            ___awdiv@quotient 0026               ___awmod@divisor 0020               ___awmod@counter 0024  
                   ??_divisor 0028                        saved_w 007E                     ??_sprintf 0033  
     __end_of__initialization 001C                   _Iniciar_LCD 01C4                __pcstackCOMMON 0070  
               __end_of_setup 044C                       ??_setup 0074                    __pbssBANK0 0047  
                  __pmaintext 010A                    __pintentry 0004  __size_of_Escribir_comandoLCD 0043  
             _conversion_char 02A1                     ?_divisor1 0075            _Escribir_stringLCD 05A2  
                  __stringtab 0497                    _conversion 062E           ?_Escribir_stringLCD 0020  
                     ___awdiv 0238                       ___awmod 02FC                       ___lwdiv 04DD  
                     ___lwmod 0566                       __ptext1 03FF                       __ptext2 044C  
                     __ptext3 0600                       __ptext4 03AE                       __ptext5 02A1  
                     __ptext6 0020                       __ptext7 0566                       __ptext8 04DD  
                     __ptext9 0357                       _buffer1 005E                       _buffer2 0054  
                     _buffer3 004A                  __size_of_ADC 001E                       _divisor 0357  
        ??_Escribir_stringLCD 0022                       _dpowers 04A7                  __size_of_isr 002F  
            ___awmod@dividend 0022                 ?_prender_ELCD 0070                       _sprintf 0020  
                     clrloop0 06A3                    ??_divisor1 0028          end_of_initialization 001C  
                  _set_cursor 044C                     _RCSTAbits 0018       __end_of_conversion_char 02FC  
                   _PORTBbits 0006                     _PORTCbits 0007                     _PORTDbits 0008  
              ??_prender_ELCD 0074                  ?_Iniciar_LCD 0070                   ?_conversion 0070  
                   _TXSTAbits 0098   __end_of_Limpiar_pantallaLCD 0694                    divisor@dig 0075  
                 _BAUDCTLbits 0187           start_initialization 000F                   __end_of_ADC 0678  
                 __end_of_isr 0600        __size_of_dato_recibido 002E           _Escribir_comandoLCD 0523  
  Escribir_comandoLCD@Comando 0075                   ?_set_cursor 0020              ?_conversion_char 0070  
        ?_Escribir_comandoLCD 0070           __size_of_conversion 002C                   __pbssCOMMON 0076  
                   ___latbits 0002                 __pcstackBANK0 0020                   sprintf@flag 0037  
           __size_of_divisor1 0051                   sprintf@prec 0038          __end_of_prender_ELCD 06A2  
            ___lwdiv@dividend 0022                      ?___awdiv 0020                      ?___awmod 0020  
                    ?___lwdiv 0020                      ?___lwmod 0027         ??_Escribir_comandoLCD 0075  
               _dato_recibido 0600                     __pstrings 0497                      ?_divisor 0075  
            ___lwdiv@quotient 0025           __size_of_set_cursor 004B                      ?_sprintf 002C  
              __size_of_setup 004D             interrupt_function 0004                     clear_ram0 06A2  
                    _PIE1bits 008C          __size_of_Iniciar_LCD 0074                      _PIR1bits 000C  
              ?_dato_recibido 0070                    _ADCON0bits 001F                   __stringbase 04A6  
                  _ADCON1bits 009F   __size_of_Escribir_stringLCD 002F                     divisor1@a 002C  
                   divisor1@i 002D                  ??_conversion 0074           Escribir_stringLCD@d 0020  
         Escribir_stringLCD@i 0023              __size_of___awdiv 0069              __size_of___awmod 005B  
            __size_of___lwdiv 0046              __size_of___lwmod 003C            __end_of__stringtab 04A7  
                  sprintf@val 0039              __size_of_divisor 0057            __end_of_conversion 065A  
             ___lwdiv@divisor 0020               ___lwdiv@counter 0024                      __ptext10 02FC  
                    __ptext11 0238                      __ptext12 062E                      __ptext13 0678  
                    __ptext14 01C4                      __ptext15 05A2                      __ptext16 0523  
                    __ptext17 0694                      __ptext18 05D1                      __ptext19 065A  
                    _divisor1 03AE              __size_of_sprintf 00EA         __size_of_prender_ELCD 000E  
               __size_of_main 00BA                  ??_set_cursor 0021               ??_dato_recibido 003D  
__size_of_Limpiar_pantallaLCD 001C                      divisor@a 002A                      divisor@b 002B  
                    divisor@i 002D                    _INTCONbits 000B                  _prender_ELCD 0694  
          __end_of_set_cursor 0497                      intlevel1 0000                     sprintf@ap 0036  
                   sprintf@sp 003B              ___lwmod@dividend 0029                     stringcode 04A1  
                  _OSCCONbits 008F                      sprintf@c 003C                      sprintf@f 002C  
             ___lwmod@divisor 0027               ___lwmod@counter 002B      __size_of_conversion_char 005B  
                    stringdir 04A1                      stringtab 0497   __end_of_Escribir_comandoLCD 0566  
