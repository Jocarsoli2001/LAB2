

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 10:58:45 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460                           
   461                           	psect	strings
   462  0400                     __pstrings:
   463  0400                     stringtab:
   464  0400                     __stringtab:
   465                           
   466                           ;	String table - string pointers are 1 byte each
   467  0400  1BFF               	btfsc	btemp+1,7
   468  0401  2C0A               	ljmp	stringcode
   469  0402  1383               	bcf	3,7
   470  0403  187F               	btfsc	btemp+1,0
   471  0404  1783               	bsf	3,7
   472  0405  0800               	movf	0,w
   473  0406  0A84               	incf	4,f
   474  0407  1903               	skipnz
   475  0408  0AFF               	incf	btemp+1,f
   476  0409  0008               	return
   477  040A                     stringcode:
   478  040A                     stringdir:
   479  040A  3004               	movlw	high stringdir
   480  040B  008A               	movwf	10
   481  040C  0804               	movf	4,w
   482  040D  0A84               	incf	4,f
   483  040E  0782               	addwf	2,f
   484  040F                     __stringbase:
   485  040F  3400               	retlw	0
   486  0410                     __end_of__stringtab:
   487  0410                     _dpowers:
   488  0410  3401               	retlw	1
   489  0411  3400               	retlw	0
   490  0412  340A               	retlw	10
   491  0413  3400               	retlw	0
   492  0414  3464               	retlw	100
   493  0415  3400               	retlw	0
   494  0416  34E8               	retlw	232
   495  0417  3403               	retlw	3
   496  0418  3410               	retlw	16
   497  0419  3427               	retlw	39
   498  041A                     __end_of_dpowers:
   499  0019                     _TXREG	set	25
   500  001E                     _ADRESH	set	30
   501  0007                     _PORTCbits	set	7
   502  0006                     _PORTBbits	set	6
   503  0008                     _PORTDbits	set	8
   504  0018                     _RCSTAbits	set	24
   505  000B                     _INTCONbits	set	11
   506  0006                     _PORTB	set	6
   507  0009                     _PORTE	set	9
   508  0007                     _PORTC	set	7
   509  0008                     _PORTD	set	8
   510  0005                     _PORTA	set	5
   511  001F                     _ADCON0bits	set	31
   512  001A                     _RCREG	set	26
   513  000C                     _PIR1bits	set	12
   514  009F                     _ADCON1bits	set	159
   515  009A                     _SPBRGH	set	154
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  008C                     _PIE1bits	set	140
   519  008F                     _OSCCONbits	set	143
   520  0089                     _TRISE	set	137
   521  0087                     _TRISC	set	135
   522  0088                     _TRISD	set	136
   523  0086                     _TRISB	set	134
   524  0085                     _TRISA	set	133
   525  0187                     _BAUDCTLbits	set	391
   526  0189                     _ANSELH	set	393
   527  0188                     _ANSEL	set	392
   528  041A                     STR_3:
   529  041A  3453               	retlw	83	;'S'
   530  041B  3431               	retlw	49	;'1'
   531  041C  343A               	retlw	58	;':'
   532  041D  3420               	retlw	32	;' '
   533  041E  3420               	retlw	32	;' '
   534  041F  3420               	retlw	32	;' '
   535  0420  3420               	retlw	32	;' '
   536  0421  3453               	retlw	83	;'S'
   537  0422  3432               	retlw	50	;'2'
   538  0423  343A               	retlw	58	;':'
   539  0424  3420               	retlw	32	;' '
   540  0425  3420               	retlw	32	;' '
   541  0426  3420               	retlw	32	;' '
   542  0427  3453               	retlw	83	;'S'
   543  0428  3433               	retlw	51	;'3'
   544  0429  343A               	retlw	58	;':'
   545  042A  3400               	retlw	0
   546  042B                     STR_2:
   547  042B  344A               	retlw	74	;'J'
   548  042C  346F               	retlw	111	;'o'
   549  042D  3473               	retlw	115	;'s'
   550  042E  3465               	retlw	101	;'e'
   551  042F  3420               	retlw	32	;' '
   552  0430  3453               	retlw	83	;'S'
   553  0431  3461               	retlw	97	;'a'
   554  0432  346E               	retlw	110	;'n'
   555  0433  3474               	retlw	116	;'t'
   556  0434  3469               	retlw	105	;'i'
   557  0435  347A               	retlw	122	;'z'
   558  0436  346F               	retlw	111	;'o'
   559  0437  3400               	retlw	0
   560  0438                     STR_4:
   561  0438  3425               	retlw	37	;'%'
   562  0439  3464               	retlw	100	;'d'
   563  043A  342E               	retlw	46	;'.'
   564  043B  3425               	retlw	37	;'%'
   565  043C  3464               	retlw	100	;'d'
   566  043D  3425               	retlw	37	;'%'
   567  043E  3464               	retlw	100	;'d'
   568  043F  3400               	retlw	0
   569  0440                     STR_6:
   570  0440  3425               	retlw	37	;'%'
   571  0441  3464               	retlw	100	;'d'
   572  0442  3425               	retlw	37	;'%'
   573  0443  3464               	retlw	100	;'d'
   574  0444  3425               	retlw	37	;'%'
   575  0445  3464               	retlw	100	;'d'
   576  0446  3400               	retlw	0
   577  0447                     STR_1:
   578  0447  3448               	retlw	72	;'H'
   579  0448  346F               	retlw	111	;'o'
   580  0449  346C               	retlw	108	;'l'
   581  044A  3461               	retlw	97	;'a'
   582  044B  3400               	retlw	0
   583  0438                     
   584                           	psect	cinit
   585  000F                     start_initialization:	
   586                           ; #config settings
   587                           
   588  000F                     __initialization:
   589                           
   590                           ; Clear objects allocated to COMMON
   591  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   592  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   593  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   594  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   595                           
   596                           ; Clear objects allocated to BANK0
   597  0013  1383               	bcf	3,7	;select IRP bank0
   598  0014  3047               	movlw	low __pbssBANK0
   599  0015  0084               	movwf	4
   600  0016  306B               	movlw	low (__pbssBANK0+36)
   601  0017  120A  118A  26BD  120A  118A  	fcall	clear_ram0
   602  001C                     end_of_initialization:	
   603                           ;End of C runtime variable initialization code
   604                           
   605  001C                     __end_of__initialization:
   606  001C  0183               	clrf	3
   607  001D  120A  118A  290A   	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  0076                     __pbssCOMMON:
   611  0076                     _dato:
   612  0076                     	ds	1
   613  0077                     _cen:
   614  0077                     	ds	1
   615  0078                     _dec:
   616  0078                     	ds	1
   617  0079                     _uni:
   618  0079                     	ds	1
   619                           
   620                           	psect	bssBANK0
   621  0047                     __pbssBANK0:
   622  0047                     _Cont_U:
   623  0047                     	ds	1
   624  0048                     _cont2:
   625  0048                     	ds	1
   626  0049                     _cont1:
   627  0049                     	ds	1
   628  004A                     _buffer3:
   629  004A                     	ds	10
   630  0054                     _buffer2:
   631  0054                     	ds	10
   632  005E                     _buffer1:
   633  005E                     	ds	10
   634  0068                     _vol3:
   635  0068                     	ds	1
   636  0069                     _vol2:
   637  0069                     	ds	1
   638  006A                     _vol1:
   639  006A                     	ds	1
   640                           
   641                           	psect	clrtext
   642  06BD                     clear_ram0:	
   643                           ;	Called with FSR containing the base address, and
   644                           ;	W with the last address+1
   645                           
   646  06BD  0064               	clrwdt	;clear the watchdog before getting into this loop
   647  06BE                     clrloop0:
   648  06BE  0180               	clrf	0	;clear RAM location pointed to by FSR
   649  06BF  0A84               	incf	4,f	;increment pointer
   650  06C0  0604               	xorwf	4,w	;XOR with final address
   651  06C1  1903               	btfsc	3,2	;have we reached the end yet?
   652  06C2  3400               	retlw	0	;all done for this memory range, return
   653  06C3  0604               	xorwf	4,w	;XOR again to restore value
   654  06C4  2EBE               	goto	clrloop0	;do the next byte
   655                           
   656                           	psect	cstackCOMMON
   657  0070                     __pcstackCOMMON:
   658  0070                     ?_ADC:
   659  0070                     ??_ADC:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_setup:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Iniciar_LCD:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_Limpiar_pantallaLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_conversion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_conversion_char:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_dato_recibido:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_isr:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_prender_ELCD:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Escribir_comandoLCD:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  0070                     	ds	1
   695  0071                     ??_isr:
   696                           
   697                           ; 1 bytes @ 0x1
   698  0071                     	ds	3
   699  0074                     ??_conversion:
   700  0074                     ?_config_ADC:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??_prender_ELCD:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??___awdiv:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     ??___awmod:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     ??___lwdiv:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     config_ADC@channel:	
   716                           ; 1 bytes @ 0x4
   717                           
   718                           
   719                           ; 2 bytes @ 0x4
   720  0074                     	ds	1
   721  0075                     ?_divisor:
   722  0075                     ?_divisor1:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0075                     ??_Escribir_comandoLCD:	
   726                           ; 1 bytes @ 0x5
   727                           
   728  0075                     ??___lwmod:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     divisor@dig:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     divisor1@dig:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0075                     Escribir_comandoLCD@Comando:	
   738                           ; 1 bytes @ 0x5
   739                           
   740                           
   741                           ; 1 bytes @ 0x5
   742  0075                     	ds	1
   743  0076                     ??_setup:
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:	
   747                           ; 1 bytes @ 0x6
   748                           
   749  0020                     ??_Iniciar_LCD:
   750  0020                     ??_Limpiar_pantallaLCD:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0020                     ?_set_cursor:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ?_Escribir_stringLCD:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0020                     ??_config_ADC:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     ?___awdiv:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0020                     ?___awmod:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0020                     ?___lwdiv:	
   769                           ; 2 bytes @ 0x0
   770                           
   771  0020                     set_cursor@posicion:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0020                     Escribir_stringLCD@d:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0020                     ___awdiv@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     ___awmod@divisor:	
   781                           ; 2 bytes @ 0x0
   782                           
   783  0020                     ___lwdiv@divisor:	
   784                           ; 2 bytes @ 0x0
   785                           
   786                           
   787                           ; 2 bytes @ 0x0
   788  0020                     	ds	1
   789  0021                     ??_set_cursor:
   790                           
   791                           ; 1 bytes @ 0x1
   792  0021                     	ds	1
   793  0022                     ??_Escribir_stringLCD:
   794  0022                     ___awdiv@dividend:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0022                     ___awmod@dividend:	
   798                           ; 2 bytes @ 0x2
   799                           
   800  0022                     ___lwdiv@dividend:	
   801                           ; 2 bytes @ 0x2
   802                           
   803                           
   804                           ; 2 bytes @ 0x2
   805  0022                     	ds	1
   806  0023                     Escribir_stringLCD@i:
   807  0023                     set_cursor@linea:	
   808                           ; 1 bytes @ 0x3
   809                           
   810                           
   811                           ; 1 bytes @ 0x3
   812  0023                     	ds	1
   813  0024                     ___awdiv@counter:
   814  0024                     ___awmod@counter:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0024                     ___lwdiv@counter:	
   818                           ; 1 bytes @ 0x4
   819                           
   820                           
   821                           ; 1 bytes @ 0x4
   822  0024                     	ds	1
   823  0025                     ___awdiv@sign:
   824  0025                     ___awmod@sign:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0025                     ___lwdiv@quotient:	
   828                           ; 1 bytes @ 0x5
   829                           
   830                           
   831                           ; 2 bytes @ 0x5
   832  0025                     	ds	1
   833  0026                     ___awdiv@quotient:
   834                           
   835                           ; 2 bytes @ 0x6
   836  0026                     	ds	1
   837  0027                     ?___lwmod:
   838  0027                     ___lwmod@divisor:	
   839                           ; 2 bytes @ 0x7
   840                           
   841                           
   842                           ; 2 bytes @ 0x7
   843  0027                     	ds	1
   844  0028                     ??_divisor:
   845  0028                     ??_divisor1:	
   846                           ; 1 bytes @ 0x8
   847                           
   848                           
   849                           ; 1 bytes @ 0x8
   850  0028                     	ds	1
   851  0029                     ___lwmod@dividend:
   852                           
   853                           ; 2 bytes @ 0x9
   854  0029                     	ds	1
   855  002A                     divisor@a:
   856                           
   857                           ; 1 bytes @ 0xA
   858  002A                     	ds	1
   859  002B                     ___lwmod@counter:
   860  002B                     divisor@b:	
   861                           ; 1 bytes @ 0xB
   862                           
   863                           
   864                           ; 2 bytes @ 0xB
   865  002B                     	ds	1
   866  002C                     ?_sprintf:
   867  002C                     divisor1@a:	
   868                           ; 2 bytes @ 0xC
   869                           
   870  002C                     sprintf@f:	
   871                           ; 1 bytes @ 0xC
   872                           
   873                           
   874                           ; 1 bytes @ 0xC
   875  002C                     	ds	1
   876  002D                     divisor@i:
   877  002D                     divisor1@i:	
   878                           ; 2 bytes @ 0xD
   879                           
   880                           
   881                           ; 2 bytes @ 0xD
   882  002D                     	ds	6
   883  0033                     ??_sprintf:
   884                           
   885                           ; 1 bytes @ 0x13
   886  0033                     	ds	3
   887  0036                     sprintf@ap:
   888                           
   889                           ; 1 bytes @ 0x16
   890  0036                     	ds	1
   891  0037                     sprintf@flag:
   892                           
   893                           ; 1 bytes @ 0x17
   894  0037                     	ds	1
   895  0038                     sprintf@prec:
   896                           
   897                           ; 1 bytes @ 0x18
   898  0038                     	ds	1
   899  0039                     sprintf@val:
   900                           
   901                           ; 2 bytes @ 0x19
   902  0039                     	ds	2
   903  003B                     sprintf@sp:
   904                           
   905                           ; 1 bytes @ 0x1B
   906  003B                     	ds	1
   907  003C                     sprintf@c:
   908                           
   909                           ; 1 bytes @ 0x1C
   910  003C                     	ds	1
   911  003D                     ??_conversion_char:
   912  003D                     ??_dato_recibido:	
   913                           ; 1 bytes @ 0x1D
   914                           
   915                           
   916                           ; 1 bytes @ 0x1D
   917  003D                     	ds	7
   918  0044                     ??_main:
   919                           
   920                           ; 1 bytes @ 0x24
   921  0044                     	ds	3
   922                           
   923                           	psect	maintext
   924  010A                     __pmaintext:	
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   927 ;;
   928 ;; *************** function _main *****************
   929 ;; Defined at:
   930 ;;		line 87 in file "LAB2.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : B00/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0
   946 ;;      Temps:          0       3       0       0       0
   947 ;;      Totals:         0       3       0       0       0
   948 ;;Total ram usage:        3 bytes
   949 ;; Hardware stack levels required when called: 5
   950 ;; This function calls:
   951 ;;		_Escribir_stringLCD
   952 ;;		_Iniciar_LCD
   953 ;;		_Limpiar_pantallaLCD
   954 ;;		_conversion
   955 ;;		_conversion_char
   956 ;;		_dato_recibido
   957 ;;		_set_cursor
   958 ;;		_setup
   959 ;; This function is called by:
   960 ;;		Startup code after reset
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function _main
   966  010A                     _main:
   967  010A                     l2209:	
   968                           ;incstack = 0
   969                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   970                           
   971                           
   972                           ;LAB2.c: 88:     setup();
   973  010A  120A  118A  24DD  120A  118A  	fcall	_setup
   974                           
   975                           ;LAB2.c: 89:     Iniciar_LCD();
   976  010F  120A  118A  21C4  120A  118A  	fcall	_Iniciar_LCD
   977                           
   978                           ;LAB2.c: 90:     Limpiar_pantallaLCD();
   979  0114  120A  118A  2693  120A  118A  	fcall	_Limpiar_pantallaLCD
   980                           
   981                           ;LAB2.c: 91:     set_cursor(1,0);
   982  0119  1283               	bcf	3,5	;RP0=0, select bank0
   983  011A  1303               	bcf	3,6	;RP1=0, select bank0
   984  011B  01A0               	clrf	set_cursor@posicion
   985  011C  3001               	movlw	1
   986  011D  120A  118A  244C  120A  118A  	fcall	_set_cursor
   987  0122                     l2211:
   988                           
   989                           ;LAB2.c: 92:     Escribir_stringLCD("Hola");
   990  0122  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   991  0123  1283               	bcf	3,5	;RP0=0, select bank0
   992  0124  1303               	bcf	3,6	;RP1=0, select bank0
   993  0125  00A0               	movwf	Escribir_stringLCD@d
   994  0126  3080               	movlw	128
   995  0127  00A1               	movwf	Escribir_stringLCD@d+1
   996  0128  120A  118A  25A0  120A  118A  	fcall	_Escribir_stringLCD
   997  012D                     l2213:
   998                           
   999                           ;LAB2.c: 93:     set_cursor(2,2);
  1000  012D  3002               	movlw	2
  1001  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1002  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0130  00C4               	movwf	??_main
  1004  0131  0844               	movf	??_main,w
  1005  0132  00A0               	movwf	set_cursor@posicion
  1006  0133  3002               	movlw	2
  1007  0134  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1008                           
  1009                           ;LAB2.c: 94:     Escribir_stringLCD("Jose Santizo");
  1010  0139  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1011  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1012  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1013  013C  00A0               	movwf	Escribir_stringLCD@d
  1014  013D  3080               	movlw	128
  1015  013E  00A1               	movwf	Escribir_stringLCD@d+1
  1016  013F  120A  118A  25A0  120A  118A  	fcall	_Escribir_stringLCD
  1017  0144                     l2215:
  1018                           
  1019                           ;LAB2.c: 95:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1020  0144  301A               	movlw	26
  1021  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0147  00C6               	movwf	??_main+2
  1024  0148  305E               	movlw	94
  1025  0149  00C5               	movwf	??_main+1
  1026  014A  306D               	movlw	109
  1027  014B  00C4               	movwf	??_main
  1028  014C                     u1877:
  1029  014C  0BC4               	decfsz	??_main,f
  1030  014D  294C               	goto	u1877
  1031  014E  0BC5               	decfsz	??_main+1,f
  1032  014F  294C               	goto	u1877
  1033  0150  0BC6               	decfsz	??_main+2,f
  1034  0151  294C               	goto	u1877
  1035  0152  2953               	nop2
  1036  0153                     l2217:
  1037                           
  1038                           ;LAB2.c: 96:     ADCON0bits.GO = 1;
  1039  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0155  149F               	bsf	31,1	;volatile
  1042  0156                     l2219:
  1043                           
  1044                           ;LAB2.c: 98:     Limpiar_pantallaLCD();
  1045  0156  120A  118A  2693  120A  118A  	fcall	_Limpiar_pantallaLCD
  1046  015B                     l2221:
  1047                           
  1048                           ;LAB2.c: 101:         conversion();
  1049  015B  120A  118A  262C  120A  118A  	fcall	_conversion
  1050  0160                     l2223:
  1051                           
  1052                           ;LAB2.c: 104:         set_cursor(1,0);
  1053  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0162  01A0               	clrf	set_cursor@posicion
  1056  0163  3001               	movlw	1
  1057  0164  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1058  0169                     l2225:
  1059                           
  1060                           ;LAB2.c: 105:         Escribir_stringLCD("S1:    S2:   S3:");
  1061  0169  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1062  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1063  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1064  016C  00A0               	movwf	Escribir_stringLCD@d
  1065  016D  3080               	movlw	128
  1066  016E  00A1               	movwf	Escribir_stringLCD@d+1
  1067  016F  120A  118A  25A0  120A  118A  	fcall	_Escribir_stringLCD
  1068  0174                     l2227:
  1069                           
  1070                           ;LAB2.c: 107:         conversion_char();
  1071  0174  120A  118A  22A1  120A  118A  	fcall	_conversion_char
  1072  0179                     l2229:
  1073                           
  1074                           ;LAB2.c: 109:         set_cursor(2,0);
  1075  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1076  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1077  017B  01A0               	clrf	set_cursor@posicion
  1078  017C  3002               	movlw	2
  1079  017D  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1080  0182                     l2231:
  1081                           
  1082                           ;LAB2.c: 110:         Escribir_stringLCD(buffer1);
  1083  0182  305E               	movlw	(low (_buffer1| 0))& (0+255)
  1084  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0185  00A0               	movwf	Escribir_stringLCD@d
  1087  0186  3000               	movlw	0
  1088  0187  00A1               	movwf	Escribir_stringLCD@d+1
  1089  0188  120A  118A  25A0  120A  118A  	fcall	_Escribir_stringLCD
  1090  018D                     l2233:
  1091                           
  1092                           ;LAB2.c: 111:         set_cursor(2,7);
  1093  018D  3007               	movlw	7
  1094  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1095  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0190  00C4               	movwf	??_main
  1097  0191  0844               	movf	??_main,w
  1098  0192  00A0               	movwf	set_cursor@posicion
  1099  0193  3002               	movlw	2
  1100  0194  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1101  0199                     l2235:
  1102                           
  1103                           ;LAB2.c: 112:         Escribir_stringLCD(buffer2);
  1104  0199  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1105  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1106  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1107  019C  00A0               	movwf	Escribir_stringLCD@d
  1108  019D  3000               	movlw	0
  1109  019E  00A1               	movwf	Escribir_stringLCD@d+1
  1110  019F  120A  118A  25A0  120A  118A  	fcall	_Escribir_stringLCD
  1111  01A4                     l2237:
  1112                           
  1113                           ;LAB2.c: 115:         dato_recibido();
  1114  01A4  120A  118A  25FE  120A  118A  	fcall	_dato_recibido
  1115  01A9                     l2239:
  1116                           
  1117                           ;LAB2.c: 117:         set_cursor(2,13);
  1118  01A9  300D               	movlw	13
  1119  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1120  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1121  01AC  00C4               	movwf	??_main
  1122  01AD  0844               	movf	??_main,w
  1123  01AE  00A0               	movwf	set_cursor@posicion
  1124  01AF  3002               	movlw	2
  1125  01B0  120A  118A  244C  120A  118A  	fcall	_set_cursor
  1126  01B5                     l2241:
  1127                           
  1128                           ;LAB2.c: 118:         Escribir_stringLCD(buffer3);
  1129  01B5  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1130  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1131  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1132  01B8  00A0               	movwf	Escribir_stringLCD@d
  1133  01B9  3000               	movlw	0
  1134  01BA  00A1               	movwf	Escribir_stringLCD@d+1
  1135  01BB  120A  118A  25A0  120A  118A  	fcall	_Escribir_stringLCD
  1136  01C0  295B               	goto	l2221
  1137  01C1  120A  118A  280C   	ljmp	start
  1138  01C4                     __end_of_main:
  1139                           
  1140                           	psect	text1
  1141  04DD                     __ptext1:	
  1142 ;; *************** function _setup *****************
  1143 ;; Defined at:
  1144 ;;		line 123 in file "LAB2.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 3
  1165 ;; This function calls:
  1166 ;;		_config_ADC
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _setup
  1174  04DD                     _setup:
  1175  04DD                     l2095:	
  1176                           ;incstack = 0
  1177                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1178                           
  1179                           
  1180                           ;LAB2.c: 126:     ANSEL = 0b0011;
  1181  04DD  3003               	movlw	3
  1182  04DE  1683               	bsf	3,5	;RP0=1, select bank3
  1183  04DF  1703               	bsf	3,6	;RP1=1, select bank3
  1184  04E0  0088               	movwf	8	;volatile
  1185  04E1                     l2097:
  1186                           
  1187                           ;LAB2.c: 127:     ANSELH = 0;
  1188  04E1  0189               	clrf	9	;volatile
  1189  04E2                     l2099:
  1190                           
  1191                           ;LAB2.c: 129:     TRISA = 0b0011;
  1192  04E2  3003               	movlw	3
  1193  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  1194  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  1195  04E5  0085               	movwf	5	;volatile
  1196                           
  1197                           ;LAB2.c: 130:     TRISB = 0;
  1198  04E6  0186               	clrf	6	;volatile
  1199                           
  1200                           ;LAB2.c: 131:     TRISD = 0;
  1201  04E7  0188               	clrf	8	;volatile
  1202                           
  1203                           ;LAB2.c: 132:     TRISC = 0;
  1204  04E8  0187               	clrf	7	;volatile
  1205                           
  1206                           ;LAB2.c: 133:     TRISE = 0;
  1207  04E9  0189               	clrf	9	;volatile
  1208                           
  1209                           ;LAB2.c: 135:     PORTA = 0;
  1210  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1211  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1212  04EC  0185               	clrf	5	;volatile
  1213                           
  1214                           ;LAB2.c: 136:     PORTD = 0;
  1215  04ED  0188               	clrf	8	;volatile
  1216                           
  1217                           ;LAB2.c: 137:     PORTC = 0;
  1218  04EE  0187               	clrf	7	;volatile
  1219                           
  1220                           ;LAB2.c: 138:     PORTE = 0;
  1221  04EF  0189               	clrf	9	;volatile
  1222                           
  1223                           ;LAB2.c: 139:     PORTB = 0;
  1224  04F0  0186               	clrf	6	;volatile
  1225  04F1                     l2101:
  1226                           
  1227                           ;LAB2.c: 142:     OSCCONbits.IRCF = 0b0110;
  1228  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  1229  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  1230  04F3  080F               	movf	15,w	;volatile
  1231  04F4  398F               	andlw	-113
  1232  04F5  3860               	iorlw	96
  1233  04F6  008F               	movwf	15	;volatile
  1234  04F7                     l2103:
  1235                           
  1236                           ;LAB2.c: 143:     OSCCONbits.SCS = 1;
  1237  04F7  140F               	bsf	15,0	;volatile
  1238  04F8                     l2105:
  1239                           
  1240                           ;LAB2.c: 146:     config_ADC(0);
  1241  04F8  3000               	movlw	0
  1242  04F9  00F4               	movwf	config_ADC@channel
  1243  04FA  00F5               	movwf	config_ADC@channel+1
  1244  04FB  120A  118A  2676  120A  118A  	fcall	_config_ADC
  1245  0500                     l2107:
  1246                           
  1247                           ;LAB2.c: 149:     PIR1bits.ADIF = 0;
  1248  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0502  130C               	bcf	12,6	;volatile
  1251  0503                     l2109:
  1252                           
  1253                           ;LAB2.c: 150:     PIE1bits.ADIE = 1;
  1254  0503  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0504  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0505  170C               	bsf	12,6	;volatile
  1257  0506                     l2111:
  1258                           
  1259                           ;LAB2.c: 151:     PIR1bits.RCIF = 0;
  1260  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0508  128C               	bcf	12,5	;volatile
  1263  0509                     l2113:
  1264                           
  1265                           ;LAB2.c: 152:     PIE1bits.RCIE = 1;
  1266  0509  1683               	bsf	3,5	;RP0=1, select bank1
  1267  050A  1303               	bcf	3,6	;RP1=0, select bank1
  1268  050B  168C               	bsf	12,5	;volatile
  1269  050C                     l2115:
  1270                           
  1271                           ;LAB2.c: 153:     INTCONbits.PEIE = 1;
  1272  050C  170B               	bsf	11,6	;volatile
  1273  050D                     l2117:
  1274                           
  1275                           ;LAB2.c: 154:     INTCONbits.GIE = 1;
  1276  050D  178B               	bsf	11,7	;volatile
  1277  050E                     l2119:
  1278                           
  1279                           ;LAB2.c: 157:     TXSTAbits.SYNC = 0;
  1280  050E  1218               	bcf	24,4	;volatile
  1281  050F                     l2121:
  1282                           
  1283                           ;LAB2.c: 158:     TXSTAbits.BRGH = 1;
  1284  050F  1518               	bsf	24,2	;volatile
  1285  0510                     l2123:
  1286                           
  1287                           ;LAB2.c: 160:     BAUDCTLbits.BRG16 = 1;
  1288  0510  1683               	bsf	3,5	;RP0=1, select bank3
  1289  0511  1703               	bsf	3,6	;RP1=1, select bank3
  1290  0512  1587               	bsf	7,3	;volatile
  1291  0513                     l2125:
  1292                           
  1293                           ;LAB2.c: 162:     SPBRG = 23;
  1294  0513  3017               	movlw	23
  1295  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0516  0099               	movwf	25	;volatile
  1298  0517                     l2127:
  1299                           
  1300                           ;LAB2.c: 163:     SPBRGH = 0;
  1301  0517  019A               	clrf	26	;volatile
  1302  0518                     l2129:
  1303                           
  1304                           ;LAB2.c: 165:     RCSTAbits.SPEN = 1;
  1305  0518  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0519  1303               	bcf	3,6	;RP1=0, select bank0
  1307  051A  1798               	bsf	24,7	;volatile
  1308  051B                     l2131:
  1309                           
  1310                           ;LAB2.c: 166:     RCSTAbits.RX9 = 0;
  1311  051B  1318               	bcf	24,6	;volatile
  1312  051C                     l2133:
  1313                           
  1314                           ;LAB2.c: 167:     RCSTAbits.CREN = 1;
  1315  051C  1618               	bsf	24,4	;volatile
  1316  051D                     l2135:
  1317                           
  1318                           ;LAB2.c: 169:     TXSTAbits.TXEN = 1;
  1319  051D  1683               	bsf	3,5	;RP0=1, select bank1
  1320  051E  1303               	bcf	3,6	;RP1=0, select bank1
  1321  051F  1698               	bsf	24,5	;volatile
  1322  0520                     l118:
  1323  0520  0008               	return
  1324  0521                     __end_of_setup:
  1325                           
  1326                           	psect	text2
  1327  0676                     __ptext2:	
  1328 ;; *************** function _config_ADC *****************
  1329 ;; Defined at:
  1330 ;;		line 36 in file "ADC.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  channel         2    4[COMMON] int 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         2       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0
  1346 ;;      Temps:          0       1       0       0       0
  1347 ;;      Totals:         2       1       0       0       0
  1348 ;;Total ram usage:        3 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 2
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_setup
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           
  1359                           ;psect for function _config_ADC
  1360  0676                     _config_ADC:
  1361  0676                     l1979:	
  1362                           ;incstack = 0
  1363                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1364                           
  1365                           
  1366                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1367  0676  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0677  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0678  139F               	bcf	31,7	;volatile
  1370                           
  1371                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1372  0679  121F               	bcf	31,4	;volatile
  1373                           
  1374                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1375  067A  129F               	bcf	31,5	;volatile
  1376  067B                     l1981:
  1377                           
  1378                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1379  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1380  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1381  067D  081F               	movf	31,w	;volatile
  1382  067E  393F               	andlw	-193
  1383  067F  3840               	iorlw	64
  1384  0680  009F               	movwf	31	;volatile
  1385                           
  1386                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1387  0681  0874               	movf	config_ADC@channel,w
  1388  0682  00A0               	movwf	??_config_ADC
  1389  0683  0DA0               	rlf	??_config_ADC,f
  1390  0684  0DA0               	rlf	??_config_ADC,f
  1391  0685  081F               	movf	31,w	;volatile
  1392  0686  0620               	xorwf	??_config_ADC,w
  1393  0687  39C3               	andlw	-61
  1394  0688  0620               	xorwf	??_config_ADC,w
  1395  0689  009F               	movwf	31	;volatile
  1396  068A                     l1983:
  1397                           
  1398                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1399  068A  141F               	bsf	31,0	;volatile
  1400  068B                     l1985:
  1401                           
  1402                           ;ADC.c: 44:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1403  068B  3020               	movlw	32
  1404  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1405  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1406  068E  00A0               	movwf	??_config_ADC
  1407  068F                     u1887:
  1408  068F  0BA0               	decfsz	??_config_ADC,f
  1409  0690  2E8F               	goto	u1887
  1410  0691  0000               	nop
  1411  0692                     l220:
  1412  0692  0008               	return
  1413  0693                     __end_of_config_ADC:
  1414                           
  1415                           	psect	text3
  1416  044C                     __ptext3:	
  1417 ;; *************** function _set_cursor *****************
  1418 ;; Defined at:
  1419 ;;		line 71 in file "LCD.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  linea           1    wreg     unsigned char 
  1422 ;;  posicion        1    0[BANK0 ] unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  linea           1    3[BANK0 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       1       0       0       0
  1435 ;;      Locals:         0       1       0       0       0
  1436 ;;      Temps:          0       2       0       0       0
  1437 ;;      Totals:         0       4       0       0       0
  1438 ;;Total ram usage:        4 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 4
  1441 ;; This function calls:
  1442 ;;		_Escribir_comandoLCD
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _set_cursor
  1450  044C                     _set_cursor:
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1454                           ;set_cursor@linea stored from wreg
  1455  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1456  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1457  044E  00A3               	movwf	set_cursor@linea
  1458  044F                     l2171:
  1459                           
  1460                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1461  044F  1287               	bcf	7,5	;volatile
  1462  0450  1208               	bcf	8,4	;volatile
  1463  0451                     l2173:
  1464                           
  1465                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1466  0451  0323               	decf	set_cursor@linea,w
  1467  0452  1D03               	btfss	3,2
  1468  0453  2C55               	goto	u1821
  1469  0454  2C56               	goto	u1820
  1470  0455                     u1821:
  1471  0455  2C5D               	goto	l2177
  1472  0456                     u1820:
  1473  0456                     l2175:
  1474  0456  3080               	movlw	128
  1475  0457  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  1476  045C  2C69               	goto	l2181
  1477  045D                     l2177:
  1478  045D  3002               	movlw	2
  1479  045E  0623               	xorwf	set_cursor@linea,w
  1480  045F  1D03               	btfss	3,2
  1481  0460  2C62               	goto	u1831
  1482  0461  2C63               	goto	u1830
  1483  0462                     u1831:
  1484  0462  2C69               	goto	l2181
  1485  0463                     u1830:
  1486  0463                     l2179:
  1487  0463  30C0               	movlw	192
  1488  0464  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  1489  0469                     l2181:
  1490                           
  1491                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1492  0469  3068               	movlw	104
  1493  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1494  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1495  046C  00A2               	movwf	??_set_cursor+1
  1496  046D  30E3               	movlw	227
  1497  046E  00A1               	movwf	??_set_cursor
  1498  046F                     u1897:
  1499  046F  0BA1               	decfsz	??_set_cursor,f
  1500  0470  2C6F               	goto	u1897
  1501  0471  0BA2               	decfsz	??_set_cursor+1,f
  1502  0472  2C6F               	goto	u1897
  1503  0473  2C74               	nop2
  1504  0474                     l2183:
  1505                           
  1506                           ;LCD.c: 80:     if (posicion != 0){
  1507  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0476  0820               	movf	set_cursor@posicion,w
  1510  0477  1903               	btfsc	3,2
  1511  0478  2C7A               	goto	u1841
  1512  0479  2C7B               	goto	u1840
  1513  047A                     u1841:
  1514  047A  2C96               	goto	l186
  1515  047B                     u1840:
  1516  047B  2C86               	goto	l2191
  1517  047C                     l2187:
  1518                           
  1519                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1520  047C  3014               	movlw	20
  1521  047D  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  1522  0482                     l2189:
  1523                           
  1524                           ;LCD.c: 83:             posicion--;
  1525  0482  3001               	movlw	1
  1526  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0485  02A0               	subwf	set_cursor@posicion,f
  1529  0486                     l2191:
  1530                           
  1531                           ;LCD.c: 81:         while(posicion > 0){
  1532  0486  0820               	movf	set_cursor@posicion,w
  1533  0487  1D03               	btfss	3,2
  1534  0488  2C8A               	goto	u1851
  1535  0489  2C8B               	goto	u1850
  1536  048A                     u1851:
  1537  048A  2C7C               	goto	l2187
  1538  048B                     u1850:
  1539  048B                     l2193:
  1540                           
  1541                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1542  048B  3068               	movlw	104
  1543  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1544  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1545  048E  00A2               	movwf	??_set_cursor+1
  1546  048F  30E3               	movlw	227
  1547  0490  00A1               	movwf	??_set_cursor
  1548  0491                     u1907:
  1549  0491  0BA1               	decfsz	??_set_cursor,f
  1550  0492  2C91               	goto	u1907
  1551  0493  0BA2               	decfsz	??_set_cursor+1,f
  1552  0494  2C91               	goto	u1907
  1553  0495  2C96               	nop2
  1554  0496                     l186:
  1555  0496  0008               	return
  1556  0497                     __end_of_set_cursor:
  1557                           
  1558                           	psect	text4
  1559  05FE                     __ptext4:	
  1560 ;; *************** function _dato_recibido *****************
  1561 ;; Defined at:
  1562 ;;		line 196 in file "LAB2.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0
  1578 ;;      Temps:          0       7       0       0       0
  1579 ;;      Totals:         0       7       0       0       0
  1580 ;;Total ram usage:        7 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 4
  1583 ;; This function calls:
  1584 ;;		_divisor1
  1585 ;;		_sprintf
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _dato_recibido
  1593  05FE                     _dato_recibido:
  1594  05FE                     l2207:	
  1595                           ;incstack = 0
  1596                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1597                           
  1598                           
  1599                           ;LAB2.c: 197:     divisor1(Cont_U, vol3);
  1600  05FE  3068               	movlw	(low (_vol3| 0))& (0+255)
  1601  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0601  00BD               	movwf	??_dato_recibido
  1604  0602  083D               	movf	??_dato_recibido,w
  1605  0603  00F5               	movwf	divisor1@dig
  1606  0604  0847               	movf	_Cont_U,w
  1607  0605  120A  118A  23AE  120A  118A  	fcall	_divisor1
  1608                           
  1609                           ;LAB2.c: 198:     sprintf(buffer3, "%d%d%d", vol3[2], vol3[1], vol3[0]);
  1610  060A  3031               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1611  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1612  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1613  060D  00BD               	movwf	??_dato_recibido
  1614  060E  083D               	movf	??_dato_recibido,w
  1615  060F  00AC               	movwf	sprintf@f
  1616  0610  086A               	movf	_vol3+2,w
  1617  0611  00BE               	movwf	??_dato_recibido+1
  1618  0612  01BF               	clrf	??_dato_recibido+2
  1619  0613  083E               	movf	??_dato_recibido+1,w
  1620  0614  00AD               	movwf	?_sprintf+1
  1621  0615  083F               	movf	??_dato_recibido+2,w
  1622  0616  00AE               	movwf	?_sprintf+2
  1623  0617  0869               	movf	_vol3+1,w
  1624  0618  00C0               	movwf	??_dato_recibido+3
  1625  0619  01C1               	clrf	??_dato_recibido+4
  1626  061A  0840               	movf	??_dato_recibido+3,w
  1627  061B  00AF               	movwf	?_sprintf+3
  1628  061C  0841               	movf	??_dato_recibido+4,w
  1629  061D  00B0               	movwf	?_sprintf+4
  1630  061E  0868               	movf	_vol3,w
  1631  061F  00C2               	movwf	??_dato_recibido+5
  1632  0620  01C3               	clrf	??_dato_recibido+6
  1633  0621  0842               	movf	??_dato_recibido+5,w
  1634  0622  00B1               	movwf	?_sprintf+5
  1635  0623  0843               	movf	??_dato_recibido+6,w
  1636  0624  00B2               	movwf	?_sprintf+6
  1637  0625  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1638  0626  120A  118A  2020  120A  118A  	fcall	_sprintf
  1639  062B                     l134:
  1640  062B  0008               	return
  1641  062C                     __end_of_dato_recibido:
  1642                           
  1643                           	psect	text5
  1644  03AE                     __ptext5:	
  1645 ;; *************** function _divisor1 *****************
  1646 ;; Defined at:
  1647 ;;		line 189 in file "LAB2.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  a               1    wreg     unsigned char 
  1650 ;;  dig             1    5[COMMON] PTR unsigned char 
  1651 ;;		 -> vol3(1), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  a               1   12[BANK0 ] unsigned char 
  1654 ;;  i               2   13[BANK0 ] int 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         1       0       0       0       0
  1665 ;;      Locals:         0       3       0       0       0
  1666 ;;      Temps:          0       4       0       0       0
  1667 ;;      Totals:         1       7       0       0       0
  1668 ;;Total ram usage:        8 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 3
  1671 ;; This function calls:
  1672 ;;		___awdiv
  1673 ;;		___awmod
  1674 ;; This function is called by:
  1675 ;;		_dato_recibido
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _divisor1
  1681  03AE                     _divisor1:
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _divisor1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1685                           ;divisor1@a stored from wreg
  1686  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1687  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1688  03B0  00AC               	movwf	divisor1@a
  1689  03B1                     l2063:
  1690                           
  1691                           ;LAB2.c: 190:     for(int i = 0; i<3 ; i++){
  1692  03B1  01AD               	clrf	divisor1@i
  1693  03B2  01AE               	clrf	divisor1@i+1
  1694  03B3                     l2069:
  1695                           
  1696                           ;LAB2.c: 191:         dig[i] = a % 10;
  1697  03B3  300A               	movlw	10
  1698  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1699  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1700  03B6  00A0               	movwf	___awmod@divisor
  1701  03B7  3000               	movlw	0
  1702  03B8  00A1               	movwf	___awmod@divisor+1
  1703  03B9  082C               	movf	divisor1@a,w
  1704  03BA  00A8               	movwf	??_divisor1
  1705  03BB  01A9               	clrf	??_divisor1+1
  1706  03BC  0828               	movf	??_divisor1,w
  1707  03BD  00A2               	movwf	___awmod@dividend
  1708  03BE  0829               	movf	??_divisor1+1,w
  1709  03BF  00A3               	movwf	___awmod@dividend+1
  1710  03C0  120A  118A  22FC  120A  118A  	fcall	___awmod
  1711  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1712  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1713  03C7  0820               	movf	?___awmod,w
  1714  03C8  00AA               	movwf	??_divisor1+2
  1715  03C9  082D               	movf	divisor1@i,w
  1716  03CA  0775               	addwf	divisor1@dig,w
  1717  03CB  00AB               	movwf	??_divisor1+3
  1718  03CC  082B               	movf	??_divisor1+3,w
  1719  03CD  0084               	movwf	4
  1720  03CE  082A               	movf	??_divisor1+2,w
  1721  03CF  1383               	bcf	3,7	;select IRP bank0
  1722  03D0  0080               	movwf	0
  1723                           
  1724                           ;LAB2.c: 192:         a = (a - dig[i])/10;
  1725  03D1  300A               	movlw	10
  1726  03D2  00A0               	movwf	___awdiv@divisor
  1727  03D3  3000               	movlw	0
  1728  03D4  00A1               	movwf	___awdiv@divisor+1
  1729  03D5  082D               	movf	divisor1@i,w
  1730  03D6  0775               	addwf	divisor1@dig,w
  1731  03D7  00A8               	movwf	??_divisor1
  1732  03D8  0828               	movf	??_divisor1,w
  1733  03D9  0084               	movwf	4
  1734  03DA  0800               	movf	0,w
  1735  03DB  022C               	subwf	divisor1@a,w
  1736  03DC  00A2               	movwf	___awdiv@dividend
  1737  03DD  01A3               	clrf	___awdiv@dividend+1
  1738  03DE  1C03               	skipc
  1739  03DF  03A3               	decf	___awdiv@dividend+1,f
  1740  03E0  120A  118A  2238  120A  118A  	fcall	___awdiv
  1741  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1742  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1743  03E7  0820               	movf	?___awdiv,w
  1744  03E8  00A9               	movwf	??_divisor1+1
  1745  03E9  0829               	movf	??_divisor1+1,w
  1746  03EA  00AC               	movwf	divisor1@a
  1747  03EB                     l2071:
  1748                           
  1749                           ;LAB2.c: 193:     }
  1750  03EB  3001               	movlw	1
  1751  03EC  07AD               	addwf	divisor1@i,f
  1752  03ED  1803               	skipnc
  1753  03EE  0AAE               	incf	divisor1@i+1,f
  1754  03EF  3000               	movlw	0
  1755  03F0  07AE               	addwf	divisor1@i+1,f
  1756  03F1                     l2073:
  1757  03F1  082E               	movf	divisor1@i+1,w
  1758  03F2  3A80               	xorlw	128
  1759  03F3  00FF               	movwf	btemp+1
  1760  03F4  3080               	movlw	128
  1761  03F5  027F               	subwf	btemp+1,w
  1762  03F6  1D03               	skipz
  1763  03F7  2BFA               	goto	u1735
  1764  03F8  3003               	movlw	3
  1765  03F9  022D               	subwf	divisor1@i,w
  1766  03FA                     u1735:
  1767  03FA  1C03               	skipc
  1768  03FB  2BFD               	goto	u1731
  1769  03FC  2BFE               	goto	u1730
  1770  03FD                     u1731:
  1771  03FD  2BB3               	goto	l2069
  1772  03FE                     u1730:
  1773  03FE                     l131:
  1774  03FE  0008               	return
  1775  03FF                     __end_of_divisor1:
  1776                           
  1777                           	psect	text6
  1778  02A1                     __ptext6:	
  1779 ;; *************** function _conversion_char *****************
  1780 ;; Defined at:
  1781 ;;		line 173 in file "LAB2.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0
  1797 ;;      Temps:          0       7       0       0       0
  1798 ;;      Totals:         0       7       0       0       0
  1799 ;;Total ram usage:        7 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 4
  1802 ;; This function calls:
  1803 ;;		_divisor
  1804 ;;		_sprintf
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _conversion_char
  1812  02A1                     _conversion_char:
  1813  02A1                     l2205:	
  1814                           ;incstack = 0
  1815                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1816                           
  1817                           
  1818                           ;LAB2.c: 174:     divisor(cont1, vol1);
  1819  02A1  306A               	movlw	(low (_vol1| 0))& (0+255)
  1820  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1821  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1822  02A4  00BD               	movwf	??_conversion_char
  1823  02A5  083D               	movf	??_conversion_char,w
  1824  02A6  00F5               	movwf	divisor@dig
  1825  02A7  0849               	movf	_cont1,w
  1826  02A8  120A  118A  2357  120A  118A  	fcall	_divisor
  1827                           
  1828                           ;LAB2.c: 175:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1829  02AD  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1830  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1831  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1832  02B0  00BD               	movwf	??_conversion_char
  1833  02B1  083D               	movf	??_conversion_char,w
  1834  02B2  00AC               	movwf	sprintf@f
  1835  02B3  086C               	movf	_vol1+2,w
  1836  02B4  00BE               	movwf	??_conversion_char+1
  1837  02B5  01BF               	clrf	??_conversion_char+2
  1838  02B6  083E               	movf	??_conversion_char+1,w
  1839  02B7  00AD               	movwf	?_sprintf+1
  1840  02B8  083F               	movf	??_conversion_char+2,w
  1841  02B9  00AE               	movwf	?_sprintf+2
  1842  02BA  086B               	movf	_vol1+1,w
  1843  02BB  00C0               	movwf	??_conversion_char+3
  1844  02BC  01C1               	clrf	??_conversion_char+4
  1845  02BD  0840               	movf	??_conversion_char+3,w
  1846  02BE  00AF               	movwf	?_sprintf+3
  1847  02BF  0841               	movf	??_conversion_char+4,w
  1848  02C0  00B0               	movwf	?_sprintf+4
  1849  02C1  086A               	movf	_vol1,w
  1850  02C2  00C2               	movwf	??_conversion_char+5
  1851  02C3  01C3               	clrf	??_conversion_char+6
  1852  02C4  0842               	movf	??_conversion_char+5,w
  1853  02C5  00B1               	movwf	?_sprintf+5
  1854  02C6  0843               	movf	??_conversion_char+6,w
  1855  02C7  00B2               	movwf	?_sprintf+6
  1856  02C8  305E               	movlw	(low (_buffer1| 0))& (0+255)
  1857  02C9  120A  118A  2020  120A  118A  	fcall	_sprintf
  1858                           
  1859                           ;LAB2.c: 177:     divisor(cont2, vol2);
  1860  02CE  3069               	movlw	(low (_vol2| 0))& (0+255)
  1861  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1862  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1863  02D1  00BD               	movwf	??_conversion_char
  1864  02D2  083D               	movf	??_conversion_char,w
  1865  02D3  00F5               	movwf	divisor@dig
  1866  02D4  0848               	movf	_cont2,w
  1867  02D5  120A  118A  2357  120A  118A  	fcall	_divisor
  1868                           
  1869                           ;LAB2.c: 178:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1870  02DA  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1871  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1872  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1873  02DD  00BD               	movwf	??_conversion_char
  1874  02DE  083D               	movf	??_conversion_char,w
  1875  02DF  00AC               	movwf	sprintf@f
  1876  02E0  086B               	movf	_vol2+2,w
  1877  02E1  00BE               	movwf	??_conversion_char+1
  1878  02E2  01BF               	clrf	??_conversion_char+2
  1879  02E3  083E               	movf	??_conversion_char+1,w
  1880  02E4  00AD               	movwf	?_sprintf+1
  1881  02E5  083F               	movf	??_conversion_char+2,w
  1882  02E6  00AE               	movwf	?_sprintf+2
  1883  02E7  086A               	movf	_vol2+1,w
  1884  02E8  00C0               	movwf	??_conversion_char+3
  1885  02E9  01C1               	clrf	??_conversion_char+4
  1886  02EA  0840               	movf	??_conversion_char+3,w
  1887  02EB  00AF               	movwf	?_sprintf+3
  1888  02EC  0841               	movf	??_conversion_char+4,w
  1889  02ED  00B0               	movwf	?_sprintf+4
  1890  02EE  0869               	movf	_vol2,w
  1891  02EF  00C2               	movwf	??_conversion_char+5
  1892  02F0  01C3               	clrf	??_conversion_char+6
  1893  02F1  0842               	movf	??_conversion_char+5,w
  1894  02F2  00B1               	movwf	?_sprintf+5
  1895  02F3  0843               	movf	??_conversion_char+6,w
  1896  02F4  00B2               	movwf	?_sprintf+6
  1897  02F5  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1898  02F6  120A  118A  2020  120A  118A  	fcall	_sprintf
  1899  02FB                     l121:
  1900  02FB  0008               	return
  1901  02FC                     __end_of_conversion_char:
  1902                           
  1903                           	psect	text7
  1904  0020                     __ptext7:	
  1905 ;; *************** function _sprintf *****************
  1906 ;; Defined at:
  1907 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  sp              1    wreg     PTR unsigned char 
  1910 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1911 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1912 ;;		 -> STR_6(7), STR_5(8), STR_4(8), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1915 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1916 ;;  tmpval          4    0        struct .
  1917 ;;  val             2   25[BANK0 ] unsigned int 
  1918 ;;  cp              2    0        PTR const unsigned char 
  1919 ;;  len             2    0        unsigned int 
  1920 ;;  c               1   28[BANK0 ] unsigned char 
  1921 ;;  prec            1   24[BANK0 ] char 
  1922 ;;  flag            1   23[BANK0 ] unsigned char 
  1923 ;;  ap              1   22[BANK0 ] PTR void [1]
  1924 ;;		 -> ?_sprintf(2), 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2   12[BANK0 ] int 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       7       0       0       0
  1935 ;;      Locals:         0       7       0       0       0
  1936 ;;      Temps:          0       3       0       0       0
  1937 ;;      Totals:         0      17       0       0       0
  1938 ;;Total ram usage:       17 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 3
  1941 ;; This function calls:
  1942 ;;		___lwdiv
  1943 ;;		___lwmod
  1944 ;; This function is called by:
  1945 ;;		_conversion_char
  1946 ;;		_dato_recibido
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _sprintf
  1952  0020                     _sprintf:
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1956                           ;sprintf@sp stored from wreg
  1957  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0022  00BB               	movwf	sprintf@sp
  1960  0023                     l2001:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1963  0023  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1964  0024  00B3               	movwf	??_sprintf
  1965  0025  0833               	movf	??_sprintf,w
  1966  0026  00B6               	movwf	sprintf@ap
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1969  0027  28F3               	goto	l2053
  1970  0028                     l2003:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1973  0028  3025               	movlw	37
  1974  0029  063C               	xorwf	sprintf@c,w
  1975  002A  1903               	btfsc	3,2
  1976  002B  282D               	goto	u1661
  1977  002C  282E               	goto	u1660
  1978  002D                     u1661:
  1979  002D  283A               	goto	l2009
  1980  002E                     u1660:
  1981  002E                     l2005:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1984  002E  083C               	movf	sprintf@c,w
  1985  002F  00B3               	movwf	??_sprintf
  1986  0030  083B               	movf	sprintf@sp,w
  1987  0031  0084               	movwf	4
  1988  0032  0833               	movf	??_sprintf,w
  1989  0033  1383               	bcf	3,7	;select IRP bank0
  1990  0034  0080               	movwf	0
  1991  0035                     l2007:
  1992  0035  3001               	movlw	1
  1993  0036  00B3               	movwf	??_sprintf
  1994  0037  0833               	movf	??_sprintf,w
  1995  0038  07BB               	addwf	sprintf@sp,f
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1998  0039  28F3               	goto	l2053
  1999  003A                     l2009:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2002  003A  01B7               	clrf	sprintf@flag
  2003  003B                     l2013:	
  2004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2005                           
  2006  003B  3001               	movlw	1
  2007  003C  07AC               	addwf	sprintf@f,f
  2008  003D  30FF               	movlw	-1
  2009  003E  072C               	addwf	sprintf@f,w
  2010  003F  0084               	movwf	4
  2011  0040  120A  118A  240A  120A  118A  	fcall	stringdir
  2012  0045  00BC               	movwf	sprintf@c
  2013  0046  00B3               	movwf	??_sprintf
  2014  0047  01B4               	clrf	??_sprintf+1
  2015                           
  2016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2017                           ; Switch size 1, requested type "simple"
  2018                           ; Number of cases is 1, Range of values is 0 to 0
  2019                           ; switch strategies available:
  2020                           ; Name         Instructions Cycles
  2021                           ; simple_byte            4     3 (average)
  2022                           ; direct_byte           11     8 (fixed)
  2023                           ; jumptable            260     6 (fixed)
  2024                           ;	Chosen strategy is simple_byte
  2025  0048  0834               	movf	??_sprintf+1,w
  2026  0049  3A00               	xorlw	0	; case 0
  2027  004A  1903               	skipnz
  2028  004B  284D               	goto	l2263
  2029  004C  28F3               	goto	l2053
  2030  004D                     l2263:
  2031                           
  2032                           ; Switch size 1, requested type "simple"
  2033                           ; Number of cases is 3, Range of values is 0 to 105
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte           10     6 (average)
  2037                           ; jumptable            260     6 (fixed)
  2038                           ;	Chosen strategy is simple_byte
  2039  004D  0833               	movf	??_sprintf,w
  2040  004E  3A00               	xorlw	0	; case 0
  2041  004F  1903               	skipnz
  2042  0050  2905               	goto	l2055
  2043  0051  3A64               	xorlw	100	; case 100
  2044  0052  1903               	skipnz
  2045  0053  2858               	goto	l2015
  2046  0054  3A0D               	xorlw	13	; case 105
  2047  0055  1903               	skipnz
  2048  0056  2858               	goto	l2015
  2049  0057  28F3               	goto	l2053
  2050  0058                     l2015:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2053  0058  0836               	movf	sprintf@ap,w
  2054  0059  0084               	movwf	4
  2055  005A  1383               	bcf	3,7	;select IRP bank0
  2056  005B  0800               	movf	0,w
  2057  005C  00B9               	movwf	sprintf@val
  2058  005D  0A84               	incf	4,f
  2059  005E  0800               	movf	0,w
  2060  005F  00BA               	movwf	sprintf@val+1
  2061  0060                     l2017:
  2062  0060  3002               	movlw	2
  2063  0061  00B3               	movwf	??_sprintf
  2064  0062  0833               	movf	??_sprintf,w
  2065  0063  07B6               	addwf	sprintf@ap,f
  2066  0064                     l2019:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2069  0064  1FBA               	btfss	sprintf@val+1,7
  2070  0065  2867               	goto	u1671
  2071  0066  2868               	goto	u1670
  2072  0067                     u1671:
  2073  0067  2871               	goto	l2025
  2074  0068                     u1670:
  2075  0068                     l2021:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2078  0068  3003               	movlw	3
  2079  0069  00B3               	movwf	??_sprintf
  2080  006A  0833               	movf	??_sprintf,w
  2081  006B  04B7               	iorwf	sprintf@flag,f
  2082  006C                     l2023:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2085  006C  09B9               	comf	sprintf@val,f
  2086  006D  09BA               	comf	sprintf@val+1,f
  2087  006E  0AB9               	incf	sprintf@val,f
  2088  006F  1903               	skipnz
  2089  0070  0ABA               	incf	sprintf@val+1,f
  2090  0071                     l2025:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2093  0071  01BC               	clrf	sprintf@c
  2094  0072  0ABC               	incf	sprintf@c,f
  2095  0073                     l2031:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2098  0073  083C               	movf	sprintf@c,w
  2099  0074  00B3               	movwf	??_sprintf
  2100  0075  0733               	addwf	??_sprintf,w
  2101  0076  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2102  0077  0084               	movwf	4
  2103  0078  120A  118A  240A  120A  118A  	fcall	stringdir
  2104  007D  00B4               	movwf	??_sprintf+1
  2105  007E  120A  118A  240A  120A  118A  	fcall	stringdir
  2106  0083  00B5               	movwf	??_sprintf+2
  2107  0084  0835               	movf	??_sprintf+2,w
  2108  0085  023A               	subwf	sprintf@val+1,w
  2109  0086  1D03               	skipz
  2110  0087  288A               	goto	u1685
  2111  0088  0834               	movf	??_sprintf+1,w
  2112  0089  0239               	subwf	sprintf@val,w
  2113  008A                     u1685:
  2114  008A  1803               	skipnc
  2115  008B  288D               	goto	u1681
  2116  008C  288E               	goto	u1680
  2117  008D                     u1681:
  2118  008D  288F               	goto	l2035
  2119  008E                     u1680:
  2120  008E  2899               	goto	l2037
  2121  008F                     l2035:
  2122  008F  3001               	movlw	1
  2123  0090  00B3               	movwf	??_sprintf
  2124  0091  0833               	movf	??_sprintf,w
  2125  0092  07BC               	addwf	sprintf@c,f
  2126  0093  3005               	movlw	5
  2127  0094  063C               	xorwf	sprintf@c,w
  2128  0095  1D03               	btfss	3,2
  2129  0096  2898               	goto	u1691
  2130  0097  2899               	goto	u1690
  2131  0098                     u1691:
  2132  0098  2873               	goto	l2031
  2133  0099                     u1690:
  2134  0099                     l2037:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2137  0099  0837               	movf	sprintf@flag,w
  2138  009A  3903               	andlw	3
  2139  009B  1903               	btfsc	3,2
  2140  009C  289E               	goto	u1701
  2141  009D  289F               	goto	u1700
  2142  009E                     u1701:
  2143  009E  28AA               	goto	l2043
  2144  009F                     u1700:
  2145  009F                     l2039:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2148  009F  302D               	movlw	45
  2149  00A0  00B3               	movwf	??_sprintf
  2150  00A1  083B               	movf	sprintf@sp,w
  2151  00A2  0084               	movwf	4
  2152  00A3  0833               	movf	??_sprintf,w
  2153  00A4  1383               	bcf	3,7	;select IRP bank0
  2154  00A5  0080               	movwf	0
  2155  00A6                     l2041:
  2156  00A6  3001               	movlw	1
  2157  00A7  00B3               	movwf	??_sprintf
  2158  00A8  0833               	movf	??_sprintf,w
  2159  00A9  07BB               	addwf	sprintf@sp,f
  2160  00AA                     l2043:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2163  00AA  083C               	movf	sprintf@c,w
  2164  00AB  00B3               	movwf	??_sprintf
  2165  00AC  0833               	movf	??_sprintf,w
  2166  00AD  00B8               	movwf	sprintf@prec
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2169  00AE  28EA               	goto	l2051
  2170  00AF                     l2045:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2173  00AF  300A               	movlw	10
  2174  00B0  00A7               	movwf	___lwmod@divisor
  2175  00B1  3000               	movlw	0
  2176  00B2  00A8               	movwf	___lwmod@divisor+1
  2177  00B3  0838               	movf	sprintf@prec,w
  2178  00B4  00B3               	movwf	??_sprintf
  2179  00B5  0733               	addwf	??_sprintf,w
  2180  00B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2181  00B7  0084               	movwf	4
  2182  00B8  120A  118A  240A  120A  118A  	fcall	stringdir
  2183  00BD  00A0               	movwf	___lwdiv@divisor
  2184  00BE  120A  118A  240A  120A  118A  	fcall	stringdir
  2185  00C3  00A1               	movwf	___lwdiv@divisor+1
  2186  00C4  083A               	movf	sprintf@val+1,w
  2187  00C5  00A3               	movwf	___lwdiv@dividend+1
  2188  00C6  0839               	movf	sprintf@val,w
  2189  00C7  00A2               	movwf	___lwdiv@dividend
  2190  00C8  120A  118A  2497  120A  118A  	fcall	___lwdiv
  2191  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2192  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2193  00CF  0821               	movf	?___lwdiv+1,w
  2194  00D0  00AA               	movwf	___lwmod@dividend+1
  2195  00D1  0820               	movf	?___lwdiv,w
  2196  00D2  00A9               	movwf	___lwmod@dividend
  2197  00D3  120A  118A  2564  120A  118A  	fcall	___lwmod
  2198  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2199  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2200  00DA  0827               	movf	?___lwmod,w
  2201  00DB  3E30               	addlw	48
  2202  00DC  00B4               	movwf	??_sprintf+1
  2203  00DD  0834               	movf	??_sprintf+1,w
  2204  00DE  00BC               	movwf	sprintf@c
  2205  00DF                     l2047:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2208  00DF  083C               	movf	sprintf@c,w
  2209  00E0  00B3               	movwf	??_sprintf
  2210  00E1  083B               	movf	sprintf@sp,w
  2211  00E2  0084               	movwf	4
  2212  00E3  0833               	movf	??_sprintf,w
  2213  00E4  1383               	bcf	3,7	;select IRP bank0
  2214  00E5  0080               	movwf	0
  2215  00E6                     l2049:
  2216  00E6  3001               	movlw	1
  2217  00E7  00B3               	movwf	??_sprintf
  2218  00E8  0833               	movf	??_sprintf,w
  2219  00E9  07BB               	addwf	sprintf@sp,f
  2220  00EA                     l2051:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2223  00EA  30FF               	movlw	255
  2224  00EB  00B3               	movwf	??_sprintf
  2225  00EC  0833               	movf	??_sprintf,w
  2226  00ED  07B8               	addwf	sprintf@prec,f
  2227  00EE  0A38               	incf	sprintf@prec,w
  2228  00EF  1D03               	btfss	3,2
  2229  00F0  28F2               	goto	u1711
  2230  00F1  28F3               	goto	u1710
  2231  00F2                     u1711:
  2232  00F2  28AF               	goto	l2045
  2233  00F3                     u1710:
  2234  00F3                     l2053:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2237  00F3  3001               	movlw	1
  2238  00F4  07AC               	addwf	sprintf@f,f
  2239  00F5  30FF               	movlw	-1
  2240  00F6  072C               	addwf	sprintf@f,w
  2241  00F7  0084               	movwf	4
  2242  00F8  120A  118A  240A  120A  118A  	fcall	stringdir
  2243  00FD  00B3               	movwf	??_sprintf
  2244  00FE  0833               	movf	??_sprintf,w
  2245  00FF  00BC               	movwf	sprintf@c
  2246  0100  083C               	movf	sprintf@c,w
  2247  0101  1D03               	btfss	3,2
  2248  0102  2904               	goto	u1721
  2249  0103  2905               	goto	u1720
  2250  0104                     u1721:
  2251  0104  2828               	goto	l2003
  2252  0105                     u1720:
  2253  0105                     l2055:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2256  0105  083B               	movf	sprintf@sp,w
  2257  0106  0084               	movwf	4
  2258  0107  1383               	bcf	3,7	;select IRP bank0
  2259  0108  0180               	clrf	0
  2260  0109                     l359:
  2261  0109  0008               	return
  2262  010A                     __end_of_sprintf:
  2263                           
  2264                           	psect	text8
  2265  0564                     __ptext8:	
  2266 ;; *************** function ___lwmod *****************
  2267 ;; Defined at:
  2268 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  divisor         2    7[BANK0 ] unsigned int 
  2271 ;;  dividend        2    9[BANK0 ] unsigned int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  counter         1   11[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2    7[BANK0 ] unsigned int 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       4       0       0       0
  2284 ;;      Locals:         0       1       0       0       0
  2285 ;;      Temps:          1       0       0       0       0
  2286 ;;      Totals:         1       5       0       0       0
  2287 ;;Total ram usage:        6 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 2
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_sprintf
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function ___lwmod
  2299  0564                     ___lwmod:
  2300  0564                     l1517:	
  2301                           ;incstack = 0
  2302                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2303                           
  2304  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0566  0827               	movf	___lwmod@divisor,w
  2307  0567  0428               	iorwf	___lwmod@divisor+1,w
  2308  0568  1903               	btfsc	3,2
  2309  0569  2D6B               	goto	u1021
  2310  056A  2D6C               	goto	u1020
  2311  056B                     u1021:
  2312  056B  2D9B               	goto	l1535
  2313  056C                     u1020:
  2314  056C                     l1519:
  2315  056C  01AB               	clrf	___lwmod@counter
  2316  056D  0AAB               	incf	___lwmod@counter,f
  2317  056E  2D7A               	goto	l1525
  2318  056F                     l1521:
  2319  056F  3001               	movlw	1
  2320  0570                     u1035:
  2321  0570  1003               	clrc
  2322  0571  0DA7               	rlf	___lwmod@divisor,f
  2323  0572  0DA8               	rlf	___lwmod@divisor+1,f
  2324  0573  3EFF               	addlw	-1
  2325  0574  1D03               	skipz
  2326  0575  2D70               	goto	u1035
  2327  0576                     l1523:
  2328  0576  3001               	movlw	1
  2329  0577  00F5               	movwf	??___lwmod
  2330  0578  0875               	movf	??___lwmod,w
  2331  0579  07AB               	addwf	___lwmod@counter,f
  2332  057A                     l1525:
  2333  057A  1FA8               	btfss	___lwmod@divisor+1,7
  2334  057B  2D7D               	goto	u1041
  2335  057C  2D7E               	goto	u1040
  2336  057D                     u1041:
  2337  057D  2D6F               	goto	l1521
  2338  057E                     u1040:
  2339  057E                     l1527:
  2340  057E  0828               	movf	___lwmod@divisor+1,w
  2341  057F  022A               	subwf	___lwmod@dividend+1,w
  2342  0580  1D03               	skipz
  2343  0581  2D84               	goto	u1055
  2344  0582  0827               	movf	___lwmod@divisor,w
  2345  0583  0229               	subwf	___lwmod@dividend,w
  2346  0584                     u1055:
  2347  0584  1C03               	skipc
  2348  0585  2D87               	goto	u1051
  2349  0586  2D88               	goto	u1050
  2350  0587                     u1051:
  2351  0587  2D8E               	goto	l1531
  2352  0588                     u1050:
  2353  0588                     l1529:
  2354  0588  0827               	movf	___lwmod@divisor,w
  2355  0589  02A9               	subwf	___lwmod@dividend,f
  2356  058A  0828               	movf	___lwmod@divisor+1,w
  2357  058B  1C03               	skipc
  2358  058C  03AA               	decf	___lwmod@dividend+1,f
  2359  058D  02AA               	subwf	___lwmod@dividend+1,f
  2360  058E                     l1531:
  2361  058E  3001               	movlw	1
  2362  058F                     u1065:
  2363  058F  1003               	clrc
  2364  0590  0CA8               	rrf	___lwmod@divisor+1,f
  2365  0591  0CA7               	rrf	___lwmod@divisor,f
  2366  0592  3EFF               	addlw	-1
  2367  0593  1D03               	skipz
  2368  0594  2D8F               	goto	u1065
  2369  0595                     l1533:
  2370  0595  3001               	movlw	1
  2371  0596  02AB               	subwf	___lwmod@counter,f
  2372  0597  1D03               	btfss	3,2
  2373  0598  2D9A               	goto	u1071
  2374  0599  2D9B               	goto	u1070
  2375  059A                     u1071:
  2376  059A  2D7E               	goto	l1527
  2377  059B                     u1070:
  2378  059B                     l1535:
  2379  059B  082A               	movf	___lwmod@dividend+1,w
  2380  059C  00A8               	movwf	?___lwmod+1
  2381  059D  0829               	movf	___lwmod@dividend,w
  2382  059E  00A7               	movwf	?___lwmod
  2383  059F                     l645:
  2384  059F  0008               	return
  2385  05A0                     __end_of___lwmod:
  2386                           
  2387                           	psect	text9
  2388  0497                     __ptext9:	
  2389 ;; *************** function ___lwdiv *****************
  2390 ;; Defined at:
  2391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  divisor         2    0[BANK0 ] unsigned int 
  2394 ;;  dividend        2    2[BANK0 ] unsigned int 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  quotient        2    5[BANK0 ] unsigned int 
  2397 ;;  counter         1    4[BANK0 ] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  2    0[BANK0 ] unsigned int 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2407 ;;      Params:         0       4       0       0       0
  2408 ;;      Locals:         0       3       0       0       0
  2409 ;;      Temps:          1       0       0       0       0
  2410 ;;      Totals:         1       7       0       0       0
  2411 ;;Total ram usage:        8 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 2
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_sprintf
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function ___lwdiv
  2423  0497                     ___lwdiv:
  2424  0497                     l1953:	
  2425                           ;incstack = 0
  2426                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2427                           
  2428  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0499  01A5               	clrf	___lwdiv@quotient
  2431  049A  01A6               	clrf	___lwdiv@quotient+1
  2432  049B                     l1955:
  2433  049B  0820               	movf	___lwdiv@divisor,w
  2434  049C  0421               	iorwf	___lwdiv@divisor+1,w
  2435  049D  1903               	btfsc	3,2
  2436  049E  2CA0               	goto	u1581
  2437  049F  2CA1               	goto	u1580
  2438  04A0                     u1581:
  2439  04A0  2CD8               	goto	l1975
  2440  04A1                     u1580:
  2441  04A1                     l1957:
  2442  04A1  01A4               	clrf	___lwdiv@counter
  2443  04A2  0AA4               	incf	___lwdiv@counter,f
  2444  04A3  2CAF               	goto	l1963
  2445  04A4                     l1959:
  2446  04A4  3001               	movlw	1
  2447  04A5                     u1595:
  2448  04A5  1003               	clrc
  2449  04A6  0DA0               	rlf	___lwdiv@divisor,f
  2450  04A7  0DA1               	rlf	___lwdiv@divisor+1,f
  2451  04A8  3EFF               	addlw	-1
  2452  04A9  1D03               	skipz
  2453  04AA  2CA5               	goto	u1595
  2454  04AB                     l1961:
  2455  04AB  3001               	movlw	1
  2456  04AC  00F4               	movwf	??___lwdiv
  2457  04AD  0874               	movf	??___lwdiv,w
  2458  04AE  07A4               	addwf	___lwdiv@counter,f
  2459  04AF                     l1963:
  2460  04AF  1FA1               	btfss	___lwdiv@divisor+1,7
  2461  04B0  2CB2               	goto	u1601
  2462  04B1  2CB3               	goto	u1600
  2463  04B2                     u1601:
  2464  04B2  2CA4               	goto	l1959
  2465  04B3                     u1600:
  2466  04B3                     l1965:
  2467  04B3  3001               	movlw	1
  2468  04B4                     u1615:
  2469  04B4  1003               	clrc
  2470  04B5  0DA5               	rlf	___lwdiv@quotient,f
  2471  04B6  0DA6               	rlf	___lwdiv@quotient+1,f
  2472  04B7  3EFF               	addlw	-1
  2473  04B8  1D03               	skipz
  2474  04B9  2CB4               	goto	u1615
  2475  04BA  0821               	movf	___lwdiv@divisor+1,w
  2476  04BB  0223               	subwf	___lwdiv@dividend+1,w
  2477  04BC  1D03               	skipz
  2478  04BD  2CC0               	goto	u1625
  2479  04BE  0820               	movf	___lwdiv@divisor,w
  2480  04BF  0222               	subwf	___lwdiv@dividend,w
  2481  04C0                     u1625:
  2482  04C0  1C03               	skipc
  2483  04C1  2CC3               	goto	u1621
  2484  04C2  2CC4               	goto	u1620
  2485  04C3                     u1621:
  2486  04C3  2CCB               	goto	l1971
  2487  04C4                     u1620:
  2488  04C4                     l1967:
  2489  04C4  0820               	movf	___lwdiv@divisor,w
  2490  04C5  02A2               	subwf	___lwdiv@dividend,f
  2491  04C6  0821               	movf	___lwdiv@divisor+1,w
  2492  04C7  1C03               	skipc
  2493  04C8  03A3               	decf	___lwdiv@dividend+1,f
  2494  04C9  02A3               	subwf	___lwdiv@dividend+1,f
  2495  04CA                     l1969:
  2496  04CA  1425               	bsf	___lwdiv@quotient,0
  2497  04CB                     l1971:
  2498  04CB  3001               	movlw	1
  2499  04CC                     u1635:
  2500  04CC  1003               	clrc
  2501  04CD  0CA1               	rrf	___lwdiv@divisor+1,f
  2502  04CE  0CA0               	rrf	___lwdiv@divisor,f
  2503  04CF  3EFF               	addlw	-1
  2504  04D0  1D03               	skipz
  2505  04D1  2CCC               	goto	u1635
  2506  04D2                     l1973:
  2507  04D2  3001               	movlw	1
  2508  04D3  02A4               	subwf	___lwdiv@counter,f
  2509  04D4  1D03               	btfss	3,2
  2510  04D5  2CD7               	goto	u1641
  2511  04D6  2CD8               	goto	u1640
  2512  04D7                     u1641:
  2513  04D7  2CB3               	goto	l1965
  2514  04D8                     u1640:
  2515  04D8                     l1975:
  2516  04D8  0826               	movf	___lwdiv@quotient+1,w
  2517  04D9  00A1               	movwf	?___lwdiv+1
  2518  04DA  0825               	movf	___lwdiv@quotient,w
  2519  04DB  00A0               	movwf	?___lwdiv
  2520  04DC                     l635:
  2521  04DC  0008               	return
  2522  04DD                     __end_of___lwdiv:
  2523                           
  2524                           	psect	text10
  2525  0357                     __ptext10:	
  2526 ;; *************** function _divisor *****************
  2527 ;; Defined at:
  2528 ;;		line 181 in file "LAB2.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  a               1    wreg     unsigned char 
  2531 ;;  dig             1    5[COMMON] PTR unsigned char 
  2532 ;;		 -> vol2(1), vol1(1), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  a               1   10[BANK0 ] unsigned char 
  2535 ;;  i               2   13[BANK0 ] int 
  2536 ;;  b               2   11[BANK0 ] int 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         1       0       0       0       0
  2547 ;;      Locals:         0       5       0       0       0
  2548 ;;      Temps:          0       2       0       0       0
  2549 ;;      Totals:         1       7       0       0       0
  2550 ;;Total ram usage:        8 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 3
  2553 ;; This function calls:
  2554 ;;		___awdiv
  2555 ;;		___awmod
  2556 ;; This function is called by:
  2557 ;;		_conversion_char
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _divisor
  2563  0357                     _divisor:
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2567                           ;divisor@a stored from wreg
  2568  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0359  00AA               	movwf	divisor@a
  2571  035A                     l1987:
  2572                           
  2573                           ;LAB2.c: 182:     int b = 2*a;
  2574  035A  082A               	movf	divisor@a,w
  2575  035B  00A8               	movwf	??_divisor
  2576  035C  01A9               	clrf	??_divisor+1
  2577  035D  1003               	clrc
  2578  035E  0D28               	rlf	??_divisor,w
  2579  035F  00AB               	movwf	divisor@b
  2580  0360  0D29               	rlf	??_divisor+1,w
  2581  0361  00AC               	movwf	divisor@b+1
  2582  0362                     l1989:
  2583                           
  2584                           ;LAB2.c: 183:     for(int i = 0; i<3 ; i++){
  2585  0362  01AD               	clrf	divisor@i
  2586  0363  01AE               	clrf	divisor@i+1
  2587  0364                     l1995:
  2588                           
  2589                           ;LAB2.c: 184:         dig[i] = b % 10;
  2590  0364  300A               	movlw	10
  2591  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0367  00A0               	movwf	___awmod@divisor
  2594  0368  3000               	movlw	0
  2595  0369  00A1               	movwf	___awmod@divisor+1
  2596  036A  082C               	movf	divisor@b+1,w
  2597  036B  00A3               	movwf	___awmod@dividend+1
  2598  036C  082B               	movf	divisor@b,w
  2599  036D  00A2               	movwf	___awmod@dividend
  2600  036E  120A  118A  22FC  120A  118A  	fcall	___awmod
  2601  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0375  0820               	movf	?___awmod,w
  2604  0376  00A8               	movwf	??_divisor
  2605  0377  082D               	movf	divisor@i,w
  2606  0378  0775               	addwf	divisor@dig,w
  2607  0379  00A9               	movwf	??_divisor+1
  2608  037A  0829               	movf	??_divisor+1,w
  2609  037B  0084               	movwf	4
  2610  037C  0828               	movf	??_divisor,w
  2611  037D  1383               	bcf	3,7	;select IRP bank0
  2612  037E  0080               	movwf	0
  2613                           
  2614                           ;LAB2.c: 185:         b = (b - dig[i])/10;
  2615  037F  300A               	movlw	10
  2616  0380  00A0               	movwf	___awdiv@divisor
  2617  0381  3000               	movlw	0
  2618  0382  00A1               	movwf	___awdiv@divisor+1
  2619  0383  082D               	movf	divisor@i,w
  2620  0384  0775               	addwf	divisor@dig,w
  2621  0385  00A8               	movwf	??_divisor
  2622  0386  0828               	movf	??_divisor,w
  2623  0387  0084               	movwf	4
  2624  0388  0800               	movf	0,w
  2625  0389  022B               	subwf	divisor@b,w
  2626  038A  00A2               	movwf	___awdiv@dividend
  2627  038B  082C               	movf	divisor@b+1,w
  2628  038C  1C03               	skipc
  2629  038D  032C               	decf	divisor@b+1,w
  2630  038E  00A3               	movwf	___awdiv@dividend+1
  2631  038F  120A  118A  2238  120A  118A  	fcall	___awdiv
  2632  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0396  0821               	movf	?___awdiv+1,w
  2635  0397  00AC               	movwf	divisor@b+1
  2636  0398  0820               	movf	?___awdiv,w
  2637  0399  00AB               	movwf	divisor@b
  2638  039A                     l1997:
  2639                           
  2640                           ;LAB2.c: 186:     }
  2641  039A  3001               	movlw	1
  2642  039B  07AD               	addwf	divisor@i,f
  2643  039C  1803               	skipnc
  2644  039D  0AAE               	incf	divisor@i+1,f
  2645  039E  3000               	movlw	0
  2646  039F  07AE               	addwf	divisor@i+1,f
  2647  03A0                     l1999:
  2648  03A0  082E               	movf	divisor@i+1,w
  2649  03A1  3A80               	xorlw	128
  2650  03A2  00FF               	movwf	btemp+1
  2651  03A3  3080               	movlw	128
  2652  03A4  027F               	subwf	btemp+1,w
  2653  03A5  1D03               	skipz
  2654  03A6  2BA9               	goto	u1655
  2655  03A7  3003               	movlw	3
  2656  03A8  022D               	subwf	divisor@i,w
  2657  03A9                     u1655:
  2658  03A9  1C03               	skipc
  2659  03AA  2BAC               	goto	u1651
  2660  03AB  2BAD               	goto	u1650
  2661  03AC                     u1651:
  2662  03AC  2B64               	goto	l1995
  2663  03AD                     u1650:
  2664  03AD                     l126:
  2665  03AD  0008               	return
  2666  03AE                     __end_of_divisor:
  2667                           
  2668                           	psect	text11
  2669  02FC                     __ptext11:	
  2670 ;; *************** function ___awmod *****************
  2671 ;; Defined at:
  2672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  divisor         2    0[BANK0 ] int 
  2675 ;;  dividend        2    2[BANK0 ] int 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  sign            1    5[BANK0 ] unsigned char 
  2678 ;;  counter         1    4[BANK0 ] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2    0[BANK0 ] int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       4       0       0       0
  2689 ;;      Locals:         0       2       0       0       0
  2690 ;;      Temps:          1       0       0       0       0
  2691 ;;      Totals:         1       6       0       0       0
  2692 ;;Total ram usage:        7 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 2
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_divisor
  2699 ;;		_divisor1
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function ___awmod
  2705  02FC                     ___awmod:
  2706  02FC                     l1915:	
  2707                           ;incstack = 0
  2708                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2709                           
  2710  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2711  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2712  02FE  01A5               	clrf	___awmod@sign
  2713  02FF                     l1917:
  2714  02FF  1FA3               	btfss	___awmod@dividend+1,7
  2715  0300  2B02               	goto	u1491
  2716  0301  2B03               	goto	u1490
  2717  0302                     u1491:
  2718  0302  2B0A               	goto	l1923
  2719  0303                     u1490:
  2720  0303                     l1919:
  2721  0303  09A2               	comf	___awmod@dividend,f
  2722  0304  09A3               	comf	___awmod@dividend+1,f
  2723  0305  0AA2               	incf	___awmod@dividend,f
  2724  0306  1903               	skipnz
  2725  0307  0AA3               	incf	___awmod@dividend+1,f
  2726  0308                     l1921:
  2727  0308  01A5               	clrf	___awmod@sign
  2728  0309  0AA5               	incf	___awmod@sign,f
  2729  030A                     l1923:
  2730  030A  1FA1               	btfss	___awmod@divisor+1,7
  2731  030B  2B0D               	goto	u1501
  2732  030C  2B0E               	goto	u1500
  2733  030D                     u1501:
  2734  030D  2B13               	goto	l1927
  2735  030E                     u1500:
  2736  030E                     l1925:
  2737  030E  09A0               	comf	___awmod@divisor,f
  2738  030F  09A1               	comf	___awmod@divisor+1,f
  2739  0310  0AA0               	incf	___awmod@divisor,f
  2740  0311  1903               	skipnz
  2741  0312  0AA1               	incf	___awmod@divisor+1,f
  2742  0313                     l1927:
  2743  0313  0820               	movf	___awmod@divisor,w
  2744  0314  0421               	iorwf	___awmod@divisor+1,w
  2745  0315  1903               	btfsc	3,2
  2746  0316  2B18               	goto	u1511
  2747  0317  2B19               	goto	u1510
  2748  0318                     u1511:
  2749  0318  2B48               	goto	l1945
  2750  0319                     u1510:
  2751  0319                     l1929:
  2752  0319  01A4               	clrf	___awmod@counter
  2753  031A  0AA4               	incf	___awmod@counter,f
  2754  031B  2B27               	goto	l1935
  2755  031C                     l1931:
  2756  031C  3001               	movlw	1
  2757  031D                     u1525:
  2758  031D  1003               	clrc
  2759  031E  0DA0               	rlf	___awmod@divisor,f
  2760  031F  0DA1               	rlf	___awmod@divisor+1,f
  2761  0320  3EFF               	addlw	-1
  2762  0321  1D03               	skipz
  2763  0322  2B1D               	goto	u1525
  2764  0323                     l1933:
  2765  0323  3001               	movlw	1
  2766  0324  00F4               	movwf	??___awmod
  2767  0325  0874               	movf	??___awmod,w
  2768  0326  07A4               	addwf	___awmod@counter,f
  2769  0327                     l1935:
  2770  0327  1FA1               	btfss	___awmod@divisor+1,7
  2771  0328  2B2A               	goto	u1531
  2772  0329  2B2B               	goto	u1530
  2773  032A                     u1531:
  2774  032A  2B1C               	goto	l1931
  2775  032B                     u1530:
  2776  032B                     l1937:
  2777  032B  0821               	movf	___awmod@divisor+1,w
  2778  032C  0223               	subwf	___awmod@dividend+1,w
  2779  032D  1D03               	skipz
  2780  032E  2B31               	goto	u1545
  2781  032F  0820               	movf	___awmod@divisor,w
  2782  0330  0222               	subwf	___awmod@dividend,w
  2783  0331                     u1545:
  2784  0331  1C03               	skipc
  2785  0332  2B34               	goto	u1541
  2786  0333  2B35               	goto	u1540
  2787  0334                     u1541:
  2788  0334  2B3B               	goto	l1941
  2789  0335                     u1540:
  2790  0335                     l1939:
  2791  0335  0820               	movf	___awmod@divisor,w
  2792  0336  02A2               	subwf	___awmod@dividend,f
  2793  0337  0821               	movf	___awmod@divisor+1,w
  2794  0338  1C03               	skipc
  2795  0339  03A3               	decf	___awmod@dividend+1,f
  2796  033A  02A3               	subwf	___awmod@dividend+1,f
  2797  033B                     l1941:
  2798  033B  3001               	movlw	1
  2799  033C                     u1555:
  2800  033C  1003               	clrc
  2801  033D  0CA1               	rrf	___awmod@divisor+1,f
  2802  033E  0CA0               	rrf	___awmod@divisor,f
  2803  033F  3EFF               	addlw	-1
  2804  0340  1D03               	skipz
  2805  0341  2B3C               	goto	u1555
  2806  0342                     l1943:
  2807  0342  3001               	movlw	1
  2808  0343  02A4               	subwf	___awmod@counter,f
  2809  0344  1D03               	btfss	3,2
  2810  0345  2B47               	goto	u1561
  2811  0346  2B48               	goto	u1560
  2812  0347                     u1561:
  2813  0347  2B2B               	goto	l1937
  2814  0348                     u1560:
  2815  0348                     l1945:
  2816  0348  0825               	movf	___awmod@sign,w
  2817  0349  1903               	btfsc	3,2
  2818  034A  2B4C               	goto	u1571
  2819  034B  2B4D               	goto	u1570
  2820  034C                     u1571:
  2821  034C  2B52               	goto	l1949
  2822  034D                     u1570:
  2823  034D                     l1947:
  2824  034D  09A2               	comf	___awmod@dividend,f
  2825  034E  09A3               	comf	___awmod@dividend+1,f
  2826  034F  0AA2               	incf	___awmod@dividend,f
  2827  0350  1903               	skipnz
  2828  0351  0AA3               	incf	___awmod@dividend+1,f
  2829  0352                     l1949:
  2830  0352  0823               	movf	___awmod@dividend+1,w
  2831  0353  00A1               	movwf	?___awmod+1
  2832  0354  0822               	movf	___awmod@dividend,w
  2833  0355  00A0               	movwf	?___awmod
  2834  0356                     l529:
  2835  0356  0008               	return
  2836  0357                     __end_of___awmod:
  2837                           
  2838                           	psect	text12
  2839  0238                     __ptext12:	
  2840 ;; *************** function ___awdiv *****************
  2841 ;; Defined at:
  2842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  divisor         2    0[BANK0 ] int 
  2845 ;;  dividend        2    2[BANK0 ] int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  quotient        2    6[BANK0 ] int 
  2848 ;;  sign            1    5[BANK0 ] unsigned char 
  2849 ;;  counter         1    4[BANK0 ] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    0[BANK0 ] int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       4       0       0       0
  2860 ;;      Locals:         0       4       0       0       0
  2861 ;;      Temps:          1       0       0       0       0
  2862 ;;      Totals:         1       8       0       0       0
  2863 ;;Total ram usage:        9 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 2
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_divisor
  2870 ;;		_divisor1
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function ___awdiv
  2876  0238                     ___awdiv:
  2877  0238                     l1871:	
  2878                           ;incstack = 0
  2879                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2880                           
  2881  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2883  023A  01A5               	clrf	___awdiv@sign
  2884  023B                     l1873:
  2885  023B  1FA1               	btfss	___awdiv@divisor+1,7
  2886  023C  2A3E               	goto	u1391
  2887  023D  2A3F               	goto	u1390
  2888  023E                     u1391:
  2889  023E  2A46               	goto	l1879
  2890  023F                     u1390:
  2891  023F                     l1875:
  2892  023F  09A0               	comf	___awdiv@divisor,f
  2893  0240  09A1               	comf	___awdiv@divisor+1,f
  2894  0241  0AA0               	incf	___awdiv@divisor,f
  2895  0242  1903               	skipnz
  2896  0243  0AA1               	incf	___awdiv@divisor+1,f
  2897  0244                     l1877:
  2898  0244  01A5               	clrf	___awdiv@sign
  2899  0245  0AA5               	incf	___awdiv@sign,f
  2900  0246                     l1879:
  2901  0246  1FA3               	btfss	___awdiv@dividend+1,7
  2902  0247  2A49               	goto	u1401
  2903  0248  2A4A               	goto	u1400
  2904  0249                     u1401:
  2905  0249  2A53               	goto	l1885
  2906  024A                     u1400:
  2907  024A                     l1881:
  2908  024A  09A2               	comf	___awdiv@dividend,f
  2909  024B  09A3               	comf	___awdiv@dividend+1,f
  2910  024C  0AA2               	incf	___awdiv@dividend,f
  2911  024D  1903               	skipnz
  2912  024E  0AA3               	incf	___awdiv@dividend+1,f
  2913  024F                     l1883:
  2914  024F  3001               	movlw	1
  2915  0250  00F4               	movwf	??___awdiv
  2916  0251  0874               	movf	??___awdiv,w
  2917  0252  06A5               	xorwf	___awdiv@sign,f
  2918  0253                     l1885:
  2919  0253  01A6               	clrf	___awdiv@quotient
  2920  0254  01A7               	clrf	___awdiv@quotient+1
  2921  0255                     l1887:
  2922  0255  0820               	movf	___awdiv@divisor,w
  2923  0256  0421               	iorwf	___awdiv@divisor+1,w
  2924  0257  1903               	btfsc	3,2
  2925  0258  2A5A               	goto	u1411
  2926  0259  2A5B               	goto	u1410
  2927  025A                     u1411:
  2928  025A  2A92               	goto	l1907
  2929  025B                     u1410:
  2930  025B                     l1889:
  2931  025B  01A4               	clrf	___awdiv@counter
  2932  025C  0AA4               	incf	___awdiv@counter,f
  2933  025D  2A69               	goto	l1895
  2934  025E                     l1891:
  2935  025E  3001               	movlw	1
  2936  025F                     u1425:
  2937  025F  1003               	clrc
  2938  0260  0DA0               	rlf	___awdiv@divisor,f
  2939  0261  0DA1               	rlf	___awdiv@divisor+1,f
  2940  0262  3EFF               	addlw	-1
  2941  0263  1D03               	skipz
  2942  0264  2A5F               	goto	u1425
  2943  0265                     l1893:
  2944  0265  3001               	movlw	1
  2945  0266  00F4               	movwf	??___awdiv
  2946  0267  0874               	movf	??___awdiv,w
  2947  0268  07A4               	addwf	___awdiv@counter,f
  2948  0269                     l1895:
  2949  0269  1FA1               	btfss	___awdiv@divisor+1,7
  2950  026A  2A6C               	goto	u1431
  2951  026B  2A6D               	goto	u1430
  2952  026C                     u1431:
  2953  026C  2A5E               	goto	l1891
  2954  026D                     u1430:
  2955  026D                     l1897:
  2956  026D  3001               	movlw	1
  2957  026E                     u1445:
  2958  026E  1003               	clrc
  2959  026F  0DA6               	rlf	___awdiv@quotient,f
  2960  0270  0DA7               	rlf	___awdiv@quotient+1,f
  2961  0271  3EFF               	addlw	-1
  2962  0272  1D03               	skipz
  2963  0273  2A6E               	goto	u1445
  2964  0274  0821               	movf	___awdiv@divisor+1,w
  2965  0275  0223               	subwf	___awdiv@dividend+1,w
  2966  0276  1D03               	skipz
  2967  0277  2A7A               	goto	u1455
  2968  0278  0820               	movf	___awdiv@divisor,w
  2969  0279  0222               	subwf	___awdiv@dividend,w
  2970  027A                     u1455:
  2971  027A  1C03               	skipc
  2972  027B  2A7D               	goto	u1451
  2973  027C  2A7E               	goto	u1450
  2974  027D                     u1451:
  2975  027D  2A85               	goto	l1903
  2976  027E                     u1450:
  2977  027E                     l1899:
  2978  027E  0820               	movf	___awdiv@divisor,w
  2979  027F  02A2               	subwf	___awdiv@dividend,f
  2980  0280  0821               	movf	___awdiv@divisor+1,w
  2981  0281  1C03               	skipc
  2982  0282  03A3               	decf	___awdiv@dividend+1,f
  2983  0283  02A3               	subwf	___awdiv@dividend+1,f
  2984  0284                     l1901:
  2985  0284  1426               	bsf	___awdiv@quotient,0
  2986  0285                     l1903:
  2987  0285  3001               	movlw	1
  2988  0286                     u1465:
  2989  0286  1003               	clrc
  2990  0287  0CA1               	rrf	___awdiv@divisor+1,f
  2991  0288  0CA0               	rrf	___awdiv@divisor,f
  2992  0289  3EFF               	addlw	-1
  2993  028A  1D03               	skipz
  2994  028B  2A86               	goto	u1465
  2995  028C                     l1905:
  2996  028C  3001               	movlw	1
  2997  028D  02A4               	subwf	___awdiv@counter,f
  2998  028E  1D03               	btfss	3,2
  2999  028F  2A91               	goto	u1471
  3000  0290  2A92               	goto	u1470
  3001  0291                     u1471:
  3002  0291  2A6D               	goto	l1897
  3003  0292                     u1470:
  3004  0292                     l1907:
  3005  0292  0825               	movf	___awdiv@sign,w
  3006  0293  1903               	btfsc	3,2
  3007  0294  2A96               	goto	u1481
  3008  0295  2A97               	goto	u1480
  3009  0296                     u1481:
  3010  0296  2A9C               	goto	l1911
  3011  0297                     u1480:
  3012  0297                     l1909:
  3013  0297  09A6               	comf	___awdiv@quotient,f
  3014  0298  09A7               	comf	___awdiv@quotient+1,f
  3015  0299  0AA6               	incf	___awdiv@quotient,f
  3016  029A  1903               	skipnz
  3017  029B  0AA7               	incf	___awdiv@quotient+1,f
  3018  029C                     l1911:
  3019  029C  0827               	movf	___awdiv@quotient+1,w
  3020  029D  00A1               	movwf	?___awdiv+1
  3021  029E  0826               	movf	___awdiv@quotient,w
  3022  029F  00A0               	movwf	?___awdiv
  3023  02A0                     l516:
  3024  02A0  0008               	return
  3025  02A1                     __end_of___awdiv:
  3026                           
  3027                           	psect	text13
  3028  062C                     __ptext13:	
  3029 ;; *************** function _conversion *****************
  3030 ;; Defined at:
  3031 ;;		line 21 in file "ADC.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0
  3047 ;;      Temps:          1       0       0       0       0
  3048 ;;      Totals:         1       0       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 2
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function _conversion
  3061  062C                     _conversion:
  3062  062C                     l1773:	
  3063                           ;incstack = 0
  3064                           ; Regs used in _conversion: [wreg+status,2+status,0]
  3065                           
  3066                           
  3067                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  3068  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3069  062D  1303               	bcf	3,6	;RP1=0, select bank0
  3070  062E  189F               	btfsc	31,1	;volatile
  3071  062F  2E31               	goto	u1321
  3072  0630  2E32               	goto	u1320
  3073  0631                     u1321:
  3074  0631  2E57               	goto	l217
  3075  0632                     u1320:
  3076  0632                     l1775:
  3077                           
  3078                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  3079  0632  0C1F               	rrf	31,w	;volatile
  3080  0633  00F4               	movwf	??_conversion
  3081  0634  0C74               	rrf	??_conversion,w
  3082  0635  390F               	andlw	15
  3083  0636  3A01               	xorlw	1
  3084  0637  1D03               	skipz
  3085  0638  2E3A               	goto	u1331
  3086  0639  2E3B               	goto	u1330
  3087  063A                     u1331:
  3088  063A  2E42               	goto	l1781
  3089  063B                     u1330:
  3090  063B                     l1777:
  3091                           
  3092                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  3093  063B  30C3               	movlw	-61
  3094  063C  059F               	andwf	31,f	;volatile
  3095  063D                     l1779:
  3096                           
  3097                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  3098  063D  3021               	movlw	33
  3099  063E  00F4               	movwf	??_conversion
  3100  063F                     u1917:
  3101  063F  0BF4               	decfsz	??_conversion,f
  3102  0640  2E3F               	goto	u1917
  3103                           
  3104                           ;ADC.c: 26:         }
  3105  0641  2E50               	goto	l1787
  3106  0642                     l1781:
  3107  0642  0C1F               	rrf	31,w	;volatile
  3108  0643  00F4               	movwf	??_conversion
  3109  0644  0C74               	rrf	??_conversion,w
  3110  0645  390F               	andlw	15
  3111  0646  3A00               	xorlw	0
  3112  0647  1D03               	skipz
  3113  0648  2E4A               	goto	u1341
  3114  0649  2E4B               	goto	u1340
  3115  064A                     u1341:
  3116  064A  2E50               	goto	l1787
  3117  064B                     u1340:
  3118  064B                     l1783:
  3119                           
  3120                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  3121  064B  081F               	movf	31,w	;volatile
  3122  064C  39C3               	andlw	-61
  3123  064D  3804               	iorlw	4
  3124  064E  009F               	movwf	31	;volatile
  3125  064F  2E3D               	goto	l1779
  3126  0650                     l1787:
  3127                           
  3128                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  3129  0650  3021               	movlw	33
  3130  0651  00F4               	movwf	??_conversion
  3131  0652                     u1927:
  3132  0652  0BF4               	decfsz	??_conversion,f
  3133  0653  2E52               	goto	u1927
  3134  0654                     l1789:
  3135                           
  3136                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  3137  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0656  149F               	bsf	31,1	;volatile
  3140  0657                     l217:
  3141  0657  0008               	return
  3142  0658                     __end_of_conversion:
  3143                           
  3144                           	psect	text14
  3145  0693                     __ptext14:	
  3146 ;; *************** function _Limpiar_pantallaLCD *****************
  3147 ;; Defined at:
  3148 ;;		line 63 in file "LCD.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0
  3164 ;;      Temps:          0       2       0       0       0
  3165 ;;      Totals:         0       2       0       0       0
  3166 ;;Total ram usage:        2 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 4
  3169 ;; This function calls:
  3170 ;;		_Escribir_comandoLCD
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           
  3177                           ;psect for function _Limpiar_pantallaLCD
  3178  0693                     _Limpiar_pantallaLCD:
  3179  0693                     l2163:	
  3180                           ;incstack = 0
  3181                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  3182                           
  3183                           
  3184                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  3185  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0695  1287               	bcf	7,5	;volatile
  3188  0696  1208               	bcf	8,4	;volatile
  3189  0697                     l2165:
  3190                           
  3191                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  3192  0697  3001               	movlw	1
  3193  0698  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3194  069D                     l2167:
  3195                           
  3196                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3197  069D  301A               	movlw	26
  3198  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3199  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3200  06A0  00A1               	movwf	??_Limpiar_pantallaLCD+1
  3201  06A1  30F7               	movlw	247
  3202  06A2  00A0               	movwf	??_Limpiar_pantallaLCD
  3203  06A3                     u1937:
  3204  06A3  0BA0               	decfsz	??_Limpiar_pantallaLCD,f
  3205  06A4  2EA3               	goto	u1937
  3206  06A5  0BA1               	decfsz	??_Limpiar_pantallaLCD+1,f
  3207  06A6  2EA3               	goto	u1937
  3208  06A7  2EA8               	nop2
  3209  06A8                     l2169:
  3210                           
  3211                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  3212  06A8  3002               	movlw	2
  3213  06A9  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3214  06AE                     l176:
  3215  06AE  0008               	return
  3216  06AF                     __end_of_Limpiar_pantallaLCD:
  3217                           
  3218                           	psect	text15
  3219  01C4                     __ptext15:	
  3220 ;; *************** function _Iniciar_LCD *****************
  3221 ;; Defined at:
  3222 ;;		line 30 in file "LCD.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       2       0       0       0
  3239 ;;      Totals:         0       2       0       0       0
  3240 ;;Total ram usage:        2 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 4
  3243 ;; This function calls:
  3244 ;;		_Escribir_comandoLCD
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _Iniciar_LCD
  3252  01C4                     _Iniciar_LCD:
  3253  01C4                     l2137:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3256                           
  3257                           
  3258                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  3259  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3260  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3261  01C6  1287               	bcf	7,5	;volatile
  3262                           
  3263                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3264  01C7  1208               	bcf	8,4	;volatile
  3265  01C8                     l2139:
  3266                           
  3267                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3268  01C8  3025               	movlw	37
  3269  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3270  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3271  01CB  00A1               	movwf	??_Iniciar_LCD+1
  3272  01CC  305B               	movlw	91
  3273  01CD  00A0               	movwf	??_Iniciar_LCD
  3274  01CE                     u1947:
  3275  01CE  0BA0               	decfsz	??_Iniciar_LCD,f
  3276  01CF  29CE               	goto	u1947
  3277  01D0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3278  01D1  29CE               	goto	u1947
  3279  01D2                     l2141:
  3280                           
  3281                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3282  01D2  3030               	movlw	48
  3283  01D3  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3284  01D8                     l2143:
  3285                           
  3286                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3287  01D8  300B               	movlw	11
  3288  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3289  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3290  01DB  00A1               	movwf	??_Iniciar_LCD+1
  3291  01DC  3061               	movlw	97
  3292  01DD  00A0               	movwf	??_Iniciar_LCD
  3293  01DE                     u1957:
  3294  01DE  0BA0               	decfsz	??_Iniciar_LCD,f
  3295  01DF  29DE               	goto	u1957
  3296  01E0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3297  01E1  29DE               	goto	u1957
  3298  01E2  29E3               	nop2
  3299                           
  3300                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3301  01E3  3030               	movlw	48
  3302  01E4  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3303  01E9                     l2145:
  3304                           
  3305                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3306  01E9  3041               	movlw	65
  3307  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3308  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3309  01EC  00A0               	movwf	??_Iniciar_LCD
  3310  01ED                     u1967:
  3311  01ED  0BA0               	decfsz	??_Iniciar_LCD,f
  3312  01EE  29ED               	goto	u1967
  3313  01EF  29F0               	nop2
  3314  01F0                     l2147:
  3315                           
  3316                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3317  01F0  3030               	movlw	48
  3318  01F1  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3319                           
  3320                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3321  01F6  3041               	movlw	65
  3322  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3323  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3324  01F9  00A0               	movwf	??_Iniciar_LCD
  3325  01FA                     u1977:
  3326  01FA  0BA0               	decfsz	??_Iniciar_LCD,f
  3327  01FB  29FA               	goto	u1977
  3328  01FC  29FD               	nop2
  3329  01FD                     l2149:
  3330                           
  3331                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3332  01FD  3038               	movlw	56
  3333  01FE  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3334  0203                     l2151:
  3335                           
  3336                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3337  0203  3041               	movlw	65
  3338  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0206  00A0               	movwf	??_Iniciar_LCD
  3341  0207                     u1987:
  3342  0207  0BA0               	decfsz	??_Iniciar_LCD,f
  3343  0208  2A07               	goto	u1987
  3344  0209  2A0A               	nop2
  3345                           
  3346                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3347  020A  3008               	movlw	8
  3348  020B  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3349  0210                     l2153:
  3350                           
  3351                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3352  0210  3041               	movlw	65
  3353  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0213  00A0               	movwf	??_Iniciar_LCD
  3356  0214                     u1997:
  3357  0214  0BA0               	decfsz	??_Iniciar_LCD,f
  3358  0215  2A14               	goto	u1997
  3359  0216  2A17               	nop2
  3360  0217                     l2155:
  3361                           
  3362                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3363  0217  3001               	movlw	1
  3364  0218  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3365                           
  3366                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3367  021D  3041               	movlw	65
  3368  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3369  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0220  00A0               	movwf	??_Iniciar_LCD
  3371  0221                     u2007:
  3372  0221  0BA0               	decfsz	??_Iniciar_LCD,f
  3373  0222  2A21               	goto	u2007
  3374  0223  2A24               	nop2
  3375  0224                     l2157:
  3376                           
  3377                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3378  0224  3006               	movlw	6
  3379  0225  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3380  022A                     l2159:
  3381                           
  3382                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3383  022A  3041               	movlw	65
  3384  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3385  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3386  022D  00A0               	movwf	??_Iniciar_LCD
  3387  022E                     u2017:
  3388  022E  0BA0               	decfsz	??_Iniciar_LCD,f
  3389  022F  2A2E               	goto	u2017
  3390  0230  2A31               	nop2
  3391                           
  3392                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3393  0231  300C               	movlw	12
  3394  0232  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3395  0237                     l167:
  3396  0237  0008               	return
  3397  0238                     __end_of_Iniciar_LCD:
  3398                           
  3399                           	psect	text16
  3400  05A0                     __ptext16:	
  3401 ;; *************** function _Escribir_stringLCD *****************
  3402 ;; Defined at:
  3403 ;;		line 55 in file "LCD.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  3406 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3407 ;;		 -> STR_2(13), STR_1(5), 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  i               1    3[BANK0 ] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3419 ;;      Params:         0       2       0       0       0
  3420 ;;      Locals:         0       1       0       0       0
  3421 ;;      Temps:          0       1       0       0       0
  3422 ;;      Totals:         0       4       0       0       0
  3423 ;;Total ram usage:        4 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 4
  3426 ;; This function calls:
  3427 ;;		_Escribir_comandoLCD
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _Escribir_stringLCD
  3435  05A0                     _Escribir_stringLCD:
  3436  05A0                     l2195:	
  3437                           ;incstack = 0
  3438                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3439                           
  3440                           
  3441                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3442  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3443  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3444  05A2  1687               	bsf	7,5	;volatile
  3445  05A3  1208               	bcf	8,4	;volatile
  3446  05A4                     l2197:
  3447                           
  3448                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3449  05A4  01A3               	clrf	Escribir_stringLCD@i
  3450  05A5  2DBD               	goto	l2203
  3451  05A6                     l2199:
  3452                           
  3453                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3454  05A6  0823               	movf	Escribir_stringLCD@i,w
  3455  05A7  0720               	addwf	Escribir_stringLCD@d,w
  3456  05A8  0084               	movwf	4
  3457  05A9  0821               	movf	Escribir_stringLCD@d+1,w
  3458  05AA  1803               	skipnc
  3459  05AB  0A21               	incf	Escribir_stringLCD@d+1,w
  3460  05AC  00FF               	movwf	btemp+1
  3461  05AD  120A  118A  2400  120A  118A  	fcall	stringtab
  3462  05B2  120A  118A  2521  120A  118A  	fcall	_Escribir_comandoLCD
  3463  05B7                     l2201:
  3464                           
  3465                           ;LCD.c: 60:     }
  3466  05B7  3001               	movlw	1
  3467  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3468  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3469  05BA  00A2               	movwf	??_Escribir_stringLCD
  3470  05BB  0822               	movf	??_Escribir_stringLCD,w
  3471  05BC  07A3               	addwf	Escribir_stringLCD@i,f
  3472  05BD                     l2203:
  3473  05BD  0823               	movf	Escribir_stringLCD@i,w
  3474  05BE  0720               	addwf	Escribir_stringLCD@d,w
  3475  05BF  0084               	movwf	4
  3476  05C0  0821               	movf	Escribir_stringLCD@d+1,w
  3477  05C1  1803               	skipnc
  3478  05C2  0A21               	incf	Escribir_stringLCD@d+1,w
  3479  05C3  00FF               	movwf	btemp+1
  3480  05C4  120A  118A  2400  120A  118A  	fcall	stringtab
  3481  05C9  3A00               	xorlw	0
  3482  05CA  1D03               	skipz
  3483  05CB  2DCD               	goto	u1861
  3484  05CC  2DCE               	goto	u1860
  3485  05CD                     u1861:
  3486  05CD  2DA6               	goto	l2199
  3487  05CE                     u1860:
  3488  05CE                     l173:
  3489  05CE  0008               	return
  3490  05CF                     __end_of_Escribir_stringLCD:
  3491                           
  3492                           	psect	text17
  3493  0521                     __ptext17:	
  3494 ;; *************** function _Escribir_comandoLCD *****************
  3495 ;; Defined at:
  3496 ;;		line 17 in file "LCD.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  Comando         1    wreg     unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  Comando         1    5[COMMON] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         1       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         1       0       0       0       0
  3514 ;;Total ram usage:        1 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 3
  3517 ;; This function calls:
  3518 ;;		_prender_ELCD
  3519 ;; This function is called by:
  3520 ;;		_Iniciar_LCD
  3521 ;;		_Escribir_stringLCD
  3522 ;;		_Limpiar_pantallaLCD
  3523 ;;		_set_cursor
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _Escribir_comandoLCD
  3529  0521                     _Escribir_comandoLCD:
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3533                           ;Escribir_comandoLCD@Comando stored from wreg
  3534  0521  00F5               	movwf	Escribir_comandoLCD@Comando
  3535  0522                     l2075:
  3536                           
  3537                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3538  0522  1C75               	btfss	Escribir_comandoLCD@Comando,0
  3539  0523  2D25               	goto	u1741
  3540  0524  2D26               	goto	u1740
  3541  0525                     u1741:
  3542  0525  2D2A               	goto	l148
  3543  0526                     u1740:
  3544  0526                     l2077:
  3545  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0528  1708               	bsf	8,6	;volatile
  3548  0529  2D2D               	goto	l149
  3549  052A                     l148:
  3550  052A  1283               	bcf	3,5	;RP0=0, select bank0
  3551  052B  1303               	bcf	3,6	;RP1=0, select bank0
  3552  052C  1308               	bcf	8,6	;volatile
  3553  052D                     l149:
  3554                           
  3555                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3556  052D  1CF5               	btfss	Escribir_comandoLCD@Comando,1
  3557  052E  2D30               	goto	u1751
  3558  052F  2D31               	goto	u1750
  3559  0530                     u1751:
  3560  0530  2D33               	goto	l150
  3561  0531                     u1750:
  3562  0531                     l2079:
  3563  0531  1788               	bsf	8,7	;volatile
  3564  0532  2D34               	goto	l151
  3565  0533                     l150:
  3566  0533  1388               	bcf	8,7	;volatile
  3567  0534                     l151:
  3568                           
  3569                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3570  0534  1D75               	btfss	Escribir_comandoLCD@Comando,2
  3571  0535  2D37               	goto	u1761
  3572  0536  2D38               	goto	u1760
  3573  0537                     u1761:
  3574  0537  2D3A               	goto	l152
  3575  0538                     u1760:
  3576  0538                     l2081:
  3577  0538  1406               	bsf	6,0	;volatile
  3578  0539  2D3B               	goto	l153
  3579  053A                     l152:
  3580  053A  1006               	bcf	6,0	;volatile
  3581  053B                     l153:
  3582                           
  3583                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3584  053B  1DF5               	btfss	Escribir_comandoLCD@Comando,3
  3585  053C  2D3E               	goto	u1771
  3586  053D  2D3F               	goto	u1770
  3587  053E                     u1771:
  3588  053E  2D41               	goto	l154
  3589  053F                     u1770:
  3590  053F                     l2083:
  3591  053F  1486               	bsf	6,1	;volatile
  3592  0540  2D42               	goto	l155
  3593  0541                     l154:
  3594  0541  1086               	bcf	6,1	;volatile
  3595  0542                     l155:
  3596                           
  3597                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3598  0542  1E75               	btfss	Escribir_comandoLCD@Comando,4
  3599  0543  2D45               	goto	u1781
  3600  0544  2D46               	goto	u1780
  3601  0545                     u1781:
  3602  0545  2D48               	goto	l156
  3603  0546                     u1780:
  3604  0546                     l2085:
  3605  0546  1506               	bsf	6,2	;volatile
  3606  0547  2D49               	goto	l157
  3607  0548                     l156:
  3608  0548  1106               	bcf	6,2	;volatile
  3609  0549                     l157:
  3610                           
  3611                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3612  0549  1EF5               	btfss	Escribir_comandoLCD@Comando,5
  3613  054A  2D4C               	goto	u1791
  3614  054B  2D4D               	goto	u1790
  3615  054C                     u1791:
  3616  054C  2D4F               	goto	l158
  3617  054D                     u1790:
  3618  054D                     l2087:
  3619  054D  1586               	bsf	6,3	;volatile
  3620  054E  2D50               	goto	l159
  3621  054F                     l158:
  3622  054F  1186               	bcf	6,3	;volatile
  3623  0550                     l159:
  3624                           
  3625                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3626  0550  1F75               	btfss	Escribir_comandoLCD@Comando,6
  3627  0551  2D53               	goto	u1801
  3628  0552  2D54               	goto	u1800
  3629  0553                     u1801:
  3630  0553  2D56               	goto	l160
  3631  0554                     u1800:
  3632  0554                     l2089:
  3633  0554  1606               	bsf	6,4	;volatile
  3634  0555  2D57               	goto	l161
  3635  0556                     l160:
  3636  0556  1206               	bcf	6,4	;volatile
  3637  0557                     l161:
  3638                           
  3639                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3640  0557  1FF5               	btfss	Escribir_comandoLCD@Comando,7
  3641  0558  2D5A               	goto	u1811
  3642  0559  2D5B               	goto	u1810
  3643  055A                     u1811:
  3644  055A  2D5D               	goto	l162
  3645  055B                     u1810:
  3646  055B                     l2091:
  3647  055B  1686               	bsf	6,5	;volatile
  3648  055C  2D5E               	goto	l2093
  3649  055D                     l162:
  3650  055D  1286               	bcf	6,5	;volatile
  3651  055E                     l2093:
  3652                           
  3653                           ;LCD.c: 27:     prender_ELCD();
  3654  055E  120A  118A  26AF  120A  118A  	fcall	_prender_ELCD
  3655  0563                     l164:
  3656  0563  0008               	return
  3657  0564                     __end_of_Escribir_comandoLCD:
  3658                           
  3659                           	psect	text18
  3660  06AF                     __ptext18:	
  3661 ;; *************** function _prender_ELCD *****************
  3662 ;; Defined at:
  3663 ;;		line 11 in file "LCD.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0
  3679 ;;      Temps:          1       0       0       0       0
  3680 ;;      Totals:         1       0       0       0       0
  3681 ;;Total ram usage:        1 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 2
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_Escribir_comandoLCD
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _prender_ELCD
  3693  06AF                     _prender_ELCD:
  3694  06AF                     l1865:	
  3695                           ;incstack = 0
  3696                           ; Regs used in _prender_ELCD: [wreg]
  3697                           
  3698                           
  3699                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3700  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3701  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3702  06B1  1688               	bsf	8,5	;volatile
  3703  06B2                     l1867:
  3704                           
  3705                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3706  06B2  30C7               	movlw	199
  3707  06B3  00F4               	movwf	??_prender_ELCD
  3708  06B4                     u2027:
  3709  06B4  2EB5               	nop2
  3710  06B5  0BF4               	decfsz	??_prender_ELCD,f
  3711  06B6  2EB4               	goto	u2027
  3712  06B7  2EB8               	nop2
  3713  06B8  2EB9               	nop2
  3714  06B9                     l1869:
  3715                           
  3716                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3717  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3718  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3719  06BB  1288               	bcf	8,5	;volatile
  3720  06BC                     l145:
  3721  06BC  0008               	return
  3722  06BD                     __end_of_prender_ELCD:
  3723                           
  3724                           	psect	text19
  3725  05CF                     __ptext19:	
  3726 ;; *************** function _isr *****************
  3727 ;; Defined at:
  3728 ;;		line 68 in file "LAB2.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0
  3744 ;;      Temps:          3       0       0       0       0
  3745 ;;      Totals:         3       0       0       0       0
  3746 ;;Total ram usage:        3 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 1
  3749 ;; This function calls:
  3750 ;;		_ADC
  3751 ;; This function is called by:
  3752 ;;		Interrupt level 1
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _isr
  3758  05CF                     _isr:
  3759  05CF                     i1l1795:
  3760                           
  3761                           ;LAB2.c: 69:     if(PIR1bits.ADIF){
  3762  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3763  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3764  05D1  1F0C               	btfss	12,6	;volatile
  3765  05D2  2DD4               	goto	u135_21
  3766  05D3  2DD5               	goto	u135_20
  3767  05D4                     u135_21:
  3768  05D4  2DDD               	goto	i1l1801
  3769  05D5                     u135_20:
  3770  05D5                     i1l1797:
  3771                           
  3772                           ;LAB2.c: 70:         ADC();
  3773  05D5  120A  118A  2658  120A  118A  	fcall	_ADC
  3774  05DA                     i1l1799:
  3775                           
  3776                           ;LAB2.c: 71:         PIR1bits.ADIF = 0;
  3777  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3778  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3779  05DC  130C               	bcf	12,6	;volatile
  3780  05DD                     i1l1801:
  3781                           
  3782                           ;LAB2.c: 73:     if(PIR1bits.RCIF){
  3783  05DD  1E8C               	btfss	12,5	;volatile
  3784  05DE  2DE0               	goto	u136_21
  3785  05DF  2DE1               	goto	u136_20
  3786  05E0                     u136_21:
  3787  05E0  2DF7               	goto	i1l107
  3788  05E1                     u136_20:
  3789  05E1                     i1l1803:
  3790                           
  3791                           ;LAB2.c: 74:         dato = RCREG;
  3792  05E1  081A               	movf	26,w	;volatile
  3793  05E2  00F1               	movwf	??_isr
  3794  05E3  0871               	movf	??_isr,w
  3795  05E4  00F6               	movwf	_dato
  3796  05E5                     i1l1805:
  3797                           
  3798                           ;LAB2.c: 75:         if(dato == 75){
  3799  05E5  304B               	movlw	75
  3800  05E6  0676               	xorwf	_dato,w
  3801  05E7  1D03               	btfss	3,2
  3802  05E8  2DEA               	goto	u137_21
  3803  05E9  2DEB               	goto	u137_20
  3804  05EA                     u137_21:
  3805  05EA  2DEF               	goto	i1l105
  3806  05EB                     u137_20:
  3807  05EB                     i1l1807:
  3808                           
  3809                           ;LAB2.c: 76:             Cont_U++;
  3810  05EB  3001               	movlw	1
  3811  05EC  00F1               	movwf	??_isr
  3812  05ED  0871               	movf	??_isr,w
  3813  05EE  07C7               	addwf	_Cont_U,f
  3814  05EF                     i1l105:	
  3815                           ;LAB2.c: 77:         }
  3816                           
  3817                           
  3818                           ;LAB2.c: 78:         if(dato == 77){
  3819  05EF  304D               	movlw	77
  3820  05F0  0676               	xorwf	_dato,w
  3821  05F1  1D03               	btfss	3,2
  3822  05F2  2DF4               	goto	u138_21
  3823  05F3  2DF5               	goto	u138_20
  3824  05F4                     u138_21:
  3825  05F4  2DF7               	goto	i1l107
  3826  05F5                     u138_20:
  3827  05F5                     i1l1809:
  3828                           
  3829                           ;LAB2.c: 79:             Cont_U--;
  3830  05F5  3001               	movlw	1
  3831  05F6  02C7               	subwf	_Cont_U,f
  3832  05F7                     i1l107:
  3833  05F7  0873               	movf	??_isr+2,w
  3834  05F8  008A               	movwf	10
  3835  05F9  0E72               	swapf	??_isr+1,w
  3836  05FA  0083               	movwf	3
  3837  05FB  0EFE               	swapf	btemp,f
  3838  05FC  0E7E               	swapf	btemp,w
  3839  05FD  0009               	retfie
  3840  05FE                     __end_of_isr:
  3841                           
  3842                           	psect	intentry
  3843  0004                     __pintentry:	
  3844                           ;incstack = 0
  3845                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3846                           
  3847  0004                     interrupt_function:
  3848  007E                     saved_w	set	btemp
  3849  0004  00FE               	movwf	btemp
  3850  0005  0E03               	swapf	3,w
  3851  0006  00F2               	movwf	??_isr+1
  3852  0007  080A               	movf	10,w
  3853  0008  00F3               	movwf	??_isr+2
  3854  0009  120A  118A  2DCF   	ljmp	_isr
  3855                           
  3856                           	psect	text20
  3857  0658                     __ptext20:	
  3858 ;; *************** function _ADC *****************
  3859 ;; Defined at:
  3860 ;;		line 11 in file "ADC.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3874 ;;      Params:         0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0
  3876 ;;      Temps:          1       0       0       0       0
  3877 ;;      Totals:         1       0       0       0       0
  3878 ;;Total ram usage:        1 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_isr
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _ADC
  3889  0658                     _ADC:
  3890  0658                     i1l1655:	
  3891                           ;incstack = 0
  3892                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3893                           
  3894                           
  3895                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3896  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3898  065A  0C1F               	rrf	31,w	;volatile
  3899  065B  00F0               	movwf	??_ADC
  3900  065C  0C70               	rrf	??_ADC,w
  3901  065D  390F               	andlw	15
  3902  065E  3A00               	xorlw	0
  3903  065F  1D03               	skipz
  3904  0660  2E62               	goto	u125_21
  3905  0661  2E63               	goto	u125_20
  3906  0662                     u125_21:
  3907  0662  2E68               	goto	i1l1659
  3908  0663                     u125_20:
  3909  0663                     i1l1657:
  3910                           
  3911                           ;ADC.c: 13:         cont1 = ADRESH;
  3912  0663  081E               	movf	30,w	;volatile
  3913  0664  00F0               	movwf	??_ADC
  3914  0665  0870               	movf	??_ADC,w
  3915  0666  00C9               	movwf	_cont1
  3916                           
  3917                           ;ADC.c: 14:     }
  3918  0667  2E75               	goto	i1l210
  3919  0668                     i1l1659:
  3920  0668  0C1F               	rrf	31,w	;volatile
  3921  0669  00F0               	movwf	??_ADC
  3922  066A  0C70               	rrf	??_ADC,w
  3923  066B  390F               	andlw	15
  3924  066C  3A01               	xorlw	1
  3925  066D  1D03               	skipz
  3926  066E  2E70               	goto	u126_21
  3927  066F  2E71               	goto	u126_20
  3928  0670                     u126_21:
  3929  0670  2E75               	goto	i1l210
  3930  0671                     u126_20:
  3931  0671                     i1l1661:
  3932                           
  3933                           ;ADC.c: 16:         cont2 = ADRESH;
  3934  0671  081E               	movf	30,w	;volatile
  3935  0672  00F0               	movwf	??_ADC
  3936  0673  0870               	movf	??_ADC,w
  3937  0674  00C8               	movwf	_cont2
  3938  0675                     i1l210:
  3939  0675  0008               	return
  3940  0676                     __end_of_ADC:
  3941  007E                     btemp	set	126	;btemp
  3942  007E                     wtemp0	set	126
  3943                           
  3944                           	psect	config
  3945                           
  3946                           ;Config register CONFIG1 @ 0x2007
  3947                           ;	Oscillator Selection bits
  3948                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3949                           ;	Watchdog Timer Enable bit
  3950                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3951                           ;	Power-up Timer Enable bit
  3952                           ;	PWRTE = OFF, PWRT disabled
  3953                           ;	RE3/MCLR pin function select bit
  3954                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3955                           ;	Code Protection bit
  3956                           ;	CP = OFF, Program memory code protection is disabled
  3957                           ;	Data Code Protection bit
  3958                           ;	CPD = OFF, Data memory code protection is disabled
  3959                           ;	Brown Out Reset Selection bits
  3960                           ;	BOREN = OFF, BOR disabled
  3961                           ;	Internal External Switchover bit
  3962                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3963                           ;	Fail-Safe Clock Monitor Enabled bit
  3964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3965                           ;	Low Voltage Programming Enable bit
  3966                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3967                           ;	In-Circuit Debugger Mode bit
  3968                           ;	DEBUG = 0x1, unprogrammed default
  3969  2007                     	org	8199
  3970  2007  20D4               	dw	8404
  3971                           
  3972                           ;Config register CONFIG2 @ 0x2008
  3973                           ;	Brown-out Reset Selection bit
  3974                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3975                           ;	Flash Program Memory Self Write Enable bits
  3976                           ;	WRT = OFF, Write protection off
  3977  2008                     	org	8200
  3978  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     39      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[13]), STR_1(CODE[5]), 

    divisor1@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _setup->_config_ADC
    _set_cursor->_Escribir_comandoLCD
    _dato_recibido->_divisor1
    _divisor1->___awdiv
    _divisor1->___awmod
    _conversion_char->_divisor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _setup->_config_ADC
    _dato_recibido->_sprintf
    _divisor1->___awdiv
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10076
                                             36 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     121
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2     121
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              0 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3751
                                             29 BANK0      7     7      0
                           _divisor1
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _divisor1                                             8     7      1    1945
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3875
                                             29 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             12 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    2069
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              0 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor1
       ___awdiv
       ___awmod
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _config_ADC

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 10:58:45 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0023                           l121 02FB                           l131 03FE  
                         l220 0692                           l150 0533                           l126 03AD  
                         l134 062B                           l118 0520                           l151 0534  
                         l160 0556                           l152 053A                           l145 06BC  
                         l161 0557                           l153 053B                           l217 0657  
                         l162 055D                           l154 0541                           l155 0542  
                         l164 0563                           l156 0548                           l148 052A  
                         l157 0549                           l149 052D                           l173 05CE  
                         l158 054F                           l159 0550                           l167 0237  
                         _ADC 0658                           l176 06AE                           l186 0496  
                         l516 02A0                           l359 0109                           l529 0356  
                         l635 04DC                           l645 059F                           _dec 0078  
                         _cen 0077                           _isr 05CF                           fsr0 0004  
                         _uni 0079                           indf 0000                  ___awmod@sign 0025  
                        ?_ADC 0070                          l2001 0023                          l2003 0028  
                        l2021 0068                          l2013 003B                          l2005 002E  
                        l2101 04F1                          l2031 0073                          l2023 006C  
                        l2015 0058                          l2007 0035                          l2111 0506  
                        l2103 04F7                          l2201 05B7                          l2041 00A6  
                        l2025 0071                          l2017 0060                          l2009 003A  
                        l2121 050F                          l2113 0509                          l2105 04F8  
                        l2203 05BD                          l2051 00EA                          l2043 00AA  
                        l2035 008F                          l2019 0064                          l2131 051B  
                        l2123 0510                          l2115 050C                          l2107 0500  
                        l2211 0122                          l2141 01D2                          l2045 00AF  
                        l2037 0099                          l2053 00F3                          l2205 02A1  
                        l2133 051C                          l2125 0513                          l2117 050D  
                        l2109 0503                          l2221 015B                          l2213 012D  
                        l2151 0203                          l2143 01D8                          l2047 00DF  
                        l2039 009F                          l2055 0105                          l2071 03EB  
                        l2063 03B1                          l2207 05FE                          l2135 051D  
                        l2127 0517                          l2119 050E                          l2231 0182  
                        l2223 0160                          l2215 0144                          l2081 0538  
                        l2153 0210                          l2145 01E9                          l2137 01C4  
                        l1521 056F                          l2049 00E6                          l2073 03F1  
                        l2129 0518                          l2241 01B5                          l2233 018D  
                        l2225 0169                          l2217 0153                          l2209 010A  
                        l2091 055B                          l2083 053F                          l2075 0522  
                        l2155 0217                          l2147 01F0                          l2139 01C8  
                        l2163 0693                          l1531 058E                          l1523 0576  
                        l2171 044F                          l2235 0199                          l2227 0174  
                        l2219 0156                          l2093 055E                          l2085 0546  
                        l2077 0526                          l2157 0224                          l2149 01FD  
                        l2165 0697                          l1533 0595                          l1525 057A  
                        l1517 0564                          l2069 03B3                          l2181 0469  
                        l2173 0451                          l2237 01A4                          l2229 0179  
                        l2087 054D                          l2079 0531                          l2159 022A  
                        l2167 069D                          l1527 057E                          l1519 056C  
                        l1535 059B                          l2263 004D                          l2191 0486  
                        l2183 0474                          l2175 0456                          l2095 04DD  
                        l2239 01A9                          l2089 0554                          l2169 06A8  
                        l1529 0588                          l2193 048B                          l2177 045D  
                        l2097 04E1                          l2195 05A0                          l2187 047C  
                        l2179 0463                          l2099 04E2                          l2197 05A4  
                        l1901 0284                          l2189 0482                          l2199 05A6  
                        l1911 029C                          l1903 0285                          l1905 028C  
                        l1921 0308                          l1907 0292                          l1931 031C  
                        l1923 030A                          l1915 02FC                          l1781 0642  
                        l1773 062C                          l1909 0297                          l1941 033B  
                        l1933 0323                          l1925 030E                          l1917 02FF  
                        l1783 064B                          l1775 0632                          l1871 0238  
                        l1943 0342                          l1935 0327                          l1927 0313  
                        l1919 0303                          l1865 06AF                          l1777 063B  
                        l1881 024A                          l1873 023B                          l1937 032B  
                        l1929 0319                          l1945 0348                          l1961 04AB  
                        l1953 0497                          l1867 06B2                          l1787 0650  
                        l1779 063D                          l1891 025E                          l1883 024F  
                        l1875 023F                          l1947 034D                          l1939 0335  
                        l1971 04CB                          l1963 04AF                          l1955 049B  
                        l1869 06B9                          l1789 0654                          l1893 0265  
                        l1885 0253                          l1877 0244                          l1949 0352  
                        l1973 04D2                          l1965 04B3                          l1957 04A1  
                        l1981 067B                          l1895 0269                          l1887 0255  
                        l1879 0246                          l1967 04C4                          l1959 04A4  
                        l1975 04D8                          l1983 068A                          l1897 026D  
                        l1889 025B                          l1969 04CA                          l1985 068B  
                        l1899 027E                          l1995 0364                          l1987 035A  
                        l1979 0676                          l1997 039A                          l1989 0362  
                        l1999 03A0                          ?_isr 0070                          STR_1 0447  
                        STR_2 042B                          STR_3 041A                          STR_4 0438  
                        STR_5 0438                          STR_6 0440                          u1020 056C  
                        u1021 056B                          u1040 057E                          u1041 057D  
                        u1050 0588                          u1051 0587                          u1035 0570  
                        u1070 059B                          u2007 0221                          u1071 059A  
                        u1055 0584                          u1320 0632                          u1400 024A  
                        u2017 022E                          u1321 0631                          u1401 0249  
                        u1065 058F                          u1330 063B                          u1410 025B  
                        u2027 06B4                          u1331 063A                          u1411 025A  
                        u1340 064B                          u1500 030E                          u1341 064A  
                        u1501 030D                          u1430 026D                          u1510 0319  
                        u1431 026C                          u1511 0318                          u1600 04B3  
                        u1425 025F                          u1601 04B2                          u1450 027E  
                        u1530 032B                          u1451 027D                          u1531 032A  
                        u1540 0335                          u1620 04C4                          u1700 009F  
                        u1445 026E                          u1541 0334                          u1525 031D  
                        u1621 04C3                          u1701 009E                          u1470 0292  
                        u1390 023F                          u1710 00F3                          u1471 0291  
                        u1455 027A                          u1391 023E                          u1615 04B4  
                        u1711 00F2                          u1800 0554                          u1480 0297  
                        u1560 0348                          u1640 04D8                          u1720 0105  
                        u1801 0553                          u1481 0296                          u1465 0286  
                        u1561 0347                          u1545 0331                          u1641 04D7  
                        u1625 04C0                          u1721 0104                          u1810 055B  
                        u1570 034D                          u1490 0303                          u1650 03AD  
                        u1730 03FE                          u1811 055A                          u1571 034C  
                        u1555 033C                          u1491 0302                          u1651 03AC  
                        u1635 04CC                          u1731 03FD                          u1740 0526  
                        u1580 04A1                          u1660 002E                          u1820 0456  
                        u1741 0525                          u1581 04A0                          u1661 002D  
                        u1821 0455                          u1750 0531                          u1670 0068  
                        u1830 0463                          u1751 0530                          u1655 03A9  
                        u1671 0067                          u1735 03FA                          u1831 0462  
                        u1760 0538                          u1680 008E                          u1840 047B  
                        u1761 0537                          u1681 008D                          u1841 047A  
                        u1770 053F                          u1690 0099                          u1850 048B  
                        u1771 053E                          u1595 04A5                          u1691 0098  
                        u1907 0491                          u1851 048A                          u1780 0546  
                        u1860 05CE                          u1781 0545                          u1861 05CD  
                        u1917 063F                          u1685 008A                          u1790 054D  
                        u1791 054C                          u1927 0652                          u1937 06A3  
                        u1947 01CE                          u1957 01DE                          u1877 014C  
                        u1967 01ED                          u1887 068F                          u1977 01FA  
                        u1897 046F                          u1987 0207                          u1997 0214  
               ??_Iniciar_LCD 0020                          _dato 0076                          _main 010A  
                        _vol1 006A                          _vol2 0069                          _vol3 0068  
                        btemp 007E                          start 000C                   divisor1@dig 0075  
                       ??_ADC 0070                         ??_isr 0071    __end_of_Escribir_stringLCD 05CF  
                       ?_main 0070               __end_of___awdiv 02A1               __end_of___awmod 0357  
                       _ANSEL 0188               ___awdiv@divisor 0020               __end_of___lwdiv 04DD  
                       i1l105 05EF                         i1l210 0675                         i1l107 05F7  
             __end_of___lwmod 05A0               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
             __end_of_divisor 03AE                         _cont1 0049                         _cont2 0048  
             __end_of_dpowers 041A                         _setup 04DD           _Limpiar_pantallaLCD 0693  
                       pclath 000A             ??_conversion_char 003D                         status 0003  
                       wtemp0 007E               __end_of_sprintf 010A               __initialization 000F  
         __end_of_Iniciar_LCD 0238                  __end_of_main 01C4          ?_Limpiar_pantallaLCD 0070  
                      ??_main 0044            set_cursor@posicion 0020                        _ADRESH 001E  
            ___awdiv@dividend 0022                        ?_setup 0070                        _ANSELH 0189  
                      i1l1801 05DD                        i1l1803 05E1                        i1l1661 0671  
                      i1l1805 05E5                        i1l1655 0658                        i1l1807 05EB  
                      i1l1657 0663                        i1l1809 05F5                        i1l1659 0668  
                      i1l1795 05CF                        i1l1797 05D5                        i1l1799 05DA  
                      u125_20 0663                        u125_21 0662                        u126_20 0671  
                      u126_21 0670                        u135_20 05D5                        u135_21 05D4  
                      u136_20 05E1                        u136_21 05E0                        u137_20 05EB  
                      u137_21 05EA                        u138_20 05F5                        u138_21 05F4  
                      _SPBRGH 009A                        _Cont_U 0047              __end_of_divisor1 03FF  
       ??_Limpiar_pantallaLCD 0020                     ??___awdiv 0074                     ??___awmod 0074  
       __end_of_dato_recibido 062C                     ??___lwdiv 0074                     ??___lwmod 0075  
            ___awdiv@quotient 0026               ___awmod@divisor 0020               ___awmod@counter 0024  
                   ??_divisor 0028                        saved_w 007E                     ??_sprintf 0033  
     __end_of__initialization 001C                   _Iniciar_LCD 01C4                __pcstackCOMMON 0070  
               __end_of_setup 0521                       ??_setup 0076                    __pbssBANK0 0047  
                  __pmaintext 010A                    __pintentry 0004  __size_of_Escribir_comandoLCD 0043  
             _conversion_char 02A1                    _config_ADC 0676                     ?_divisor1 0075  
          _Escribir_stringLCD 05A0                    __stringtab 0400                    _conversion 062C  
         ?_Escribir_stringLCD 0020                       ___awdiv 0238                       ___awmod 02FC  
                     ___lwdiv 0497                       ___lwmod 0564                       __ptext1 04DD  
                     __ptext2 0676                       __ptext3 044C                       __ptext4 05FE  
                     __ptext5 03AE                       __ptext6 02A1                       __ptext7 0020  
                     __ptext8 0564                       __ptext9 0497                       _buffer1 005E  
                     _buffer2 0054                       _buffer3 004A                  __size_of_ADC 001E  
                     _divisor 0357          ??_Escribir_stringLCD 0022                       _dpowers 0410  
                __size_of_isr 002F              ___awmod@dividend 0022                 ?_prender_ELCD 0070  
                     _sprintf 0020                       clrloop0 06BE                    ??_divisor1 0028  
        end_of_initialization 001C                    _set_cursor 044C                     _RCSTAbits 0018  
     __end_of_conversion_char 02FC                     _PORTBbits 0006                     _PORTCbits 0007  
                   _PORTDbits 0008                ??_prender_ELCD 0074                   ?_config_ADC 0074  
                ?_Iniciar_LCD 0070                   ?_conversion 0070                     _TXSTAbits 0098  
 __end_of_Limpiar_pantallaLCD 06AF                    divisor@dig 0075                   _BAUDCTLbits 0187  
         start_initialization 000F                   __end_of_ADC 0676                   __end_of_isr 05FE  
      __size_of_dato_recibido 002E           _Escribir_comandoLCD 0521    Escribir_comandoLCD@Comando 0075  
         __size_of_config_ADC 001D                   ?_set_cursor 0020              ?_conversion_char 0070  
        ?_Escribir_comandoLCD 0070           __size_of_conversion 002C                   __pbssCOMMON 0076  
                   ___latbits 0002                 __pcstackBANK0 0020                   sprintf@flag 0037  
           __size_of_divisor1 0051                   sprintf@prec 0038          __end_of_prender_ELCD 06BD  
            ___lwdiv@dividend 0022                      ?___awdiv 0020                      ?___awmod 0020  
                    ?___lwdiv 0020                      ?___lwmod 0027         ??_Escribir_comandoLCD 0075  
               _dato_recibido 05FE                     __pstrings 0400                      ?_divisor 0075  
           config_ADC@channel 0074              ___lwdiv@quotient 0025           __size_of_set_cursor 004B  
                    ?_sprintf 002C                __size_of_setup 0044             interrupt_function 0004  
                   clear_ram0 06BD                      _PIE1bits 008C          __size_of_Iniciar_LCD 0074  
                    _PIR1bits 000C                ?_dato_recibido 0070                    _ADCON0bits 001F  
                 __stringbase 040F                    _ADCON1bits 009F                  ??_config_ADC 0020  
 __size_of_Escribir_stringLCD 002F                     divisor1@a 002C                     divisor1@i 002D  
                ??_conversion 0074           Escribir_stringLCD@d 0020           Escribir_stringLCD@i 0023  
          __end_of_config_ADC 0693              __size_of___awdiv 0069              __size_of___awmod 005B  
            __size_of___lwdiv 0046              __size_of___lwmod 003C            __end_of__stringtab 0410  
                  sprintf@val 0039              __size_of_divisor 0057            __end_of_conversion 0658  
             ___lwdiv@divisor 0020               ___lwdiv@counter 0024                      __ptext10 0357  
                    __ptext11 02FC                      __ptext20 0658                      __ptext12 0238  
                    __ptext13 062C                      __ptext14 0693                      __ptext15 01C4  
                    __ptext16 05A0                      __ptext17 0521                      __ptext18 06AF  
                    __ptext19 05CF                      _divisor1 03AE              __size_of_sprintf 00EA  
       __size_of_prender_ELCD 000E                 __size_of_main 00BA                  ??_set_cursor 0021  
             ??_dato_recibido 003D  __size_of_Limpiar_pantallaLCD 001C                      divisor@a 002A  
                    divisor@b 002B                      divisor@i 002D                    _INTCONbits 000B  
                _prender_ELCD 06AF            __end_of_set_cursor 0497                      intlevel1 0000  
                   sprintf@ap 0036                     sprintf@sp 003B              ___lwmod@dividend 0029  
                   stringcode 040A                    _OSCCONbits 008F                      sprintf@c 003C  
                    sprintf@f 002C               ___lwmod@divisor 0027               ___lwmod@counter 002B  
    __size_of_conversion_char 005B                      stringdir 040A                      stringtab 0400  
 __end_of_Escribir_comandoLCD 0564  
