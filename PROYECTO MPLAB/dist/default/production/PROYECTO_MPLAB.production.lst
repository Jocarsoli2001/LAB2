

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Feb 06 19:50:30 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  001E                     _ADRESH	set	30
   370  001F                     _ADCON0bits	set	31
   371  0008                     _PORTD	set	8
   372  0006                     _PORTB	set	6
   373  0009                     _PORTE	set	9
   374  0005                     _PORTA	set	5
   375  0006                     _PORTBbits	set	6
   376  003A                     _RC2	set	58
   377  0039                     _RC1	set	57
   378  003B                     _RC3	set	59
   379  0038                     _RC0	set	56
   380  008F                     _OSCCONbits	set	143
   381  0089                     _TRISE	set	137
   382  0086                     _TRISB	set	134
   383  0085                     _TRISA	set	133
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSEL	set	392
   386                           
   387                           	psect	strings
   388  01AF                     __pstrings:
   389  01AF                     stringtab:
   390  01AF                     __stringtab:
   391  01AF                     stringcode:	
   392                           ;	String table - string pointers are 1 byte each
   393                           
   394  01AF                     stringdir:
   395  01AF  3001               	movlw	high stringdir
   396  01B0  008A               	movwf	10
   397  01B1  0804               	movf	4,w
   398  01B2  0A84               	incf	4,f
   399  01B3  0782               	addwf	2,f
   400  01B4                     __stringbase:
   401  01B4  3400               	retlw	0
   402  01B5                     __end_of__stringtab:
   403  01B5                     STR_1:
   404  01B5  3445               	retlw	69	;'E'
   405  01B6  3464               	retlw	100	;'d'
   406  01B7  3475               	retlw	117	;'u'
   407  01B8  3461               	retlw	97	;'a'
   408  01B9  3472               	retlw	114	;'r'
   409  01BA  3464               	retlw	100	;'d'
   410  01BB  346F               	retlw	111	;'o'
   411  01BC  3420               	retlw	32	;' '
   412  01BD  3441               	retlw	65	;'A'
   413  01BE  346E               	retlw	110	;'n'
   414  01BF  3464               	retlw	100	;'d'
   415  01C0  3472               	retlw	114	;'r'
   416  01C1  3465               	retlw	101	;'e'
   417  01C2  3473               	retlw	115	;'s'
   418  01C3  3400               	retlw	0
   419  01C4                     STR_2:
   420  01C4  3453               	retlw	83	;'S'
   421  01C5  3461               	retlw	97	;'a'
   422  01C6  346E               	retlw	110	;'n'
   423  01C7  3474               	retlw	116	;'t'
   424  01C8  3469               	retlw	105	;'i'
   425  01C9  347A               	retlw	122	;'z'
   426  01CA  346F               	retlw	111	;'o'
   427  01CB  3420               	retlw	32	;' '
   428  01CC  344F               	retlw	79	;'O'
   429  01CD  346C               	retlw	108	;'l'
   430  01CE  3469               	retlw	105	;'i'
   431  01CF  3476               	retlw	118	;'v'
   432  01D0  3465               	retlw	101	;'e'
   433  01D1  3474               	retlw	116	;'t'
   434  01D2  3400               	retlw	0
   435  01D3                     STR_3:
   436  01D3  3456               	retlw	86	;'V'
   437  01D4  346F               	retlw	111	;'o'
   438  01D5  346C               	retlw	108	;'l'
   439  01D6  3474               	retlw	116	;'t'
   440  01D7  3461               	retlw	97	;'a'
   441  01D8  346A               	retlw	106	;'j'
   442  01D9  3465               	retlw	101	;'e'
   443  01DA  343A               	retlw	58	;':'
   444  01DB  3400               	retlw	0
   445                           
   446                           	psect	cinit
   447  000F                     start_initialization:	
   448                           ; #config settings
   449                           
   450  000F                     __initialization:
   451                           
   452                           ; Clear objects allocated to COMMON
   453  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   454  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   455  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   456  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   457                           
   458                           ; Clear objects allocated to BANK0
   459  0013  1383               	bcf	3,7	;select IRP bank0
   460  0014  3020               	movlw	low __pbssBANK0
   461  0015  0084               	movwf	4
   462  0016  3044               	movlw	low (__pbssBANK0+36)
   463  0017  120A  118A  2234  120A  118A  	fcall	clear_ram0
   464  001C                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467  001C                     __end_of__initialization:
   468  001C  0183               	clrf	3
   469  001D  120A  118A  2916   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	bssCOMMON
   472  0078                     __pbssCOMMON:
   473  0078                     _dec:
   474  0078                     	ds	1
   475  0079                     _uni:
   476  0079                     	ds	1
   477  007A                     _cont2:
   478  007A                     	ds	1
   479  007B                     _cont1:
   480  007B                     	ds	1
   481                           
   482                           	psect	bssBANK0
   483  0020                     __pbssBANK0:
   484  0020                     _buffer3:
   485  0020                     	ds	10
   486  002A                     _buffer2:
   487  002A                     	ds	10
   488  0034                     _buffer1:
   489  0034                     	ds	10
   490  003E                     _Cont_U:
   491  003E                     	ds	1
   492  003F                     _dato:
   493  003F                     	ds	1
   494  0040                     _vol3:
   495  0040                     	ds	1
   496  0041                     _vol2:
   497  0041                     	ds	1
   498  0042                     _vol1:
   499  0042                     	ds	1
   500  0043                     _cen:
   501  0043                     	ds	1
   502                           
   503                           	psect	clrtext
   504  0234                     clear_ram0:	
   505                           ;	Called with FSR containing the base address, and
   506                           ;	W with the last address+1
   507                           
   508  0234  0064               	clrwdt	;clear the watchdog before getting into this loop
   509  0235                     clrloop0:
   510  0235  0180               	clrf	0	;clear RAM location pointed to by FSR
   511  0236  0A84               	incf	4,f	;increment pointer
   512  0237  0604               	xorwf	4,w	;XOR with final address
   513  0238  1903               	btfsc	3,2	;have we reached the end yet?
   514  0239  3400               	retlw	0	;all done for this memory range, return
   515  023A  0604               	xorwf	4,w	;XOR again to restore value
   516  023B  2A35               	goto	clrloop0	;do the next byte
   517                           
   518                           	psect	cstackCOMMON
   519  0070                     __pcstackCOMMON:
   520  0070                     ?_PORTOut:
   521  0070                     ?_setup:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_WriteCharLCD:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_ResetLCD:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_isr:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ??_isr:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539                           
   540                           ; 1 bytes @ 0x0
   541  0070                     	ds	2
   542  0072                     ??_PORTOut:
   543  0072                     ??_setup:	
   544                           ; 1 bytes @ 0x2
   545                           
   546                           
   547                           ; 1 bytes @ 0x2
   548  0072                     	ds	2
   549  0074                     PORTOut@Out:
   550                           
   551                           ; 1 bytes @ 0x4
   552  0074                     	ds	1
   553  0075                     ?_InitLCD:
   554  0075                     ?_MoveCursor:	
   555                           ; 1 bytes @ 0x5
   556                           
   557  0075                     ??_WriteCharLCD:	
   558                           ; 1 bytes @ 0x5
   559                           
   560  0075                     ??_ResetLCD:	
   561                           ; 1 bytes @ 0x5
   562                           
   563  0075                     InitLCD@Alto:	
   564                           ; 1 bytes @ 0x5
   565                           
   566  0075                     MoveCursor@Posiciones:	
   567                           ; 1 bytes @ 0x5
   568                           
   569                           
   570                           ; 1 bytes @ 0x5
   571  0075                     	ds	1
   572  0076                     ??_InitLCD:
   573  0076                     MoveCursor@Direccion:	
   574                           ; 1 bytes @ 0x6
   575                           
   576  0076                     WriteCharLCD@i:	
   577                           ; 1 bytes @ 0x6
   578                           
   579                           
   580                           ; 1 bytes @ 0x6
   581  0076                     	ds	1
   582  0077                     MoveCursor@Linea:
   583  0077                     WriteCharLCD@Caracter:	
   584                           ; 1 bytes @ 0x7
   585                           
   586                           
   587                           ; 1 bytes @ 0x7
   588  0077                     	ds	1
   589                           
   590                           	psect	cstackBANK0
   591  0044                     __pcstackBANK0:
   592  0044                     ??_MoveCursor:
   593  0044                     InitLCD@Lineas:	
   594                           ; 1 bytes @ 0x0
   595                           
   596                           
   597                           ; 1 bytes @ 0x0
   598  0044                     	ds	2
   599  0046                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x2
   602  0046                     	ds	3
   603                           
   604                           	psect	maintext
   605  0116                     __pmaintext:	
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 85 in file "LAB2.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : B00/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       3       0       0       0
   628 ;;      Totals:         0       3       0       0       0
   629 ;;Total ram usage:        3 bytes
   630 ;; Hardware stack levels required when called: 3
   631 ;; This function calls:
   632 ;;		_InitLCD
   633 ;;		_MoveCursor
   634 ;;		_ResetLCD
   635 ;;		_WriteCharLCD
   636 ;;		_setup
   637 ;; This function is called by:
   638 ;;		Startup code after reset
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _main
   644  0116                     _main:
   645  0116                     l1225:	
   646                           ;incstack = 0
   647                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   648                           
   649                           
   650                           ;LAB2.c: 86:     setup();
   651  0116  120A  118A  221C  120A  118A  	fcall	_setup
   652                           
   653                           ;LAB2.c: 89:     InitLCD(2,11);
   654  011B  300B               	movlw	11
   655  011C  1283               	bcf	3,5	;RP0=0, select bank0
   656  011D  1303               	bcf	3,6	;RP1=0, select bank0
   657  011E  00C6               	movwf	??_main
   658  011F  0846               	movf	??_main,w
   659  0120  00F5               	movwf	InitLCD@Alto
   660  0121  3002               	movlw	2
   661  0122  120A  118A  2020  120A  118A  	fcall	_InitLCD
   662                           
   663                           ;LAB2.c: 90:     MoveCursor(1,0,1);
   664  0127  01F5               	clrf	MoveCursor@Posiciones
   665  0128  01F6               	clrf	MoveCursor@Direccion
   666  0129  0AF6               	incf	MoveCursor@Direccion,f
   667  012A  3001               	movlw	1
   668  012B  120A  118A  20B6  120A  118A  	fcall	_MoveCursor
   669  0130                     l1227:
   670                           
   671                           ;LAB2.c: 91:     WriteCharLCD("Eduardo Andres");
   672  0130  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   673  0131  120A  118A  21DC  120A  118A  	fcall	_WriteCharLCD
   674  0136                     l1229:
   675                           
   676                           ;LAB2.c: 92:     MoveCursor(2,1,1);
   677  0136  01F5               	clrf	MoveCursor@Posiciones
   678  0137  0AF5               	incf	MoveCursor@Posiciones,f
   679  0138  01F6               	clrf	MoveCursor@Direccion
   680  0139  0AF6               	incf	MoveCursor@Direccion,f
   681  013A  3002               	movlw	2
   682  013B  120A  118A  20B6  120A  118A  	fcall	_MoveCursor
   683                           
   684                           ;LAB2.c: 93:     WriteCharLCD("Santizo Olivet");
   685  0140  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   686  0141  120A  118A  21DC  120A  118A  	fcall	_WriteCharLCD
   687  0146                     l1231:
   688                           
   689                           ;LAB2.c: 94:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   690  0146  301A               	movlw	26
   691  0147  1283               	bcf	3,5	;RP0=0, select bank0
   692  0148  1303               	bcf	3,6	;RP1=0, select bank0
   693  0149  00C8               	movwf	??_main+2
   694  014A  305E               	movlw	94
   695  014B  00C7               	movwf	??_main+1
   696  014C  306D               	movlw	109
   697  014D  00C6               	movwf	??_main
   698  014E                     u737:
   699  014E  0BC6               	decfsz	??_main,f
   700  014F  294E               	goto	u737
   701  0150  0BC7               	decfsz	??_main+1,f
   702  0151  294E               	goto	u737
   703  0152  0BC8               	decfsz	??_main+2,f
   704  0153  294E               	goto	u737
   705  0154  2955               	nop2
   706  0155                     l1233:
   707                           
   708                           ;LAB2.c: 96:     ResetLCD();
   709  0155  120A  118A  2202  120A  118A  	fcall	_ResetLCD
   710  015A                     l1235:
   711                           
   712                           ;LAB2.c: 97:     WriteCharLCD("Voltaje:");
   713  015A  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   714  015B  120A  118A  21DC  120A  118A  	fcall	_WriteCharLCD
   715  0160                     l122:	
   716                           ;LAB2.c: 99:     while(1){
   717                           
   718  0160                     l123:	
   719                           ;LAB2.c: 119:     }
   720                           
   721  0160  2960               	goto	l122
   722  0161  120A  118A  280C   	ljmp	start
   723  0164                     __end_of_main:
   724                           
   725                           	psect	text1
   726  021C                     __ptext1:	
   727 ;; *************** function _setup *****************
   728 ;; Defined at:
   729 ;;		line 123 in file "LAB2.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _setup
   759  021C                     _setup:
   760  021C                     l909:	
   761                           ;incstack = 0
   762                           ; Regs used in _setup: [wreg+status,2+status,0]
   763                           
   764                           
   765                           ;LAB2.c: 126:     ANSEL = 0b0011;
   766  021C  3003               	movlw	3
   767  021D  1683               	bsf	3,5	;RP0=1, select bank3
   768  021E  1703               	bsf	3,6	;RP1=1, select bank3
   769  021F  0088               	movwf	8	;volatile
   770  0220                     l911:
   771                           
   772                           ;LAB2.c: 127:     ANSELH = 0;
   773  0220  0189               	clrf	9	;volatile
   774  0221                     l913:
   775                           
   776                           ;LAB2.c: 129:     TRISA = 0b0011;
   777  0221  3003               	movlw	3
   778  0222  1683               	bsf	3,5	;RP0=1, select bank1
   779  0223  1303               	bcf	3,6	;RP1=0, select bank1
   780  0224  0085               	movwf	5	;volatile
   781                           
   782                           ;LAB2.c: 130:     TRISB = 0;
   783  0225  0186               	clrf	6	;volatile
   784                           
   785                           ;LAB2.c: 131:     TRISE = 0;
   786  0226  0189               	clrf	9	;volatile
   787                           
   788                           ;LAB2.c: 133:     PORTA = 0;
   789  0227  1283               	bcf	3,5	;RP0=0, select bank0
   790  0228  1303               	bcf	3,6	;RP1=0, select bank0
   791  0229  0185               	clrf	5	;volatile
   792                           
   793                           ;LAB2.c: 134:     PORTE = 0;
   794  022A  0189               	clrf	9	;volatile
   795                           
   796                           ;LAB2.c: 135:     PORTB = 0;
   797  022B  0186               	clrf	6	;volatile
   798  022C                     l915:
   799                           
   800                           ;LAB2.c: 138:     OSCCONbits.IRCF = 0b0110;
   801  022C  1683               	bsf	3,5	;RP0=1, select bank1
   802  022D  1303               	bcf	3,6	;RP1=0, select bank1
   803  022E  080F               	movf	15,w	;volatile
   804  022F  398F               	andlw	-113
   805  0230  3860               	iorlw	96
   806  0231  008F               	movwf	15	;volatile
   807  0232                     l917:
   808                           
   809                           ;LAB2.c: 139:     OSCCONbits.SCS = 1;
   810  0232  140F               	bsf	15,0	;volatile
   811  0233                     l128:
   812  0233  0008               	return
   813  0234                     __end_of_setup:
   814                           
   815                           	psect	text2
   816  01DC                     __ptext2:	
   817 ;; *************** function _WriteCharLCD *****************
   818 ;; Defined at:
   819 ;;		line 102 in file "./PIC16F887_Lib.h"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  Caracter        1    wreg     PTR unsigned char 
   822 ;;		 -> STR_3(9), STR_2(15), STR_1(15), 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  Caracter        1    7[COMMON] PTR unsigned char 
   825 ;;		 -> STR_3(9), STR_2(15), STR_1(15), 
   826 ;;  i               1    6[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         2       0       0       0       0
   838 ;;      Temps:          1       0       0       0       0
   839 ;;      Totals:         3       0       0       0       0
   840 ;;Total ram usage:        3 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 2
   843 ;; This function calls:
   844 ;;		_PORTOut
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _WriteCharLCD
   852  01DC                     _WriteCharLCD:
   853                           
   854                           ;incstack = 0
   855                           ; Regs used in _WriteCharLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   856                           ;WriteCharLCD@Caracter stored from wreg
   857  01DC  00F7               	movwf	WriteCharLCD@Caracter
   858  01DD                     l1207:
   859                           
   860                           ;./PIC16F887_Lib.h: 104:     RC0 = 1; RC3 = 0;
   861  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   862  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   863  01DF  1407               	bsf	7,0	;volatile
   864  01E0  1187               	bcf	7,3	;volatile
   865  01E1                     l1209:
   866                           
   867                           ;./PIC16F887_Lib.h: 107:     for (char i=0; Caracter[i]!='\0'; i++){
   868  01E1  01F6               	clrf	WriteCharLCD@i
   869  01E2  29F4               	goto	l1215
   870  01E3                     l1211:
   871                           
   872                           ;./PIC16F887_Lib.h: 108:         PORTOut(Caracter[i]);
   873  01E3  0876               	movf	WriteCharLCD@i,w
   874  01E4  0777               	addwf	WriteCharLCD@Caracter,w
   875  01E5  0084               	movwf	4
   876  01E6  120A  118A  21AF  120A  118A  	fcall	stringdir
   877  01EB  120A  118A  2164  120A  118A  	fcall	_PORTOut
   878  01F0                     l1213:
   879                           
   880                           ;./PIC16F887_Lib.h: 109:     }
   881  01F0  3001               	movlw	1
   882  01F1  00F5               	movwf	??_WriteCharLCD
   883  01F2  0875               	movf	??_WriteCharLCD,w
   884  01F3  07F6               	addwf	WriteCharLCD@i,f
   885  01F4                     l1215:
   886  01F4  0876               	movf	WriteCharLCD@i,w
   887  01F5  0777               	addwf	WriteCharLCD@Caracter,w
   888  01F6  0084               	movwf	4
   889  01F7  120A  118A  21AF  120A  118A  	fcall	stringdir
   890  01FC  3A00               	xorlw	0
   891  01FD  1D03               	skipz
   892  01FE  2A00               	goto	u721
   893  01FF  2A01               	goto	u720
   894  0200                     u721:
   895  0200  29E3               	goto	l1211
   896  0201                     u720:
   897  0201                     l74:
   898  0201  0008               	return
   899  0202                     __end_of_WriteCharLCD:
   900                           
   901                           	psect	text3
   902  0202                     __ptext3:	
   903 ;; *************** function _ResetLCD *****************
   904 ;; Defined at:
   905 ;;		line 173 in file "./PIC16F887_Lib.h"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          2       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 2
   926 ;; This function calls:
   927 ;;		_PORTOut
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _ResetLCD
   935  0202                     _ResetLCD:
   936  0202                     l1217:	
   937                           ;incstack = 0
   938                           ; Regs used in _ResetLCD: [wreg+status,2+status,0+pclath+cstack]
   939                           
   940                           
   941                           ;./PIC16F887_Lib.h: 174:     RC0 = 0; RC3 = 0;
   942  0202  1283               	bcf	3,5	;RP0=0, select bank0
   943  0203  1303               	bcf	3,6	;RP1=0, select bank0
   944  0204  1007               	bcf	7,0	;volatile
   945  0205  1187               	bcf	7,3	;volatile
   946  0206                     l1219:
   947                           
   948                           ;./PIC16F887_Lib.h: 175:     PORTOut(0b00000001);
   949  0206  3001               	movlw	1
   950  0207  120A  118A  2164  120A  118A  	fcall	_PORTOut
   951  020C                     l1221:
   952                           
   953                           ;./PIC16F887_Lib.h: 176:     _delay((unsigned long)((10)*(8000000/4000.0)));
   954  020C  301A               	movlw	26
   955  020D  00F6               	movwf	??_ResetLCD+1
   956  020E  30F8               	movlw	248
   957  020F  00F5               	movwf	??_ResetLCD
   958  0210                     u747:
   959  0210  0BF5               	decfsz	??_ResetLCD,f
   960  0211  2A10               	goto	u747
   961  0212  0BF6               	decfsz	??_ResetLCD+1,f
   962  0213  2A10               	goto	u747
   963  0214  0000               	nop
   964  0215                     l1223:
   965                           
   966                           ;./PIC16F887_Lib.h: 177:     PORTOut(0b00000010);
   967  0215  3002               	movlw	2
   968  0216  120A  118A  2164  120A  118A  	fcall	_PORTOut
   969  021B                     l96:
   970  021B  0008               	return
   971  021C                     __end_of_ResetLCD:
   972                           
   973                           	psect	text4
   974  00B6                     __ptext4:	
   975 ;; *************** function _MoveCursor *****************
   976 ;; Defined at:
   977 ;;		line 68 in file "./PIC16F887_Lib.h"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  Linea           1    wreg     unsigned char 
   980 ;;  Posiciones      1    5[COMMON] unsigned char 
   981 ;;  Direccion       1    6[COMMON] unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  Linea           1    7[COMMON] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         2       0       0       0       0
   994 ;;      Locals:         1       0       0       0       0
   995 ;;      Temps:          0       2       0       0       0
   996 ;;      Totals:         3       2       0       0       0
   997 ;;Total ram usage:        5 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 2
  1000 ;; This function calls:
  1001 ;;		_PORTOut
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _MoveCursor
  1009  00B6                     _MoveCursor:
  1010                           
  1011                           ;incstack = 0
  1012                           ; Regs used in _MoveCursor: [wreg+status,2+status,0+pclath+cstack]
  1013                           ;MoveCursor@Linea stored from wreg
  1014  00B6  00F7               	movwf	MoveCursor@Linea
  1015  00B7                     l1171:
  1016                           
  1017                           ;./PIC16F887_Lib.h: 69:     RC0 = 0; RC3 = 0;
  1018  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00B9  1007               	bcf	7,0	;volatile
  1021  00BA  1187               	bcf	7,3	;volatile
  1022  00BB                     l1173:
  1023                           
  1024                           ;./PIC16F887_Lib.h: 72:     if (Linea == 1){ PORTOut(0b10000000);}
  1025  00BB  0377               	decf	MoveCursor@Linea,w
  1026  00BC  1D03               	btfss	3,2
  1027  00BD  28BF               	goto	u651
  1028  00BE  28C0               	goto	u650
  1029  00BF                     u651:
  1030  00BF  28C7               	goto	l1177
  1031  00C0                     u650:
  1032  00C0                     l1175:
  1033  00C0  3080               	movlw	128
  1034  00C1  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1035  00C6  28D3               	goto	l1181
  1036  00C7                     l1177:
  1037  00C7  3002               	movlw	2
  1038  00C8  0677               	xorwf	MoveCursor@Linea,w
  1039  00C9  1D03               	btfss	3,2
  1040  00CA  28CC               	goto	u661
  1041  00CB  28CD               	goto	u660
  1042  00CC                     u661:
  1043  00CC  28D3               	goto	l1181
  1044  00CD                     u660:
  1045  00CD                     l1179:
  1046  00CD  30C0               	movlw	192
  1047  00CE  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1048  00D3                     l1181:
  1049                           
  1050                           ;./PIC16F887_Lib.h: 75:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1051  00D3  3068               	movlw	104
  1052  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1053  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1054  00D6  00C5               	movwf	??_MoveCursor+1
  1055  00D7  30E3               	movlw	227
  1056  00D8  00C4               	movwf	??_MoveCursor
  1057  00D9                     u757:
  1058  00D9  0BC4               	decfsz	??_MoveCursor,f
  1059  00DA  28D9               	goto	u757
  1060  00DB  0BC5               	decfsz	??_MoveCursor+1,f
  1061  00DC  28D9               	goto	u757
  1062  00DD  28DE               	nop2
  1063  00DE                     l1183:
  1064                           
  1065                           ;./PIC16F887_Lib.h: 78:     if (Posiciones != 0){
  1066  00DE  0875               	movf	MoveCursor@Posiciones,w
  1067  00DF  1903               	btfsc	3,2
  1068  00E0  28E2               	goto	u671
  1069  00E1  28E3               	goto	u670
  1070  00E2                     u671:
  1071  00E2  2915               	goto	l68
  1072  00E3                     u670:
  1073  00E3                     l1185:
  1074                           
  1075                           ;./PIC16F887_Lib.h: 81:         if (Direccion == 1){
  1076  00E3  0376               	decf	MoveCursor@Direccion,w
  1077  00E4  1D03               	btfss	3,2
  1078  00E5  28E7               	goto	u681
  1079  00E6  28E8               	goto	u680
  1080  00E7                     u681:
  1081  00E7  28F7               	goto	l1195
  1082  00E8                     u680:
  1083  00E8  28F1               	goto	l1193
  1084  00E9                     l1189:
  1085                           
  1086                           ;./PIC16F887_Lib.h: 83:                 PORTOut(0b00010100);
  1087  00E9  3014               	movlw	20
  1088  00EA  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1089  00EF                     l1191:
  1090                           
  1091                           ;./PIC16F887_Lib.h: 84:                 Posiciones--;
  1092  00EF  3001               	movlw	1
  1093  00F0  02F5               	subwf	MoveCursor@Posiciones,f
  1094  00F1                     l1193:
  1095                           
  1096                           ;./PIC16F887_Lib.h: 82:             while(Posiciones > 0){
  1097  00F1  0875               	movf	MoveCursor@Posiciones,w
  1098  00F2  1D03               	btfss	3,2
  1099  00F3  28F5               	goto	u691
  1100  00F4  28F6               	goto	u690
  1101  00F5                     u691:
  1102  00F5  28E9               	goto	l1189
  1103  00F6                     u690:
  1104  00F6  290A               	goto	l1205
  1105  00F7                     l1195:
  1106  00F7  0876               	movf	MoveCursor@Direccion,w
  1107  00F8  1D03               	btfss	3,2
  1108  00F9  28FB               	goto	u701
  1109  00FA  28FC               	goto	u700
  1110  00FB                     u701:
  1111  00FB  290A               	goto	l1205
  1112  00FC                     u700:
  1113  00FC  2905               	goto	l1203
  1114  00FD                     l1199:
  1115                           
  1116                           ;./PIC16F887_Lib.h: 91:                 PORTOut(0b00010000);
  1117  00FD  3010               	movlw	16
  1118  00FE  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1119  0103                     l1201:
  1120                           
  1121                           ;./PIC16F887_Lib.h: 92:                 Posiciones--;
  1122  0103  3001               	movlw	1
  1123  0104  02F5               	subwf	MoveCursor@Posiciones,f
  1124  0105                     l1203:
  1125                           
  1126                           ;./PIC16F887_Lib.h: 90:             while(Posiciones > 0){
  1127  0105  0875               	movf	MoveCursor@Posiciones,w
  1128  0106  1D03               	btfss	3,2
  1129  0107  2909               	goto	u711
  1130  0108  290A               	goto	u710
  1131  0109                     u711:
  1132  0109  28FD               	goto	l1199
  1133  010A                     u710:
  1134  010A                     l1205:
  1135                           
  1136                           ;./PIC16F887_Lib.h: 96:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1137  010A  3068               	movlw	104
  1138  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1139  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1140  010D  00C5               	movwf	??_MoveCursor+1
  1141  010E  30E3               	movlw	227
  1142  010F  00C4               	movwf	??_MoveCursor
  1143  0110                     u767:
  1144  0110  0BC4               	decfsz	??_MoveCursor,f
  1145  0111  2910               	goto	u767
  1146  0112  0BC5               	decfsz	??_MoveCursor+1,f
  1147  0113  2910               	goto	u767
  1148  0114  2915               	nop2
  1149  0115                     l68:
  1150  0115  0008               	return
  1151  0116                     __end_of_MoveCursor:
  1152                           
  1153                           	psect	text5
  1154  0020                     __ptext5:	
  1155 ;; *************** function _InitLCD *****************
  1156 ;; Defined at:
  1157 ;;		line 24 in file "./PIC16F887_Lib.h"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  Lineas          1    wreg     unsigned char 
  1160 ;;  Alto            1    5[COMMON] unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  Lineas          1    0[BANK0 ] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         1       0       0       0       0
  1173 ;;      Locals:         0       1       0       0       0
  1174 ;;      Temps:          2       0       0       0       0
  1175 ;;      Totals:         3       1       0       0       0
  1176 ;;Total ram usage:        4 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 2
  1179 ;; This function calls:
  1180 ;;		_PORTOut
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _InitLCD
  1188  0020                     _InitLCD:
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  1192                           ;InitLCD@Lineas stored from wreg
  1193  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0022  00C4               	movwf	InitLCD@Lineas
  1196  0023                     l1135:
  1197                           
  1198                           ;./PIC16F887_Lib.h: 25:     RC0 = 0; RC3 = 0;
  1199  0023  1007               	bcf	7,0	;volatile
  1200  0024  1187               	bcf	7,3	;volatile
  1201  0025                     l1137:
  1202                           
  1203                           ;./PIC16F887_Lib.h: 26:     _delay((unsigned long)((14)*(8000000/4000.0)));
  1204  0025  3025               	movlw	37
  1205  0026  00F7               	movwf	??_InitLCD+1
  1206  0027  305B               	movlw	91
  1207  0028  00F6               	movwf	??_InitLCD
  1208  0029                     u777:
  1209  0029  0BF6               	decfsz	??_InitLCD,f
  1210  002A  2829               	goto	u777
  1211  002B  0BF7               	decfsz	??_InitLCD+1,f
  1212  002C  2829               	goto	u777
  1213  002D  282E               	nop2
  1214  002E                     l1139:
  1215                           
  1216                           ;./PIC16F887_Lib.h: 27:     PORTOut(0b00110000);
  1217  002E  3030               	movlw	48
  1218  002F  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1219  0034                     l1141:
  1220                           
  1221                           ;./PIC16F887_Lib.h: 29:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1222  0034  300B               	movlw	11
  1223  0035  00F7               	movwf	??_InitLCD+1
  1224  0036  3062               	movlw	98
  1225  0037  00F6               	movwf	??_InitLCD
  1226  0038                     u787:
  1227  0038  0BF6               	decfsz	??_InitLCD,f
  1228  0039  2838               	goto	u787
  1229  003A  0BF7               	decfsz	??_InitLCD+1,f
  1230  003B  2838               	goto	u787
  1231  003C  0000               	nop
  1232                           
  1233                           ;./PIC16F887_Lib.h: 30:     PORTOut(0b00110000);
  1234  003D  3030               	movlw	48
  1235  003E  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1236  0043                     l1143:
  1237                           
  1238                           ;./PIC16F887_Lib.h: 32:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1239  0043  3003               	movlw	3
  1240  0044  00F7               	movwf	??_InitLCD+1
  1241  0045  3097               	movlw	151
  1242  0046  00F6               	movwf	??_InitLCD
  1243  0047                     u797:
  1244  0047  0BF6               	decfsz	??_InitLCD,f
  1245  0048  2847               	goto	u797
  1246  0049  0BF7               	decfsz	??_InitLCD+1,f
  1247  004A  2847               	goto	u797
  1248  004B  284C               	nop2
  1249  004C                     l1145:
  1250                           
  1251                           ;./PIC16F887_Lib.h: 33:     PORTOut(0b00110000);
  1252  004C  3030               	movlw	48
  1253  004D  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1254  0052                     l1147:
  1255                           
  1256                           ;./PIC16F887_Lib.h: 36:     if (Lineas == 1 && Alto == 8){ PORTOut(0b00110000);}
  1257  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0054  0344               	decf	InitLCD@Lineas,w
  1260  0055  1D03               	btfss	3,2
  1261  0056  2858               	goto	u571
  1262  0057  2859               	goto	u570
  1263  0058                     u571:
  1264  0058  2866               	goto	l1153
  1265  0059                     u570:
  1266  0059                     l1149:
  1267  0059  3008               	movlw	8
  1268  005A  0675               	xorwf	InitLCD@Alto,w
  1269  005B  1D03               	btfss	3,2
  1270  005C  285E               	goto	u581
  1271  005D  285F               	goto	u580
  1272  005E                     u581:
  1273  005E  2866               	goto	l1153
  1274  005F                     u580:
  1275  005F                     l1151:
  1276  005F  3030               	movlw	48
  1277  0060  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1278  0065  289D               	goto	l46
  1279  0066                     l1153:
  1280  0066  3002               	movlw	2
  1281  0067  0644               	xorwf	InitLCD@Lineas,w
  1282  0068  1D03               	btfss	3,2
  1283  0069  286B               	goto	u591
  1284  006A  286C               	goto	u590
  1285  006B                     u591:
  1286  006B  2879               	goto	l1159
  1287  006C                     u590:
  1288  006C                     l1155:
  1289  006C  300B               	movlw	11
  1290  006D  0675               	xorwf	InitLCD@Alto,w
  1291  006E  1D03               	btfss	3,2
  1292  006F  2871               	goto	u601
  1293  0070  2872               	goto	u600
  1294  0071                     u601:
  1295  0071  2879               	goto	l1159
  1296  0072                     u600:
  1297  0072                     l1157:
  1298  0072  303C               	movlw	60
  1299  0073  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1300  0078  289D               	goto	l46
  1301  0079                     l1159:
  1302  0079  0344               	decf	InitLCD@Lineas,w
  1303  007A  1D03               	btfss	3,2
  1304  007B  287D               	goto	u611
  1305  007C  287E               	goto	u610
  1306  007D                     u611:
  1307  007D  288B               	goto	l1165
  1308  007E                     u610:
  1309  007E                     l1161:
  1310  007E  300B               	movlw	11
  1311  007F  0675               	xorwf	InitLCD@Alto,w
  1312  0080  1D03               	btfss	3,2
  1313  0081  2883               	goto	u621
  1314  0082  2884               	goto	u620
  1315  0083                     u621:
  1316  0083  288B               	goto	l1165
  1317  0084                     u620:
  1318  0084                     l1163:
  1319  0084  3034               	movlw	52
  1320  0085  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1321  008A  289D               	goto	l46
  1322  008B                     l1165:
  1323  008B  3002               	movlw	2
  1324  008C  0644               	xorwf	InitLCD@Lineas,w
  1325  008D  1D03               	btfss	3,2
  1326  008E  2890               	goto	u631
  1327  008F  2891               	goto	u630
  1328  0090                     u631:
  1329  0090  289D               	goto	l46
  1330  0091                     u630:
  1331  0091                     l1167:
  1332  0091  3008               	movlw	8
  1333  0092  0675               	xorwf	InitLCD@Alto,w
  1334  0093  1D03               	btfss	3,2
  1335  0094  2896               	goto	u641
  1336  0095  2897               	goto	u640
  1337  0096                     u641:
  1338  0096  289D               	goto	l46
  1339  0097                     u640:
  1340  0097                     l1169:
  1341  0097  3038               	movlw	56
  1342  0098  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1343  009D                     l46:
  1344                           
  1345                           ;./PIC16F887_Lib.h: 41:     PORTOut(0b00001000);
  1346  009D  3008               	movlw	8
  1347  009E  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1348                           
  1349                           ;./PIC16F887_Lib.h: 42:     PORTOut(0b00000001);
  1350  00A3  3001               	movlw	1
  1351  00A4  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1352                           
  1353                           ;./PIC16F887_Lib.h: 47:     PORTOut(0b00000110);
  1354  00A9  3006               	movlw	6
  1355  00AA  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1356                           
  1357                           ;./PIC16F887_Lib.h: 49:     PORTOut(0b00001100);
  1358  00AF  300C               	movlw	12
  1359  00B0  120A  118A  2164  120A  118A  	fcall	_PORTOut
  1360  00B5                     l52:
  1361  00B5  0008               	return
  1362  00B6                     __end_of_InitLCD:
  1363                           
  1364                           	psect	text6
  1365  0164                     __ptext6:	
  1366 ;; *************** function _PORTOut *****************
  1367 ;; Defined at:
  1368 ;;		line 157 in file "./PIC16F887_Lib.h"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  Out             1    wreg     unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  Out             1    4[COMMON] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0
  1385 ;;      Totals:         3       0       0       0       0
  1386 ;;Total ram usage:        3 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_InitLCD
  1393 ;;		_MoveCursor
  1394 ;;		_WriteCharLCD
  1395 ;;		_ResetLCD
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _PORTOut
  1401  0164                     _PORTOut:
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _PORTOut: [wreg]
  1405                           ;PORTOut@Out stored from wreg
  1406  0164  00F4               	movwf	PORTOut@Out
  1407  0165                     l1113:
  1408                           
  1409                           ;./PIC16F887_Lib.h: 158:     if((Out & 0b00000001) == 0b00000001) { PORTBbits.RB0 = 1; }
      +                           else { PORTBbits.RB0 = 0; }
  1410  0165  1C74               	btfss	PORTOut@Out,0
  1411  0166  2968               	goto	u491
  1412  0167  2969               	goto	u490
  1413  0168                     u491:
  1414  0168  296D               	goto	l77
  1415  0169                     u490:
  1416  0169                     l1115:
  1417  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1418  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1419  016B  1406               	bsf	6,0	;volatile
  1420  016C  2970               	goto	l78
  1421  016D                     l77:
  1422  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1423  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1424  016F  1006               	bcf	6,0	;volatile
  1425  0170                     l78:
  1426                           
  1427                           ;./PIC16F887_Lib.h: 159:     if((Out & 0b00000010) == 0b00000010) { PORTBbits.RB1 = 1; }
      +                           else { PORTBbits.RB1 = 0; }
  1428  0170  1CF4               	btfss	PORTOut@Out,1
  1429  0171  2973               	goto	u501
  1430  0172  2974               	goto	u500
  1431  0173                     u501:
  1432  0173  2976               	goto	l79
  1433  0174                     u500:
  1434  0174                     l1117:
  1435  0174  1486               	bsf	6,1	;volatile
  1436  0175  2977               	goto	l80
  1437  0176                     l79:
  1438  0176  1086               	bcf	6,1	;volatile
  1439  0177                     l80:
  1440                           
  1441                           ;./PIC16F887_Lib.h: 160:     if((Out & 0b00000100) == 0b00000100) { PORTBbits.RB2 = 1; }
      +                           else { PORTBbits.RB2 = 0; }
  1442  0177  1D74               	btfss	PORTOut@Out,2
  1443  0178  297A               	goto	u511
  1444  0179  297B               	goto	u510
  1445  017A                     u511:
  1446  017A  297D               	goto	l81
  1447  017B                     u510:
  1448  017B                     l1119:
  1449  017B  1506               	bsf	6,2	;volatile
  1450  017C  297E               	goto	l82
  1451  017D                     l81:
  1452  017D  1106               	bcf	6,2	;volatile
  1453  017E                     l82:
  1454                           
  1455                           ;./PIC16F887_Lib.h: 161:     if((Out & 0b00001000) == 0b00001000) { PORTBbits.RB3 = 1; }
      +                           else { PORTBbits.RB3 = 0; }
  1456  017E  1DF4               	btfss	PORTOut@Out,3
  1457  017F  2981               	goto	u521
  1458  0180  2982               	goto	u520
  1459  0181                     u521:
  1460  0181  2984               	goto	l83
  1461  0182                     u520:
  1462  0182                     l1121:
  1463  0182  1586               	bsf	6,3	;volatile
  1464  0183  2985               	goto	l84
  1465  0184                     l83:
  1466  0184  1186               	bcf	6,3	;volatile
  1467  0185                     l84:
  1468                           
  1469                           ;./PIC16F887_Lib.h: 162:     if((Out & 0b00010000) == 0b00010000) { PORTBbits.RB4 = 1; }
      +                           else { PORTBbits.RB4 = 0; }
  1470  0185  1E74               	btfss	PORTOut@Out,4
  1471  0186  2988               	goto	u531
  1472  0187  2989               	goto	u530
  1473  0188                     u531:
  1474  0188  298B               	goto	l85
  1475  0189                     u530:
  1476  0189                     l1123:
  1477  0189  1606               	bsf	6,4	;volatile
  1478  018A  298C               	goto	l86
  1479  018B                     l85:
  1480  018B  1206               	bcf	6,4	;volatile
  1481  018C                     l86:
  1482                           
  1483                           ;./PIC16F887_Lib.h: 163:     if((Out & 0b00100000) == 0b00100000) { PORTBbits.RB5 = 1; }
      +                           else { PORTBbits.RB5 = 0; }
  1484  018C  1EF4               	btfss	PORTOut@Out,5
  1485  018D  298F               	goto	u541
  1486  018E  2990               	goto	u540
  1487  018F                     u541:
  1488  018F  2992               	goto	l87
  1489  0190                     u540:
  1490  0190                     l1125:
  1491  0190  1686               	bsf	6,5	;volatile
  1492  0191  2993               	goto	l88
  1493  0192                     l87:
  1494  0192  1286               	bcf	6,5	;volatile
  1495  0193                     l88:
  1496                           
  1497                           ;./PIC16F887_Lib.h: 164:     if((Out & 0b01000000) == 0b01000000) { PORTBbits.RB6 = 1; }
      +                           else { PORTBbits.RB6 = 0; }
  1498  0193  1F74               	btfss	PORTOut@Out,6
  1499  0194  2996               	goto	u551
  1500  0195  2997               	goto	u550
  1501  0196                     u551:
  1502  0196  2999               	goto	l89
  1503  0197                     u550:
  1504  0197                     l1127:
  1505  0197  1706               	bsf	6,6	;volatile
  1506  0198  299A               	goto	l90
  1507  0199                     l89:
  1508  0199  1306               	bcf	6,6	;volatile
  1509  019A                     l90:
  1510                           
  1511                           ;./PIC16F887_Lib.h: 165:     if((Out & 0b10000000) == 0b10000000) { PORTBbits.RB7 = 1; }
      +                           else { PORTBbits.RB7 = 0; }
  1512  019A  1FF4               	btfss	PORTOut@Out,7
  1513  019B  299D               	goto	u561
  1514  019C  299E               	goto	u560
  1515  019D                     u561:
  1516  019D  29A0               	goto	l91
  1517  019E                     u560:
  1518  019E                     l1129:
  1519  019E  1786               	bsf	6,7	;volatile
  1520  019F  29A1               	goto	l92
  1521  01A0                     l91:
  1522  01A0  1386               	bcf	6,7	;volatile
  1523  01A1                     l92:
  1524                           
  1525                           ;./PIC16F887_Lib.h: 167:     RC1 = 1;
  1526  01A1  1487               	bsf	7,1	;volatile
  1527  01A2                     l1131:
  1528                           
  1529                           ;./PIC16F887_Lib.h: 168:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1530  01A2  300D               	movlw	13
  1531  01A3  00F3               	movwf	??_PORTOut+1
  1532  01A4  30FB               	movlw	251
  1533  01A5  00F2               	movwf	??_PORTOut
  1534  01A6                     u807:
  1535  01A6  0BF2               	decfsz	??_PORTOut,f
  1536  01A7  29A6               	goto	u807
  1537  01A8  0BF3               	decfsz	??_PORTOut+1,f
  1538  01A9  29A6               	goto	u807
  1539  01AA  29AB               	nop2
  1540  01AB                     l1133:
  1541                           
  1542                           ;./PIC16F887_Lib.h: 169:     RC1 = 0;
  1543  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1544  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1545  01AD  1087               	bcf	7,1	;volatile
  1546  01AE                     l93:
  1547  01AE  0008               	return
  1548  01AF                     __end_of_PORTOut:
  1549                           
  1550                           	psect	text7
  1551  023C                     __ptext7:	
  1552 ;; *************** function _isr *****************
  1553 ;; Defined at:
  1554 ;;		line 66 in file "LAB2.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		None
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0
  1570 ;;      Temps:          2       0       0       0       0
  1571 ;;      Totals:         2       0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		Interrupt level 1
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _isr
  1583  023C                     _isr:
  1584  023C                     i1l117:
  1585  023C  0871               	movf	??_isr+1,w
  1586  023D  008A               	movwf	10
  1587  023E  0E70               	swapf	??_isr,w
  1588  023F  0083               	movwf	3
  1589  0240  0EFE               	swapf	btemp,f
  1590  0241  0E7E               	swapf	btemp,w
  1591  0242  0009               	retfie
  1592  0243                     __end_of_isr:
  1593  007E                     btemp	set	126	;btemp
  1594  007E                     wtemp0	set	126
  1595                           
  1596                           	psect	intentry
  1597  0004                     __pintentry:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _isr: []
  1600                           
  1601  0004                     interrupt_function:
  1602  007E                     saved_w	set	btemp
  1603  0004  00FE               	movwf	btemp
  1604  0005  0E03               	swapf	3,w
  1605  0006  00F0               	movwf	??_isr
  1606  0007  080A               	movf	10,w
  1607  0008  00F1               	movwf	??_isr+1
  1608  0009  120A  118A  2A3C   	ljmp	_isr
  1609                           
  1610                           	psect	config
  1611                           
  1612                           ;Config register CONFIG1 @ 0x2007
  1613                           ;	Oscillator Selection bits
  1614                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1615                           ;	Watchdog Timer Enable bit
  1616                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1617                           ;	Power-up Timer Enable bit
  1618                           ;	PWRTE = OFF, PWRT disabled
  1619                           ;	RE3/MCLR pin function select bit
  1620                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1621                           ;	Code Protection bit
  1622                           ;	CP = OFF, Program memory code protection is disabled
  1623                           ;	Data Code Protection bit
  1624                           ;	CPD = OFF, Data memory code protection is disabled
  1625                           ;	Brown Out Reset Selection bits
  1626                           ;	BOREN = OFF, BOR disabled
  1627                           ;	Internal External Switchover bit
  1628                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1629                           ;	Fail-Safe Clock Monitor Enabled bit
  1630                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1631                           ;	Low Voltage Programming Enable bit
  1632                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1633                           ;	In-Circuit Debugger Mode bit
  1634                           ;	DEBUG = 0x1, unprogrammed default
  1635  2007                     	org	8199
  1636  2007  20D4               	dw	8404
  1637                           
  1638                           ;Config register CONFIG2 @ 0x2008
  1639                           ;	Brown-out Reset Selection bit
  1640                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1641                           ;	Flash Program Memory Self Write Enable bits
  1642                           ;	WRT = OFF, Write protection off
  1643  2008                     	org	8200
  1644  2008  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      5      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteCharLCD@Caracter	PTR unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_InitLCD
    _main->_MoveCursor
    _main->_WriteCharLCD
    _WriteCharLCD->_PORTOut
    _ResetLCD->_PORTOut
    _MoveCursor->_PORTOut
    _InitLCD->_PORTOut

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MoveCursor

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1863
                                              2 BANK0      3     3      0
                            _InitLCD
                         _MoveCursor
                           _ResetLCD
                       _WriteCharLCD
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteCharLCD                                         3     3      0     414
                                              5 COMMON     3     3      0
                            _PORTOut
 ---------------------------------------------------------------------------------
 (1) _ResetLCD                                             2     2      0     176
                                              5 COMMON     2     2      0
                            _PORTOut
 ---------------------------------------------------------------------------------
 (1) _MoveCursor                                           5     3      2     759
                                              5 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            _PORTOut
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              4     3      1     514
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                            _PORTOut
 ---------------------------------------------------------------------------------
 (2) _PORTOut                                              3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _PORTOut
   _MoveCursor
     _PORTOut
   _ResetLCD
     _PORTOut
   _WriteCharLCD
     _PORTOut
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Feb 06 19:50:30 2022

                      pc 0002                       l52 00B5                       l46 009D  
                     l80 0177                       l81 017D                       l90 019A  
                     l82 017E                       l74 0201                       l91 01A0  
                     l83 0184                       l92 01A1                       l84 0185  
                     l68 0115                       l93 01AE                       l85 018B  
                     l77 016D                       l86 018C                       l78 0170  
                     l87 0192                       l79 0176                       l88 0193  
                     l96 021B                       l89 0199                       fsr 0004  
            InitLCD@Alto 0075                      l122 0160                      l123 0160  
                    l128 0233                      l911 0220                      l913 0221  
                    l915 022C                      l917 0232                      l909 021C  
                    _RC0 0038                      _RC1 0039                      _RC2 003A  
                    _RC3 003B                      u500 0174                      u501 0173  
                    u510 017B                      u511 017A                      u520 0182  
                    u600 0072                      u521 0181                      u601 0071  
                    u530 0189                      u610 007E                      u531 0188  
                    u611 007D                      u540 0190                      u620 0084  
                    u700 00FC                      u541 018F                      u621 0083  
                    u701 00FB                      u550 0197                      u630 0091  
                    u710 010A                      u551 0196                      u631 0090  
                    u711 0109                      u560 019E                      u640 0097  
                    u720 0201                      u561 019D                      u641 0096  
                    u721 0200                      u490 0169                      u570 0059  
                    u650 00C0                      u491 0168                      u571 0058  
                    u651 00BF                      u580 005F                      u660 00CD  
                    u581 005E                      u661 00CC                      u590 006C  
                    u670 00E3                      u807 01A6                      u591 006B  
                    u671 00E2                      u680 00E8                      u681 00E7  
                    u737 014E                      u690 00F6                      u691 00F5  
                    u747 0210                      u757 00D9                      u767 0110  
                    u777 0029                      u787 0038                      u797 0047  
                    _dec 0078                      _cen 0043                      _isr 023C  
                    fsr0 0004                      _uni 0079                      indf 0000  
  __size_of_WriteCharLCD 0026                     l1121 0182                     l1113 0165  
                   l1201 0103                     l1131 01A2                     l1123 0189  
                   l1115 0169                     l1203 0105                     l1211 01E3  
                   l1133 01AB                     l1125 0190                     l1117 0174  
                   l1141 0034                     l1205 010A                     l1221 020C  
                   l1213 01F0                     l1127 0197                     l1119 017B  
                   l1151 005F                     l1143 0043                     l1135 0023  
                   l1223 0215                     l1215 01F4                     l1207 01DD  
                   l1231 0146                     l1129 019E                     l1161 007E  
                   l1153 0066                     l1145 004C                     l1137 0025  
                   l1217 0202                     l1209 01E1                     l1233 0155  
                   l1225 0116                     l1163 0084                     l1155 006C  
                   l1147 0052                     l1139 002E                     l1171 00B7  
                   l1219 0206                     l1235 015A                     l1227 0130  
                   l1165 008B                     l1157 0072                     l1149 0059  
                   l1181 00D3                     l1173 00BB                     l1229 0136  
                   l1167 0091                     l1159 0079                     l1191 00EF  
                   l1183 00DE                     l1175 00C0                     l1169 0097  
                   l1193 00F1                     l1185 00E3                     l1177 00C7  
                   l1195 00F7                     l1179 00CD                     l1189 00E9  
                   l1199 00FD                     ?_isr 0070                     STR_1 01B5  
                   STR_2 01C4                     STR_3 01D3                     _dato 003F  
                   _main 0116          __end_of_PORTOut 01AF                     _vol1 0042  
                   _vol2 0041                     _vol3 0040                     btemp 007E  
                   start 000C          __end_of_InitLCD 00B6     WriteCharLCD@Caracter 0077  
                  ??_isr 0070             _WriteCharLCD 01DC                    ?_main 0070  
          InitLCD@Lineas 0044                    _ANSEL 0188                    i1l117 023C  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISE 0089                    _cont1 007B                    _cont2 007A  
                  _setup 021C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0164  
                 ??_main 0046         __end_of_ResetLCD 021C                ??_PORTOut 0072  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
             _MoveCursor 00B6                ??_InitLCD 0076                   _Cont_U 003E  
                 saved_w 007E  __end_of__initialization 001C           __pcstackCOMMON 0070  
          __end_of_setup 0234                  ??_setup 0072               __pbssBANK0 0020  
            ?_MoveCursor 0075                ?_ResetLCD 0070               __pmaintext 0116  
             __pintentry 0004                  _PORTOut 0164               __stringtab 01AF  
                _InitLCD 0020               ??_ResetLCD 0075     MoveCursor@Posiciones 0075  
                __ptext1 021C                  __ptext2 01DC                  __ptext3 0202  
                __ptext4 00B6                  __ptext5 0020                  __ptext6 0164  
                __ptext7 023C                  _buffer1 0034                  _buffer2 002A  
                _buffer3 0020      __size_of_MoveCursor 0060             __size_of_isr 0007  
                clrloop0 0235     end_of_initialization 001C                _PORTBbits 0006  
    start_initialization 000F              __end_of_isr 0243            WriteCharLCD@i 0076  
           ??_MoveCursor 0044        __size_of_ResetLCD 001A            ?_WriteCharLCD 0070  
     __end_of_MoveCursor 0116              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0044      MoveCursor@Direccion 0076                 ?_PORTOut 0070  
               ?_InitLCD 0075           ??_WriteCharLCD 0075                __pstrings 01AF  
         __size_of_setup 0018        interrupt_function 0004                clear_ram0 0234  
        MoveCursor@Linea 0077               PORTOut@Out 0074               _ADCON0bits 001F  
            __stringbase 01B4         __size_of_PORTOut 004B         __size_of_InitLCD 0096  
               _ResetLCD 0202       __end_of__stringtab 01B5     __end_of_WriteCharLCD 0202  
          __size_of_main 004E                 intlevel1 0000                stringcode 01AF  
             _OSCCONbits 008F                 stringdir 01AF                 stringtab 01AF  
