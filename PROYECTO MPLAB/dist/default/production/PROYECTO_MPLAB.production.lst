

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 04 17:58:53 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381                           
   382                           	psect	strings
   383  03CA                     __pstrings:
   384  03CA                     stringtab:
   385  03CA                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388  03CA  1BFF               	btfsc	btemp+1,7
   389  03CB  2BD4               	ljmp	stringcode
   390  03CC  1383               	bcf	3,7
   391  03CD  187F               	btfsc	btemp+1,0
   392  03CE  1783               	bsf	3,7
   393  03CF  0800               	movf	0,w
   394  03D0  0A84               	incf	4,f
   395  03D1  1903               	skipnz
   396  03D2  0AFF               	incf	btemp+1,f
   397  03D3  0008               	return
   398  03D4                     stringcode:
   399  03D4                     stringdir:
   400  03D4  3003               	movlw	high stringdir
   401  03D5  008A               	movwf	10
   402  03D6  0804               	movf	4,w
   403  03D7  0A84               	incf	4,f
   404  03D8  0782               	addwf	2,f
   405  03D9                     __stringbase:
   406  03D9  3400               	retlw	0
   407  03DA                     __end_of__stringtab:
   408  03DA                     _dpowers:
   409  03DA  3401               	retlw	1
   410  03DB  3400               	retlw	0
   411  03DC  340A               	retlw	10
   412  03DD  3400               	retlw	0
   413  03DE  3464               	retlw	100
   414  03DF  3400               	retlw	0
   415  03E0  34E8               	retlw	232
   416  03E1  3403               	retlw	3
   417  03E2  3410               	retlw	16
   418  03E3  3427               	retlw	39
   419  03E4                     __end_of_dpowers:
   420  001E                     _ADRESH	set	30
   421  0008                     _PORTD	set	8
   422  0018                     _RCSTAbits	set	24
   423  000B                     _INTCONbits	set	11
   424  0006                     _PORTB	set	6
   425  0009                     _PORTE	set	9
   426  0005                     _PORTA	set	5
   427  001F                     _ADCON0bits	set	31
   428  001A                     _RCREG	set	26
   429  000C                     _PIR1bits	set	12
   430  0038                     _RC0	set	56
   431  0039                     _RC1	set	57
   432  0088                     _TRISD	set	136
   433  009A                     _SPBRGH	set	154
   434  0099                     _SPBRG	set	153
   435  0098                     _TXSTAbits	set	152
   436  008C                     _PIE1bits	set	140
   437  009F                     _ADCON1bits	set	159
   438  008F                     _OSCCONbits	set	143
   439  0089                     _TRISE	set	137
   440  0086                     _TRISB	set	134
   441  0085                     _TRISA	set	133
   442  0438                     _TRISC0	set	1080
   443  0439                     _TRISC1	set	1081
   444  0187                     _BAUDCTLbits	set	391
   445  0189                     _ANSELH	set	393
   446  0188                     _ANSEL	set	392
   447  03E4                     STR_1:
   448  03E4  3453               	retlw	83	;'S'
   449  03E5  3431               	retlw	49	;'1'
   450  03E6  343A               	retlw	58	;':'
   451  03E7  3420               	retlw	32	;' '
   452  03E8  3420               	retlw	32	;' '
   453  03E9  3420               	retlw	32	;' '
   454  03EA  3420               	retlw	32	;' '
   455  03EB  3453               	retlw	83	;'S'
   456  03EC  3432               	retlw	50	;'2'
   457  03ED  343A               	retlw	58	;':'
   458  03EE  3420               	retlw	32	;' '
   459  03EF  3420               	retlw	32	;' '
   460  03F0  3420               	retlw	32	;' '
   461  03F1  3453               	retlw	83	;'S'
   462  03F2  3433               	retlw	51	;'3'
   463  03F3  343A               	retlw	58	;':'
   464  03F4  3400               	retlw	0
   465  03F5                     STR_2:
   466  03F5  3425               	retlw	37	;'%'
   467  03F6  3464               	retlw	100	;'d'
   468  03F7  342E               	retlw	46	;'.'
   469  03F8  3425               	retlw	37	;'%'
   470  03F9  3464               	retlw	100	;'d'
   471  03FA  3425               	retlw	37	;'%'
   472  03FB  3464               	retlw	100	;'d'
   473  03FC  3400               	retlw	0
   474  03FA                     
   475                           	psect	cinit
   476  000F                     start_initialization:	
   477                           ; #config settings
   478                           
   479  000F                     __initialization:
   480                           
   481                           ; Clear objects allocated to COMMON
   482  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   483  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   484  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   485  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   486                           
   487                           ; Clear objects allocated to BANK0
   488  0013  1383               	bcf	3,7	;select IRP bank0
   489  0014  3045               	movlw	low __pbssBANK0
   490  0015  0084               	movwf	4
   491  0016  3069               	movlw	low (__pbssBANK0+36)
   492  0017  120A  118A  2533  120A  118A  	fcall	clear_ram0
   493  001C                     end_of_initialization:	
   494                           ;End of C runtime variable initialization code
   495                           
   496  001C                     __end_of__initialization:
   497  001C  0183               	clrf	3
   498  001D  120A  118A  290A   	ljmp	_main	;jump to C main() function
   499                           
   500                           	psect	bssCOMMON
   501  0076                     __pbssCOMMON:
   502  0076                     _vol3:
   503  0076                     	ds	1
   504  0077                     _cen:
   505  0077                     	ds	1
   506  0078                     _dec:
   507  0078                     	ds	1
   508  0079                     _uni:
   509  0079                     	ds	1
   510                           
   511                           	psect	bssBANK0
   512  0045                     __pbssBANK0:
   513  0045                     _Cont_U:
   514  0045                     	ds	1
   515  0046                     _dato:
   516  0046                     	ds	1
   517  0047                     _cont2:
   518  0047                     	ds	1
   519  0048                     _cont1:
   520  0048                     	ds	1
   521  0049                     _buffer3:
   522  0049                     	ds	10
   523  0053                     _buffer2:
   524  0053                     	ds	10
   525  005D                     _buffer1:
   526  005D                     	ds	10
   527  0067                     _vol2:
   528  0067                     	ds	1
   529  0068                     _vol1:
   530  0068                     	ds	1
   531                           
   532                           	psect	clrtext
   533  0533                     clear_ram0:	
   534                           ;	Called with FSR containing the base address, and
   535                           ;	W with the last address+1
   536                           
   537  0533  0064               	clrwdt	;clear the watchdog before getting into this loop
   538  0534                     clrloop0:
   539  0534  0180               	clrf	0	;clear RAM location pointed to by FSR
   540  0535  0A84               	incf	4,f	;increment pointer
   541  0536  0604               	xorwf	4,w	;XOR with final address
   542  0537  1903               	btfsc	3,2	;have we reached the end yet?
   543  0538  3400               	retlw	0	;all done for this memory range, return
   544  0539  0604               	xorwf	4,w	;XOR again to restore value
   545  053A  2D34               	goto	clrloop0	;do the next byte
   546                           
   547                           	psect	cstackCOMMON
   548  0070                     __pcstackCOMMON:
   549  0070                     ?_ADC:
   550  0070                     ??_ADC:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_setup:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_conversion:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_conversion_char:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_dato_recibido:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Iniciar_LCD:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_Limpiar_pantallaLCD:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_isr:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_main:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_prender_ELCD:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_Escribir_comandoLCD:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_Escribir_datosLCD:	
   584                           ; 1 bytes @ 0x0
   585                           
   586                           
   587                           ; 1 bytes @ 0x0
   588  0070                     	ds	1
   589  0071                     ??_isr:
   590                           
   591                           ; 1 bytes @ 0x1
   592  0071                     	ds	3
   593  0074                     ??_conversion:
   594  0074                     ??_prender_ELCD:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0074                     ??___awdiv:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0074                     ??___awmod:	
   601                           ; 1 bytes @ 0x4
   602                           
   603  0074                     ??___lwdiv:	
   604                           ; 1 bytes @ 0x4
   605                           
   606                           
   607                           ; 1 bytes @ 0x4
   608  0074                     	ds	1
   609  0075                     ?_divisor:
   610  0075                     ??_Escribir_comandoLCD:	
   611                           ; 1 bytes @ 0x5
   612                           
   613  0075                     ??_Escribir_datosLCD:	
   614                           ; 1 bytes @ 0x5
   615                           
   616  0075                     ??___lwmod:	
   617                           ; 1 bytes @ 0x5
   618                           
   619  0075                     divisor@dig:	
   620                           ; 1 bytes @ 0x5
   621                           
   622  0075                     Escribir_comandoLCD@Comando:	
   623                           ; 1 bytes @ 0x5
   624                           
   625  0075                     Escribir_datosLCD@LCDchar:	
   626                           ; 1 bytes @ 0x5
   627                           
   628                           
   629                           ; 1 bytes @ 0x5
   630  0075                     	ds	1
   631  0076                     ??_set_cursor:
   632  0076                     ??_Escribir_stringLCD:	
   633                           ; 1 bytes @ 0x6
   634                           
   635  0076                     ??_Iniciar_LCD:	
   636                           ; 1 bytes @ 0x6
   637                           
   638                           
   639                           	psect	cstackBANK0
   640  0020                     __pcstackBANK0:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0020                     ?_set_cursor:
   644  0020                     ?_Escribir_stringLCD:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0020                     ??_Limpiar_pantallaLCD:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0020                     ?___awdiv:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0020                     ?___awmod:	
   654                           ; 2 bytes @ 0x0
   655                           
   656  0020                     ?___lwdiv:	
   657                           ; 2 bytes @ 0x0
   658                           
   659  0020                     set_cursor@b:	
   660                           ; 2 bytes @ 0x0
   661                           
   662  0020                     Escribir_stringLCD@d:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0020                     ___awdiv@divisor:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0020                     ___awmod@divisor:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0020                     ___lwdiv@divisor:	
   672                           ; 2 bytes @ 0x0
   673                           
   674                           
   675                           ; 2 bytes @ 0x0
   676  0020                     	ds	1
   677  0021                     set_cursor@a:
   678                           
   679                           ; 1 bytes @ 0x1
   680  0021                     	ds	1
   681  0022                     ??_setup:
   682  0022                     ___awdiv@dividend:	
   683                           ; 1 bytes @ 0x2
   684                           
   685  0022                     ___awmod@dividend:	
   686                           ; 2 bytes @ 0x2
   687                           
   688  0022                     ___lwdiv@dividend:	
   689                           ; 2 bytes @ 0x2
   690                           
   691                           
   692                           ; 2 bytes @ 0x2
   693  0022                     	ds	2
   694  0024                     ___awdiv@counter:
   695  0024                     ___awmod@counter:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0024                     ___lwdiv@counter:	
   699                           ; 1 bytes @ 0x4
   700                           
   701                           
   702                           ; 1 bytes @ 0x4
   703  0024                     	ds	1
   704  0025                     ___awdiv@sign:
   705  0025                     ___awmod@sign:	
   706                           ; 1 bytes @ 0x5
   707                           
   708  0025                     ___lwdiv@quotient:	
   709                           ; 1 bytes @ 0x5
   710                           
   711                           
   712                           ; 2 bytes @ 0x5
   713  0025                     	ds	1
   714  0026                     ___awdiv@quotient:
   715                           
   716                           ; 2 bytes @ 0x6
   717  0026                     	ds	1
   718  0027                     ?___lwmod:
   719  0027                     ___lwmod@divisor:	
   720                           ; 2 bytes @ 0x7
   721                           
   722                           
   723                           ; 2 bytes @ 0x7
   724  0027                     	ds	1
   725  0028                     ??_divisor:
   726                           
   727                           ; 1 bytes @ 0x8
   728  0028                     	ds	1
   729  0029                     ___lwmod@dividend:
   730                           
   731                           ; 2 bytes @ 0x9
   732  0029                     	ds	1
   733  002A                     divisor@a:
   734                           
   735                           ; 1 bytes @ 0xA
   736  002A                     	ds	1
   737  002B                     ___lwmod@counter:
   738  002B                     divisor@b:	
   739                           ; 1 bytes @ 0xB
   740                           
   741                           
   742                           ; 2 bytes @ 0xB
   743  002B                     	ds	1
   744  002C                     ?_sprintf:
   745  002C                     sprintf@f:	
   746                           ; 2 bytes @ 0xC
   747                           
   748                           
   749                           ; 1 bytes @ 0xC
   750  002C                     	ds	1
   751  002D                     divisor@i:
   752                           
   753                           ; 2 bytes @ 0xD
   754  002D                     	ds	6
   755  0033                     ??_sprintf:
   756                           
   757                           ; 1 bytes @ 0x13
   758  0033                     	ds	3
   759  0036                     sprintf@ap:
   760                           
   761                           ; 1 bytes @ 0x16
   762  0036                     	ds	1
   763  0037                     sprintf@flag:
   764                           
   765                           ; 1 bytes @ 0x17
   766  0037                     	ds	1
   767  0038                     sprintf@prec:
   768                           
   769                           ; 1 bytes @ 0x18
   770  0038                     	ds	1
   771  0039                     sprintf@val:
   772                           
   773                           ; 2 bytes @ 0x19
   774  0039                     	ds	2
   775  003B                     sprintf@sp:
   776                           
   777                           ; 1 bytes @ 0x1B
   778  003B                     	ds	1
   779  003C                     sprintf@c:
   780                           
   781                           ; 1 bytes @ 0x1C
   782  003C                     	ds	1
   783  003D                     ??_conversion_char:
   784  003D                     ??_dato_recibido:	
   785                           ; 1 bytes @ 0x1D
   786                           
   787                           
   788                           ; 1 bytes @ 0x1D
   789  003D                     	ds	7
   790  0044                     ??_main:
   791                           
   792                           ; 1 bytes @ 0x24
   793  0044                     	ds	1
   794                           
   795                           	psect	maintext
   796  010A                     __pmaintext:	
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 78 in file "LAB2.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : B00/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       1       0       0       0
   819 ;;      Totals:         0       1       0       0       0
   820 ;;Total ram usage:        1 bytes
   821 ;; Hardware stack levels required when called: 6
   822 ;; This function calls:
   823 ;;		_Escribir_stringLCD
   824 ;;		_conversion
   825 ;;		_conversion_char
   826 ;;		_dato_recibido
   827 ;;		_set_cursor
   828 ;;		_setup
   829 ;; This function is called by:
   830 ;;		Startup code after reset
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _main
   836  010A                     _main:
   837  010A                     l1930:	
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   840                           
   841                           
   842                           ;LAB2.c: 79:     setup();
   843  010A  120A  118A  22F3  120A  118A  	fcall	_setup
   844  010F                     l1932:
   845                           
   846                           ;LAB2.c: 80:     ADCON0bits.GO = 1;
   847  010F  1283               	bcf	3,5	;RP0=0, select bank0
   848  0110  1303               	bcf	3,6	;RP1=0, select bank0
   849  0111  149F               	bsf	31,1	;volatile
   850  0112                     l102:	
   851                           ;LAB2.c: 81:     while(1){
   852                           
   853                           
   854                           ;LAB2.c: 83:         conversion();
   855  0112  120A  118A  23FD  120A  118A  	fcall	_conversion
   856                           
   857                           ;LAB2.c: 86:         set_cursor(1,1);
   858  0117  1283               	bcf	3,5	;RP0=0, select bank0
   859  0118  1303               	bcf	3,6	;RP1=0, select bank0
   860  0119  01A0               	clrf	set_cursor@b
   861  011A  0AA0               	incf	set_cursor@b,f
   862  011B  3001               	movlw	1
   863  011C  120A  118A  249A  120A  118A  	fcall	_set_cursor
   864  0121                     l1934:
   865                           
   866                           ;LAB2.c: 87:         Escribir_stringLCD("S1:    S2:   S3:");
   867  0121  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   868  0122  1283               	bcf	3,5	;RP0=0, select bank0
   869  0123  1303               	bcf	3,6	;RP1=0, select bank0
   870  0124  00A0               	movwf	Escribir_stringLCD@d
   871  0125  3080               	movlw	128
   872  0126  00A1               	movwf	Escribir_stringLCD@d+1
   873  0127  120A  118A  2429  120A  118A  	fcall	_Escribir_stringLCD
   874  012C                     l1936:
   875                           
   876                           ;LAB2.c: 89:         conversion_char();
   877  012C  120A  118A  21E6  120A  118A  	fcall	_conversion_char
   878                           
   879                           ;LAB2.c: 91:         set_cursor(2,1);
   880  0131  1283               	bcf	3,5	;RP0=0, select bank0
   881  0132  1303               	bcf	3,6	;RP1=0, select bank0
   882  0133  01A0               	clrf	set_cursor@b
   883  0134  0AA0               	incf	set_cursor@b,f
   884  0135  3002               	movlw	2
   885  0136  120A  118A  249A  120A  118A  	fcall	_set_cursor
   886  013B                     l1938:
   887                           
   888                           ;LAB2.c: 92:         Escribir_stringLCD(buffer1);
   889  013B  305D               	movlw	(low (_buffer1| 0))& (0+255)
   890  013C  1283               	bcf	3,5	;RP0=0, select bank0
   891  013D  1303               	bcf	3,6	;RP1=0, select bank0
   892  013E  00A0               	movwf	Escribir_stringLCD@d
   893  013F  3000               	movlw	0
   894  0140  00A1               	movwf	Escribir_stringLCD@d+1
   895  0141  120A  118A  2429  120A  118A  	fcall	_Escribir_stringLCD
   896  0146                     l1940:
   897                           
   898                           ;LAB2.c: 93:         set_cursor(2,7);
   899  0146  3007               	movlw	7
   900  0147  1283               	bcf	3,5	;RP0=0, select bank0
   901  0148  1303               	bcf	3,6	;RP1=0, select bank0
   902  0149  00C4               	movwf	??_main
   903  014A  0844               	movf	??_main,w
   904  014B  00A0               	movwf	set_cursor@b
   905  014C  3002               	movlw	2
   906  014D  120A  118A  249A  120A  118A  	fcall	_set_cursor
   907                           
   908                           ;LAB2.c: 94:         Escribir_stringLCD(buffer2);
   909  0152  3053               	movlw	(low (_buffer2| 0))& (0+255)
   910  0153  1283               	bcf	3,5	;RP0=0, select bank0
   911  0154  1303               	bcf	3,6	;RP1=0, select bank0
   912  0155  00A0               	movwf	Escribir_stringLCD@d
   913  0156  3000               	movlw	0
   914  0157  00A1               	movwf	Escribir_stringLCD@d+1
   915  0158  120A  118A  2429  120A  118A  	fcall	_Escribir_stringLCD
   916                           
   917                           ;LAB2.c: 97:         dato_recibido();
   918  015D  120A  118A  2451  120A  118A  	fcall	_dato_recibido
   919  0162                     l1942:
   920                           
   921                           ;LAB2.c: 99:         set_cursor(2,14);
   922  0162  300E               	movlw	14
   923  0163  1283               	bcf	3,5	;RP0=0, select bank0
   924  0164  1303               	bcf	3,6	;RP1=0, select bank0
   925  0165  00C4               	movwf	??_main
   926  0166  0844               	movf	??_main,w
   927  0167  00A0               	movwf	set_cursor@b
   928  0168  3002               	movlw	2
   929  0169  120A  118A  249A  120A  118A  	fcall	_set_cursor
   930  016E                     l1944:
   931                           
   932                           ;LAB2.c: 100:         Escribir_stringLCD(buffer3);
   933  016E  3049               	movlw	(low (_buffer3| 0))& (0+255)
   934  016F  1283               	bcf	3,5	;RP0=0, select bank0
   935  0170  1303               	bcf	3,6	;RP1=0, select bank0
   936  0171  00A0               	movwf	Escribir_stringLCD@d
   937  0172  3000               	movlw	0
   938  0173  00A1               	movwf	Escribir_stringLCD@d+1
   939  0174  120A  118A  2429  120A  118A  	fcall	_Escribir_stringLCD
   940  0179  2912               	goto	l102
   941  017A  120A  118A  280C   	ljmp	start
   942  017D                     __end_of_main:
   943                           
   944                           	psect	text1
   945  02F3                     __ptext1:	
   946 ;; *************** function _setup *****************
   947 ;; Defined at:
   948 ;;		line 105 in file "LAB2.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       1       0       0       0
   965 ;;      Totals:         0       1       0       0       0
   966 ;;Total ram usage:        1 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 5
   969 ;; This function calls:
   970 ;;		_Iniciar_LCD
   971 ;;		_Limpiar_pantallaLCD
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _setup
   979  02F3                     _setup:
   980  02F3                     l1846:	
   981                           ;incstack = 0
   982                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   983                           
   984                           
   985                           ;LAB2.c: 108:     ANSEL = 0b0011;
   986  02F3  3003               	movlw	3
   987  02F4  1683               	bsf	3,5	;RP0=1, select bank3
   988  02F5  1703               	bsf	3,6	;RP1=1, select bank3
   989  02F6  0088               	movwf	8	;volatile
   990  02F7                     l1848:
   991                           
   992                           ;LAB2.c: 109:     ANSELH = 0;
   993  02F7  0189               	clrf	9	;volatile
   994  02F8                     l1850:
   995                           
   996                           ;LAB2.c: 111:     TRISA = 0b0011;
   997  02F8  3003               	movlw	3
   998  02F9  1683               	bsf	3,5	;RP0=1, select bank1
   999  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1000  02FB  0085               	movwf	5	;volatile
  1001                           
  1002                           ;LAB2.c: 112:     TRISB = 0;
  1003  02FC  0186               	clrf	6	;volatile
  1004                           
  1005                           ;LAB2.c: 113:     TRISE = 0;
  1006  02FD  0189               	clrf	9	;volatile
  1007                           
  1008                           ;LAB2.c: 115:     PORTA = 0;
  1009  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1010  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0300  0185               	clrf	5	;volatile
  1012                           
  1013                           ;LAB2.c: 116:     PORTE = 0;
  1014  0301  0189               	clrf	9	;volatile
  1015                           
  1016                           ;LAB2.c: 117:     PORTB = 0;
  1017  0302  0186               	clrf	6	;volatile
  1018  0303                     l1852:
  1019                           
  1020                           ;LAB2.c: 120:     OSCCONbits.IRCF = 0b0110;
  1021  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1022  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1023  0305  080F               	movf	15,w	;volatile
  1024  0306  398F               	andlw	-113
  1025  0307  3860               	iorlw	96
  1026  0308  008F               	movwf	15	;volatile
  1027  0309                     l1854:
  1028                           
  1029                           ;LAB2.c: 121:     OSCCONbits.SCS = 1;
  1030  0309  140F               	bsf	15,0	;volatile
  1031  030A                     l1856:
  1032                           
  1033                           ;LAB2.c: 124:     ADCON1bits.ADFM = 0;
  1034  030A  139F               	bcf	31,7	;volatile
  1035  030B                     l1858:
  1036                           
  1037                           ;LAB2.c: 125:     ADCON1bits.VCFG0 = 0;
  1038  030B  121F               	bcf	31,4	;volatile
  1039  030C                     l1860:
  1040                           
  1041                           ;LAB2.c: 126:     ADCON1bits.VCFG1 = 0;
  1042  030C  129F               	bcf	31,5	;volatile
  1043  030D                     l1862:
  1044                           
  1045                           ;LAB2.c: 128:     ADCON0bits.ADCS = 0b01;
  1046  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1047  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1048  030F  081F               	movf	31,w	;volatile
  1049  0310  393F               	andlw	-193
  1050  0311  3840               	iorlw	64
  1051  0312  009F               	movwf	31	;volatile
  1052  0313                     l1864:
  1053                           
  1054                           ;LAB2.c: 129:     ADCON0bits.CHS = 0;
  1055  0313  30C3               	movlw	-61
  1056  0314  059F               	andwf	31,f	;volatile
  1057  0315                     l1866:
  1058                           
  1059                           ;LAB2.c: 130:     ADCON0bits.ADON = 1;
  1060  0315  141F               	bsf	31,0	;volatile
  1061  0316                     l1868:
  1062                           
  1063                           ;LAB2.c: 131:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1064  0316  300F               	movlw	15
  1065  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0319  00A2               	movwf	??_setup
  1068  031A                     u1447:
  1069  031A  0BA2               	decfsz	??_setup,f
  1070  031B  2B1A               	goto	u1447
  1071  031C  2B1D               	nop2
  1072  031D                     l1870:
  1073                           
  1074                           ;LAB2.c: 134:     PIR1bits.ADIF = 0;
  1075  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1076  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1077  031F  130C               	bcf	12,6	;volatile
  1078  0320                     l1872:
  1079                           
  1080                           ;LAB2.c: 135:     PIE1bits.ADIE = 1;
  1081  0320  1683               	bsf	3,5	;RP0=1, select bank1
  1082  0321  1303               	bcf	3,6	;RP1=0, select bank1
  1083  0322  170C               	bsf	12,6	;volatile
  1084  0323                     l1874:
  1085                           
  1086                           ;LAB2.c: 136:     PIR1bits.RCIF = 0;
  1087  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0325  128C               	bcf	12,5	;volatile
  1090  0326                     l1876:
  1091                           
  1092                           ;LAB2.c: 137:     PIE1bits.RCIE = 1;
  1093  0326  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0327  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0328  168C               	bsf	12,5	;volatile
  1096  0329                     l1878:
  1097                           
  1098                           ;LAB2.c: 138:     INTCONbits.PEIE = 1;
  1099  0329  170B               	bsf	11,6	;volatile
  1100  032A                     l1880:
  1101                           
  1102                           ;LAB2.c: 139:     INTCONbits.GIE = 1;
  1103  032A  178B               	bsf	11,7	;volatile
  1104  032B                     l1882:
  1105                           
  1106                           ;LAB2.c: 142:     TXSTAbits.SYNC = 0;
  1107  032B  1218               	bcf	24,4	;volatile
  1108  032C                     l1884:
  1109                           
  1110                           ;LAB2.c: 143:     TXSTAbits.BRGH = 1;
  1111  032C  1518               	bsf	24,2	;volatile
  1112  032D                     l1886:
  1113                           
  1114                           ;LAB2.c: 145:     BAUDCTLbits.BRG16 = 0;
  1115  032D  1683               	bsf	3,5	;RP0=1, select bank3
  1116  032E  1703               	bsf	3,6	;RP1=1, select bank3
  1117  032F  1187               	bcf	7,3	;volatile
  1118  0330                     l1888:
  1119                           
  1120                           ;LAB2.c: 147:     SPBRG = 23;
  1121  0330  3017               	movlw	23
  1122  0331  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0332  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0333  0099               	movwf	25	;volatile
  1125  0334                     l1890:
  1126                           
  1127                           ;LAB2.c: 148:     SPBRGH = 0;
  1128  0334  019A               	clrf	26	;volatile
  1129  0335                     l1892:
  1130                           
  1131                           ;LAB2.c: 150:     RCSTAbits.SPEN = 1;
  1132  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0337  1798               	bsf	24,7	;volatile
  1135  0338                     l1894:
  1136                           
  1137                           ;LAB2.c: 151:     RCSTAbits.RX9 = 0;
  1138  0338  1318               	bcf	24,6	;volatile
  1139  0339                     l1896:
  1140                           
  1141                           ;LAB2.c: 152:     RCSTAbits.CREN = 1;
  1142  0339  1618               	bsf	24,4	;volatile
  1143  033A                     l1898:
  1144                           
  1145                           ;LAB2.c: 154:     TXSTAbits.TXEN = 1;
  1146  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1147  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1148  033C  1698               	bsf	24,5	;volatile
  1149  033D                     l1900:
  1150                           
  1151                           ;LAB2.c: 157:     Iniciar_LCD();
  1152  033D  120A  118A  2477  120A  118A  	fcall	_Iniciar_LCD
  1153  0342                     l1902:
  1154                           
  1155                           ;LAB2.c: 158:     Limpiar_pantallaLCD();
  1156  0342  120A  118A  2509  120A  118A  	fcall	_Limpiar_pantallaLCD
  1157  0347                     l108:
  1158  0347  0008               	return
  1159  0348                     __end_of_setup:
  1160                           
  1161                           	psect	text2
  1162  0509                     __ptext2:	
  1163 ;; *************** function _Limpiar_pantallaLCD *****************
  1164 ;; Defined at:
  1165 ;;		line 52 in file "LCD.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0
  1181 ;;      Temps:          0       2       0       0       0
  1182 ;;      Totals:         0       2       0       0       0
  1183 ;;Total ram usage:        2 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 4
  1186 ;; This function calls:
  1187 ;;		_Escribir_comandoLCD
  1188 ;; This function is called by:
  1189 ;;		_setup
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _Limpiar_pantallaLCD
  1195  0509                     _Limpiar_pantallaLCD:
  1196  0509                     l1760:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  1199                           
  1200                           
  1201                           ;LCD.c: 53:     Escribir_comandoLCD(0x01);
  1202  0509  3001               	movlw	1
  1203  050A  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1204  050F                     l1762:
  1205                           
  1206                           ;LCD.c: 54:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1207  050F  300B               	movlw	11
  1208  0510  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0511  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0512  00A1               	movwf	??_Limpiar_pantallaLCD+1
  1211  0513  3061               	movlw	97
  1212  0514  00A0               	movwf	??_Limpiar_pantallaLCD
  1213  0515                     u1457:
  1214  0515  0BA0               	decfsz	??_Limpiar_pantallaLCD,f
  1215  0516  2D15               	goto	u1457
  1216  0517  0BA1               	decfsz	??_Limpiar_pantallaLCD+1,f
  1217  0518  2D15               	goto	u1457
  1218  0519  2D1A               	nop2
  1219  051A                     l156:
  1220  051A  0008               	return
  1221  051B                     __end_of_Limpiar_pantallaLCD:
  1222                           
  1223                           	psect	text3
  1224  0477                     __ptext3:	
  1225 ;; *************** function _Iniciar_LCD *****************
  1226 ;; Defined at:
  1227 ;;		line 32 in file "LCD.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 4
  1248 ;; This function calls:
  1249 ;;		_Escribir_comandoLCD
  1250 ;; This function is called by:
  1251 ;;		_setup
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _Iniciar_LCD
  1257  0477                     _Iniciar_LCD:
  1258  0477                     l1744:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  1261                           
  1262                           
  1263                           ;LCD.c: 33:     RC1 = 0;
  1264  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0479  1087               	bcf	7,1	;volatile
  1267                           
  1268                           ;LCD.c: 34:     RC0 = 0;
  1269  047A  1007               	bcf	7,0	;volatile
  1270  047B                     l1746:
  1271                           
  1272                           ;LCD.c: 35:     PORTD = 0;
  1273  047B  0188               	clrf	8	;volatile
  1274  047C                     l1748:
  1275                           
  1276                           ;LCD.c: 36:     TRISC1 = 0;
  1277  047C  1683               	bsf	3,5	;RP0=1, select bank1
  1278  047D  1303               	bcf	3,6	;RP1=0, select bank1
  1279  047E  1087               	bcf	7,1	;volatile
  1280  047F                     l1750:
  1281                           
  1282                           ;LCD.c: 37:     TRISC0 = 0;
  1283  047F  1007               	bcf	7,0	;volatile
  1284                           
  1285                           ;LCD.c: 38:     TRISD = 0;
  1286  0480  0188               	clrf	8	;volatile
  1287  0481                     l1752:
  1288                           
  1289                           ;LCD.c: 40:     Escribir_comandoLCD(0x38);
  1290  0481  3038               	movlw	56
  1291  0482  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1292  0487                     l1754:
  1293                           
  1294                           ;LCD.c: 41:     Escribir_comandoLCD(0x0C);
  1295  0487  300C               	movlw	12
  1296  0488  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1297  048D                     l1756:
  1298                           
  1299                           ;LCD.c: 42:     Escribir_comandoLCD(0x01);
  1300  048D  3001               	movlw	1
  1301  048E  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1302  0493                     l1758:
  1303                           
  1304                           ;LCD.c: 43:     Escribir_comandoLCD(0x06);
  1305  0493  3006               	movlw	6
  1306  0494  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1307  0499                     l147:
  1308  0499  0008               	return
  1309  049A                     __end_of_Iniciar_LCD:
  1310                           
  1311                           	psect	text4
  1312  049A                     __ptext4:	
  1313 ;; *************** function _set_cursor *****************
  1314 ;; Defined at:
  1315 ;;		line 57 in file "LCD.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  a               1    wreg     unsigned char 
  1318 ;;  b               1    0[BANK0 ] unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  a               1    1[BANK0 ] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       1       0       0       0
  1331 ;;      Locals:         0       1       0       0       0
  1332 ;;      Temps:          0       0       0       0       0
  1333 ;;      Totals:         0       2       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 4
  1337 ;; This function calls:
  1338 ;;		_Escribir_comandoLCD
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _set_cursor
  1346  049A                     _set_cursor:
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1350                           ;set_cursor@a stored from wreg
  1351  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1352  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1353  049C  00A1               	movwf	set_cursor@a
  1354  049D                     l1904:
  1355                           
  1356                           ;LCD.c: 58:     if(a == 1){
  1357  049D  0321               	decf	set_cursor@a,w
  1358  049E  1D03               	btfss	3,2
  1359  049F  2CA1               	goto	u1391
  1360  04A0  2CA2               	goto	u1390
  1361  04A1                     u1391:
  1362  04A1  2CA9               	goto	l1908
  1363  04A2                     u1390:
  1364  04A2                     l1906:
  1365                           
  1366                           ;LCD.c: 59:         Escribir_comandoLCD(0x80 + (b-1));
  1367  04A2  0820               	movf	set_cursor@b,w
  1368  04A3  3E7F               	addlw	127
  1369  04A4  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1370  04A9                     l1908:
  1371                           
  1372                           ;LCD.c: 61:     if(a == 2){
  1373  04A9  3002               	movlw	2
  1374  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1375  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1376  04AC  0621               	xorwf	set_cursor@a,w
  1377  04AD  1D03               	btfss	3,2
  1378  04AE  2CB0               	goto	u1401
  1379  04AF  2CB1               	goto	u1400
  1380  04B0                     u1401:
  1381  04B0  2CB8               	goto	l161
  1382  04B1                     u1400:
  1383  04B1                     l1910:
  1384                           
  1385                           ;LCD.c: 62:         Escribir_comandoLCD(0xC0 + (b-1));
  1386  04B1  0820               	movf	set_cursor@b,w
  1387  04B2  3EBF               	addlw	191
  1388  04B3  120A  118A  251B  120A  118A  	fcall	_Escribir_comandoLCD
  1389  04B8                     l161:
  1390  04B8  0008               	return
  1391  04B9                     __end_of_set_cursor:
  1392                           
  1393                           	psect	text5
  1394  051B                     __ptext5:	
  1395 ;; *************** function _Escribir_comandoLCD *****************
  1396 ;; Defined at:
  1397 ;;		line 18 in file "LCD.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  Comando         1    wreg     unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  Comando         1    5[COMMON] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0
  1414 ;;      Totals:         1       0       0       0       0
  1415 ;;Total ram usage:        1 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 3
  1418 ;; This function calls:
  1419 ;;		_prender_ELCD
  1420 ;; This function is called by:
  1421 ;;		_Iniciar_LCD
  1422 ;;		_Limpiar_pantallaLCD
  1423 ;;		_set_cursor
  1424 ;;		_shift_right
  1425 ;;		_shift_left
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _Escribir_comandoLCD
  1431  051B                     _Escribir_comandoLCD:
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  1435                           ;Escribir_comandoLCD@Comando stored from wreg
  1436  051B  00F5               	movwf	Escribir_comandoLCD@Comando
  1437  051C                     l1630:
  1438                           
  1439                           ;LCD.c: 19:     RC0 = 0;
  1440  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1441  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1442  051E  1007               	bcf	7,0	;volatile
  1443  051F                     l1632:
  1444                           
  1445                           ;LCD.c: 20:     PORTD = Comando;
  1446  051F  0875               	movf	Escribir_comandoLCD@Comando,w
  1447  0520  0088               	movwf	8	;volatile
  1448  0521                     l1634:
  1449                           
  1450                           ;LCD.c: 22:     prender_ELCD();
  1451  0521  120A  118A  24F4  120A  118A  	fcall	_prender_ELCD
  1452  0526                     l141:
  1453  0526  0008               	return
  1454  0527                     __end_of_Escribir_comandoLCD:
  1455                           
  1456                           	psect	text6
  1457  0451                     __ptext6:	
  1458 ;; *************** function _dato_recibido *****************
  1459 ;; Defined at:
  1460 ;;		line 177 in file "LAB2.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0
  1476 ;;      Temps:          0       3       0       0       0
  1477 ;;      Totals:         0       3       0       0       0
  1478 ;;Total ram usage:        3 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 4
  1481 ;; This function calls:
  1482 ;;		_sprintf
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _dato_recibido
  1490  0451                     _dato_recibido:
  1491  0451                     l1922:	
  1492                           ;incstack = 0
  1493                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1494                           
  1495                           
  1496                           ;LAB2.c: 178:     if(dato == 75){
  1497  0451  304B               	movlw	75
  1498  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0454  0646               	xorwf	_dato,w
  1501  0455  1D03               	btfss	3,2
  1502  0456  2C58               	goto	u1421
  1503  0457  2C59               	goto	u1420
  1504  0458                     u1421:
  1505  0458  2C5D               	goto	l119
  1506  0459                     u1420:
  1507  0459                     l1924:
  1508                           
  1509                           ;LAB2.c: 179:         Cont_U++;
  1510  0459  3001               	movlw	1
  1511  045A  00BD               	movwf	??_dato_recibido
  1512  045B  083D               	movf	??_dato_recibido,w
  1513  045C  07C5               	addwf	_Cont_U,f
  1514  045D                     l119:	
  1515                           ;LAB2.c: 180:     }
  1516                           
  1517                           
  1518                           ;LAB2.c: 181:     if(dato == 77 ){
  1519  045D  304D               	movlw	77
  1520  045E  0646               	xorwf	_dato,w
  1521  045F  1D03               	btfss	3,2
  1522  0460  2C62               	goto	u1431
  1523  0461  2C63               	goto	u1430
  1524  0462                     u1431:
  1525  0462  2C65               	goto	l1928
  1526  0463                     u1430:
  1527  0463                     l1926:
  1528                           
  1529                           ;LAB2.c: 182:         Cont_U--;
  1530  0463  3001               	movlw	1
  1531  0464  02C5               	subwf	_Cont_U,f
  1532  0465                     l1928:
  1533                           
  1534                           ;LAB2.c: 184:     sprintf(buffer3, "%d", Cont_U);
  1535  0465  3021               	movlw	(low (((STR_2+5)-__stringbase)| (0+32768)))& (0+255)
  1536  0466  00BD               	movwf	??_dato_recibido
  1537  0467  083D               	movf	??_dato_recibido,w
  1538  0468  00AC               	movwf	sprintf@f
  1539  0469  0845               	movf	_Cont_U,w
  1540  046A  00BE               	movwf	??_dato_recibido+1
  1541  046B  01BF               	clrf	??_dato_recibido+2
  1542  046C  083E               	movf	??_dato_recibido+1,w
  1543  046D  00AD               	movwf	?_sprintf+1
  1544  046E  083F               	movf	??_dato_recibido+2,w
  1545  046F  00AE               	movwf	?_sprintf+2
  1546  0470  3049               	movlw	(low (_buffer3| 0))& (0+255)
  1547  0471  120A  118A  2020  120A  118A  	fcall	_sprintf
  1548  0476                     l121:
  1549  0476  0008               	return
  1550  0477                     __end_of_dato_recibido:
  1551                           
  1552                           	psect	text7
  1553  01E6                     __ptext7:	
  1554 ;; *************** function _conversion_char *****************
  1555 ;; Defined at:
  1556 ;;		line 161 in file "LAB2.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       7       0       0       0
  1573 ;;      Totals:         0       7       0       0       0
  1574 ;;Total ram usage:        7 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 4
  1577 ;; This function calls:
  1578 ;;		_divisor
  1579 ;;		_sprintf
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _conversion_char
  1587  01E6                     _conversion_char:
  1588  01E6                     l1920:	
  1589                           ;incstack = 0
  1590                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1591                           
  1592                           
  1593                           ;LAB2.c: 162:     divisor(cont1, vol1);
  1594  01E6  3068               	movlw	(low (_vol1| 0))& (0+255)
  1595  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1596  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1597  01E9  00BD               	movwf	??_conversion_char
  1598  01EA  083D               	movf	??_conversion_char,w
  1599  01EB  00F5               	movwf	divisor@dig
  1600  01EC  0848               	movf	_cont1,w
  1601  01ED  120A  118A  229C  120A  118A  	fcall	_divisor
  1602                           
  1603                           ;LAB2.c: 163:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1604  01F2  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1605  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1606  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1607  01F5  00BD               	movwf	??_conversion_char
  1608  01F6  083D               	movf	??_conversion_char,w
  1609  01F7  00AC               	movwf	sprintf@f
  1610  01F8  086A               	movf	_vol1+2,w
  1611  01F9  00BE               	movwf	??_conversion_char+1
  1612  01FA  01BF               	clrf	??_conversion_char+2
  1613  01FB  083E               	movf	??_conversion_char+1,w
  1614  01FC  00AD               	movwf	?_sprintf+1
  1615  01FD  083F               	movf	??_conversion_char+2,w
  1616  01FE  00AE               	movwf	?_sprintf+2
  1617  01FF  0869               	movf	_vol1+1,w
  1618  0200  00C0               	movwf	??_conversion_char+3
  1619  0201  01C1               	clrf	??_conversion_char+4
  1620  0202  0840               	movf	??_conversion_char+3,w
  1621  0203  00AF               	movwf	?_sprintf+3
  1622  0204  0841               	movf	??_conversion_char+4,w
  1623  0205  00B0               	movwf	?_sprintf+4
  1624  0206  0868               	movf	_vol1,w
  1625  0207  00C2               	movwf	??_conversion_char+5
  1626  0208  01C3               	clrf	??_conversion_char+6
  1627  0209  0842               	movf	??_conversion_char+5,w
  1628  020A  00B1               	movwf	?_sprintf+5
  1629  020B  0843               	movf	??_conversion_char+6,w
  1630  020C  00B2               	movwf	?_sprintf+6
  1631  020D  305D               	movlw	(low (_buffer1| 0))& (0+255)
  1632  020E  120A  118A  2020  120A  118A  	fcall	_sprintf
  1633                           
  1634                           ;LAB2.c: 165:     divisor(cont2, vol2);
  1635  0213  3067               	movlw	(low (_vol2| 0))& (0+255)
  1636  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0216  00BD               	movwf	??_conversion_char
  1639  0217  083D               	movf	??_conversion_char,w
  1640  0218  00F5               	movwf	divisor@dig
  1641  0219  0847               	movf	_cont2,w
  1642  021A  120A  118A  229C  120A  118A  	fcall	_divisor
  1643                           
  1644                           ;LAB2.c: 166:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1645  021F  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1646  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0222  00BD               	movwf	??_conversion_char
  1649  0223  083D               	movf	??_conversion_char,w
  1650  0224  00AC               	movwf	sprintf@f
  1651  0225  0869               	movf	_vol2+2,w
  1652  0226  00BE               	movwf	??_conversion_char+1
  1653  0227  01BF               	clrf	??_conversion_char+2
  1654  0228  083E               	movf	??_conversion_char+1,w
  1655  0229  00AD               	movwf	?_sprintf+1
  1656  022A  083F               	movf	??_conversion_char+2,w
  1657  022B  00AE               	movwf	?_sprintf+2
  1658  022C  0868               	movf	_vol2+1,w
  1659  022D  00C0               	movwf	??_conversion_char+3
  1660  022E  01C1               	clrf	??_conversion_char+4
  1661  022F  0840               	movf	??_conversion_char+3,w
  1662  0230  00AF               	movwf	?_sprintf+3
  1663  0231  0841               	movf	??_conversion_char+4,w
  1664  0232  00B0               	movwf	?_sprintf+4
  1665  0233  0867               	movf	_vol2,w
  1666  0234  00C2               	movwf	??_conversion_char+5
  1667  0235  01C3               	clrf	??_conversion_char+6
  1668  0236  0842               	movf	??_conversion_char+5,w
  1669  0237  00B1               	movwf	?_sprintf+5
  1670  0238  0843               	movf	??_conversion_char+6,w
  1671  0239  00B2               	movwf	?_sprintf+6
  1672  023A  3053               	movlw	(low (_buffer2| 0))& (0+255)
  1673  023B  120A  118A  2020  120A  118A  	fcall	_sprintf
  1674  0240                     l111:
  1675  0240  0008               	return
  1676  0241                     __end_of_conversion_char:
  1677                           
  1678                           	psect	text8
  1679  0020                     __ptext8:	
  1680 ;; *************** function _sprintf *****************
  1681 ;; Defined at:
  1682 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  sp              1    wreg     PTR unsigned char 
  1685 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1686 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1687 ;;		 -> STR_4(3), STR_3(8), STR_2(8), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1690 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1691 ;;  tmpval          4    0        struct .
  1692 ;;  val             2   25[BANK0 ] unsigned int 
  1693 ;;  cp              2    0        PTR const unsigned char 
  1694 ;;  len             2    0        unsigned int 
  1695 ;;  c               1   28[BANK0 ] unsigned char 
  1696 ;;  prec            1   24[BANK0 ] char 
  1697 ;;  flag            1   23[BANK0 ] unsigned char 
  1698 ;;  ap              1   22[BANK0 ] PTR void [1]
  1699 ;;		 -> ?_sprintf(2), 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2   12[BANK0 ] int 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       7       0       0       0
  1710 ;;      Locals:         0       7       0       0       0
  1711 ;;      Temps:          0       3       0       0       0
  1712 ;;      Totals:         0      17       0       0       0
  1713 ;;Total ram usage:       17 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 3
  1716 ;; This function calls:
  1717 ;;		___lwdiv
  1718 ;;		___lwmod
  1719 ;; This function is called by:
  1720 ;;		_conversion_char
  1721 ;;		_dato_recibido
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _sprintf
  1727  0020                     _sprintf:
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1731                           ;sprintf@sp stored from wreg
  1732  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0022  00BB               	movwf	sprintf@sp
  1735  0023                     l1778:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1738  0023  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1739  0024  00B3               	movwf	??_sprintf
  1740  0025  0833               	movf	??_sprintf,w
  1741  0026  00B6               	movwf	sprintf@ap
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1744  0027  28F3               	goto	l1830
  1745  0028                     l1780:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1748  0028  3025               	movlw	37
  1749  0029  063C               	xorwf	sprintf@c,w
  1750  002A  1903               	btfsc	3,2
  1751  002B  282D               	goto	u1321
  1752  002C  282E               	goto	u1320
  1753  002D                     u1321:
  1754  002D  283A               	goto	l1786
  1755  002E                     u1320:
  1756  002E                     l1782:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1759  002E  083C               	movf	sprintf@c,w
  1760  002F  00B3               	movwf	??_sprintf
  1761  0030  083B               	movf	sprintf@sp,w
  1762  0031  0084               	movwf	4
  1763  0032  0833               	movf	??_sprintf,w
  1764  0033  1383               	bcf	3,7	;select IRP bank0
  1765  0034  0080               	movwf	0
  1766  0035                     l1784:
  1767  0035  3001               	movlw	1
  1768  0036  00B3               	movwf	??_sprintf
  1769  0037  0833               	movf	??_sprintf,w
  1770  0038  07BB               	addwf	sprintf@sp,f
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1773  0039  28F3               	goto	l1830
  1774  003A                     l1786:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1777  003A  01B7               	clrf	sprintf@flag
  1778  003B                     l1790:	
  1779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1780                           
  1781  003B  3001               	movlw	1
  1782  003C  07AC               	addwf	sprintf@f,f
  1783  003D  30FF               	movlw	-1
  1784  003E  072C               	addwf	sprintf@f,w
  1785  003F  0084               	movwf	4
  1786  0040  120A  118A  23D4  120A  118A  	fcall	stringdir
  1787  0045  00BC               	movwf	sprintf@c
  1788  0046  00B3               	movwf	??_sprintf
  1789  0047  01B4               	clrf	??_sprintf+1
  1790                           
  1791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 1, Range of values is 0 to 0
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte            4     3 (average)
  1797                           ; direct_byte           11     8 (fixed)
  1798                           ; jumptable            260     6 (fixed)
  1799                           ;	Chosen strategy is simple_byte
  1800  0048  0834               	movf	??_sprintf+1,w
  1801  0049  3A00               	xorlw	0	; case 0
  1802  004A  1903               	skipnz
  1803  004B  284D               	goto	l1970
  1804  004C  28F3               	goto	l1830
  1805  004D                     l1970:
  1806                           
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 3, Range of values is 0 to 105
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte           10     6 (average)
  1812                           ; jumptable            260     6 (fixed)
  1813                           ;	Chosen strategy is simple_byte
  1814  004D  0833               	movf	??_sprintf,w
  1815  004E  3A00               	xorlw	0	; case 0
  1816  004F  1903               	skipnz
  1817  0050  2905               	goto	l1832
  1818  0051  3A64               	xorlw	100	; case 100
  1819  0052  1903               	skipnz
  1820  0053  2858               	goto	l1792
  1821  0054  3A0D               	xorlw	13	; case 105
  1822  0055  1903               	skipnz
  1823  0056  2858               	goto	l1792
  1824  0057  28F3               	goto	l1830
  1825  0058                     l1792:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1828  0058  0836               	movf	sprintf@ap,w
  1829  0059  0084               	movwf	4
  1830  005A  1383               	bcf	3,7	;select IRP bank0
  1831  005B  0800               	movf	0,w
  1832  005C  00B9               	movwf	sprintf@val
  1833  005D  0A84               	incf	4,f
  1834  005E  0800               	movf	0,w
  1835  005F  00BA               	movwf	sprintf@val+1
  1836  0060                     l1794:
  1837  0060  3002               	movlw	2
  1838  0061  00B3               	movwf	??_sprintf
  1839  0062  0833               	movf	??_sprintf,w
  1840  0063  07B6               	addwf	sprintf@ap,f
  1841  0064                     l1796:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1844  0064  1FBA               	btfss	sprintf@val+1,7
  1845  0065  2867               	goto	u1331
  1846  0066  2868               	goto	u1330
  1847  0067                     u1331:
  1848  0067  2871               	goto	l1802
  1849  0068                     u1330:
  1850  0068                     l1798:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1853  0068  3003               	movlw	3
  1854  0069  00B3               	movwf	??_sprintf
  1855  006A  0833               	movf	??_sprintf,w
  1856  006B  04B7               	iorwf	sprintf@flag,f
  1857  006C                     l1800:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1860  006C  09B9               	comf	sprintf@val,f
  1861  006D  09BA               	comf	sprintf@val+1,f
  1862  006E  0AB9               	incf	sprintf@val,f
  1863  006F  1903               	skipnz
  1864  0070  0ABA               	incf	sprintf@val+1,f
  1865  0071                     l1802:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1868  0071  01BC               	clrf	sprintf@c
  1869  0072  0ABC               	incf	sprintf@c,f
  1870  0073                     l1808:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1873  0073  083C               	movf	sprintf@c,w
  1874  0074  00B3               	movwf	??_sprintf
  1875  0075  0733               	addwf	??_sprintf,w
  1876  0076  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1877  0077  0084               	movwf	4
  1878  0078  120A  118A  23D4  120A  118A  	fcall	stringdir
  1879  007D  00B4               	movwf	??_sprintf+1
  1880  007E  120A  118A  23D4  120A  118A  	fcall	stringdir
  1881  0083  00B5               	movwf	??_sprintf+2
  1882  0084  0835               	movf	??_sprintf+2,w
  1883  0085  023A               	subwf	sprintf@val+1,w
  1884  0086  1D03               	skipz
  1885  0087  288A               	goto	u1345
  1886  0088  0834               	movf	??_sprintf+1,w
  1887  0089  0239               	subwf	sprintf@val,w
  1888  008A                     u1345:
  1889  008A  1803               	skipnc
  1890  008B  288D               	goto	u1341
  1891  008C  288E               	goto	u1340
  1892  008D                     u1341:
  1893  008D  288F               	goto	l1812
  1894  008E                     u1340:
  1895  008E  2899               	goto	l1814
  1896  008F                     l1812:
  1897  008F  3001               	movlw	1
  1898  0090  00B3               	movwf	??_sprintf
  1899  0091  0833               	movf	??_sprintf,w
  1900  0092  07BC               	addwf	sprintf@c,f
  1901  0093  3005               	movlw	5
  1902  0094  063C               	xorwf	sprintf@c,w
  1903  0095  1D03               	btfss	3,2
  1904  0096  2898               	goto	u1351
  1905  0097  2899               	goto	u1350
  1906  0098                     u1351:
  1907  0098  2873               	goto	l1808
  1908  0099                     u1350:
  1909  0099                     l1814:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1912  0099  0837               	movf	sprintf@flag,w
  1913  009A  3903               	andlw	3
  1914  009B  1903               	btfsc	3,2
  1915  009C  289E               	goto	u1361
  1916  009D  289F               	goto	u1360
  1917  009E                     u1361:
  1918  009E  28AA               	goto	l1820
  1919  009F                     u1360:
  1920  009F                     l1816:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1923  009F  302D               	movlw	45
  1924  00A0  00B3               	movwf	??_sprintf
  1925  00A1  083B               	movf	sprintf@sp,w
  1926  00A2  0084               	movwf	4
  1927  00A3  0833               	movf	??_sprintf,w
  1928  00A4  1383               	bcf	3,7	;select IRP bank0
  1929  00A5  0080               	movwf	0
  1930  00A6                     l1818:
  1931  00A6  3001               	movlw	1
  1932  00A7  00B3               	movwf	??_sprintf
  1933  00A8  0833               	movf	??_sprintf,w
  1934  00A9  07BB               	addwf	sprintf@sp,f
  1935  00AA                     l1820:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1938  00AA  083C               	movf	sprintf@c,w
  1939  00AB  00B3               	movwf	??_sprintf
  1940  00AC  0833               	movf	??_sprintf,w
  1941  00AD  00B8               	movwf	sprintf@prec
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1944  00AE  28EA               	goto	l1828
  1945  00AF                     l1822:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1948  00AF  300A               	movlw	10
  1949  00B0  00A7               	movwf	___lwmod@divisor
  1950  00B1  3000               	movlw	0
  1951  00B2  00A8               	movwf	___lwmod@divisor+1
  1952  00B3  0838               	movf	sprintf@prec,w
  1953  00B4  00B3               	movwf	??_sprintf
  1954  00B5  0733               	addwf	??_sprintf,w
  1955  00B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1956  00B7  0084               	movwf	4
  1957  00B8  120A  118A  23D4  120A  118A  	fcall	stringdir
  1958  00BD  00A0               	movwf	___lwdiv@divisor
  1959  00BE  120A  118A  23D4  120A  118A  	fcall	stringdir
  1960  00C3  00A1               	movwf	___lwdiv@divisor+1
  1961  00C4  083A               	movf	sprintf@val+1,w
  1962  00C5  00A3               	movwf	___lwdiv@dividend+1
  1963  00C6  0839               	movf	sprintf@val,w
  1964  00C7  00A2               	movwf	___lwdiv@dividend
  1965  00C8  120A  118A  2348  120A  118A  	fcall	___lwdiv
  1966  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1967  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1968  00CF  0821               	movf	?___lwdiv+1,w
  1969  00D0  00AA               	movwf	___lwmod@dividend+1
  1970  00D1  0820               	movf	?___lwdiv,w
  1971  00D2  00A9               	movwf	___lwmod@dividend
  1972  00D3  120A  118A  238E  120A  118A  	fcall	___lwmod
  1973  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1974  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1975  00DA  0827               	movf	?___lwmod,w
  1976  00DB  3E30               	addlw	48
  1977  00DC  00B4               	movwf	??_sprintf+1
  1978  00DD  0834               	movf	??_sprintf+1,w
  1979  00DE  00BC               	movwf	sprintf@c
  1980  00DF                     l1824:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1983  00DF  083C               	movf	sprintf@c,w
  1984  00E0  00B3               	movwf	??_sprintf
  1985  00E1  083B               	movf	sprintf@sp,w
  1986  00E2  0084               	movwf	4
  1987  00E3  0833               	movf	??_sprintf,w
  1988  00E4  1383               	bcf	3,7	;select IRP bank0
  1989  00E5  0080               	movwf	0
  1990  00E6                     l1826:
  1991  00E6  3001               	movlw	1
  1992  00E7  00B3               	movwf	??_sprintf
  1993  00E8  0833               	movf	??_sprintf,w
  1994  00E9  07BB               	addwf	sprintf@sp,f
  1995  00EA                     l1828:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1998  00EA  30FF               	movlw	255
  1999  00EB  00B3               	movwf	??_sprintf
  2000  00EC  0833               	movf	??_sprintf,w
  2001  00ED  07B8               	addwf	sprintf@prec,f
  2002  00EE  0A38               	incf	sprintf@prec,w
  2003  00EF  1D03               	btfss	3,2
  2004  00F0  28F2               	goto	u1371
  2005  00F1  28F3               	goto	u1370
  2006  00F2                     u1371:
  2007  00F2  28AF               	goto	l1822
  2008  00F3                     u1370:
  2009  00F3                     l1830:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2012  00F3  3001               	movlw	1
  2013  00F4  07AC               	addwf	sprintf@f,f
  2014  00F5  30FF               	movlw	-1
  2015  00F6  072C               	addwf	sprintf@f,w
  2016  00F7  0084               	movwf	4
  2017  00F8  120A  118A  23D4  120A  118A  	fcall	stringdir
  2018  00FD  00B3               	movwf	??_sprintf
  2019  00FE  0833               	movf	??_sprintf,w
  2020  00FF  00BC               	movwf	sprintf@c
  2021  0100  083C               	movf	sprintf@c,w
  2022  0101  1D03               	btfss	3,2
  2023  0102  2904               	goto	u1381
  2024  0103  2905               	goto	u1380
  2025  0104                     u1381:
  2026  0104  2828               	goto	l1780
  2027  0105                     u1380:
  2028  0105                     l1832:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2031  0105  083B               	movf	sprintf@sp,w
  2032  0106  0084               	movwf	4
  2033  0107  1383               	bcf	3,7	;select IRP bank0
  2034  0108  0180               	clrf	0
  2035  0109                     l306:
  2036  0109  0008               	return
  2037  010A                     __end_of_sprintf:
  2038                           
  2039                           	psect	text9
  2040  038E                     __ptext9:	
  2041 ;; *************** function ___lwmod *****************
  2042 ;; Defined at:
  2043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  divisor         2    7[BANK0 ] unsigned int 
  2046 ;;  dividend        2    9[BANK0 ] unsigned int 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  counter         1   11[BANK0 ] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    7[BANK0 ] unsigned int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         0       4       0       0       0
  2059 ;;      Locals:         0       1       0       0       0
  2060 ;;      Temps:          1       0       0       0       0
  2061 ;;      Totals:         1       5       0       0       0
  2062 ;;Total ram usage:        6 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_sprintf
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function ___lwmod
  2074  038E                     ___lwmod:
  2075  038E                     l1340:	
  2076                           ;incstack = 0
  2077                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2078                           
  2079  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2080  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0390  0827               	movf	___lwmod@divisor,w
  2082  0391  0428               	iorwf	___lwmod@divisor+1,w
  2083  0392  1903               	btfsc	3,2
  2084  0393  2B95               	goto	u791
  2085  0394  2B96               	goto	u790
  2086  0395                     u791:
  2087  0395  2BC5               	goto	l1358
  2088  0396                     u790:
  2089  0396                     l1342:
  2090  0396  01AB               	clrf	___lwmod@counter
  2091  0397  0AAB               	incf	___lwmod@counter,f
  2092  0398  2BA4               	goto	l1348
  2093  0399                     l1344:
  2094  0399  3001               	movlw	1
  2095  039A                     u805:
  2096  039A  1003               	clrc
  2097  039B  0DA7               	rlf	___lwmod@divisor,f
  2098  039C  0DA8               	rlf	___lwmod@divisor+1,f
  2099  039D  3EFF               	addlw	-1
  2100  039E  1D03               	skipz
  2101  039F  2B9A               	goto	u805
  2102  03A0                     l1346:
  2103  03A0  3001               	movlw	1
  2104  03A1  00F5               	movwf	??___lwmod
  2105  03A2  0875               	movf	??___lwmod,w
  2106  03A3  07AB               	addwf	___lwmod@counter,f
  2107  03A4                     l1348:
  2108  03A4  1FA8               	btfss	___lwmod@divisor+1,7
  2109  03A5  2BA7               	goto	u811
  2110  03A6  2BA8               	goto	u810
  2111  03A7                     u811:
  2112  03A7  2B99               	goto	l1344
  2113  03A8                     u810:
  2114  03A8                     l1350:
  2115  03A8  0828               	movf	___lwmod@divisor+1,w
  2116  03A9  022A               	subwf	___lwmod@dividend+1,w
  2117  03AA  1D03               	skipz
  2118  03AB  2BAE               	goto	u825
  2119  03AC  0827               	movf	___lwmod@divisor,w
  2120  03AD  0229               	subwf	___lwmod@dividend,w
  2121  03AE                     u825:
  2122  03AE  1C03               	skipc
  2123  03AF  2BB1               	goto	u821
  2124  03B0  2BB2               	goto	u820
  2125  03B1                     u821:
  2126  03B1  2BB8               	goto	l1354
  2127  03B2                     u820:
  2128  03B2                     l1352:
  2129  03B2  0827               	movf	___lwmod@divisor,w
  2130  03B3  02A9               	subwf	___lwmod@dividend,f
  2131  03B4  0828               	movf	___lwmod@divisor+1,w
  2132  03B5  1C03               	skipc
  2133  03B6  03AA               	decf	___lwmod@dividend+1,f
  2134  03B7  02AA               	subwf	___lwmod@dividend+1,f
  2135  03B8                     l1354:
  2136  03B8  3001               	movlw	1
  2137  03B9                     u835:
  2138  03B9  1003               	clrc
  2139  03BA  0CA8               	rrf	___lwmod@divisor+1,f
  2140  03BB  0CA7               	rrf	___lwmod@divisor,f
  2141  03BC  3EFF               	addlw	-1
  2142  03BD  1D03               	skipz
  2143  03BE  2BB9               	goto	u835
  2144  03BF                     l1356:
  2145  03BF  3001               	movlw	1
  2146  03C0  02AB               	subwf	___lwmod@counter,f
  2147  03C1  1D03               	btfss	3,2
  2148  03C2  2BC4               	goto	u841
  2149  03C3  2BC5               	goto	u840
  2150  03C4                     u841:
  2151  03C4  2BA8               	goto	l1350
  2152  03C5                     u840:
  2153  03C5                     l1358:
  2154  03C5  082A               	movf	___lwmod@dividend+1,w
  2155  03C6  00A8               	movwf	?___lwmod+1
  2156  03C7  0829               	movf	___lwmod@dividend,w
  2157  03C8  00A7               	movwf	?___lwmod
  2158  03C9                     l592:
  2159  03C9  0008               	return
  2160  03CA                     __end_of___lwmod:
  2161                           
  2162                           	psect	text10
  2163  0348                     __ptext10:	
  2164 ;; *************** function ___lwdiv *****************
  2165 ;; Defined at:
  2166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  divisor         2    0[BANK0 ] unsigned int 
  2169 ;;  dividend        2    2[BANK0 ] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  quotient        2    5[BANK0 ] unsigned int 
  2172 ;;  counter         1    4[BANK0 ] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  2    0[BANK0 ] unsigned int 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2182 ;;      Params:         0       4       0       0       0
  2183 ;;      Locals:         0       3       0       0       0
  2184 ;;      Temps:          1       0       0       0       0
  2185 ;;      Totals:         1       7       0       0       0
  2186 ;;Total ram usage:        8 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 2
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_sprintf
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function ___lwdiv
  2198  0348                     ___lwdiv:
  2199  0348                     l1718:	
  2200                           ;incstack = 0
  2201                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2202                           
  2203  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2205  034A  01A5               	clrf	___lwdiv@quotient
  2206  034B  01A6               	clrf	___lwdiv@quotient+1
  2207  034C                     l1720:
  2208  034C  0820               	movf	___lwdiv@divisor,w
  2209  034D  0421               	iorwf	___lwdiv@divisor+1,w
  2210  034E  1903               	btfsc	3,2
  2211  034F  2B51               	goto	u1241
  2212  0350  2B52               	goto	u1240
  2213  0351                     u1241:
  2214  0351  2B89               	goto	l1740
  2215  0352                     u1240:
  2216  0352                     l1722:
  2217  0352  01A4               	clrf	___lwdiv@counter
  2218  0353  0AA4               	incf	___lwdiv@counter,f
  2219  0354  2B60               	goto	l1728
  2220  0355                     l1724:
  2221  0355  3001               	movlw	1
  2222  0356                     u1255:
  2223  0356  1003               	clrc
  2224  0357  0DA0               	rlf	___lwdiv@divisor,f
  2225  0358  0DA1               	rlf	___lwdiv@divisor+1,f
  2226  0359  3EFF               	addlw	-1
  2227  035A  1D03               	skipz
  2228  035B  2B56               	goto	u1255
  2229  035C                     l1726:
  2230  035C  3001               	movlw	1
  2231  035D  00F4               	movwf	??___lwdiv
  2232  035E  0874               	movf	??___lwdiv,w
  2233  035F  07A4               	addwf	___lwdiv@counter,f
  2234  0360                     l1728:
  2235  0360  1FA1               	btfss	___lwdiv@divisor+1,7
  2236  0361  2B63               	goto	u1261
  2237  0362  2B64               	goto	u1260
  2238  0363                     u1261:
  2239  0363  2B55               	goto	l1724
  2240  0364                     u1260:
  2241  0364                     l1730:
  2242  0364  3001               	movlw	1
  2243  0365                     u1275:
  2244  0365  1003               	clrc
  2245  0366  0DA5               	rlf	___lwdiv@quotient,f
  2246  0367  0DA6               	rlf	___lwdiv@quotient+1,f
  2247  0368  3EFF               	addlw	-1
  2248  0369  1D03               	skipz
  2249  036A  2B65               	goto	u1275
  2250  036B  0821               	movf	___lwdiv@divisor+1,w
  2251  036C  0223               	subwf	___lwdiv@dividend+1,w
  2252  036D  1D03               	skipz
  2253  036E  2B71               	goto	u1285
  2254  036F  0820               	movf	___lwdiv@divisor,w
  2255  0370  0222               	subwf	___lwdiv@dividend,w
  2256  0371                     u1285:
  2257  0371  1C03               	skipc
  2258  0372  2B74               	goto	u1281
  2259  0373  2B75               	goto	u1280
  2260  0374                     u1281:
  2261  0374  2B7C               	goto	l1736
  2262  0375                     u1280:
  2263  0375                     l1732:
  2264  0375  0820               	movf	___lwdiv@divisor,w
  2265  0376  02A2               	subwf	___lwdiv@dividend,f
  2266  0377  0821               	movf	___lwdiv@divisor+1,w
  2267  0378  1C03               	skipc
  2268  0379  03A3               	decf	___lwdiv@dividend+1,f
  2269  037A  02A3               	subwf	___lwdiv@dividend+1,f
  2270  037B                     l1734:
  2271  037B  1425               	bsf	___lwdiv@quotient,0
  2272  037C                     l1736:
  2273  037C  3001               	movlw	1
  2274  037D                     u1295:
  2275  037D  1003               	clrc
  2276  037E  0CA1               	rrf	___lwdiv@divisor+1,f
  2277  037F  0CA0               	rrf	___lwdiv@divisor,f
  2278  0380  3EFF               	addlw	-1
  2279  0381  1D03               	skipz
  2280  0382  2B7D               	goto	u1295
  2281  0383                     l1738:
  2282  0383  3001               	movlw	1
  2283  0384  02A4               	subwf	___lwdiv@counter,f
  2284  0385  1D03               	btfss	3,2
  2285  0386  2B88               	goto	u1301
  2286  0387  2B89               	goto	u1300
  2287  0388                     u1301:
  2288  0388  2B64               	goto	l1730
  2289  0389                     u1300:
  2290  0389                     l1740:
  2291  0389  0826               	movf	___lwdiv@quotient+1,w
  2292  038A  00A1               	movwf	?___lwdiv+1
  2293  038B  0825               	movf	___lwdiv@quotient,w
  2294  038C  00A0               	movwf	?___lwdiv
  2295  038D                     l582:
  2296  038D  0008               	return
  2297  038E                     __end_of___lwdiv:
  2298                           
  2299                           	psect	text11
  2300  029C                     __ptext11:	
  2301 ;; *************** function _divisor *****************
  2302 ;; Defined at:
  2303 ;;		line 169 in file "LAB2.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  a               1    wreg     unsigned char 
  2306 ;;  dig             1    5[COMMON] PTR unsigned char 
  2307 ;;		 -> vol2(1), vol1(1), 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  a               1   10[BANK0 ] unsigned char 
  2310 ;;  i               2   13[BANK0 ] int 
  2311 ;;  b               2   11[BANK0 ] int 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         1       0       0       0       0
  2322 ;;      Locals:         0       5       0       0       0
  2323 ;;      Temps:          0       2       0       0       0
  2324 ;;      Totals:         1       7       0       0       0
  2325 ;;Total ram usage:        8 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 3
  2328 ;; This function calls:
  2329 ;;		___awdiv
  2330 ;;		___awmod
  2331 ;; This function is called by:
  2332 ;;		_conversion_char
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _divisor
  2338  029C                     _divisor:
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2342                           ;divisor@a stored from wreg
  2343  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2344  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2345  029E  00AA               	movwf	divisor@a
  2346  029F                     l1764:
  2347                           
  2348                           ;LAB2.c: 170:     int b = 2*a;
  2349  029F  082A               	movf	divisor@a,w
  2350  02A0  00A8               	movwf	??_divisor
  2351  02A1  01A9               	clrf	??_divisor+1
  2352  02A2  1003               	clrc
  2353  02A3  0D28               	rlf	??_divisor,w
  2354  02A4  00AB               	movwf	divisor@b
  2355  02A5  0D29               	rlf	??_divisor+1,w
  2356  02A6  00AC               	movwf	divisor@b+1
  2357  02A7                     l1766:
  2358                           
  2359                           ;LAB2.c: 171:     for(int i = 0; i<3 ; i++){
  2360  02A7  01AD               	clrf	divisor@i
  2361  02A8  01AE               	clrf	divisor@i+1
  2362  02A9                     l1772:
  2363                           
  2364                           ;LAB2.c: 172:         dig[i] = b % 10;
  2365  02A9  300A               	movlw	10
  2366  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2367  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2368  02AC  00A0               	movwf	___awmod@divisor
  2369  02AD  3000               	movlw	0
  2370  02AE  00A1               	movwf	___awmod@divisor+1
  2371  02AF  082C               	movf	divisor@b+1,w
  2372  02B0  00A3               	movwf	___awmod@dividend+1
  2373  02B1  082B               	movf	divisor@b,w
  2374  02B2  00A2               	movwf	___awmod@dividend
  2375  02B3  120A  118A  2241  120A  118A  	fcall	___awmod
  2376  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2377  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2378  02BA  0820               	movf	?___awmod,w
  2379  02BB  00A8               	movwf	??_divisor
  2380  02BC  082D               	movf	divisor@i,w
  2381  02BD  0775               	addwf	divisor@dig,w
  2382  02BE  00A9               	movwf	??_divisor+1
  2383  02BF  0829               	movf	??_divisor+1,w
  2384  02C0  0084               	movwf	4
  2385  02C1  0828               	movf	??_divisor,w
  2386  02C2  1383               	bcf	3,7	;select IRP bank0
  2387  02C3  0080               	movwf	0
  2388                           
  2389                           ;LAB2.c: 173:         b = (b - dig[i])/10;
  2390  02C4  300A               	movlw	10
  2391  02C5  00A0               	movwf	___awdiv@divisor
  2392  02C6  3000               	movlw	0
  2393  02C7  00A1               	movwf	___awdiv@divisor+1
  2394  02C8  082D               	movf	divisor@i,w
  2395  02C9  0775               	addwf	divisor@dig,w
  2396  02CA  00A8               	movwf	??_divisor
  2397  02CB  0828               	movf	??_divisor,w
  2398  02CC  0084               	movwf	4
  2399  02CD  0800               	movf	0,w
  2400  02CE  022B               	subwf	divisor@b,w
  2401  02CF  00A2               	movwf	___awdiv@dividend
  2402  02D0  082C               	movf	divisor@b+1,w
  2403  02D1  1C03               	skipc
  2404  02D2  032C               	decf	divisor@b+1,w
  2405  02D3  00A3               	movwf	___awdiv@dividend+1
  2406  02D4  120A  118A  217D  120A  118A  	fcall	___awdiv
  2407  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2408  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2409  02DB  0821               	movf	?___awdiv+1,w
  2410  02DC  00AC               	movwf	divisor@b+1
  2411  02DD  0820               	movf	?___awdiv,w
  2412  02DE  00AB               	movwf	divisor@b
  2413  02DF                     l1774:
  2414                           
  2415                           ;LAB2.c: 174:     }
  2416  02DF  3001               	movlw	1
  2417  02E0  07AD               	addwf	divisor@i,f
  2418  02E1  1803               	skipnc
  2419  02E2  0AAE               	incf	divisor@i+1,f
  2420  02E3  3000               	movlw	0
  2421  02E4  07AE               	addwf	divisor@i+1,f
  2422  02E5                     l1776:
  2423  02E5  082E               	movf	divisor@i+1,w
  2424  02E6  3A80               	xorlw	128
  2425  02E7  00FF               	movwf	btemp+1
  2426  02E8  3080               	movlw	128
  2427  02E9  027F               	subwf	btemp+1,w
  2428  02EA  1D03               	skipz
  2429  02EB  2AEE               	goto	u1315
  2430  02EC  3003               	movlw	3
  2431  02ED  022D               	subwf	divisor@i,w
  2432  02EE                     u1315:
  2433  02EE  1C03               	skipc
  2434  02EF  2AF1               	goto	u1311
  2435  02F0  2AF2               	goto	u1310
  2436  02F1                     u1311:
  2437  02F1  2AA9               	goto	l1772
  2438  02F2                     u1310:
  2439  02F2                     l116:
  2440  02F2  0008               	return
  2441  02F3                     __end_of_divisor:
  2442                           
  2443                           	psect	text12
  2444  0241                     __ptext12:	
  2445 ;; *************** function ___awmod *****************
  2446 ;; Defined at:
  2447 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  divisor         2    0[BANK0 ] int 
  2450 ;;  dividend        2    2[BANK0 ] int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  sign            1    5[BANK0 ] unsigned char 
  2453 ;;  counter         1    4[BANK0 ] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  2    0[BANK0 ] int 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       4       0       0       0
  2464 ;;      Locals:         0       2       0       0       0
  2465 ;;      Temps:          1       0       0       0       0
  2466 ;;      Totals:         1       6       0       0       0
  2467 ;;Total ram usage:        7 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; Hardware stack levels required when called: 2
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_divisor
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function ___awmod
  2479  0241                     ___awmod:
  2480  0241                     l1680:	
  2481                           ;incstack = 0
  2482                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2483                           
  2484  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0243  01A5               	clrf	___awmod@sign
  2487  0244                     l1682:
  2488  0244  1FA3               	btfss	___awmod@dividend+1,7
  2489  0245  2A47               	goto	u1151
  2490  0246  2A48               	goto	u1150
  2491  0247                     u1151:
  2492  0247  2A4F               	goto	l1688
  2493  0248                     u1150:
  2494  0248                     l1684:
  2495  0248  09A2               	comf	___awmod@dividend,f
  2496  0249  09A3               	comf	___awmod@dividend+1,f
  2497  024A  0AA2               	incf	___awmod@dividend,f
  2498  024B  1903               	skipnz
  2499  024C  0AA3               	incf	___awmod@dividend+1,f
  2500  024D                     l1686:
  2501  024D  01A5               	clrf	___awmod@sign
  2502  024E  0AA5               	incf	___awmod@sign,f
  2503  024F                     l1688:
  2504  024F  1FA1               	btfss	___awmod@divisor+1,7
  2505  0250  2A52               	goto	u1161
  2506  0251  2A53               	goto	u1160
  2507  0252                     u1161:
  2508  0252  2A58               	goto	l1692
  2509  0253                     u1160:
  2510  0253                     l1690:
  2511  0253  09A0               	comf	___awmod@divisor,f
  2512  0254  09A1               	comf	___awmod@divisor+1,f
  2513  0255  0AA0               	incf	___awmod@divisor,f
  2514  0256  1903               	skipnz
  2515  0257  0AA1               	incf	___awmod@divisor+1,f
  2516  0258                     l1692:
  2517  0258  0820               	movf	___awmod@divisor,w
  2518  0259  0421               	iorwf	___awmod@divisor+1,w
  2519  025A  1903               	btfsc	3,2
  2520  025B  2A5D               	goto	u1171
  2521  025C  2A5E               	goto	u1170
  2522  025D                     u1171:
  2523  025D  2A8D               	goto	l1710
  2524  025E                     u1170:
  2525  025E                     l1694:
  2526  025E  01A4               	clrf	___awmod@counter
  2527  025F  0AA4               	incf	___awmod@counter,f
  2528  0260  2A6C               	goto	l1700
  2529  0261                     l1696:
  2530  0261  3001               	movlw	1
  2531  0262                     u1185:
  2532  0262  1003               	clrc
  2533  0263  0DA0               	rlf	___awmod@divisor,f
  2534  0264  0DA1               	rlf	___awmod@divisor+1,f
  2535  0265  3EFF               	addlw	-1
  2536  0266  1D03               	skipz
  2537  0267  2A62               	goto	u1185
  2538  0268                     l1698:
  2539  0268  3001               	movlw	1
  2540  0269  00F4               	movwf	??___awmod
  2541  026A  0874               	movf	??___awmod,w
  2542  026B  07A4               	addwf	___awmod@counter,f
  2543  026C                     l1700:
  2544  026C  1FA1               	btfss	___awmod@divisor+1,7
  2545  026D  2A6F               	goto	u1191
  2546  026E  2A70               	goto	u1190
  2547  026F                     u1191:
  2548  026F  2A61               	goto	l1696
  2549  0270                     u1190:
  2550  0270                     l1702:
  2551  0270  0821               	movf	___awmod@divisor+1,w
  2552  0271  0223               	subwf	___awmod@dividend+1,w
  2553  0272  1D03               	skipz
  2554  0273  2A76               	goto	u1205
  2555  0274  0820               	movf	___awmod@divisor,w
  2556  0275  0222               	subwf	___awmod@dividend,w
  2557  0276                     u1205:
  2558  0276  1C03               	skipc
  2559  0277  2A79               	goto	u1201
  2560  0278  2A7A               	goto	u1200
  2561  0279                     u1201:
  2562  0279  2A80               	goto	l1706
  2563  027A                     u1200:
  2564  027A                     l1704:
  2565  027A  0820               	movf	___awmod@divisor,w
  2566  027B  02A2               	subwf	___awmod@dividend,f
  2567  027C  0821               	movf	___awmod@divisor+1,w
  2568  027D  1C03               	skipc
  2569  027E  03A3               	decf	___awmod@dividend+1,f
  2570  027F  02A3               	subwf	___awmod@dividend+1,f
  2571  0280                     l1706:
  2572  0280  3001               	movlw	1
  2573  0281                     u1215:
  2574  0281  1003               	clrc
  2575  0282  0CA1               	rrf	___awmod@divisor+1,f
  2576  0283  0CA0               	rrf	___awmod@divisor,f
  2577  0284  3EFF               	addlw	-1
  2578  0285  1D03               	skipz
  2579  0286  2A81               	goto	u1215
  2580  0287                     l1708:
  2581  0287  3001               	movlw	1
  2582  0288  02A4               	subwf	___awmod@counter,f
  2583  0289  1D03               	btfss	3,2
  2584  028A  2A8C               	goto	u1221
  2585  028B  2A8D               	goto	u1220
  2586  028C                     u1221:
  2587  028C  2A70               	goto	l1702
  2588  028D                     u1220:
  2589  028D                     l1710:
  2590  028D  0825               	movf	___awmod@sign,w
  2591  028E  1903               	btfsc	3,2
  2592  028F  2A91               	goto	u1231
  2593  0290  2A92               	goto	u1230
  2594  0291                     u1231:
  2595  0291  2A97               	goto	l1714
  2596  0292                     u1230:
  2597  0292                     l1712:
  2598  0292  09A2               	comf	___awmod@dividend,f
  2599  0293  09A3               	comf	___awmod@dividend+1,f
  2600  0294  0AA2               	incf	___awmod@dividend,f
  2601  0295  1903               	skipnz
  2602  0296  0AA3               	incf	___awmod@dividend+1,f
  2603  0297                     l1714:
  2604  0297  0823               	movf	___awmod@dividend+1,w
  2605  0298  00A1               	movwf	?___awmod+1
  2606  0299  0822               	movf	___awmod@dividend,w
  2607  029A  00A0               	movwf	?___awmod
  2608  029B                     l476:
  2609  029B  0008               	return
  2610  029C                     __end_of___awmod:
  2611                           
  2612                           	psect	text13
  2613  017D                     __ptext13:	
  2614 ;; *************** function ___awdiv *****************
  2615 ;; Defined at:
  2616 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  divisor         2    0[BANK0 ] int 
  2619 ;;  dividend        2    2[BANK0 ] int 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  quotient        2    6[BANK0 ] int 
  2622 ;;  sign            1    5[BANK0 ] unsigned char 
  2623 ;;  counter         1    4[BANK0 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  2    0[BANK0 ] int 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       4       0       0       0
  2634 ;;      Locals:         0       4       0       0       0
  2635 ;;      Temps:          1       0       0       0       0
  2636 ;;      Totals:         1       8       0       0       0
  2637 ;;Total ram usage:        9 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 2
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_divisor
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function ___awdiv
  2649  017D                     ___awdiv:
  2650  017D                     l1636:	
  2651                           ;incstack = 0
  2652                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2653                           
  2654  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2655  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2656  017F  01A5               	clrf	___awdiv@sign
  2657  0180                     l1638:
  2658  0180  1FA1               	btfss	___awdiv@divisor+1,7
  2659  0181  2983               	goto	u1051
  2660  0182  2984               	goto	u1050
  2661  0183                     u1051:
  2662  0183  298B               	goto	l1644
  2663  0184                     u1050:
  2664  0184                     l1640:
  2665  0184  09A0               	comf	___awdiv@divisor,f
  2666  0185  09A1               	comf	___awdiv@divisor+1,f
  2667  0186  0AA0               	incf	___awdiv@divisor,f
  2668  0187  1903               	skipnz
  2669  0188  0AA1               	incf	___awdiv@divisor+1,f
  2670  0189                     l1642:
  2671  0189  01A5               	clrf	___awdiv@sign
  2672  018A  0AA5               	incf	___awdiv@sign,f
  2673  018B                     l1644:
  2674  018B  1FA3               	btfss	___awdiv@dividend+1,7
  2675  018C  298E               	goto	u1061
  2676  018D  298F               	goto	u1060
  2677  018E                     u1061:
  2678  018E  2998               	goto	l1650
  2679  018F                     u1060:
  2680  018F                     l1646:
  2681  018F  09A2               	comf	___awdiv@dividend,f
  2682  0190  09A3               	comf	___awdiv@dividend+1,f
  2683  0191  0AA2               	incf	___awdiv@dividend,f
  2684  0192  1903               	skipnz
  2685  0193  0AA3               	incf	___awdiv@dividend+1,f
  2686  0194                     l1648:
  2687  0194  3001               	movlw	1
  2688  0195  00F4               	movwf	??___awdiv
  2689  0196  0874               	movf	??___awdiv,w
  2690  0197  06A5               	xorwf	___awdiv@sign,f
  2691  0198                     l1650:
  2692  0198  01A6               	clrf	___awdiv@quotient
  2693  0199  01A7               	clrf	___awdiv@quotient+1
  2694  019A                     l1652:
  2695  019A  0820               	movf	___awdiv@divisor,w
  2696  019B  0421               	iorwf	___awdiv@divisor+1,w
  2697  019C  1903               	btfsc	3,2
  2698  019D  299F               	goto	u1071
  2699  019E  29A0               	goto	u1070
  2700  019F                     u1071:
  2701  019F  29D7               	goto	l1672
  2702  01A0                     u1070:
  2703  01A0                     l1654:
  2704  01A0  01A4               	clrf	___awdiv@counter
  2705  01A1  0AA4               	incf	___awdiv@counter,f
  2706  01A2  29AE               	goto	l1660
  2707  01A3                     l1656:
  2708  01A3  3001               	movlw	1
  2709  01A4                     u1085:
  2710  01A4  1003               	clrc
  2711  01A5  0DA0               	rlf	___awdiv@divisor,f
  2712  01A6  0DA1               	rlf	___awdiv@divisor+1,f
  2713  01A7  3EFF               	addlw	-1
  2714  01A8  1D03               	skipz
  2715  01A9  29A4               	goto	u1085
  2716  01AA                     l1658:
  2717  01AA  3001               	movlw	1
  2718  01AB  00F4               	movwf	??___awdiv
  2719  01AC  0874               	movf	??___awdiv,w
  2720  01AD  07A4               	addwf	___awdiv@counter,f
  2721  01AE                     l1660:
  2722  01AE  1FA1               	btfss	___awdiv@divisor+1,7
  2723  01AF  29B1               	goto	u1091
  2724  01B0  29B2               	goto	u1090
  2725  01B1                     u1091:
  2726  01B1  29A3               	goto	l1656
  2727  01B2                     u1090:
  2728  01B2                     l1662:
  2729  01B2  3001               	movlw	1
  2730  01B3                     u1105:
  2731  01B3  1003               	clrc
  2732  01B4  0DA6               	rlf	___awdiv@quotient,f
  2733  01B5  0DA7               	rlf	___awdiv@quotient+1,f
  2734  01B6  3EFF               	addlw	-1
  2735  01B7  1D03               	skipz
  2736  01B8  29B3               	goto	u1105
  2737  01B9  0821               	movf	___awdiv@divisor+1,w
  2738  01BA  0223               	subwf	___awdiv@dividend+1,w
  2739  01BB  1D03               	skipz
  2740  01BC  29BF               	goto	u1115
  2741  01BD  0820               	movf	___awdiv@divisor,w
  2742  01BE  0222               	subwf	___awdiv@dividend,w
  2743  01BF                     u1115:
  2744  01BF  1C03               	skipc
  2745  01C0  29C2               	goto	u1111
  2746  01C1  29C3               	goto	u1110
  2747  01C2                     u1111:
  2748  01C2  29CA               	goto	l1668
  2749  01C3                     u1110:
  2750  01C3                     l1664:
  2751  01C3  0820               	movf	___awdiv@divisor,w
  2752  01C4  02A2               	subwf	___awdiv@dividend,f
  2753  01C5  0821               	movf	___awdiv@divisor+1,w
  2754  01C6  1C03               	skipc
  2755  01C7  03A3               	decf	___awdiv@dividend+1,f
  2756  01C8  02A3               	subwf	___awdiv@dividend+1,f
  2757  01C9                     l1666:
  2758  01C9  1426               	bsf	___awdiv@quotient,0
  2759  01CA                     l1668:
  2760  01CA  3001               	movlw	1
  2761  01CB                     u1125:
  2762  01CB  1003               	clrc
  2763  01CC  0CA1               	rrf	___awdiv@divisor+1,f
  2764  01CD  0CA0               	rrf	___awdiv@divisor,f
  2765  01CE  3EFF               	addlw	-1
  2766  01CF  1D03               	skipz
  2767  01D0  29CB               	goto	u1125
  2768  01D1                     l1670:
  2769  01D1  3001               	movlw	1
  2770  01D2  02A4               	subwf	___awdiv@counter,f
  2771  01D3  1D03               	btfss	3,2
  2772  01D4  29D6               	goto	u1131
  2773  01D5  29D7               	goto	u1130
  2774  01D6                     u1131:
  2775  01D6  29B2               	goto	l1662
  2776  01D7                     u1130:
  2777  01D7                     l1672:
  2778  01D7  0825               	movf	___awdiv@sign,w
  2779  01D8  1903               	btfsc	3,2
  2780  01D9  29DB               	goto	u1141
  2781  01DA  29DC               	goto	u1140
  2782  01DB                     u1141:
  2783  01DB  29E1               	goto	l1676
  2784  01DC                     u1140:
  2785  01DC                     l1674:
  2786  01DC  09A6               	comf	___awdiv@quotient,f
  2787  01DD  09A7               	comf	___awdiv@quotient+1,f
  2788  01DE  0AA6               	incf	___awdiv@quotient,f
  2789  01DF  1903               	skipnz
  2790  01E0  0AA7               	incf	___awdiv@quotient+1,f
  2791  01E1                     l1676:
  2792  01E1  0827               	movf	___awdiv@quotient+1,w
  2793  01E2  00A1               	movwf	?___awdiv+1
  2794  01E3  0826               	movf	___awdiv@quotient,w
  2795  01E4  00A0               	movwf	?___awdiv
  2796  01E5                     l463:
  2797  01E5  0008               	return
  2798  01E6                     __end_of___awdiv:
  2799                           
  2800                           	psect	text14
  2801  03FD                     __ptext14:	
  2802 ;; *************** function _conversion *****************
  2803 ;; Defined at:
  2804 ;;		line 21 in file "ADC.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          1       0       0       0       0
  2821 ;;      Totals:         1       0       0       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 2
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _conversion
  2834  03FD                     _conversion:
  2835  03FD                     l1530:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _conversion: [wreg+status,2+status,0]
  2838                           
  2839                           
  2840                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  2841  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2842  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2843  03FF  189F               	btfsc	31,1	;volatile
  2844  0400  2C02               	goto	u951
  2845  0401  2C03               	goto	u950
  2846  0402                     u951:
  2847  0402  2C28               	goto	l196
  2848  0403                     u950:
  2849  0403                     l1532:
  2850                           
  2851                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  2852  0403  0C1F               	rrf	31,w	;volatile
  2853  0404  00F4               	movwf	??_conversion
  2854  0405  0C74               	rrf	??_conversion,w
  2855  0406  390F               	andlw	15
  2856  0407  3A01               	xorlw	1
  2857  0408  1D03               	skipz
  2858  0409  2C0B               	goto	u961
  2859  040A  2C0C               	goto	u960
  2860  040B                     u961:
  2861  040B  2C13               	goto	l1538
  2862  040C                     u960:
  2863  040C                     l1534:
  2864                           
  2865                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  2866  040C  30C3               	movlw	-61
  2867  040D  059F               	andwf	31,f	;volatile
  2868  040E                     l1536:
  2869                           
  2870                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  2871  040E  3021               	movlw	33
  2872  040F  00F4               	movwf	??_conversion
  2873  0410                     u1467:
  2874  0410  0BF4               	decfsz	??_conversion,f
  2875  0411  2C10               	goto	u1467
  2876                           
  2877                           ;ADC.c: 26:         }
  2878  0412  2C21               	goto	l1544
  2879  0413                     l1538:
  2880  0413  0C1F               	rrf	31,w	;volatile
  2881  0414  00F4               	movwf	??_conversion
  2882  0415  0C74               	rrf	??_conversion,w
  2883  0416  390F               	andlw	15
  2884  0417  3A00               	xorlw	0
  2885  0418  1D03               	skipz
  2886  0419  2C1B               	goto	u971
  2887  041A  2C1C               	goto	u970
  2888  041B                     u971:
  2889  041B  2C21               	goto	l1544
  2890  041C                     u970:
  2891  041C                     l1540:
  2892                           
  2893                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  2894  041C  081F               	movf	31,w	;volatile
  2895  041D  39C3               	andlw	-61
  2896  041E  3804               	iorlw	4
  2897  041F  009F               	movwf	31	;volatile
  2898  0420  2C0E               	goto	l1536
  2899  0421                     l1544:
  2900                           
  2901                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2902  0421  3021               	movlw	33
  2903  0422  00F4               	movwf	??_conversion
  2904  0423                     u1477:
  2905  0423  0BF4               	decfsz	??_conversion,f
  2906  0424  2C23               	goto	u1477
  2907  0425                     l1546:
  2908                           
  2909                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  2910  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0427  149F               	bsf	31,1	;volatile
  2913  0428                     l196:
  2914  0428  0008               	return
  2915  0429                     __end_of_conversion:
  2916                           
  2917                           	psect	text15
  2918  0429                     __ptext15:	
  2919 ;; *************** function _Escribir_stringLCD *****************
  2920 ;; Defined at:
  2921 ;;		line 46 in file "LCD.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  2924 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_1(17), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       2       0       0       0
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0
  2939 ;;      Totals:         0       2       0       0       0
  2940 ;;Total ram usage:        2 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 4
  2943 ;; This function calls:
  2944 ;;		_Escribir_datosLCD
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _Escribir_stringLCD
  2952  0429                     _Escribir_stringLCD:
  2953  0429                     l1912:	
  2954                           ;incstack = 0
  2955                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2956                           
  2957                           
  2958                           ;LCD.c: 47:     while(*d){
  2959  0429  2C40               	goto	l1918
  2960  042A                     l1914:
  2961                           
  2962                           ;LCD.c: 48:         Escribir_datosLCD(*d++);
  2963  042A  0821               	movf	Escribir_stringLCD@d+1,w
  2964  042B  00FF               	movwf	btemp+1
  2965  042C  0820               	movf	Escribir_stringLCD@d,w
  2966  042D  0084               	movwf	4
  2967  042E  120A  118A  23CA  120A  118A  	fcall	stringtab
  2968  0433  120A  118A  2527  120A  118A  	fcall	_Escribir_datosLCD
  2969  0438                     l1916:
  2970  0438  3001               	movlw	1
  2971  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2972  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2973  043B  07A0               	addwf	Escribir_stringLCD@d,f
  2974  043C  1803               	skipnc
  2975  043D  0AA1               	incf	Escribir_stringLCD@d+1,f
  2976  043E  3000               	movlw	0
  2977  043F  07A1               	addwf	Escribir_stringLCD@d+1,f
  2978  0440                     l1918:
  2979                           
  2980                           ;LCD.c: 47:     while(*d){
  2981  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0442  0821               	movf	Escribir_stringLCD@d+1,w
  2984  0443  00FF               	movwf	btemp+1
  2985  0444  0820               	movf	Escribir_stringLCD@d,w
  2986  0445  0084               	movwf	4
  2987  0446  120A  118A  23CA  120A  118A  	fcall	stringtab
  2988  044B  3A00               	xorlw	0
  2989  044C  1D03               	skipz
  2990  044D  2C4F               	goto	u1411
  2991  044E  2C50               	goto	u1410
  2992  044F                     u1411:
  2993  044F  2C2A               	goto	l1914
  2994  0450                     u1410:
  2995  0450                     l153:
  2996  0450  0008               	return
  2997  0451                     __end_of_Escribir_stringLCD:
  2998                           
  2999                           	psect	text16
  3000  0527                     __ptext16:	
  3001 ;; *************** function _Escribir_datosLCD *****************
  3002 ;; Defined at:
  3003 ;;		line 25 in file "LCD.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  LCDchar         1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  LCDchar         1    5[COMMON] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         0       0       0       0       0
  3018 ;;      Locals:         1       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0
  3020 ;;      Totals:         1       0       0       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 3
  3024 ;; This function calls:
  3025 ;;		_prender_ELCD
  3026 ;; This function is called by:
  3027 ;;		_Escribir_stringLCD
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _Escribir_datosLCD
  3033  0527                     _Escribir_datosLCD:
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _Escribir_datosLCD: [wreg+status,2+status,0+pclath+cstack]
  3037                           ;Escribir_datosLCD@LCDchar stored from wreg
  3038  0527  00F5               	movwf	Escribir_datosLCD@LCDchar
  3039  0528                     l1840:
  3040                           
  3041                           ;LCD.c: 26:     RC0 = 1;
  3042  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3044  052A  1407               	bsf	7,0	;volatile
  3045  052B                     l1842:
  3046                           
  3047                           ;LCD.c: 27:     PORTD = LCDchar;
  3048  052B  0875               	movf	Escribir_datosLCD@LCDchar,w
  3049  052C  0088               	movwf	8	;volatile
  3050  052D                     l1844:
  3051                           
  3052                           ;LCD.c: 29:     prender_ELCD();
  3053  052D  120A  118A  24F4  120A  118A  	fcall	_prender_ELCD
  3054  0532                     l144:
  3055  0532  0008               	return
  3056  0533                     __end_of_Escribir_datosLCD:
  3057                           
  3058                           	psect	text17
  3059  04F4                     __ptext17:	
  3060 ;; *************** function _prender_ELCD *****************
  3061 ;; Defined at:
  3062 ;;		line 11 in file "LCD.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0
  3078 ;;      Temps:          1       0       0       0       0
  3079 ;;      Totals:         1       0       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 2
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_Escribir_comandoLCD
  3087 ;;		_Escribir_datosLCD
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _prender_ELCD
  3093  04F4                     _prender_ELCD:
  3094  04F4                     l1624:	
  3095                           ;incstack = 0
  3096                           ; Regs used in _prender_ELCD: [wreg]
  3097                           
  3098                           
  3099                           ;LCD.c: 12:     RC1 = 1;
  3100  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3101  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3102  04F6  1487               	bsf	7,1	;volatile
  3103  04F7                     l1626:
  3104                           
  3105                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3106  04F7  30C7               	movlw	199
  3107  04F8  00F4               	movwf	??_prender_ELCD
  3108  04F9                     u1487:
  3109  04F9  2CFA               	nop2
  3110  04FA  0BF4               	decfsz	??_prender_ELCD,f
  3111  04FB  2CF9               	goto	u1487
  3112  04FC  2CFD               	nop2
  3113  04FD  2CFE               	nop2
  3114  04FE                     l1628:
  3115                           
  3116                           ;LCD.c: 14:     RC1 = 0;
  3117  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3118  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0500  1087               	bcf	7,1	;volatile
  3120                           
  3121                           ;LCD.c: 15:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3122  0501  30C7               	movlw	199
  3123  0502  00F4               	movwf	??_prender_ELCD
  3124  0503                     u1497:
  3125  0503  2D04               	nop2
  3126  0504  0BF4               	decfsz	??_prender_ELCD,f
  3127  0505  2D03               	goto	u1497
  3128  0506  2D07               	nop2
  3129  0507  2D08               	nop2
  3130  0508                     l138:
  3131  0508  0008               	return
  3132  0509                     __end_of_prender_ELCD:
  3133                           
  3134                           	psect	text18
  3135  04D7                     __ptext18:	
  3136 ;; *************** function _isr *****************
  3137 ;; Defined at:
  3138 ;;		line 65 in file "LAB2.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          3       0       0       0       0
  3155 ;;      Totals:         3       0       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 1
  3159 ;; This function calls:
  3160 ;;		_ADC
  3161 ;; This function is called by:
  3162 ;;		Interrupt level 1
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _isr
  3168  04D7                     _isr:
  3169  04D7                     i1l1574:
  3170                           
  3171                           ;LAB2.c: 66:     if(PIR1bits.ADIF){
  3172  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3173  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3174  04D9  1F0C               	btfss	12,6	;volatile
  3175  04DA  2CDC               	goto	u103_21
  3176  04DB  2CDD               	goto	u103_20
  3177  04DC                     u103_21:
  3178  04DC  2CE5               	goto	i1l1580
  3179  04DD                     u103_20:
  3180  04DD                     i1l1576:
  3181                           
  3182                           ;LAB2.c: 67:         ADC();
  3183  04DD  120A  118A  24B9  120A  118A  	fcall	_ADC
  3184  04E2                     i1l1578:
  3185                           
  3186                           ;LAB2.c: 68:         PIR1bits.ADIF = 0;
  3187  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3188  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3189  04E4  130C               	bcf	12,6	;volatile
  3190  04E5                     i1l1580:
  3191                           
  3192                           ;LAB2.c: 70:     if(PIR1bits.RCIF){
  3193  04E5  1E8C               	btfss	12,5	;volatile
  3194  04E6  2CE8               	goto	u104_21
  3195  04E7  2CE9               	goto	u104_20
  3196  04E8                     u104_21:
  3197  04E8  2CED               	goto	i1l97
  3198  04E9                     u104_20:
  3199  04E9                     i1l1582:
  3200                           
  3201                           ;LAB2.c: 71:         dato = RCREG;
  3202  04E9  081A               	movf	26,w	;volatile
  3203  04EA  00F1               	movwf	??_isr
  3204  04EB  0871               	movf	??_isr,w
  3205  04EC  00C6               	movwf	_dato
  3206  04ED                     i1l97:
  3207  04ED  0873               	movf	??_isr+2,w
  3208  04EE  008A               	movwf	10
  3209  04EF  0E72               	swapf	??_isr+1,w
  3210  04F0  0083               	movwf	3
  3211  04F1  0EFE               	swapf	btemp,f
  3212  04F2  0E7E               	swapf	btemp,w
  3213  04F3  0009               	retfie
  3214  04F4                     __end_of_isr:
  3215                           
  3216                           	psect	intentry
  3217  0004                     __pintentry:	
  3218                           ;incstack = 0
  3219                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3220                           
  3221  0004                     interrupt_function:
  3222  007E                     saved_w	set	btemp
  3223  0004  00FE               	movwf	btemp
  3224  0005  0E03               	swapf	3,w
  3225  0006  00F2               	movwf	??_isr+1
  3226  0007  080A               	movf	10,w
  3227  0008  00F3               	movwf	??_isr+2
  3228  0009  120A  118A  2CD7   	ljmp	_isr
  3229                           
  3230                           	psect	text19
  3231  04B9                     __ptext19:	
  3232 ;; *************** function _ADC *****************
  3233 ;; Defined at:
  3234 ;;		line 11 in file "ADC.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0
  3250 ;;      Temps:          1       0       0       0       0
  3251 ;;      Totals:         1       0       0       0       0
  3252 ;;Total ram usage:        1 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_isr
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _ADC
  3263  04B9                     _ADC:
  3264  04B9                     i1l1464:	
  3265                           ;incstack = 0
  3266                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3267                           
  3268                           
  3269                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3270  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3271  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3272  04BB  0C1F               	rrf	31,w	;volatile
  3273  04BC  00F0               	movwf	??_ADC
  3274  04BD  0C70               	rrf	??_ADC,w
  3275  04BE  390F               	andlw	15
  3276  04BF  3A00               	xorlw	0
  3277  04C0  1D03               	skipz
  3278  04C1  2CC3               	goto	u93_21
  3279  04C2  2CC4               	goto	u93_20
  3280  04C3                     u93_21:
  3281  04C3  2CC9               	goto	i1l1468
  3282  04C4                     u93_20:
  3283  04C4                     i1l1466:
  3284                           
  3285                           ;ADC.c: 13:         cont1 = ADRESH;
  3286  04C4  081E               	movf	30,w	;volatile
  3287  04C5  00F0               	movwf	??_ADC
  3288  04C6  0870               	movf	??_ADC,w
  3289  04C7  00C8               	movwf	_cont1
  3290                           
  3291                           ;ADC.c: 14:     }
  3292  04C8  2CD6               	goto	i1l189
  3293  04C9                     i1l1468:
  3294  04C9  0C1F               	rrf	31,w	;volatile
  3295  04CA  00F0               	movwf	??_ADC
  3296  04CB  0C70               	rrf	??_ADC,w
  3297  04CC  390F               	andlw	15
  3298  04CD  3A01               	xorlw	1
  3299  04CE  1D03               	skipz
  3300  04CF  2CD1               	goto	u94_21
  3301  04D0  2CD2               	goto	u94_20
  3302  04D1                     u94_21:
  3303  04D1  2CD6               	goto	i1l189
  3304  04D2                     u94_20:
  3305  04D2                     i1l1470:
  3306                           
  3307                           ;ADC.c: 16:         cont2 = ADRESH;
  3308  04D2  081E               	movf	30,w	;volatile
  3309  04D3  00F0               	movwf	??_ADC
  3310  04D4  0870               	movf	??_ADC,w
  3311  04D5  00C7               	movwf	_cont2
  3312  04D6                     i1l189:
  3313  04D6  0008               	return
  3314  04D7                     __end_of_ADC:
  3315  007E                     btemp	set	126	;btemp
  3316  007E                     wtemp0	set	126
  3317                           
  3318                           	psect	config
  3319                           
  3320                           ;Config register CONFIG1 @ 0x2007
  3321                           ;	Oscillator Selection bits
  3322                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3323                           ;	Watchdog Timer Enable bit
  3324                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3325                           ;	Power-up Timer Enable bit
  3326                           ;	PWRTE = OFF, PWRT disabled
  3327                           ;	RE3/MCLR pin function select bit
  3328                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3329                           ;	Code Protection bit
  3330                           ;	CP = OFF, Program memory code protection is disabled
  3331                           ;	Data Code Protection bit
  3332                           ;	CPD = OFF, Data memory code protection is disabled
  3333                           ;	Brown Out Reset Selection bits
  3334                           ;	BOREN = OFF, BOR disabled
  3335                           ;	Internal External Switchover bit
  3336                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3337                           ;	Fail-Safe Clock Monitor Enabled bit
  3338                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3339                           ;	Low Voltage Programming Enable bit
  3340                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3341                           ;	In-Circuit Debugger Mode bit
  3342                           ;	DEBUG = 0x1, unprogrammed default
  3343  2007                     	org	8199
  3344  2007  20D4               	dw	8404
  3345                           
  3346                           ;Config register CONFIG2 @ 0x2008
  3347                           ;	Brown-out Reset Selection bit
  3348                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3349                           ;	Flash Program Memory Self Write Enable bits
  3350                           ;	WRT = OFF, Write protection off
  3351  2008                     	org	8200
  3352  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     37      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_4(CODE[3]), STR_3(CODE[8]), STR_2(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_1(CODE[17]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _set_cursor->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD
    _conversion_char->_divisor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Escribir_stringLCD->_Escribir_datosLCD
    _Escribir_datosLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _setup->_Limpiar_pantallaLCD
    _dato_recibido->_sprintf
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6354
                                             36 BANK0      1     1      0
                 _Escribir_stringLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0      62
                                              2 BANK0      1     1      0
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0      31
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          0     0      0      31
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           2     1      1     515
                                              0 BANK0      2     1      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0      31
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        3     3      0    1806
                                             29 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3515
                                             29 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             12 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    1709
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   2     0      2     456
                                              0 BANK0      2     0      2
                  _Escribir_datosLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_datosLCD                                    1     1      0      31
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (6) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_datosLCD
       _prender_ELCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
       _prender_ELCD
   _setup
     _Iniciar_LCD
       _Escribir_comandoLCD
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      53       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      53      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 04 17:58:53 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
                         l102 0112                           l111 0240                           l121 0476  
                         l116 02F2                           l108 0347                           l141 0526  
                         l119 045D                           l144 0532                           l153 0450  
                         l161 04B8                           l138 0508                           l306 0109  
                         l147 0499                           l156 051A                           _ADC 04B9  
                         l196 0428                           l463 01E5                           l476 029B  
                         l582 038D                           l592 03C9                           _RC0 0038  
                         _RC1 0039                           u810 03A8                           u811 03A7  
                         u820 03B2                           u821 03B1                           u805 039A  
                         u840 03C5                           u841 03C4                           u825 03AE  
                         u835 03B9                           u950 0403                           u790 0396  
                         u951 0402                           u791 0395                           u960 040C  
                         u961 040B                           u970 041C                           u971 041B  
                         _dec 0078                           _cen 0077                           _isr 04D7  
                         fsr0 0004                           _uni 0079                           indf 0000  
                ___awmod@sign 0025                          ?_ADC 0070                          l1340 038E  
                        l1350 03A8                          l1342 0396                          l1352 03B2  
                        l1344 0399                          l1530 03FD                          l1354 03B8  
                        l1346 03A0                          l1540 041C                          l1532 0403  
                        l1700 026C                          l1356 03BF                          l1348 03A4  
                        l1534 040C                          l1702 0270                          l1710 028D  
                        l1358 03C5                          l1630 051C                          l1624 04F4  
                        l1544 0421                          l1536 040E                          l1640 0184  
                        l1712 0292                          l1704 027A                          l1720 034C  
                        l1800 006C                          l1632 051F                          l1626 04F7  
                        l1546 0425                          l1538 0413                          l1650 0198  
                        l1642 0189                          l1714 0297                          l1706 0280  
                        l1730 0364                          l1722 0352                          l1802 0071  
                        l1634 0521                          l1628 04FE                          l1660 01AE  
                        l1652 019A                          l1644 018B                          l1636 017D  
                        l1708 0287                          l1732 0375                          l1724 0355  
                        l1740 0389                          l1820 00AA                          l1812 008F  
                        l1900 033D                          l1670 01D1                          l1662 01B2  
                        l1654 01A0                          l1646 018F                          l1638 0180  
                        l1734 037B                          l1726 035C                          l1718 0348  
                        l1822 00AF                          l1814 0099                          l1830 00F3  
                        l1910 04B1                          l1750 047F                          l1902 0342  
                        l1840 0528                          l1912 0429                          l1664 01C3  
                        l1656 01A3                          l1672 01D7                          l1648 0194  
                        l1680 0241                          l1736 037C                          l1728 0360  
                        l1824 00DF                          l1816 009F                          l1808 0073  
                        l1832 0105                          l1920 01E6                          l1904 049D  
                        l1752 0481                          l1744 0477                          l1760 0509  
                        l1842 052B                          l1914 042A                          l1674 01DC  
                        l1666 01C9                          l1658 01AA                          l1690 0253  
                        l1682 0244                          l1738 0383                          l1826 00E6  
                        l1818 00A6                          l1922 0451                          l1906 04A2  
                        l1754 0487                          l1746 047B                          l1762 050F  
                        l1850 02F8                          l1930 010A                          l1844 052D  
                        l1916 0438                          l1676 01E1                          l1668 01CA  
                        l1692 0258                          l1684 0248                          l1772 02A9  
                        l1764 029F                          l1828 00EA                          l1780 0028  
                        l1924 0459                          l1908 04A9                          l1756 048D  
                        l1748 047C                          l1860 030C                          l1852 0303  
                        l1940 0146                          l1932 010F                          l1918 0440  
                        l1694 025E                          l1686 024D                          l1774 02DF  
                        l1766 02A7                          l1790 003B                          l1782 002E  
                        l1926 0463                          l1758 0493                          l1870 031D  
                        l1862 030D                          l1854 0309                          l1846 02F3  
                        l1942 0162                          l1934 0121                          l1696 0261  
                        l1688 024F                          l1776 02E5                          l1792 0058  
                        l1784 0035                          l1928 0465                          l1880 032A  
                        l1872 0320                          l1864 0313                          l1856 030A  
                        l1848 02F7                          l1944 016E                          l1936 012C  
                        l1698 0268                          l1794 0060                          l1970 004D  
                        l1786 003A                          l1778 0023                          l1890 0334  
                        l1882 032B                          l1874 0323                          l1866 0315  
                        l1858 030B                          l1938 013B                          l1796 0064  
                        l1892 0335                          l1884 032C                          l1876 0326  
                        l1868 0316                          l1798 0068                          l1894 0338  
                        l1886 032D                          l1878 0329                          l1896 0339  
                        l1888 0330                          l1898 033A                          ?_isr 0070  
                        STR_1 03E4                          STR_2 03F5                          STR_3 03F5  
                        STR_4 03FA                          u1110 01C3                          u1111 01C2  
                        u1200 027A                          u1105 01B3                          u1201 0279  
                        u1130 01D7                          u1050 0184                          u1131 01D6  
                        u1115 01BF                          u1051 0183                          u1140 01DC  
                        u1060 018F                          u1220 028D                          u1300 0389  
                        u1141 01DB                          u1125 01CB                          u1061 018E  
                        u1221 028C                          u1205 0276                          u1301 0388  
                        u1070 01A0                          u1230 0292                          u1150 0248  
                        u1310 02F2                          u1071 019F                          u1231 0291  
                        u1215 0281                          u1151 0247                          u1311 02F1  
                        u1160 0253                          u1240 0352                          u1320 002E  
                        u1400 04B1                          u1161 0252                          u1241 0351  
                        u1321 002D                          u1401 04B0                          u1410 0450  
                        u1090 01B2                          u1170 025E                          u1330 0068  
                        u1411 044F                          u1091 01B1                          u1171 025D  
                        u1315 02EE                          u1331 0067                          u1260 0364  
                        u1340 008E                          u1420 0459                          u1085 01A4  
                        u1261 0363                          u1341 008D                          u1421 0458  
                        u1190 0270                          u1350 0099                          u1430 0463  
                        u1191 026F                          u1255 0356                          u1351 0098  
                        u1431 0462                          u1280 0375                          u1360 009F  
                        u1185 0262                          u1281 0374                          u1361 009E  
                        u1345 008A                          u1370 00F3                          u1275 0365  
                        u1371 00F2                          u1380 0105                          u1285 0371  
                        u1381 0104                          u1390 04A2                          u1295 037D  
                        u1391 04A1                          u1447 031A                          u1457 0515  
                        u1467 0410                          u1477 0423                          u1487 04F9  
                        u1497 0503                          i1l97 04ED                 ??_Iniciar_LCD 0076  
                        _dato 0046                          _main 010A                          _vol1 0068  
                        _vol2 0067                          _vol3 0076                          btemp 007E  
                        start 000C                         ??_ADC 0070                         ??_isr 0071  
  __end_of_Escribir_stringLCD 0451                         ?_main 0070               __end_of___awdiv 01E6  
             __end_of___awmod 029C                         _ANSEL 0188               ___awdiv@divisor 0020  
             __end_of___lwdiv 038E               __end_of___lwmod 03CA                         i1l189 04D6  
             ___awdiv@counter 0024                         _RCREG 001A                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         u93_20 04C4  
                       u93_21 04C3                         u94_20 04D2                         u94_21 04D1  
             __end_of_divisor 02F3                         _cont1 0048                         _cont2 0047  
             __end_of_dpowers 03E4                         _setup 02F3           _Limpiar_pantallaLCD 0509  
                       pclath 000A             ??_conversion_char 003D                         status 0003  
                       wtemp0 007E               __end_of_sprintf 010A               __initialization 000F  
         __end_of_Iniciar_LCD 049A                  __end_of_main 017D             _Escribir_datosLCD 0527  
        ?_Limpiar_pantallaLCD 0070            ?_Escribir_datosLCD 0070                        ??_main 0044  
         ??_Escribir_datosLCD 0075                        _ADRESH 001E              ___awdiv@dividend 0022  
                      ?_setup 0070                        _ANSELH 0189                        u103_20 04DD  
                      u103_21 04DC                        u104_20 04E9                        u104_21 04E8  
                      i1l1470 04D2                        i1l1464 04B9                        i1l1466 04C4  
                      i1l1468 04C9                        i1l1580 04E5                        i1l1582 04E9  
                      i1l1574 04D7                        i1l1576 04DD                        i1l1578 04E2  
                      _SPBRGH 009A                        _TRISC0 0438                        _TRISC1 0439  
                      _Cont_U 0045     __end_of_Escribir_datosLCD 0533         ??_Limpiar_pantallaLCD 0020  
                   ??___awdiv 0074                     ??___awmod 0074         __end_of_dato_recibido 0477  
                   ??___lwdiv 0074                     ??___lwmod 0075              ___awdiv@quotient 0026  
             ___awmod@divisor 0020               ___awmod@counter 0024                     ??_divisor 0028  
                      saved_w 007E                     ??_sprintf 0033       __end_of__initialization 001C  
                 _Iniciar_LCD 0477                __pcstackCOMMON 0070                 __end_of_setup 0348  
                     ??_setup 0022                    __pbssBANK0 0045    __size_of_Escribir_datosLCD 000C  
                  __pmaintext 010A                    __pintentry 0004  __size_of_Escribir_comandoLCD 000C  
    Escribir_datosLCD@LCDchar 0075               _conversion_char 01E6            _Escribir_stringLCD 0429  
                  __stringtab 03CA                    _conversion 03FD           ?_Escribir_stringLCD 0020  
                     ___awdiv 017D                       ___awmod 0241                       ___lwdiv 0348  
                     ___lwmod 038E                       __ptext1 02F3                       __ptext2 0509  
                     __ptext3 0477                       __ptext4 049A                       __ptext5 051B  
                     __ptext6 0451                       __ptext7 01E6                       __ptext8 0020  
                     __ptext9 038E                       _buffer1 005D                       _buffer2 0053  
                     _buffer3 0049                  __size_of_ADC 001E                       _divisor 029C  
        ??_Escribir_stringLCD 0076                       _dpowers 03DA                  __size_of_isr 001D  
            ___awmod@dividend 0022                 ?_prender_ELCD 0070                   set_cursor@a 0021  
                 set_cursor@b 0020                       _sprintf 0020                       clrloop0 0534  
        end_of_initialization 001C                    _set_cursor 049A                     _RCSTAbits 0018  
     __end_of_conversion_char 0241                ??_prender_ELCD 0074                  ?_Iniciar_LCD 0070  
                 ?_conversion 0070                     _TXSTAbits 0098   __end_of_Limpiar_pantallaLCD 051B  
                  divisor@dig 0075                   _BAUDCTLbits 0187           start_initialization 000F  
                 __end_of_ADC 04D7                   __end_of_isr 04F4        __size_of_dato_recibido 0026  
         _Escribir_comandoLCD 051B    Escribir_comandoLCD@Comando 0075                   ?_set_cursor 0020  
            ?_conversion_char 0070          ?_Escribir_comandoLCD 0070           __size_of_conversion 002C  
                 __pbssCOMMON 0076                     ___latbits 0002                 __pcstackBANK0 0020  
                 sprintf@flag 0037                   sprintf@prec 0038          __end_of_prender_ELCD 0509  
            ___lwdiv@dividend 0022                      ?___awdiv 0020                      ?___awmod 0020  
                    ?___lwdiv 0020                      ?___lwmod 0027         ??_Escribir_comandoLCD 0075  
               _dato_recibido 0451                     __pstrings 03CA                      ?_divisor 0075  
            ___lwdiv@quotient 0025           __size_of_set_cursor 001F                      ?_sprintf 002C  
              __size_of_setup 0055             interrupt_function 0004                     clear_ram0 0533  
                    _PIE1bits 008C          __size_of_Iniciar_LCD 0023                      _PIR1bits 000C  
              ?_dato_recibido 0070                    _ADCON0bits 001F                   __stringbase 03D9  
                  _ADCON1bits 009F   __size_of_Escribir_stringLCD 0028                  ??_conversion 0074  
         Escribir_stringLCD@d 0020              __size_of___awdiv 0069              __size_of___awmod 005B  
            __size_of___lwdiv 0046              __size_of___lwmod 003C            __end_of__stringtab 03DA  
                  sprintf@val 0039              __size_of_divisor 0057            __end_of_conversion 0429  
             ___lwdiv@divisor 0020               ___lwdiv@counter 0024                      __ptext10 0348  
                    __ptext11 029C                      __ptext12 0241                      __ptext13 017D  
                    __ptext14 03FD                      __ptext15 0429                      __ptext16 0527  
                    __ptext17 04F4                      __ptext18 04D7                      __ptext19 04B9  
            __size_of_sprintf 00EA         __size_of_prender_ELCD 0015                 __size_of_main 0073  
                ??_set_cursor 0076               ??_dato_recibido 003D  __size_of_Limpiar_pantallaLCD 0012  
                    divisor@a 002A                      divisor@b 002B                      divisor@i 002D  
                  _INTCONbits 000B                  _prender_ELCD 04F4            __end_of_set_cursor 04B9  
                    intlevel1 0000                     sprintf@ap 0036                     sprintf@sp 003B  
            ___lwmod@dividend 0029                     stringcode 03D4                    _OSCCONbits 008F  
                    sprintf@c 003C                      sprintf@f 002C               ___lwmod@divisor 0027  
             ___lwmod@counter 002B      __size_of_conversion_char 005B                      stringdir 03D4  
                    stringtab 03CA   __end_of_Escribir_comandoLCD 0527  
