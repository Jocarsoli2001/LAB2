

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 11:24:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459                           
   460                           	psect	strings
   461  044C                     __pstrings:
   462  044C                     stringtab:
   463  044C                     __stringtab:
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466  044C  1BFF               	btfsc	btemp+1,7
   467  044D  2C56               	ljmp	stringcode
   468  044E  1383               	bcf	3,7
   469  044F  187F               	btfsc	btemp+1,0
   470  0450  1783               	bsf	3,7
   471  0451  0800               	movf	0,w
   472  0452  0A84               	incf	4,f
   473  0453  1903               	skipnz
   474  0454  0AFF               	incf	btemp+1,f
   475  0455  0008               	return
   476  0456                     stringcode:
   477  0456                     stringdir:
   478  0456  3004               	movlw	high stringdir
   479  0457  008A               	movwf	10
   480  0458  0804               	movf	4,w
   481  0459  0A84               	incf	4,f
   482  045A  0782               	addwf	2,f
   483  045B                     __stringbase:
   484  045B  3400               	retlw	0
   485  045C                     __end_of__stringtab:
   486  045C                     _dpowers:
   487  045C  3401               	retlw	1
   488  045D  3400               	retlw	0
   489  045E  340A               	retlw	10
   490  045F  3400               	retlw	0
   491  0460  3464               	retlw	100
   492  0461  3400               	retlw	0
   493  0462  34E8               	retlw	232
   494  0463  3403               	retlw	3
   495  0464  3410               	retlw	16
   496  0465  3427               	retlw	39
   497  0466                     __end_of_dpowers:
   498  0019                     _TXREG	set	25
   499  001E                     _ADRESH	set	30
   500  0007                     _PORTCbits	set	7
   501  0006                     _PORTBbits	set	6
   502  0008                     _PORTDbits	set	8
   503  0018                     _RCSTAbits	set	24
   504  000B                     _INTCONbits	set	11
   505  0006                     _PORTB	set	6
   506  0009                     _PORTE	set	9
   507  0007                     _PORTC	set	7
   508  0008                     _PORTD	set	8
   509  0005                     _PORTA	set	5
   510  001F                     _ADCON0bits	set	31
   511  001A                     _RCREG	set	26
   512  000C                     _PIR1bits	set	12
   513  009A                     _SPBRGH	set	154
   514  0099                     _SPBRG	set	153
   515  0098                     _TXSTAbits	set	152
   516  008C                     _PIE1bits	set	140
   517  009F                     _ADCON1bits	set	159
   518  008F                     _OSCCONbits	set	143
   519  0089                     _TRISE	set	137
   520  0087                     _TRISC	set	135
   521  0088                     _TRISD	set	136
   522  0086                     _TRISB	set	134
   523  0085                     _TRISA	set	133
   524  0187                     _BAUDCTLbits	set	391
   525  0189                     _ANSELH	set	393
   526  0188                     _ANSEL	set	392
   527  0466                     STR_3:
   528  0466  3453               	retlw	83	;'S'
   529  0467  3431               	retlw	49	;'1'
   530  0468  343A               	retlw	58	;':'
   531  0469  3420               	retlw	32	;' '
   532  046A  3420               	retlw	32	;' '
   533  046B  3420               	retlw	32	;' '
   534  046C  3420               	retlw	32	;' '
   535  046D  3453               	retlw	83	;'S'
   536  046E  3432               	retlw	50	;'2'
   537  046F  343A               	retlw	58	;':'
   538  0470  3420               	retlw	32	;' '
   539  0471  3420               	retlw	32	;' '
   540  0472  3420               	retlw	32	;' '
   541  0473  3453               	retlw	83	;'S'
   542  0474  3433               	retlw	51	;'3'
   543  0475  343A               	retlw	58	;':'
   544  0476  3400               	retlw	0
   545  0477                     STR_2:
   546  0477  344A               	retlw	74	;'J'
   547  0478  346F               	retlw	111	;'o'
   548  0479  3473               	retlw	115	;'s'
   549  047A  3465               	retlw	101	;'e'
   550  047B  3420               	retlw	32	;' '
   551  047C  3453               	retlw	83	;'S'
   552  047D  3461               	retlw	97	;'a'
   553  047E  346E               	retlw	110	;'n'
   554  047F  3474               	retlw	116	;'t'
   555  0480  3469               	retlw	105	;'i'
   556  0481  347A               	retlw	122	;'z'
   557  0482  346F               	retlw	111	;'o'
   558  0483  3400               	retlw	0
   559  0484                     STR_4:
   560  0484  3425               	retlw	37	;'%'
   561  0485  3464               	retlw	100	;'d'
   562  0486  342E               	retlw	46	;'.'
   563  0487  3425               	retlw	37	;'%'
   564  0488  3464               	retlw	100	;'d'
   565  0489  3425               	retlw	37	;'%'
   566  048A  3464               	retlw	100	;'d'
   567  048B  3400               	retlw	0
   568  048C                     STR_6:
   569  048C  3425               	retlw	37	;'%'
   570  048D  3464               	retlw	100	;'d'
   571  048E  3425               	retlw	37	;'%'
   572  048F  3464               	retlw	100	;'d'
   573  0490  3425               	retlw	37	;'%'
   574  0491  3464               	retlw	100	;'d'
   575  0492  3400               	retlw	0
   576  0493                     STR_1:
   577  0493  3448               	retlw	72	;'H'
   578  0494  346F               	retlw	111	;'o'
   579  0495  346C               	retlw	108	;'l'
   580  0496  3461               	retlw	97	;'a'
   581  0497  3400               	retlw	0
   582  0484                     
   583                           	psect	cinit
   584  000F                     start_initialization:	
   585                           ; #config settings
   586                           
   587  000F                     __initialization:
   588                           
   589                           ; Clear objects allocated to COMMON
   590  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   591  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   592  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   593  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   594                           
   595                           ; Clear objects allocated to BANK0
   596  0013  1383               	bcf	3,7	;select IRP bank0
   597  0014  3047               	movlw	low __pbssBANK0
   598  0015  0084               	movwf	4
   599  0016  306B               	movlw	low (__pbssBANK0+36)
   600  0017  120A  118A  26A8  120A  118A  	fcall	clear_ram0
   601  001C                     end_of_initialization:	
   602                           ;End of C runtime variable initialization code
   603                           
   604  001C                     __end_of__initialization:
   605  001C  0183               	clrf	3
   606  001D  120A  118A  290A   	ljmp	_main	;jump to C main() function
   607                           
   608                           	psect	bssCOMMON
   609  0076                     __pbssCOMMON:
   610  0076                     _dato:
   611  0076                     	ds	1
   612  0077                     _cen:
   613  0077                     	ds	1
   614  0078                     _dec:
   615  0078                     	ds	1
   616  0079                     _uni:
   617  0079                     	ds	1
   618                           
   619                           	psect	bssBANK0
   620  0047                     __pbssBANK0:
   621  0047                     _Cont_U:
   622  0047                     	ds	1
   623  0048                     _cont2:
   624  0048                     	ds	1
   625  0049                     _cont1:
   626  0049                     	ds	1
   627  004A                     _buffer3:
   628  004A                     	ds	10
   629  0054                     _buffer2:
   630  0054                     	ds	10
   631  005E                     _buffer1:
   632  005E                     	ds	10
   633  0068                     _vol3:
   634  0068                     	ds	1
   635  0069                     _vol2:
   636  0069                     	ds	1
   637  006A                     _vol1:
   638  006A                     	ds	1
   639                           
   640                           	psect	clrtext
   641  06A8                     clear_ram0:	
   642                           ;	Called with FSR containing the base address, and
   643                           ;	W with the last address+1
   644                           
   645  06A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   646  06A9                     clrloop0:
   647  06A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   648  06AA  0A84               	incf	4,f	;increment pointer
   649  06AB  0604               	xorwf	4,w	;XOR with final address
   650  06AC  1903               	btfsc	3,2	;have we reached the end yet?
   651  06AD  3400               	retlw	0	;all done for this memory range, return
   652  06AE  0604               	xorwf	4,w	;XOR again to restore value
   653  06AF  2EA9               	goto	clrloop0	;do the next byte
   654                           
   655                           	psect	cstackCOMMON
   656  0070                     __pcstackCOMMON:
   657  0070                     ?_ADC:
   658  0070                     ??_ADC:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_setup:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Iniciar_LCD:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Limpiar_pantallaLCD:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_conversion:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_conversion_char:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_dato_recibido:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_isr:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_main:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_prender_ELCD:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_Escribir_comandoLCD:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693  0070                     	ds	1
   694  0071                     ??_isr:
   695                           
   696                           ; 1 bytes @ 0x1
   697  0071                     	ds	3
   698  0074                     ??_setup:
   699  0074                     ??_conversion:	
   700                           ; 1 bytes @ 0x4
   701                           
   702  0074                     ??_prender_ELCD:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??___awdiv:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     ??___awmod:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     ??___lwdiv:	
   712                           ; 1 bytes @ 0x4
   713                           
   714                           
   715                           ; 1 bytes @ 0x4
   716  0074                     	ds	1
   717  0075                     ?_divisor:
   718  0075                     ?_divisor1:	
   719                           ; 1 bytes @ 0x5
   720                           
   721  0075                     ??_Escribir_comandoLCD:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     ??___lwmod:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     divisor@dig:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     divisor1@dig:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     Escribir_comandoLCD@Comando:	
   734                           ; 1 bytes @ 0x5
   735                           
   736                           
   737                           ; 1 bytes @ 0x5
   738  0075                     	ds	1
   739                           
   740                           	psect	cstackBANK0
   741  0020                     __pcstackBANK0:
   742  0020                     ??_Iniciar_LCD:
   743  0020                     ??_Limpiar_pantallaLCD:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0020                     ?_set_cursor:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0020                     ?_Escribir_stringLCD:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0020                     ?___awdiv:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0020                     ?___awmod:	
   756                           ; 2 bytes @ 0x0
   757                           
   758  0020                     ?___lwdiv:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0020                     set_cursor@posicion:	
   762                           ; 2 bytes @ 0x0
   763                           
   764  0020                     Escribir_stringLCD@d:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0020                     ___awdiv@divisor:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0020                     ___awmod@divisor:	
   771                           ; 2 bytes @ 0x0
   772                           
   773  0020                     ___lwdiv@divisor:	
   774                           ; 2 bytes @ 0x0
   775                           
   776                           
   777                           ; 2 bytes @ 0x0
   778  0020                     	ds	1
   779  0021                     ??_set_cursor:
   780                           
   781                           ; 1 bytes @ 0x1
   782  0021                     	ds	1
   783  0022                     ??_Escribir_stringLCD:
   784  0022                     ___awdiv@dividend:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0022                     ___awmod@dividend:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0022                     ___lwdiv@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793                           
   794                           ; 2 bytes @ 0x2
   795  0022                     	ds	1
   796  0023                     Escribir_stringLCD@i:
   797  0023                     set_cursor@linea:	
   798                           ; 1 bytes @ 0x3
   799                           
   800                           
   801                           ; 1 bytes @ 0x3
   802  0023                     	ds	1
   803  0024                     ___awdiv@counter:
   804  0024                     ___awmod@counter:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0024                     ___lwdiv@counter:	
   808                           ; 1 bytes @ 0x4
   809                           
   810                           
   811                           ; 1 bytes @ 0x4
   812  0024                     	ds	1
   813  0025                     ___awdiv@sign:
   814  0025                     ___awmod@sign:	
   815                           ; 1 bytes @ 0x5
   816                           
   817  0025                     ___lwdiv@quotient:	
   818                           ; 1 bytes @ 0x5
   819                           
   820                           
   821                           ; 2 bytes @ 0x5
   822  0025                     	ds	1
   823  0026                     ___awdiv@quotient:
   824                           
   825                           ; 2 bytes @ 0x6
   826  0026                     	ds	1
   827  0027                     ?___lwmod:
   828  0027                     ___lwmod@divisor:	
   829                           ; 2 bytes @ 0x7
   830                           
   831                           
   832                           ; 2 bytes @ 0x7
   833  0027                     	ds	1
   834  0028                     ??_divisor:
   835  0028                     ??_divisor1:	
   836                           ; 1 bytes @ 0x8
   837                           
   838                           
   839                           ; 1 bytes @ 0x8
   840  0028                     	ds	1
   841  0029                     ___lwmod@dividend:
   842                           
   843                           ; 2 bytes @ 0x9
   844  0029                     	ds	1
   845  002A                     divisor@a:
   846                           
   847                           ; 1 bytes @ 0xA
   848  002A                     	ds	1
   849  002B                     ___lwmod@counter:
   850  002B                     divisor@b:	
   851                           ; 1 bytes @ 0xB
   852                           
   853                           
   854                           ; 2 bytes @ 0xB
   855  002B                     	ds	1
   856  002C                     ?_sprintf:
   857  002C                     divisor1@a:	
   858                           ; 2 bytes @ 0xC
   859                           
   860  002C                     sprintf@f:	
   861                           ; 1 bytes @ 0xC
   862                           
   863                           
   864                           ; 1 bytes @ 0xC
   865  002C                     	ds	1
   866  002D                     divisor@i:
   867  002D                     divisor1@i:	
   868                           ; 2 bytes @ 0xD
   869                           
   870                           
   871                           ; 2 bytes @ 0xD
   872  002D                     	ds	6
   873  0033                     ??_sprintf:
   874                           
   875                           ; 1 bytes @ 0x13
   876  0033                     	ds	3
   877  0036                     sprintf@ap:
   878                           
   879                           ; 1 bytes @ 0x16
   880  0036                     	ds	1
   881  0037                     sprintf@flag:
   882                           
   883                           ; 1 bytes @ 0x17
   884  0037                     	ds	1
   885  0038                     sprintf@prec:
   886                           
   887                           ; 1 bytes @ 0x18
   888  0038                     	ds	1
   889  0039                     sprintf@val:
   890                           
   891                           ; 2 bytes @ 0x19
   892  0039                     	ds	2
   893  003B                     sprintf@sp:
   894                           
   895                           ; 1 bytes @ 0x1B
   896  003B                     	ds	1
   897  003C                     sprintf@c:
   898                           
   899                           ; 1 bytes @ 0x1C
   900  003C                     	ds	1
   901  003D                     ??_conversion_char:
   902  003D                     ??_dato_recibido:	
   903                           ; 1 bytes @ 0x1D
   904                           
   905                           
   906                           ; 1 bytes @ 0x1D
   907  003D                     	ds	7
   908  0044                     ??_main:
   909                           
   910                           ; 1 bytes @ 0x24
   911  0044                     	ds	3
   912                           
   913                           	psect	maintext
   914  010A                     __pmaintext:	
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   917 ;;
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 87 in file "LAB2.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : B00/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0
   936 ;;      Temps:          0       3       0       0       0
   937 ;;      Totals:         0       3       0       0       0
   938 ;;Total ram usage:        3 bytes
   939 ;; Hardware stack levels required when called: 5
   940 ;; This function calls:
   941 ;;		_Escribir_stringLCD
   942 ;;		_Iniciar_LCD
   943 ;;		_Limpiar_pantallaLCD
   944 ;;		_conversion
   945 ;;		_conversion_char
   946 ;;		_dato_recibido
   947 ;;		_set_cursor
   948 ;;		_setup
   949 ;; This function is called by:
   950 ;;		Startup code after reset
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _main
   956  010A                     _main:
   957  010A                     l2175:	
   958                           ;incstack = 0
   959                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   960                           
   961                           
   962                           ;LAB2.c: 88:     setup();
   963  010A  120A  118A  23FF  120A  118A  	fcall	_setup
   964                           
   965                           ;LAB2.c: 89:     Iniciar_LCD();
   966  010F  120A  118A  21C4  120A  118A  	fcall	_Iniciar_LCD
   967                           
   968                           ;LAB2.c: 90:     Limpiar_pantallaLCD();
   969  0114  120A  118A  267E  120A  118A  	fcall	_Limpiar_pantallaLCD
   970                           
   971                           ;LAB2.c: 91:     set_cursor(1,0);
   972  0119  1283               	bcf	3,5	;RP0=0, select bank0
   973  011A  1303               	bcf	3,6	;RP1=0, select bank0
   974  011B  01A0               	clrf	set_cursor@posicion
   975  011C  3001               	movlw	1
   976  011D  120A  118A  2498  120A  118A  	fcall	_set_cursor
   977  0122                     l2177:
   978                           
   979                           ;LAB2.c: 92:     Escribir_stringLCD("Hola");
   980  0122  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   981  0123  1283               	bcf	3,5	;RP0=0, select bank0
   982  0124  1303               	bcf	3,6	;RP1=0, select bank0
   983  0125  00A0               	movwf	Escribir_stringLCD@d
   984  0126  3080               	movlw	128
   985  0127  00A1               	movwf	Escribir_stringLCD@d+1
   986  0128  120A  118A  25A8  120A  118A  	fcall	_Escribir_stringLCD
   987  012D                     l2179:
   988                           
   989                           ;LAB2.c: 93:     set_cursor(2,2);
   990  012D  3002               	movlw	2
   991  012E  1283               	bcf	3,5	;RP0=0, select bank0
   992  012F  1303               	bcf	3,6	;RP1=0, select bank0
   993  0130  00C4               	movwf	??_main
   994  0131  0844               	movf	??_main,w
   995  0132  00A0               	movwf	set_cursor@posicion
   996  0133  3002               	movlw	2
   997  0134  120A  118A  2498  120A  118A  	fcall	_set_cursor
   998                           
   999                           ;LAB2.c: 94:     Escribir_stringLCD("Jose Santizo");
  1000  0139  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1001  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1002  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1003  013C  00A0               	movwf	Escribir_stringLCD@d
  1004  013D  3080               	movlw	128
  1005  013E  00A1               	movwf	Escribir_stringLCD@d+1
  1006  013F  120A  118A  25A8  120A  118A  	fcall	_Escribir_stringLCD
  1007  0144                     l2181:
  1008                           
  1009                           ;LAB2.c: 95:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1010  0144  301A               	movlw	26
  1011  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0147  00C6               	movwf	??_main+2
  1014  0148  305E               	movlw	94
  1015  0149  00C5               	movwf	??_main+1
  1016  014A  306D               	movlw	109
  1017  014B  00C4               	movwf	??_main
  1018  014C                     u1877:
  1019  014C  0BC4               	decfsz	??_main,f
  1020  014D  294C               	goto	u1877
  1021  014E  0BC5               	decfsz	??_main+1,f
  1022  014F  294C               	goto	u1877
  1023  0150  0BC6               	decfsz	??_main+2,f
  1024  0151  294C               	goto	u1877
  1025  0152  2953               	nop2
  1026  0153                     l2183:
  1027                           
  1028                           ;LAB2.c: 96:     ADCON0bits.GO = 1;
  1029  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0155  149F               	bsf	31,1	;volatile
  1032  0156                     l2185:
  1033                           
  1034                           ;LAB2.c: 98:     Limpiar_pantallaLCD();
  1035  0156  120A  118A  267E  120A  118A  	fcall	_Limpiar_pantallaLCD
  1036  015B                     l2187:
  1037                           
  1038                           ;LAB2.c: 101:         conversion();
  1039  015B  120A  118A  2634  120A  118A  	fcall	_conversion
  1040  0160                     l2189:
  1041                           
  1042                           ;LAB2.c: 104:         set_cursor(1,0);
  1043  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0162  01A0               	clrf	set_cursor@posicion
  1046  0163  3001               	movlw	1
  1047  0164  120A  118A  2498  120A  118A  	fcall	_set_cursor
  1048  0169                     l2191:
  1049                           
  1050                           ;LAB2.c: 105:         Escribir_stringLCD("S1:    S2:   S3:");
  1051  0169  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1052  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1053  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1054  016C  00A0               	movwf	Escribir_stringLCD@d
  1055  016D  3080               	movlw	128
  1056  016E  00A1               	movwf	Escribir_stringLCD@d+1
  1057  016F  120A  118A  25A8  120A  118A  	fcall	_Escribir_stringLCD
  1058  0174                     l2193:
  1059                           
  1060                           ;LAB2.c: 107:         conversion_char();
  1061  0174  120A  118A  22A1  120A  118A  	fcall	_conversion_char
  1062  0179                     l2195:
  1063                           
  1064                           ;LAB2.c: 109:         set_cursor(2,0);
  1065  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1066  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1067  017B  01A0               	clrf	set_cursor@posicion
  1068  017C  3002               	movlw	2
  1069  017D  120A  118A  2498  120A  118A  	fcall	_set_cursor
  1070  0182                     l2197:
  1071                           
  1072                           ;LAB2.c: 110:         Escribir_stringLCD(buffer1);
  1073  0182  305E               	movlw	(low (_buffer1| 0))& (0+255)
  1074  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0185  00A0               	movwf	Escribir_stringLCD@d
  1077  0186  3000               	movlw	0
  1078  0187  00A1               	movwf	Escribir_stringLCD@d+1
  1079  0188  120A  118A  25A8  120A  118A  	fcall	_Escribir_stringLCD
  1080  018D                     l2199:
  1081                           
  1082                           ;LAB2.c: 111:         set_cursor(2,7);
  1083  018D  3007               	movlw	7
  1084  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1085  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0190  00C4               	movwf	??_main
  1087  0191  0844               	movf	??_main,w
  1088  0192  00A0               	movwf	set_cursor@posicion
  1089  0193  3002               	movlw	2
  1090  0194  120A  118A  2498  120A  118A  	fcall	_set_cursor
  1091  0199                     l2201:
  1092                           
  1093                           ;LAB2.c: 112:         Escribir_stringLCD(buffer2);
  1094  0199  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1095  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1096  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1097  019C  00A0               	movwf	Escribir_stringLCD@d
  1098  019D  3000               	movlw	0
  1099  019E  00A1               	movwf	Escribir_stringLCD@d+1
  1100  019F  120A  118A  25A8  120A  118A  	fcall	_Escribir_stringLCD
  1101  01A4                     l2203:
  1102                           
  1103                           ;LAB2.c: 115:         dato_recibido();
  1104  01A4  120A  118A  2606  120A  118A  	fcall	_dato_recibido
  1105  01A9                     l2205:
  1106                           
  1107                           ;LAB2.c: 117:         set_cursor(2,13);
  1108  01A9  300D               	movlw	13
  1109  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1110  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1111  01AC  00C4               	movwf	??_main
  1112  01AD  0844               	movf	??_main,w
  1113  01AE  00A0               	movwf	set_cursor@posicion
  1114  01AF  3002               	movlw	2
  1115  01B0  120A  118A  2498  120A  118A  	fcall	_set_cursor
  1116  01B5                     l2207:
  1117                           
  1118                           ;LAB2.c: 118:         Escribir_stringLCD(buffer3);
  1119  01B5  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1120  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1121  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1122  01B8  00A0               	movwf	Escribir_stringLCD@d
  1123  01B9  3000               	movlw	0
  1124  01BA  00A1               	movwf	Escribir_stringLCD@d+1
  1125  01BB  120A  118A  25A8  120A  118A  	fcall	_Escribir_stringLCD
  1126  01C0  295B               	goto	l2187
  1127  01C1  120A  118A  280C   	ljmp	start
  1128  01C4                     __end_of_main:
  1129                           
  1130                           	psect	text1
  1131  03FF                     __ptext1:	
  1132 ;; *************** function _setup *****************
  1133 ;; Defined at:
  1134 ;;		line 123 in file "LAB2.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0
  1150 ;;      Temps:          1       0       0       0       0
  1151 ;;      Totals:         1       0       0       0       0
  1152 ;;Total ram usage:        1 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 2
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _setup
  1164  03FF                     _setup:
  1165  03FF                     l1667:	
  1166                           ;incstack = 0
  1167                           ; Regs used in _setup: [wreg+status,2+status,0]
  1168                           
  1169                           
  1170                           ;LAB2.c: 126:     ANSEL = 0b0011;
  1171  03FF  3003               	movlw	3
  1172  0400  1683               	bsf	3,5	;RP0=1, select bank3
  1173  0401  1703               	bsf	3,6	;RP1=1, select bank3
  1174  0402  0088               	movwf	8	;volatile
  1175  0403                     l1669:
  1176                           
  1177                           ;LAB2.c: 127:     ANSELH = 0;
  1178  0403  0189               	clrf	9	;volatile
  1179  0404                     l1671:
  1180                           
  1181                           ;LAB2.c: 129:     TRISA = 0b0011;
  1182  0404  3003               	movlw	3
  1183  0405  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0406  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0407  0085               	movwf	5	;volatile
  1186                           
  1187                           ;LAB2.c: 130:     TRISB = 0;
  1188  0408  0186               	clrf	6	;volatile
  1189                           
  1190                           ;LAB2.c: 131:     TRISD = 0;
  1191  0409  0188               	clrf	8	;volatile
  1192                           
  1193                           ;LAB2.c: 132:     TRISC = 0;
  1194  040A  0187               	clrf	7	;volatile
  1195                           
  1196                           ;LAB2.c: 133:     TRISE = 0;
  1197  040B  0189               	clrf	9	;volatile
  1198                           
  1199                           ;LAB2.c: 135:     PORTA = 0;
  1200  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1201  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1202  040E  0185               	clrf	5	;volatile
  1203                           
  1204                           ;LAB2.c: 136:     PORTD = 0;
  1205  040F  0188               	clrf	8	;volatile
  1206                           
  1207                           ;LAB2.c: 137:     PORTC = 0;
  1208  0410  0187               	clrf	7	;volatile
  1209                           
  1210                           ;LAB2.c: 138:     PORTE = 0;
  1211  0411  0189               	clrf	9	;volatile
  1212                           
  1213                           ;LAB2.c: 139:     PORTB = 0;
  1214  0412  0186               	clrf	6	;volatile
  1215  0413                     l1673:
  1216                           
  1217                           ;LAB2.c: 142:     OSCCONbits.IRCF = 0b0110;
  1218  0413  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0414  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0415  080F               	movf	15,w	;volatile
  1221  0416  398F               	andlw	-113
  1222  0417  3860               	iorlw	96
  1223  0418  008F               	movwf	15	;volatile
  1224  0419                     l1675:
  1225                           
  1226                           ;LAB2.c: 143:     OSCCONbits.SCS = 1;
  1227  0419  140F               	bsf	15,0	;volatile
  1228  041A                     l1677:
  1229                           
  1230                           ;LAB2.c: 146:     ADCON1bits.ADFM = 0;
  1231  041A  139F               	bcf	31,7	;volatile
  1232  041B                     l1679:
  1233                           
  1234                           ;LAB2.c: 147:     ADCON1bits.VCFG0 = 0;
  1235  041B  121F               	bcf	31,4	;volatile
  1236  041C                     l1681:
  1237                           
  1238                           ;LAB2.c: 148:     ADCON1bits.VCFG1 = 0;
  1239  041C  129F               	bcf	31,5	;volatile
  1240  041D                     l1683:
  1241                           
  1242                           ;LAB2.c: 150:     ADCON0bits.ADCS = 0b01;
  1243  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1244  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1245  041F  081F               	movf	31,w	;volatile
  1246  0420  393F               	andlw	-193
  1247  0421  3840               	iorlw	64
  1248  0422  009F               	movwf	31	;volatile
  1249  0423                     l1685:
  1250                           
  1251                           ;LAB2.c: 151:     ADCON0bits.CHS = 0;
  1252  0423  30C3               	movlw	-61
  1253  0424  059F               	andwf	31,f	;volatile
  1254  0425                     l1687:
  1255                           
  1256                           ;LAB2.c: 152:     ADCON0bits.ADON = 1;
  1257  0425  141F               	bsf	31,0	;volatile
  1258  0426                     l1689:
  1259                           
  1260                           ;LAB2.c: 153:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1261  0426  3010               	movlw	16
  1262  0427  00F4               	movwf	??_setup
  1263  0428                     u1887:
  1264  0428  0BF4               	decfsz	??_setup,f
  1265  0429  2C28               	goto	u1887
  1266  042A  0000               	nop
  1267  042B                     l1691:
  1268                           
  1269                           ;LAB2.c: 156:     PIR1bits.ADIF = 0;
  1270  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1271  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1272  042D  130C               	bcf	12,6	;volatile
  1273  042E                     l1693:
  1274                           
  1275                           ;LAB2.c: 157:     PIE1bits.ADIE = 1;
  1276  042E  1683               	bsf	3,5	;RP0=1, select bank1
  1277  042F  1303               	bcf	3,6	;RP1=0, select bank1
  1278  0430  170C               	bsf	12,6	;volatile
  1279  0431                     l1695:
  1280                           
  1281                           ;LAB2.c: 158:     PIR1bits.RCIF = 0;
  1282  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0433  128C               	bcf	12,5	;volatile
  1285  0434                     l1697:
  1286                           
  1287                           ;LAB2.c: 159:     PIE1bits.RCIE = 1;
  1288  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1289  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1290  0436  168C               	bsf	12,5	;volatile
  1291  0437                     l1699:
  1292                           
  1293                           ;LAB2.c: 160:     INTCONbits.PEIE = 1;
  1294  0437  170B               	bsf	11,6	;volatile
  1295  0438                     l1701:
  1296                           
  1297                           ;LAB2.c: 161:     INTCONbits.GIE = 1;
  1298  0438  178B               	bsf	11,7	;volatile
  1299  0439                     l1703:
  1300                           
  1301                           ;LAB2.c: 164:     TXSTAbits.SYNC = 0;
  1302  0439  1218               	bcf	24,4	;volatile
  1303  043A                     l1705:
  1304                           
  1305                           ;LAB2.c: 165:     TXSTAbits.BRGH = 1;
  1306  043A  1518               	bsf	24,2	;volatile
  1307  043B                     l1707:
  1308                           
  1309                           ;LAB2.c: 167:     BAUDCTLbits.BRG16 = 1;
  1310  043B  1683               	bsf	3,5	;RP0=1, select bank3
  1311  043C  1703               	bsf	3,6	;RP1=1, select bank3
  1312  043D  1587               	bsf	7,3	;volatile
  1313  043E                     l1709:
  1314                           
  1315                           ;LAB2.c: 169:     SPBRG = 23;
  1316  043E  3017               	movlw	23
  1317  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0441  0099               	movwf	25	;volatile
  1320  0442                     l1711:
  1321                           
  1322                           ;LAB2.c: 170:     SPBRGH = 0;
  1323  0442  019A               	clrf	26	;volatile
  1324  0443                     l1713:
  1325                           
  1326                           ;LAB2.c: 172:     RCSTAbits.SPEN = 1;
  1327  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0445  1798               	bsf	24,7	;volatile
  1330  0446                     l1715:
  1331                           
  1332                           ;LAB2.c: 173:     RCSTAbits.RX9 = 0;
  1333  0446  1318               	bcf	24,6	;volatile
  1334  0447                     l1717:
  1335                           
  1336                           ;LAB2.c: 174:     RCSTAbits.CREN = 1;
  1337  0447  1618               	bsf	24,4	;volatile
  1338  0448                     l1719:
  1339                           
  1340                           ;LAB2.c: 176:     TXSTAbits.TXEN = 1;
  1341  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1343  044A  1698               	bsf	24,5	;volatile
  1344  044B                     l118:
  1345  044B  0008               	return
  1346  044C                     __end_of_setup:
  1347                           
  1348                           	psect	text2
  1349  0498                     __ptext2:	
  1350 ;; *************** function _set_cursor *****************
  1351 ;; Defined at:
  1352 ;;		line 71 in file "LCD.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  linea           1    wreg     unsigned char 
  1355 ;;  posicion        1    0[BANK0 ] unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  linea           1    3[BANK0 ] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       1       0       0       0
  1368 ;;      Locals:         0       1       0       0       0
  1369 ;;      Temps:          0       2       0       0       0
  1370 ;;      Totals:         0       4       0       0       0
  1371 ;;Total ram usage:        4 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 4
  1374 ;; This function calls:
  1375 ;;		_Escribir_comandoLCD
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _set_cursor
  1383  0498                     _set_cursor:
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1387                           ;set_cursor@linea stored from wreg
  1388  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1390  049A  00A3               	movwf	set_cursor@linea
  1391  049B                     l2137:
  1392                           
  1393                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1394  049B  1287               	bcf	7,5	;volatile
  1395  049C  1208               	bcf	8,4	;volatile
  1396  049D                     l2139:
  1397                           
  1398                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1399  049D  0323               	decf	set_cursor@linea,w
  1400  049E  1D03               	btfss	3,2
  1401  049F  2CA1               	goto	u1821
  1402  04A0  2CA2               	goto	u1820
  1403  04A1                     u1821:
  1404  04A1  2CA9               	goto	l2143
  1405  04A2                     u1820:
  1406  04A2                     l2141:
  1407  04A2  3080               	movlw	128
  1408  04A3  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  1409  04A8  2CB5               	goto	l2147
  1410  04A9                     l2143:
  1411  04A9  3002               	movlw	2
  1412  04AA  0623               	xorwf	set_cursor@linea,w
  1413  04AB  1D03               	btfss	3,2
  1414  04AC  2CAE               	goto	u1831
  1415  04AD  2CAF               	goto	u1830
  1416  04AE                     u1831:
  1417  04AE  2CB5               	goto	l2147
  1418  04AF                     u1830:
  1419  04AF                     l2145:
  1420  04AF  30C0               	movlw	192
  1421  04B0  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  1422  04B5                     l2147:
  1423                           
  1424                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1425  04B5  3068               	movlw	104
  1426  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1427  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1428  04B8  00A2               	movwf	??_set_cursor+1
  1429  04B9  30E3               	movlw	227
  1430  04BA  00A1               	movwf	??_set_cursor
  1431  04BB                     u1897:
  1432  04BB  0BA1               	decfsz	??_set_cursor,f
  1433  04BC  2CBB               	goto	u1897
  1434  04BD  0BA2               	decfsz	??_set_cursor+1,f
  1435  04BE  2CBB               	goto	u1897
  1436  04BF  2CC0               	nop2
  1437  04C0                     l2149:
  1438                           
  1439                           ;LCD.c: 80:     if (posicion != 0){
  1440  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1441  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1442  04C2  0820               	movf	set_cursor@posicion,w
  1443  04C3  1903               	btfsc	3,2
  1444  04C4  2CC6               	goto	u1841
  1445  04C5  2CC7               	goto	u1840
  1446  04C6                     u1841:
  1447  04C6  2CE2               	goto	l186
  1448  04C7                     u1840:
  1449  04C7  2CD2               	goto	l2157
  1450  04C8                     l2153:
  1451                           
  1452                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1453  04C8  3014               	movlw	20
  1454  04C9  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  1455  04CE                     l2155:
  1456                           
  1457                           ;LCD.c: 83:             posicion--;
  1458  04CE  3001               	movlw	1
  1459  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1460  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1461  04D1  02A0               	subwf	set_cursor@posicion,f
  1462  04D2                     l2157:
  1463                           
  1464                           ;LCD.c: 81:         while(posicion > 0){
  1465  04D2  0820               	movf	set_cursor@posicion,w
  1466  04D3  1D03               	btfss	3,2
  1467  04D4  2CD6               	goto	u1851
  1468  04D5  2CD7               	goto	u1850
  1469  04D6                     u1851:
  1470  04D6  2CC8               	goto	l2153
  1471  04D7                     u1850:
  1472  04D7                     l2159:
  1473                           
  1474                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1475  04D7  3068               	movlw	104
  1476  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1477  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1478  04DA  00A2               	movwf	??_set_cursor+1
  1479  04DB  30E3               	movlw	227
  1480  04DC  00A1               	movwf	??_set_cursor
  1481  04DD                     u1907:
  1482  04DD  0BA1               	decfsz	??_set_cursor,f
  1483  04DE  2CDD               	goto	u1907
  1484  04DF  0BA2               	decfsz	??_set_cursor+1,f
  1485  04E0  2CDD               	goto	u1907
  1486  04E1  2CE2               	nop2
  1487  04E2                     l186:
  1488  04E2  0008               	return
  1489  04E3                     __end_of_set_cursor:
  1490                           
  1491                           	psect	text3
  1492  0606                     __ptext3:	
  1493 ;; *************** function _dato_recibido *****************
  1494 ;; Defined at:
  1495 ;;		line 203 in file "LAB2.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       7       0       0       0
  1512 ;;      Totals:         0       7       0       0       0
  1513 ;;Total ram usage:        7 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 4
  1516 ;; This function calls:
  1517 ;;		_divisor1
  1518 ;;		_sprintf
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _dato_recibido
  1526  0606                     _dato_recibido:
  1527  0606                     l2173:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1530                           
  1531                           
  1532                           ;LAB2.c: 204:     divisor1(Cont_U, vol3);
  1533  0606  3068               	movlw	(low (_vol3| 0))& (0+255)
  1534  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0609  00BD               	movwf	??_dato_recibido
  1537  060A  083D               	movf	??_dato_recibido,w
  1538  060B  00F5               	movwf	divisor1@dig
  1539  060C  0847               	movf	_Cont_U,w
  1540  060D  120A  118A  23AE  120A  118A  	fcall	_divisor1
  1541                           
  1542                           ;LAB2.c: 205:     sprintf(buffer3, "%d%d%d", vol3[2], vol3[1], vol3[0]);
  1543  0612  3031               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1544  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0615  00BD               	movwf	??_dato_recibido
  1547  0616  083D               	movf	??_dato_recibido,w
  1548  0617  00AC               	movwf	sprintf@f
  1549  0618  086A               	movf	_vol3+2,w
  1550  0619  00BE               	movwf	??_dato_recibido+1
  1551  061A  01BF               	clrf	??_dato_recibido+2
  1552  061B  083E               	movf	??_dato_recibido+1,w
  1553  061C  00AD               	movwf	?_sprintf+1
  1554  061D  083F               	movf	??_dato_recibido+2,w
  1555  061E  00AE               	movwf	?_sprintf+2
  1556  061F  0869               	movf	_vol3+1,w
  1557  0620  00C0               	movwf	??_dato_recibido+3
  1558  0621  01C1               	clrf	??_dato_recibido+4
  1559  0622  0840               	movf	??_dato_recibido+3,w
  1560  0623  00AF               	movwf	?_sprintf+3
  1561  0624  0841               	movf	??_dato_recibido+4,w
  1562  0625  00B0               	movwf	?_sprintf+4
  1563  0626  0868               	movf	_vol3,w
  1564  0627  00C2               	movwf	??_dato_recibido+5
  1565  0628  01C3               	clrf	??_dato_recibido+6
  1566  0629  0842               	movf	??_dato_recibido+5,w
  1567  062A  00B1               	movwf	?_sprintf+5
  1568  062B  0843               	movf	??_dato_recibido+6,w
  1569  062C  00B2               	movwf	?_sprintf+6
  1570  062D  304A               	movlw	(low (_buffer3| 0))& (0+255)
  1571  062E  120A  118A  2020  120A  118A  	fcall	_sprintf
  1572  0633                     l134:
  1573  0633  0008               	return
  1574  0634                     __end_of_dato_recibido:
  1575                           
  1576                           	psect	text4
  1577  03AE                     __ptext4:	
  1578 ;; *************** function _divisor1 *****************
  1579 ;; Defined at:
  1580 ;;		line 196 in file "LAB2.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  a               1    wreg     unsigned char 
  1583 ;;  dig             1    5[COMMON] PTR unsigned char 
  1584 ;;		 -> vol3(1), 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  a               1   12[BANK0 ] unsigned char 
  1587 ;;  i               2   13[BANK0 ] int 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         1       0       0       0       0
  1598 ;;      Locals:         0       3       0       0       0
  1599 ;;      Temps:          0       4       0       0       0
  1600 ;;      Totals:         1       7       0       0       0
  1601 ;;Total ram usage:        8 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 3
  1604 ;; This function calls:
  1605 ;;		___awdiv
  1606 ;;		___awmod
  1607 ;; This function is called by:
  1608 ;;		_dato_recibido
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _divisor1
  1614  03AE                     _divisor1:
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _divisor1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1618                           ;divisor1@a stored from wreg
  1619  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1620  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1621  03B0  00AC               	movwf	divisor1@a
  1622  03B1                     l2071:
  1623                           
  1624                           ;LAB2.c: 197:     for(int i = 0; i<3 ; i++){
  1625  03B1  01AD               	clrf	divisor1@i
  1626  03B2  01AE               	clrf	divisor1@i+1
  1627  03B3                     l2077:
  1628                           
  1629                           ;LAB2.c: 198:         dig[i] = a % 10;
  1630  03B3  300A               	movlw	10
  1631  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1632  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1633  03B6  00A0               	movwf	___awmod@divisor
  1634  03B7  3000               	movlw	0
  1635  03B8  00A1               	movwf	___awmod@divisor+1
  1636  03B9  082C               	movf	divisor1@a,w
  1637  03BA  00A8               	movwf	??_divisor1
  1638  03BB  01A9               	clrf	??_divisor1+1
  1639  03BC  0828               	movf	??_divisor1,w
  1640  03BD  00A2               	movwf	___awmod@dividend
  1641  03BE  0829               	movf	??_divisor1+1,w
  1642  03BF  00A3               	movwf	___awmod@dividend+1
  1643  03C0  120A  118A  22FC  120A  118A  	fcall	___awmod
  1644  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1645  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1646  03C7  0820               	movf	?___awmod,w
  1647  03C8  00AA               	movwf	??_divisor1+2
  1648  03C9  082D               	movf	divisor1@i,w
  1649  03CA  0775               	addwf	divisor1@dig,w
  1650  03CB  00AB               	movwf	??_divisor1+3
  1651  03CC  082B               	movf	??_divisor1+3,w
  1652  03CD  0084               	movwf	4
  1653  03CE  082A               	movf	??_divisor1+2,w
  1654  03CF  1383               	bcf	3,7	;select IRP bank0
  1655  03D0  0080               	movwf	0
  1656                           
  1657                           ;LAB2.c: 199:         a = (a - dig[i])/10;
  1658  03D1  300A               	movlw	10
  1659  03D2  00A0               	movwf	___awdiv@divisor
  1660  03D3  3000               	movlw	0
  1661  03D4  00A1               	movwf	___awdiv@divisor+1
  1662  03D5  082D               	movf	divisor1@i,w
  1663  03D6  0775               	addwf	divisor1@dig,w
  1664  03D7  00A8               	movwf	??_divisor1
  1665  03D8  0828               	movf	??_divisor1,w
  1666  03D9  0084               	movwf	4
  1667  03DA  0800               	movf	0,w
  1668  03DB  022C               	subwf	divisor1@a,w
  1669  03DC  00A2               	movwf	___awdiv@dividend
  1670  03DD  01A3               	clrf	___awdiv@dividend+1
  1671  03DE  1C03               	skipc
  1672  03DF  03A3               	decf	___awdiv@dividend+1,f
  1673  03E0  120A  118A  2238  120A  118A  	fcall	___awdiv
  1674  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1675  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1676  03E7  0820               	movf	?___awdiv,w
  1677  03E8  00A9               	movwf	??_divisor1+1
  1678  03E9  0829               	movf	??_divisor1+1,w
  1679  03EA  00AC               	movwf	divisor1@a
  1680  03EB                     l2079:
  1681                           
  1682                           ;LAB2.c: 200:     }
  1683  03EB  3001               	movlw	1
  1684  03EC  07AD               	addwf	divisor1@i,f
  1685  03ED  1803               	skipnc
  1686  03EE  0AAE               	incf	divisor1@i+1,f
  1687  03EF  3000               	movlw	0
  1688  03F0  07AE               	addwf	divisor1@i+1,f
  1689  03F1                     l2081:
  1690  03F1  082E               	movf	divisor1@i+1,w
  1691  03F2  3A80               	xorlw	128
  1692  03F3  00FF               	movwf	btemp+1
  1693  03F4  3080               	movlw	128
  1694  03F5  027F               	subwf	btemp+1,w
  1695  03F6  1D03               	skipz
  1696  03F7  2BFA               	goto	u1735
  1697  03F8  3003               	movlw	3
  1698  03F9  022D               	subwf	divisor1@i,w
  1699  03FA                     u1735:
  1700  03FA  1C03               	skipc
  1701  03FB  2BFD               	goto	u1731
  1702  03FC  2BFE               	goto	u1730
  1703  03FD                     u1731:
  1704  03FD  2BB3               	goto	l2077
  1705  03FE                     u1730:
  1706  03FE                     l131:
  1707  03FE  0008               	return
  1708  03FF                     __end_of_divisor1:
  1709                           
  1710                           	psect	text5
  1711  02A1                     __ptext5:	
  1712 ;; *************** function _conversion_char *****************
  1713 ;; Defined at:
  1714 ;;		line 180 in file "LAB2.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       7       0       0       0
  1731 ;;      Totals:         0       7       0       0       0
  1732 ;;Total ram usage:        7 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 4
  1735 ;; This function calls:
  1736 ;;		_divisor
  1737 ;;		_sprintf
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _conversion_char
  1745  02A1                     _conversion_char:
  1746  02A1                     l2171:	
  1747                           ;incstack = 0
  1748                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1749                           
  1750                           
  1751                           ;LAB2.c: 181:     divisor(cont1, vol1);
  1752  02A1  306A               	movlw	(low (_vol1| 0))& (0+255)
  1753  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1754  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1755  02A4  00BD               	movwf	??_conversion_char
  1756  02A5  083D               	movf	??_conversion_char,w
  1757  02A6  00F5               	movwf	divisor@dig
  1758  02A7  0849               	movf	_cont1,w
  1759  02A8  120A  118A  2357  120A  118A  	fcall	_divisor
  1760                           
  1761                           ;LAB2.c: 182:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1762  02AD  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1763  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1764  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1765  02B0  00BD               	movwf	??_conversion_char
  1766  02B1  083D               	movf	??_conversion_char,w
  1767  02B2  00AC               	movwf	sprintf@f
  1768  02B3  086C               	movf	_vol1+2,w
  1769  02B4  00BE               	movwf	??_conversion_char+1
  1770  02B5  01BF               	clrf	??_conversion_char+2
  1771  02B6  083E               	movf	??_conversion_char+1,w
  1772  02B7  00AD               	movwf	?_sprintf+1
  1773  02B8  083F               	movf	??_conversion_char+2,w
  1774  02B9  00AE               	movwf	?_sprintf+2
  1775  02BA  086B               	movf	_vol1+1,w
  1776  02BB  00C0               	movwf	??_conversion_char+3
  1777  02BC  01C1               	clrf	??_conversion_char+4
  1778  02BD  0840               	movf	??_conversion_char+3,w
  1779  02BE  00AF               	movwf	?_sprintf+3
  1780  02BF  0841               	movf	??_conversion_char+4,w
  1781  02C0  00B0               	movwf	?_sprintf+4
  1782  02C1  086A               	movf	_vol1,w
  1783  02C2  00C2               	movwf	??_conversion_char+5
  1784  02C3  01C3               	clrf	??_conversion_char+6
  1785  02C4  0842               	movf	??_conversion_char+5,w
  1786  02C5  00B1               	movwf	?_sprintf+5
  1787  02C6  0843               	movf	??_conversion_char+6,w
  1788  02C7  00B2               	movwf	?_sprintf+6
  1789  02C8  305E               	movlw	(low (_buffer1| 0))& (0+255)
  1790  02C9  120A  118A  2020  120A  118A  	fcall	_sprintf
  1791                           
  1792                           ;LAB2.c: 184:     divisor(cont2, vol2);
  1793  02CE  3069               	movlw	(low (_vol2| 0))& (0+255)
  1794  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1795  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1796  02D1  00BD               	movwf	??_conversion_char
  1797  02D2  083D               	movf	??_conversion_char,w
  1798  02D3  00F5               	movwf	divisor@dig
  1799  02D4  0848               	movf	_cont2,w
  1800  02D5  120A  118A  2357  120A  118A  	fcall	_divisor
  1801                           
  1802                           ;LAB2.c: 185:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1803  02DA  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1804  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1805  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1806  02DD  00BD               	movwf	??_conversion_char
  1807  02DE  083D               	movf	??_conversion_char,w
  1808  02DF  00AC               	movwf	sprintf@f
  1809  02E0  086B               	movf	_vol2+2,w
  1810  02E1  00BE               	movwf	??_conversion_char+1
  1811  02E2  01BF               	clrf	??_conversion_char+2
  1812  02E3  083E               	movf	??_conversion_char+1,w
  1813  02E4  00AD               	movwf	?_sprintf+1
  1814  02E5  083F               	movf	??_conversion_char+2,w
  1815  02E6  00AE               	movwf	?_sprintf+2
  1816  02E7  086A               	movf	_vol2+1,w
  1817  02E8  00C0               	movwf	??_conversion_char+3
  1818  02E9  01C1               	clrf	??_conversion_char+4
  1819  02EA  0840               	movf	??_conversion_char+3,w
  1820  02EB  00AF               	movwf	?_sprintf+3
  1821  02EC  0841               	movf	??_conversion_char+4,w
  1822  02ED  00B0               	movwf	?_sprintf+4
  1823  02EE  0869               	movf	_vol2,w
  1824  02EF  00C2               	movwf	??_conversion_char+5
  1825  02F0  01C3               	clrf	??_conversion_char+6
  1826  02F1  0842               	movf	??_conversion_char+5,w
  1827  02F2  00B1               	movwf	?_sprintf+5
  1828  02F3  0843               	movf	??_conversion_char+6,w
  1829  02F4  00B2               	movwf	?_sprintf+6
  1830  02F5  3054               	movlw	(low (_buffer2| 0))& (0+255)
  1831  02F6  120A  118A  2020  120A  118A  	fcall	_sprintf
  1832  02FB                     l121:
  1833  02FB  0008               	return
  1834  02FC                     __end_of_conversion_char:
  1835                           
  1836                           	psect	text6
  1837  0020                     __ptext6:	
  1838 ;; *************** function _sprintf *****************
  1839 ;; Defined at:
  1840 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  sp              1    wreg     PTR unsigned char 
  1843 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1844 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1845 ;;		 -> STR_6(7), STR_5(8), STR_4(8), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1848 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1849 ;;  tmpval          4    0        struct .
  1850 ;;  val             2   25[BANK0 ] unsigned int 
  1851 ;;  cp              2    0        PTR const unsigned char 
  1852 ;;  len             2    0        unsigned int 
  1853 ;;  c               1   28[BANK0 ] unsigned char 
  1854 ;;  prec            1   24[BANK0 ] char 
  1855 ;;  flag            1   23[BANK0 ] unsigned char 
  1856 ;;  ap              1   22[BANK0 ] PTR void [1]
  1857 ;;		 -> ?_sprintf(2), 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   12[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       7       0       0       0
  1868 ;;      Locals:         0       7       0       0       0
  1869 ;;      Temps:          0       3       0       0       0
  1870 ;;      Totals:         0      17       0       0       0
  1871 ;;Total ram usage:       17 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 3
  1874 ;; This function calls:
  1875 ;;		___lwdiv
  1876 ;;		___lwmod
  1877 ;; This function is called by:
  1878 ;;		_conversion_char
  1879 ;;		_dato_recibido
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _sprintf
  1885  0020                     _sprintf:
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1889                           ;sprintf@sp stored from wreg
  1890  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0022  00BB               	movwf	sprintf@sp
  1893  0023                     l2009:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1896  0023  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1897  0024  00B3               	movwf	??_sprintf
  1898  0025  0833               	movf	??_sprintf,w
  1899  0026  00B6               	movwf	sprintf@ap
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1902  0027  28F3               	goto	l2061
  1903  0028                     l2011:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1906  0028  3025               	movlw	37
  1907  0029  063C               	xorwf	sprintf@c,w
  1908  002A  1903               	btfsc	3,2
  1909  002B  282D               	goto	u1661
  1910  002C  282E               	goto	u1660
  1911  002D                     u1661:
  1912  002D  283A               	goto	l2017
  1913  002E                     u1660:
  1914  002E                     l2013:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1917  002E  083C               	movf	sprintf@c,w
  1918  002F  00B3               	movwf	??_sprintf
  1919  0030  083B               	movf	sprintf@sp,w
  1920  0031  0084               	movwf	4
  1921  0032  0833               	movf	??_sprintf,w
  1922  0033  1383               	bcf	3,7	;select IRP bank0
  1923  0034  0080               	movwf	0
  1924  0035                     l2015:
  1925  0035  3001               	movlw	1
  1926  0036  00B3               	movwf	??_sprintf
  1927  0037  0833               	movf	??_sprintf,w
  1928  0038  07BB               	addwf	sprintf@sp,f
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1931  0039  28F3               	goto	l2061
  1932  003A                     l2017:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1935  003A  01B7               	clrf	sprintf@flag
  1936  003B                     l2021:	
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1938                           
  1939  003B  3001               	movlw	1
  1940  003C  07AC               	addwf	sprintf@f,f
  1941  003D  30FF               	movlw	-1
  1942  003E  072C               	addwf	sprintf@f,w
  1943  003F  0084               	movwf	4
  1944  0040  120A  118A  2456  120A  118A  	fcall	stringdir
  1945  0045  00BC               	movwf	sprintf@c
  1946  0046  00B3               	movwf	??_sprintf
  1947  0047  01B4               	clrf	??_sprintf+1
  1948                           
  1949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 1, Range of values is 0 to 0
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte            4     3 (average)
  1955                           ; direct_byte           11     8 (fixed)
  1956                           ; jumptable            260     6 (fixed)
  1957                           ;	Chosen strategy is simple_byte
  1958  0048  0834               	movf	??_sprintf+1,w
  1959  0049  3A00               	xorlw	0	; case 0
  1960  004A  1903               	skipnz
  1961  004B  284D               	goto	l2229
  1962  004C  28F3               	goto	l2061
  1963  004D                     l2229:
  1964                           
  1965                           ; Switch size 1, requested type "simple"
  1966                           ; Number of cases is 3, Range of values is 0 to 105
  1967                           ; switch strategies available:
  1968                           ; Name         Instructions Cycles
  1969                           ; simple_byte           10     6 (average)
  1970                           ; jumptable            260     6 (fixed)
  1971                           ;	Chosen strategy is simple_byte
  1972  004D  0833               	movf	??_sprintf,w
  1973  004E  3A00               	xorlw	0	; case 0
  1974  004F  1903               	skipnz
  1975  0050  2905               	goto	l2063
  1976  0051  3A64               	xorlw	100	; case 100
  1977  0052  1903               	skipnz
  1978  0053  2858               	goto	l2023
  1979  0054  3A0D               	xorlw	13	; case 105
  1980  0055  1903               	skipnz
  1981  0056  2858               	goto	l2023
  1982  0057  28F3               	goto	l2061
  1983  0058                     l2023:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1986  0058  0836               	movf	sprintf@ap,w
  1987  0059  0084               	movwf	4
  1988  005A  1383               	bcf	3,7	;select IRP bank0
  1989  005B  0800               	movf	0,w
  1990  005C  00B9               	movwf	sprintf@val
  1991  005D  0A84               	incf	4,f
  1992  005E  0800               	movf	0,w
  1993  005F  00BA               	movwf	sprintf@val+1
  1994  0060                     l2025:
  1995  0060  3002               	movlw	2
  1996  0061  00B3               	movwf	??_sprintf
  1997  0062  0833               	movf	??_sprintf,w
  1998  0063  07B6               	addwf	sprintf@ap,f
  1999  0064                     l2027:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2002  0064  1FBA               	btfss	sprintf@val+1,7
  2003  0065  2867               	goto	u1671
  2004  0066  2868               	goto	u1670
  2005  0067                     u1671:
  2006  0067  2871               	goto	l2033
  2007  0068                     u1670:
  2008  0068                     l2029:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2011  0068  3003               	movlw	3
  2012  0069  00B3               	movwf	??_sprintf
  2013  006A  0833               	movf	??_sprintf,w
  2014  006B  04B7               	iorwf	sprintf@flag,f
  2015  006C                     l2031:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2018  006C  09B9               	comf	sprintf@val,f
  2019  006D  09BA               	comf	sprintf@val+1,f
  2020  006E  0AB9               	incf	sprintf@val,f
  2021  006F  1903               	skipnz
  2022  0070  0ABA               	incf	sprintf@val+1,f
  2023  0071                     l2033:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2026  0071  01BC               	clrf	sprintf@c
  2027  0072  0ABC               	incf	sprintf@c,f
  2028  0073                     l2039:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2031  0073  083C               	movf	sprintf@c,w
  2032  0074  00B3               	movwf	??_sprintf
  2033  0075  0733               	addwf	??_sprintf,w
  2034  0076  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2035  0077  0084               	movwf	4
  2036  0078  120A  118A  2456  120A  118A  	fcall	stringdir
  2037  007D  00B4               	movwf	??_sprintf+1
  2038  007E  120A  118A  2456  120A  118A  	fcall	stringdir
  2039  0083  00B5               	movwf	??_sprintf+2
  2040  0084  0835               	movf	??_sprintf+2,w
  2041  0085  023A               	subwf	sprintf@val+1,w
  2042  0086  1D03               	skipz
  2043  0087  288A               	goto	u1685
  2044  0088  0834               	movf	??_sprintf+1,w
  2045  0089  0239               	subwf	sprintf@val,w
  2046  008A                     u1685:
  2047  008A  1803               	skipnc
  2048  008B  288D               	goto	u1681
  2049  008C  288E               	goto	u1680
  2050  008D                     u1681:
  2051  008D  288F               	goto	l2043
  2052  008E                     u1680:
  2053  008E  2899               	goto	l2045
  2054  008F                     l2043:
  2055  008F  3001               	movlw	1
  2056  0090  00B3               	movwf	??_sprintf
  2057  0091  0833               	movf	??_sprintf,w
  2058  0092  07BC               	addwf	sprintf@c,f
  2059  0093  3005               	movlw	5
  2060  0094  063C               	xorwf	sprintf@c,w
  2061  0095  1D03               	btfss	3,2
  2062  0096  2898               	goto	u1691
  2063  0097  2899               	goto	u1690
  2064  0098                     u1691:
  2065  0098  2873               	goto	l2039
  2066  0099                     u1690:
  2067  0099                     l2045:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2070  0099  0837               	movf	sprintf@flag,w
  2071  009A  3903               	andlw	3
  2072  009B  1903               	btfsc	3,2
  2073  009C  289E               	goto	u1701
  2074  009D  289F               	goto	u1700
  2075  009E                     u1701:
  2076  009E  28AA               	goto	l2051
  2077  009F                     u1700:
  2078  009F                     l2047:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2081  009F  302D               	movlw	45
  2082  00A0  00B3               	movwf	??_sprintf
  2083  00A1  083B               	movf	sprintf@sp,w
  2084  00A2  0084               	movwf	4
  2085  00A3  0833               	movf	??_sprintf,w
  2086  00A4  1383               	bcf	3,7	;select IRP bank0
  2087  00A5  0080               	movwf	0
  2088  00A6                     l2049:
  2089  00A6  3001               	movlw	1
  2090  00A7  00B3               	movwf	??_sprintf
  2091  00A8  0833               	movf	??_sprintf,w
  2092  00A9  07BB               	addwf	sprintf@sp,f
  2093  00AA                     l2051:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2096  00AA  083C               	movf	sprintf@c,w
  2097  00AB  00B3               	movwf	??_sprintf
  2098  00AC  0833               	movf	??_sprintf,w
  2099  00AD  00B8               	movwf	sprintf@prec
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2102  00AE  28EA               	goto	l2059
  2103  00AF                     l2053:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2106  00AF  300A               	movlw	10
  2107  00B0  00A7               	movwf	___lwmod@divisor
  2108  00B1  3000               	movlw	0
  2109  00B2  00A8               	movwf	___lwmod@divisor+1
  2110  00B3  0838               	movf	sprintf@prec,w
  2111  00B4  00B3               	movwf	??_sprintf
  2112  00B5  0733               	addwf	??_sprintf,w
  2113  00B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2114  00B7  0084               	movwf	4
  2115  00B8  120A  118A  2456  120A  118A  	fcall	stringdir
  2116  00BD  00A0               	movwf	___lwdiv@divisor
  2117  00BE  120A  118A  2456  120A  118A  	fcall	stringdir
  2118  00C3  00A1               	movwf	___lwdiv@divisor+1
  2119  00C4  083A               	movf	sprintf@val+1,w
  2120  00C5  00A3               	movwf	___lwdiv@dividend+1
  2121  00C6  0839               	movf	sprintf@val,w
  2122  00C7  00A2               	movwf	___lwdiv@dividend
  2123  00C8  120A  118A  24E3  120A  118A  	fcall	___lwdiv
  2124  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2125  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2126  00CF  0821               	movf	?___lwdiv+1,w
  2127  00D0  00AA               	movwf	___lwmod@dividend+1
  2128  00D1  0820               	movf	?___lwdiv,w
  2129  00D2  00A9               	movwf	___lwmod@dividend
  2130  00D3  120A  118A  256C  120A  118A  	fcall	___lwmod
  2131  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2132  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2133  00DA  0827               	movf	?___lwmod,w
  2134  00DB  3E30               	addlw	48
  2135  00DC  00B4               	movwf	??_sprintf+1
  2136  00DD  0834               	movf	??_sprintf+1,w
  2137  00DE  00BC               	movwf	sprintf@c
  2138  00DF                     l2055:
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2141  00DF  083C               	movf	sprintf@c,w
  2142  00E0  00B3               	movwf	??_sprintf
  2143  00E1  083B               	movf	sprintf@sp,w
  2144  00E2  0084               	movwf	4
  2145  00E3  0833               	movf	??_sprintf,w
  2146  00E4  1383               	bcf	3,7	;select IRP bank0
  2147  00E5  0080               	movwf	0
  2148  00E6                     l2057:
  2149  00E6  3001               	movlw	1
  2150  00E7  00B3               	movwf	??_sprintf
  2151  00E8  0833               	movf	??_sprintf,w
  2152  00E9  07BB               	addwf	sprintf@sp,f
  2153  00EA                     l2059:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2156  00EA  30FF               	movlw	255
  2157  00EB  00B3               	movwf	??_sprintf
  2158  00EC  0833               	movf	??_sprintf,w
  2159  00ED  07B8               	addwf	sprintf@prec,f
  2160  00EE  0A38               	incf	sprintf@prec,w
  2161  00EF  1D03               	btfss	3,2
  2162  00F0  28F2               	goto	u1711
  2163  00F1  28F3               	goto	u1710
  2164  00F2                     u1711:
  2165  00F2  28AF               	goto	l2053
  2166  00F3                     u1710:
  2167  00F3                     l2061:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2170  00F3  3001               	movlw	1
  2171  00F4  07AC               	addwf	sprintf@f,f
  2172  00F5  30FF               	movlw	-1
  2173  00F6  072C               	addwf	sprintf@f,w
  2174  00F7  0084               	movwf	4
  2175  00F8  120A  118A  2456  120A  118A  	fcall	stringdir
  2176  00FD  00B3               	movwf	??_sprintf
  2177  00FE  0833               	movf	??_sprintf,w
  2178  00FF  00BC               	movwf	sprintf@c
  2179  0100  083C               	movf	sprintf@c,w
  2180  0101  1D03               	btfss	3,2
  2181  0102  2904               	goto	u1721
  2182  0103  2905               	goto	u1720
  2183  0104                     u1721:
  2184  0104  2828               	goto	l2011
  2185  0105                     u1720:
  2186  0105                     l2063:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2189  0105  083B               	movf	sprintf@sp,w
  2190  0106  0084               	movwf	4
  2191  0107  1383               	bcf	3,7	;select IRP bank0
  2192  0108  0180               	clrf	0
  2193  0109                     l359:
  2194  0109  0008               	return
  2195  010A                     __end_of_sprintf:
  2196                           
  2197                           	psect	text7
  2198  056C                     __ptext7:	
  2199 ;; *************** function ___lwmod *****************
  2200 ;; Defined at:
  2201 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  divisor         2    7[BANK0 ] unsigned int 
  2204 ;;  dividend        2    9[BANK0 ] unsigned int 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  counter         1   11[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    7[BANK0 ] unsigned int 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       4       0       0       0
  2217 ;;      Locals:         0       1       0       0       0
  2218 ;;      Temps:          1       0       0       0       0
  2219 ;;      Totals:         1       5       0       0       0
  2220 ;;Total ram usage:        6 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 2
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_sprintf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function ___lwmod
  2232  056C                     ___lwmod:
  2233  056C                     l1529:	
  2234                           ;incstack = 0
  2235                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2236                           
  2237  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2238  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2239  056E  0827               	movf	___lwmod@divisor,w
  2240  056F  0428               	iorwf	___lwmod@divisor+1,w
  2241  0570  1903               	btfsc	3,2
  2242  0571  2D73               	goto	u1021
  2243  0572  2D74               	goto	u1020
  2244  0573                     u1021:
  2245  0573  2DA3               	goto	l1547
  2246  0574                     u1020:
  2247  0574                     l1531:
  2248  0574  01AB               	clrf	___lwmod@counter
  2249  0575  0AAB               	incf	___lwmod@counter,f
  2250  0576  2D82               	goto	l1537
  2251  0577                     l1533:
  2252  0577  3001               	movlw	1
  2253  0578                     u1035:
  2254  0578  1003               	clrc
  2255  0579  0DA7               	rlf	___lwmod@divisor,f
  2256  057A  0DA8               	rlf	___lwmod@divisor+1,f
  2257  057B  3EFF               	addlw	-1
  2258  057C  1D03               	skipz
  2259  057D  2D78               	goto	u1035
  2260  057E                     l1535:
  2261  057E  3001               	movlw	1
  2262  057F  00F5               	movwf	??___lwmod
  2263  0580  0875               	movf	??___lwmod,w
  2264  0581  07AB               	addwf	___lwmod@counter,f
  2265  0582                     l1537:
  2266  0582  1FA8               	btfss	___lwmod@divisor+1,7
  2267  0583  2D85               	goto	u1041
  2268  0584  2D86               	goto	u1040
  2269  0585                     u1041:
  2270  0585  2D77               	goto	l1533
  2271  0586                     u1040:
  2272  0586                     l1539:
  2273  0586  0828               	movf	___lwmod@divisor+1,w
  2274  0587  022A               	subwf	___lwmod@dividend+1,w
  2275  0588  1D03               	skipz
  2276  0589  2D8C               	goto	u1055
  2277  058A  0827               	movf	___lwmod@divisor,w
  2278  058B  0229               	subwf	___lwmod@dividend,w
  2279  058C                     u1055:
  2280  058C  1C03               	skipc
  2281  058D  2D8F               	goto	u1051
  2282  058E  2D90               	goto	u1050
  2283  058F                     u1051:
  2284  058F  2D96               	goto	l1543
  2285  0590                     u1050:
  2286  0590                     l1541:
  2287  0590  0827               	movf	___lwmod@divisor,w
  2288  0591  02A9               	subwf	___lwmod@dividend,f
  2289  0592  0828               	movf	___lwmod@divisor+1,w
  2290  0593  1C03               	skipc
  2291  0594  03AA               	decf	___lwmod@dividend+1,f
  2292  0595  02AA               	subwf	___lwmod@dividend+1,f
  2293  0596                     l1543:
  2294  0596  3001               	movlw	1
  2295  0597                     u1065:
  2296  0597  1003               	clrc
  2297  0598  0CA8               	rrf	___lwmod@divisor+1,f
  2298  0599  0CA7               	rrf	___lwmod@divisor,f
  2299  059A  3EFF               	addlw	-1
  2300  059B  1D03               	skipz
  2301  059C  2D97               	goto	u1065
  2302  059D                     l1545:
  2303  059D  3001               	movlw	1
  2304  059E  02AB               	subwf	___lwmod@counter,f
  2305  059F  1D03               	btfss	3,2
  2306  05A0  2DA2               	goto	u1071
  2307  05A1  2DA3               	goto	u1070
  2308  05A2                     u1071:
  2309  05A2  2D86               	goto	l1539
  2310  05A3                     u1070:
  2311  05A3                     l1547:
  2312  05A3  082A               	movf	___lwmod@dividend+1,w
  2313  05A4  00A8               	movwf	?___lwmod+1
  2314  05A5  0829               	movf	___lwmod@dividend,w
  2315  05A6  00A7               	movwf	?___lwmod
  2316  05A7                     l645:
  2317  05A7  0008               	return
  2318  05A8                     __end_of___lwmod:
  2319                           
  2320                           	psect	text8
  2321  04E3                     __ptext8:	
  2322 ;; *************** function ___lwdiv *****************
  2323 ;; Defined at:
  2324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  divisor         2    0[BANK0 ] unsigned int 
  2327 ;;  dividend        2    2[BANK0 ] unsigned int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  quotient        2    5[BANK0 ] unsigned int 
  2330 ;;  counter         1    4[BANK0 ] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2    0[BANK0 ] unsigned int 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         0       4       0       0       0
  2341 ;;      Locals:         0       3       0       0       0
  2342 ;;      Temps:          1       0       0       0       0
  2343 ;;      Totals:         1       7       0       0       0
  2344 ;;Total ram usage:        8 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 2
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_sprintf
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function ___lwdiv
  2356  04E3                     ___lwdiv:
  2357  04E3                     l1969:	
  2358                           ;incstack = 0
  2359                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2360                           
  2361  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2362  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2363  04E5  01A5               	clrf	___lwdiv@quotient
  2364  04E6  01A6               	clrf	___lwdiv@quotient+1
  2365  04E7                     l1971:
  2366  04E7  0820               	movf	___lwdiv@divisor,w
  2367  04E8  0421               	iorwf	___lwdiv@divisor+1,w
  2368  04E9  1903               	btfsc	3,2
  2369  04EA  2CEC               	goto	u1581
  2370  04EB  2CED               	goto	u1580
  2371  04EC                     u1581:
  2372  04EC  2D24               	goto	l1991
  2373  04ED                     u1580:
  2374  04ED                     l1973:
  2375  04ED  01A4               	clrf	___lwdiv@counter
  2376  04EE  0AA4               	incf	___lwdiv@counter,f
  2377  04EF  2CFB               	goto	l1979
  2378  04F0                     l1975:
  2379  04F0  3001               	movlw	1
  2380  04F1                     u1595:
  2381  04F1  1003               	clrc
  2382  04F2  0DA0               	rlf	___lwdiv@divisor,f
  2383  04F3  0DA1               	rlf	___lwdiv@divisor+1,f
  2384  04F4  3EFF               	addlw	-1
  2385  04F5  1D03               	skipz
  2386  04F6  2CF1               	goto	u1595
  2387  04F7                     l1977:
  2388  04F7  3001               	movlw	1
  2389  04F8  00F4               	movwf	??___lwdiv
  2390  04F9  0874               	movf	??___lwdiv,w
  2391  04FA  07A4               	addwf	___lwdiv@counter,f
  2392  04FB                     l1979:
  2393  04FB  1FA1               	btfss	___lwdiv@divisor+1,7
  2394  04FC  2CFE               	goto	u1601
  2395  04FD  2CFF               	goto	u1600
  2396  04FE                     u1601:
  2397  04FE  2CF0               	goto	l1975
  2398  04FF                     u1600:
  2399  04FF                     l1981:
  2400  04FF  3001               	movlw	1
  2401  0500                     u1615:
  2402  0500  1003               	clrc
  2403  0501  0DA5               	rlf	___lwdiv@quotient,f
  2404  0502  0DA6               	rlf	___lwdiv@quotient+1,f
  2405  0503  3EFF               	addlw	-1
  2406  0504  1D03               	skipz
  2407  0505  2D00               	goto	u1615
  2408  0506  0821               	movf	___lwdiv@divisor+1,w
  2409  0507  0223               	subwf	___lwdiv@dividend+1,w
  2410  0508  1D03               	skipz
  2411  0509  2D0C               	goto	u1625
  2412  050A  0820               	movf	___lwdiv@divisor,w
  2413  050B  0222               	subwf	___lwdiv@dividend,w
  2414  050C                     u1625:
  2415  050C  1C03               	skipc
  2416  050D  2D0F               	goto	u1621
  2417  050E  2D10               	goto	u1620
  2418  050F                     u1621:
  2419  050F  2D17               	goto	l1987
  2420  0510                     u1620:
  2421  0510                     l1983:
  2422  0510  0820               	movf	___lwdiv@divisor,w
  2423  0511  02A2               	subwf	___lwdiv@dividend,f
  2424  0512  0821               	movf	___lwdiv@divisor+1,w
  2425  0513  1C03               	skipc
  2426  0514  03A3               	decf	___lwdiv@dividend+1,f
  2427  0515  02A3               	subwf	___lwdiv@dividend+1,f
  2428  0516                     l1985:
  2429  0516  1425               	bsf	___lwdiv@quotient,0
  2430  0517                     l1987:
  2431  0517  3001               	movlw	1
  2432  0518                     u1635:
  2433  0518  1003               	clrc
  2434  0519  0CA1               	rrf	___lwdiv@divisor+1,f
  2435  051A  0CA0               	rrf	___lwdiv@divisor,f
  2436  051B  3EFF               	addlw	-1
  2437  051C  1D03               	skipz
  2438  051D  2D18               	goto	u1635
  2439  051E                     l1989:
  2440  051E  3001               	movlw	1
  2441  051F  02A4               	subwf	___lwdiv@counter,f
  2442  0520  1D03               	btfss	3,2
  2443  0521  2D23               	goto	u1641
  2444  0522  2D24               	goto	u1640
  2445  0523                     u1641:
  2446  0523  2CFF               	goto	l1981
  2447  0524                     u1640:
  2448  0524                     l1991:
  2449  0524  0826               	movf	___lwdiv@quotient+1,w
  2450  0525  00A1               	movwf	?___lwdiv+1
  2451  0526  0825               	movf	___lwdiv@quotient,w
  2452  0527  00A0               	movwf	?___lwdiv
  2453  0528                     l635:
  2454  0528  0008               	return
  2455  0529                     __end_of___lwdiv:
  2456                           
  2457                           	psect	text9
  2458  0357                     __ptext9:	
  2459 ;; *************** function _divisor *****************
  2460 ;; Defined at:
  2461 ;;		line 188 in file "LAB2.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  a               1    wreg     unsigned char 
  2464 ;;  dig             1    5[COMMON] PTR unsigned char 
  2465 ;;		 -> vol2(1), vol1(1), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  a               1   10[BANK0 ] unsigned char 
  2468 ;;  i               2   13[BANK0 ] int 
  2469 ;;  b               2   11[BANK0 ] int 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         1       0       0       0       0
  2480 ;;      Locals:         0       5       0       0       0
  2481 ;;      Temps:          0       2       0       0       0
  2482 ;;      Totals:         1       7       0       0       0
  2483 ;;Total ram usage:        8 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 3
  2486 ;; This function calls:
  2487 ;;		___awdiv
  2488 ;;		___awmod
  2489 ;; This function is called by:
  2490 ;;		_conversion_char
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _divisor
  2496  0357                     _divisor:
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2500                           ;divisor@a stored from wreg
  2501  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0359  00AA               	movwf	divisor@a
  2504  035A                     l1995:
  2505                           
  2506                           ;LAB2.c: 189:     int b = 2*a;
  2507  035A  082A               	movf	divisor@a,w
  2508  035B  00A8               	movwf	??_divisor
  2509  035C  01A9               	clrf	??_divisor+1
  2510  035D  1003               	clrc
  2511  035E  0D28               	rlf	??_divisor,w
  2512  035F  00AB               	movwf	divisor@b
  2513  0360  0D29               	rlf	??_divisor+1,w
  2514  0361  00AC               	movwf	divisor@b+1
  2515  0362                     l1997:
  2516                           
  2517                           ;LAB2.c: 190:     for(int i = 0; i<3 ; i++){
  2518  0362  01AD               	clrf	divisor@i
  2519  0363  01AE               	clrf	divisor@i+1
  2520  0364                     l2003:
  2521                           
  2522                           ;LAB2.c: 191:         dig[i] = b % 10;
  2523  0364  300A               	movlw	10
  2524  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0367  00A0               	movwf	___awmod@divisor
  2527  0368  3000               	movlw	0
  2528  0369  00A1               	movwf	___awmod@divisor+1
  2529  036A  082C               	movf	divisor@b+1,w
  2530  036B  00A3               	movwf	___awmod@dividend+1
  2531  036C  082B               	movf	divisor@b,w
  2532  036D  00A2               	movwf	___awmod@dividend
  2533  036E  120A  118A  22FC  120A  118A  	fcall	___awmod
  2534  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0375  0820               	movf	?___awmod,w
  2537  0376  00A8               	movwf	??_divisor
  2538  0377  082D               	movf	divisor@i,w
  2539  0378  0775               	addwf	divisor@dig,w
  2540  0379  00A9               	movwf	??_divisor+1
  2541  037A  0829               	movf	??_divisor+1,w
  2542  037B  0084               	movwf	4
  2543  037C  0828               	movf	??_divisor,w
  2544  037D  1383               	bcf	3,7	;select IRP bank0
  2545  037E  0080               	movwf	0
  2546                           
  2547                           ;LAB2.c: 192:         b = (b - dig[i])/10;
  2548  037F  300A               	movlw	10
  2549  0380  00A0               	movwf	___awdiv@divisor
  2550  0381  3000               	movlw	0
  2551  0382  00A1               	movwf	___awdiv@divisor+1
  2552  0383  082D               	movf	divisor@i,w
  2553  0384  0775               	addwf	divisor@dig,w
  2554  0385  00A8               	movwf	??_divisor
  2555  0386  0828               	movf	??_divisor,w
  2556  0387  0084               	movwf	4
  2557  0388  0800               	movf	0,w
  2558  0389  022B               	subwf	divisor@b,w
  2559  038A  00A2               	movwf	___awdiv@dividend
  2560  038B  082C               	movf	divisor@b+1,w
  2561  038C  1C03               	skipc
  2562  038D  032C               	decf	divisor@b+1,w
  2563  038E  00A3               	movwf	___awdiv@dividend+1
  2564  038F  120A  118A  2238  120A  118A  	fcall	___awdiv
  2565  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0396  0821               	movf	?___awdiv+1,w
  2568  0397  00AC               	movwf	divisor@b+1
  2569  0398  0820               	movf	?___awdiv,w
  2570  0399  00AB               	movwf	divisor@b
  2571  039A                     l2005:
  2572                           
  2573                           ;LAB2.c: 193:     }
  2574  039A  3001               	movlw	1
  2575  039B  07AD               	addwf	divisor@i,f
  2576  039C  1803               	skipnc
  2577  039D  0AAE               	incf	divisor@i+1,f
  2578  039E  3000               	movlw	0
  2579  039F  07AE               	addwf	divisor@i+1,f
  2580  03A0                     l2007:
  2581  03A0  082E               	movf	divisor@i+1,w
  2582  03A1  3A80               	xorlw	128
  2583  03A2  00FF               	movwf	btemp+1
  2584  03A3  3080               	movlw	128
  2585  03A4  027F               	subwf	btemp+1,w
  2586  03A5  1D03               	skipz
  2587  03A6  2BA9               	goto	u1655
  2588  03A7  3003               	movlw	3
  2589  03A8  022D               	subwf	divisor@i,w
  2590  03A9                     u1655:
  2591  03A9  1C03               	skipc
  2592  03AA  2BAC               	goto	u1651
  2593  03AB  2BAD               	goto	u1650
  2594  03AC                     u1651:
  2595  03AC  2B64               	goto	l2003
  2596  03AD                     u1650:
  2597  03AD                     l126:
  2598  03AD  0008               	return
  2599  03AE                     __end_of_divisor:
  2600                           
  2601                           	psect	text10
  2602  02FC                     __ptext10:	
  2603 ;; *************** function ___awmod *****************
  2604 ;; Defined at:
  2605 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  divisor         2    0[BANK0 ] int 
  2608 ;;  dividend        2    2[BANK0 ] int 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  sign            1    5[BANK0 ] unsigned char 
  2611 ;;  counter         1    4[BANK0 ] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  2    0[BANK0 ] int 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       4       0       0       0
  2622 ;;      Locals:         0       2       0       0       0
  2623 ;;      Temps:          1       0       0       0       0
  2624 ;;      Totals:         1       6       0       0       0
  2625 ;;Total ram usage:        7 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 2
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_divisor
  2632 ;;		_divisor1
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function ___awmod
  2638  02FC                     ___awmod:
  2639  02FC                     l1931:	
  2640                           ;incstack = 0
  2641                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2642                           
  2643  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2644  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2645  02FE  01A5               	clrf	___awmod@sign
  2646  02FF                     l1933:
  2647  02FF  1FA3               	btfss	___awmod@dividend+1,7
  2648  0300  2B02               	goto	u1491
  2649  0301  2B03               	goto	u1490
  2650  0302                     u1491:
  2651  0302  2B0A               	goto	l1939
  2652  0303                     u1490:
  2653  0303                     l1935:
  2654  0303  09A2               	comf	___awmod@dividend,f
  2655  0304  09A3               	comf	___awmod@dividend+1,f
  2656  0305  0AA2               	incf	___awmod@dividend,f
  2657  0306  1903               	skipnz
  2658  0307  0AA3               	incf	___awmod@dividend+1,f
  2659  0308                     l1937:
  2660  0308  01A5               	clrf	___awmod@sign
  2661  0309  0AA5               	incf	___awmod@sign,f
  2662  030A                     l1939:
  2663  030A  1FA1               	btfss	___awmod@divisor+1,7
  2664  030B  2B0D               	goto	u1501
  2665  030C  2B0E               	goto	u1500
  2666  030D                     u1501:
  2667  030D  2B13               	goto	l1943
  2668  030E                     u1500:
  2669  030E                     l1941:
  2670  030E  09A0               	comf	___awmod@divisor,f
  2671  030F  09A1               	comf	___awmod@divisor+1,f
  2672  0310  0AA0               	incf	___awmod@divisor,f
  2673  0311  1903               	skipnz
  2674  0312  0AA1               	incf	___awmod@divisor+1,f
  2675  0313                     l1943:
  2676  0313  0820               	movf	___awmod@divisor,w
  2677  0314  0421               	iorwf	___awmod@divisor+1,w
  2678  0315  1903               	btfsc	3,2
  2679  0316  2B18               	goto	u1511
  2680  0317  2B19               	goto	u1510
  2681  0318                     u1511:
  2682  0318  2B48               	goto	l1961
  2683  0319                     u1510:
  2684  0319                     l1945:
  2685  0319  01A4               	clrf	___awmod@counter
  2686  031A  0AA4               	incf	___awmod@counter,f
  2687  031B  2B27               	goto	l1951
  2688  031C                     l1947:
  2689  031C  3001               	movlw	1
  2690  031D                     u1525:
  2691  031D  1003               	clrc
  2692  031E  0DA0               	rlf	___awmod@divisor,f
  2693  031F  0DA1               	rlf	___awmod@divisor+1,f
  2694  0320  3EFF               	addlw	-1
  2695  0321  1D03               	skipz
  2696  0322  2B1D               	goto	u1525
  2697  0323                     l1949:
  2698  0323  3001               	movlw	1
  2699  0324  00F4               	movwf	??___awmod
  2700  0325  0874               	movf	??___awmod,w
  2701  0326  07A4               	addwf	___awmod@counter,f
  2702  0327                     l1951:
  2703  0327  1FA1               	btfss	___awmod@divisor+1,7
  2704  0328  2B2A               	goto	u1531
  2705  0329  2B2B               	goto	u1530
  2706  032A                     u1531:
  2707  032A  2B1C               	goto	l1947
  2708  032B                     u1530:
  2709  032B                     l1953:
  2710  032B  0821               	movf	___awmod@divisor+1,w
  2711  032C  0223               	subwf	___awmod@dividend+1,w
  2712  032D  1D03               	skipz
  2713  032E  2B31               	goto	u1545
  2714  032F  0820               	movf	___awmod@divisor,w
  2715  0330  0222               	subwf	___awmod@dividend,w
  2716  0331                     u1545:
  2717  0331  1C03               	skipc
  2718  0332  2B34               	goto	u1541
  2719  0333  2B35               	goto	u1540
  2720  0334                     u1541:
  2721  0334  2B3B               	goto	l1957
  2722  0335                     u1540:
  2723  0335                     l1955:
  2724  0335  0820               	movf	___awmod@divisor,w
  2725  0336  02A2               	subwf	___awmod@dividend,f
  2726  0337  0821               	movf	___awmod@divisor+1,w
  2727  0338  1C03               	skipc
  2728  0339  03A3               	decf	___awmod@dividend+1,f
  2729  033A  02A3               	subwf	___awmod@dividend+1,f
  2730  033B                     l1957:
  2731  033B  3001               	movlw	1
  2732  033C                     u1555:
  2733  033C  1003               	clrc
  2734  033D  0CA1               	rrf	___awmod@divisor+1,f
  2735  033E  0CA0               	rrf	___awmod@divisor,f
  2736  033F  3EFF               	addlw	-1
  2737  0340  1D03               	skipz
  2738  0341  2B3C               	goto	u1555
  2739  0342                     l1959:
  2740  0342  3001               	movlw	1
  2741  0343  02A4               	subwf	___awmod@counter,f
  2742  0344  1D03               	btfss	3,2
  2743  0345  2B47               	goto	u1561
  2744  0346  2B48               	goto	u1560
  2745  0347                     u1561:
  2746  0347  2B2B               	goto	l1953
  2747  0348                     u1560:
  2748  0348                     l1961:
  2749  0348  0825               	movf	___awmod@sign,w
  2750  0349  1903               	btfsc	3,2
  2751  034A  2B4C               	goto	u1571
  2752  034B  2B4D               	goto	u1570
  2753  034C                     u1571:
  2754  034C  2B52               	goto	l1965
  2755  034D                     u1570:
  2756  034D                     l1963:
  2757  034D  09A2               	comf	___awmod@dividend,f
  2758  034E  09A3               	comf	___awmod@dividend+1,f
  2759  034F  0AA2               	incf	___awmod@dividend,f
  2760  0350  1903               	skipnz
  2761  0351  0AA3               	incf	___awmod@dividend+1,f
  2762  0352                     l1965:
  2763  0352  0823               	movf	___awmod@dividend+1,w
  2764  0353  00A1               	movwf	?___awmod+1
  2765  0354  0822               	movf	___awmod@dividend,w
  2766  0355  00A0               	movwf	?___awmod
  2767  0356                     l529:
  2768  0356  0008               	return
  2769  0357                     __end_of___awmod:
  2770                           
  2771                           	psect	text11
  2772  0238                     __ptext11:	
  2773 ;; *************** function ___awdiv *****************
  2774 ;; Defined at:
  2775 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  divisor         2    0[BANK0 ] int 
  2778 ;;  dividend        2    2[BANK0 ] int 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  quotient        2    6[BANK0 ] int 
  2781 ;;  sign            1    5[BANK0 ] unsigned char 
  2782 ;;  counter         1    4[BANK0 ] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  2    0[BANK0 ] int 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       4       0       0       0
  2793 ;;      Locals:         0       4       0       0       0
  2794 ;;      Temps:          1       0       0       0       0
  2795 ;;      Totals:         1       8       0       0       0
  2796 ;;Total ram usage:        9 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 2
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_divisor
  2803 ;;		_divisor1
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function ___awdiv
  2809  0238                     ___awdiv:
  2810  0238                     l1887:	
  2811                           ;incstack = 0
  2812                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2813                           
  2814  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2816  023A  01A5               	clrf	___awdiv@sign
  2817  023B                     l1889:
  2818  023B  1FA1               	btfss	___awdiv@divisor+1,7
  2819  023C  2A3E               	goto	u1391
  2820  023D  2A3F               	goto	u1390
  2821  023E                     u1391:
  2822  023E  2A46               	goto	l1895
  2823  023F                     u1390:
  2824  023F                     l1891:
  2825  023F  09A0               	comf	___awdiv@divisor,f
  2826  0240  09A1               	comf	___awdiv@divisor+1,f
  2827  0241  0AA0               	incf	___awdiv@divisor,f
  2828  0242  1903               	skipnz
  2829  0243  0AA1               	incf	___awdiv@divisor+1,f
  2830  0244                     l1893:
  2831  0244  01A5               	clrf	___awdiv@sign
  2832  0245  0AA5               	incf	___awdiv@sign,f
  2833  0246                     l1895:
  2834  0246  1FA3               	btfss	___awdiv@dividend+1,7
  2835  0247  2A49               	goto	u1401
  2836  0248  2A4A               	goto	u1400
  2837  0249                     u1401:
  2838  0249  2A53               	goto	l1901
  2839  024A                     u1400:
  2840  024A                     l1897:
  2841  024A  09A2               	comf	___awdiv@dividend,f
  2842  024B  09A3               	comf	___awdiv@dividend+1,f
  2843  024C  0AA2               	incf	___awdiv@dividend,f
  2844  024D  1903               	skipnz
  2845  024E  0AA3               	incf	___awdiv@dividend+1,f
  2846  024F                     l1899:
  2847  024F  3001               	movlw	1
  2848  0250  00F4               	movwf	??___awdiv
  2849  0251  0874               	movf	??___awdiv,w
  2850  0252  06A5               	xorwf	___awdiv@sign,f
  2851  0253                     l1901:
  2852  0253  01A6               	clrf	___awdiv@quotient
  2853  0254  01A7               	clrf	___awdiv@quotient+1
  2854  0255                     l1903:
  2855  0255  0820               	movf	___awdiv@divisor,w
  2856  0256  0421               	iorwf	___awdiv@divisor+1,w
  2857  0257  1903               	btfsc	3,2
  2858  0258  2A5A               	goto	u1411
  2859  0259  2A5B               	goto	u1410
  2860  025A                     u1411:
  2861  025A  2A92               	goto	l1923
  2862  025B                     u1410:
  2863  025B                     l1905:
  2864  025B  01A4               	clrf	___awdiv@counter
  2865  025C  0AA4               	incf	___awdiv@counter,f
  2866  025D  2A69               	goto	l1911
  2867  025E                     l1907:
  2868  025E  3001               	movlw	1
  2869  025F                     u1425:
  2870  025F  1003               	clrc
  2871  0260  0DA0               	rlf	___awdiv@divisor,f
  2872  0261  0DA1               	rlf	___awdiv@divisor+1,f
  2873  0262  3EFF               	addlw	-1
  2874  0263  1D03               	skipz
  2875  0264  2A5F               	goto	u1425
  2876  0265                     l1909:
  2877  0265  3001               	movlw	1
  2878  0266  00F4               	movwf	??___awdiv
  2879  0267  0874               	movf	??___awdiv,w
  2880  0268  07A4               	addwf	___awdiv@counter,f
  2881  0269                     l1911:
  2882  0269  1FA1               	btfss	___awdiv@divisor+1,7
  2883  026A  2A6C               	goto	u1431
  2884  026B  2A6D               	goto	u1430
  2885  026C                     u1431:
  2886  026C  2A5E               	goto	l1907
  2887  026D                     u1430:
  2888  026D                     l1913:
  2889  026D  3001               	movlw	1
  2890  026E                     u1445:
  2891  026E  1003               	clrc
  2892  026F  0DA6               	rlf	___awdiv@quotient,f
  2893  0270  0DA7               	rlf	___awdiv@quotient+1,f
  2894  0271  3EFF               	addlw	-1
  2895  0272  1D03               	skipz
  2896  0273  2A6E               	goto	u1445
  2897  0274  0821               	movf	___awdiv@divisor+1,w
  2898  0275  0223               	subwf	___awdiv@dividend+1,w
  2899  0276  1D03               	skipz
  2900  0277  2A7A               	goto	u1455
  2901  0278  0820               	movf	___awdiv@divisor,w
  2902  0279  0222               	subwf	___awdiv@dividend,w
  2903  027A                     u1455:
  2904  027A  1C03               	skipc
  2905  027B  2A7D               	goto	u1451
  2906  027C  2A7E               	goto	u1450
  2907  027D                     u1451:
  2908  027D  2A85               	goto	l1919
  2909  027E                     u1450:
  2910  027E                     l1915:
  2911  027E  0820               	movf	___awdiv@divisor,w
  2912  027F  02A2               	subwf	___awdiv@dividend,f
  2913  0280  0821               	movf	___awdiv@divisor+1,w
  2914  0281  1C03               	skipc
  2915  0282  03A3               	decf	___awdiv@dividend+1,f
  2916  0283  02A3               	subwf	___awdiv@dividend+1,f
  2917  0284                     l1917:
  2918  0284  1426               	bsf	___awdiv@quotient,0
  2919  0285                     l1919:
  2920  0285  3001               	movlw	1
  2921  0286                     u1465:
  2922  0286  1003               	clrc
  2923  0287  0CA1               	rrf	___awdiv@divisor+1,f
  2924  0288  0CA0               	rrf	___awdiv@divisor,f
  2925  0289  3EFF               	addlw	-1
  2926  028A  1D03               	skipz
  2927  028B  2A86               	goto	u1465
  2928  028C                     l1921:
  2929  028C  3001               	movlw	1
  2930  028D  02A4               	subwf	___awdiv@counter,f
  2931  028E  1D03               	btfss	3,2
  2932  028F  2A91               	goto	u1471
  2933  0290  2A92               	goto	u1470
  2934  0291                     u1471:
  2935  0291  2A6D               	goto	l1913
  2936  0292                     u1470:
  2937  0292                     l1923:
  2938  0292  0825               	movf	___awdiv@sign,w
  2939  0293  1903               	btfsc	3,2
  2940  0294  2A96               	goto	u1481
  2941  0295  2A97               	goto	u1480
  2942  0296                     u1481:
  2943  0296  2A9C               	goto	l1927
  2944  0297                     u1480:
  2945  0297                     l1925:
  2946  0297  09A6               	comf	___awdiv@quotient,f
  2947  0298  09A7               	comf	___awdiv@quotient+1,f
  2948  0299  0AA6               	incf	___awdiv@quotient,f
  2949  029A  1903               	skipnz
  2950  029B  0AA7               	incf	___awdiv@quotient+1,f
  2951  029C                     l1927:
  2952  029C  0827               	movf	___awdiv@quotient+1,w
  2953  029D  00A1               	movwf	?___awdiv+1
  2954  029E  0826               	movf	___awdiv@quotient,w
  2955  029F  00A0               	movwf	?___awdiv
  2956  02A0                     l516:
  2957  02A0  0008               	return
  2958  02A1                     __end_of___awdiv:
  2959                           
  2960                           	psect	text12
  2961  0634                     __ptext12:	
  2962 ;; *************** function _conversion *****************
  2963 ;; Defined at:
  2964 ;;		line 21 in file "ADC.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          1       0       0       0       0
  2981 ;;      Totals:         1       0       0       0       0
  2982 ;;Total ram usage:        1 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 2
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _conversion
  2994  0634                     _conversion:
  2995  0634                     l1789:	
  2996                           ;incstack = 0
  2997                           ; Regs used in _conversion: [wreg+status,2+status,0]
  2998                           
  2999                           
  3000                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  3001  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0636  189F               	btfsc	31,1	;volatile
  3004  0637  2E39               	goto	u1321
  3005  0638  2E3A               	goto	u1320
  3006  0639                     u1321:
  3007  0639  2E5F               	goto	l217
  3008  063A                     u1320:
  3009  063A                     l1791:
  3010                           
  3011                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  3012  063A  0C1F               	rrf	31,w	;volatile
  3013  063B  00F4               	movwf	??_conversion
  3014  063C  0C74               	rrf	??_conversion,w
  3015  063D  390F               	andlw	15
  3016  063E  3A01               	xorlw	1
  3017  063F  1D03               	skipz
  3018  0640  2E42               	goto	u1331
  3019  0641  2E43               	goto	u1330
  3020  0642                     u1331:
  3021  0642  2E4A               	goto	l1797
  3022  0643                     u1330:
  3023  0643                     l1793:
  3024                           
  3025                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  3026  0643  30C3               	movlw	-61
  3027  0644  059F               	andwf	31,f	;volatile
  3028  0645                     l1795:
  3029                           
  3030                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  3031  0645  3021               	movlw	33
  3032  0646  00F4               	movwf	??_conversion
  3033  0647                     u1917:
  3034  0647  0BF4               	decfsz	??_conversion,f
  3035  0648  2E47               	goto	u1917
  3036                           
  3037                           ;ADC.c: 26:         }
  3038  0649  2E58               	goto	l1803
  3039  064A                     l1797:
  3040  064A  0C1F               	rrf	31,w	;volatile
  3041  064B  00F4               	movwf	??_conversion
  3042  064C  0C74               	rrf	??_conversion,w
  3043  064D  390F               	andlw	15
  3044  064E  3A00               	xorlw	0
  3045  064F  1D03               	skipz
  3046  0650  2E52               	goto	u1341
  3047  0651  2E53               	goto	u1340
  3048  0652                     u1341:
  3049  0652  2E58               	goto	l1803
  3050  0653                     u1340:
  3051  0653                     l1799:
  3052                           
  3053                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  3054  0653  081F               	movf	31,w	;volatile
  3055  0654  39C3               	andlw	-61
  3056  0655  3804               	iorlw	4
  3057  0656  009F               	movwf	31	;volatile
  3058  0657  2E45               	goto	l1795
  3059  0658                     l1803:
  3060                           
  3061                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  3062  0658  3021               	movlw	33
  3063  0659  00F4               	movwf	??_conversion
  3064  065A                     u1927:
  3065  065A  0BF4               	decfsz	??_conversion,f
  3066  065B  2E5A               	goto	u1927
  3067  065C                     l1805:
  3068                           
  3069                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  3070  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3071  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3072  065E  149F               	bsf	31,1	;volatile
  3073  065F                     l217:
  3074  065F  0008               	return
  3075  0660                     __end_of_conversion:
  3076                           
  3077                           	psect	text13
  3078  067E                     __ptext13:	
  3079 ;; *************** function _Limpiar_pantallaLCD *****************
  3080 ;; Defined at:
  3081 ;;		line 63 in file "LCD.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         0       0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0
  3097 ;;      Temps:          0       2       0       0       0
  3098 ;;      Totals:         0       2       0       0       0
  3099 ;;Total ram usage:        2 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 4
  3102 ;; This function calls:
  3103 ;;		_Escribir_comandoLCD
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _Limpiar_pantallaLCD
  3111  067E                     _Limpiar_pantallaLCD:
  3112  067E                     l2129:	
  3113                           ;incstack = 0
  3114                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  3115                           
  3116                           
  3117                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  3118  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3119  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0680  1287               	bcf	7,5	;volatile
  3121  0681  1208               	bcf	8,4	;volatile
  3122  0682                     l2131:
  3123                           
  3124                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  3125  0682  3001               	movlw	1
  3126  0683  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3127  0688                     l2133:
  3128                           
  3129                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3130  0688  301A               	movlw	26
  3131  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3132  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3133  068B  00A1               	movwf	??_Limpiar_pantallaLCD+1
  3134  068C  30F7               	movlw	247
  3135  068D  00A0               	movwf	??_Limpiar_pantallaLCD
  3136  068E                     u1937:
  3137  068E  0BA0               	decfsz	??_Limpiar_pantallaLCD,f
  3138  068F  2E8E               	goto	u1937
  3139  0690  0BA1               	decfsz	??_Limpiar_pantallaLCD+1,f
  3140  0691  2E8E               	goto	u1937
  3141  0692  2E93               	nop2
  3142  0693                     l2135:
  3143                           
  3144                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  3145  0693  3002               	movlw	2
  3146  0694  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3147  0699                     l176:
  3148  0699  0008               	return
  3149  069A                     __end_of_Limpiar_pantallaLCD:
  3150                           
  3151                           	psect	text14
  3152  01C4                     __ptext14:	
  3153 ;; *************** function _Iniciar_LCD *****************
  3154 ;; Defined at:
  3155 ;;		line 30 in file "LCD.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0
  3171 ;;      Temps:          0       2       0       0       0
  3172 ;;      Totals:         0       2       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 4
  3176 ;; This function calls:
  3177 ;;		_Escribir_comandoLCD
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _Iniciar_LCD
  3185  01C4                     _Iniciar_LCD:
  3186  01C4                     l2103:	
  3187                           ;incstack = 0
  3188                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3189                           
  3190                           
  3191                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  3192  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3193  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3194  01C6  1287               	bcf	7,5	;volatile
  3195                           
  3196                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3197  01C7  1208               	bcf	8,4	;volatile
  3198  01C8                     l2105:
  3199                           
  3200                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3201  01C8  3025               	movlw	37
  3202  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3203  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3204  01CB  00A1               	movwf	??_Iniciar_LCD+1
  3205  01CC  305B               	movlw	91
  3206  01CD  00A0               	movwf	??_Iniciar_LCD
  3207  01CE                     u1947:
  3208  01CE  0BA0               	decfsz	??_Iniciar_LCD,f
  3209  01CF  29CE               	goto	u1947
  3210  01D0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3211  01D1  29CE               	goto	u1947
  3212  01D2                     l2107:
  3213                           
  3214                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3215  01D2  3030               	movlw	48
  3216  01D3  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3217  01D8                     l2109:
  3218                           
  3219                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3220  01D8  300B               	movlw	11
  3221  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3222  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3223  01DB  00A1               	movwf	??_Iniciar_LCD+1
  3224  01DC  3061               	movlw	97
  3225  01DD  00A0               	movwf	??_Iniciar_LCD
  3226  01DE                     u1957:
  3227  01DE  0BA0               	decfsz	??_Iniciar_LCD,f
  3228  01DF  29DE               	goto	u1957
  3229  01E0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  3230  01E1  29DE               	goto	u1957
  3231  01E2  29E3               	nop2
  3232                           
  3233                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3234  01E3  3030               	movlw	48
  3235  01E4  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3236  01E9                     l2111:
  3237                           
  3238                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3239  01E9  3041               	movlw	65
  3240  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3241  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3242  01EC  00A0               	movwf	??_Iniciar_LCD
  3243  01ED                     u1967:
  3244  01ED  0BA0               	decfsz	??_Iniciar_LCD,f
  3245  01EE  29ED               	goto	u1967
  3246  01EF  29F0               	nop2
  3247  01F0                     l2113:
  3248                           
  3249                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3250  01F0  3030               	movlw	48
  3251  01F1  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3252                           
  3253                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3254  01F6  3041               	movlw	65
  3255  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3256  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3257  01F9  00A0               	movwf	??_Iniciar_LCD
  3258  01FA                     u1977:
  3259  01FA  0BA0               	decfsz	??_Iniciar_LCD,f
  3260  01FB  29FA               	goto	u1977
  3261  01FC  29FD               	nop2
  3262  01FD                     l2115:
  3263                           
  3264                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3265  01FD  3038               	movlw	56
  3266  01FE  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3267  0203                     l2117:
  3268                           
  3269                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3270  0203  3041               	movlw	65
  3271  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0206  00A0               	movwf	??_Iniciar_LCD
  3274  0207                     u1987:
  3275  0207  0BA0               	decfsz	??_Iniciar_LCD,f
  3276  0208  2A07               	goto	u1987
  3277  0209  2A0A               	nop2
  3278                           
  3279                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3280  020A  3008               	movlw	8
  3281  020B  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3282  0210                     l2119:
  3283                           
  3284                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3285  0210  3041               	movlw	65
  3286  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0213  00A0               	movwf	??_Iniciar_LCD
  3289  0214                     u1997:
  3290  0214  0BA0               	decfsz	??_Iniciar_LCD,f
  3291  0215  2A14               	goto	u1997
  3292  0216  2A17               	nop2
  3293  0217                     l2121:
  3294                           
  3295                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3296  0217  3001               	movlw	1
  3297  0218  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3298                           
  3299                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3300  021D  3041               	movlw	65
  3301  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3302  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0220  00A0               	movwf	??_Iniciar_LCD
  3304  0221                     u2007:
  3305  0221  0BA0               	decfsz	??_Iniciar_LCD,f
  3306  0222  2A21               	goto	u2007
  3307  0223  2A24               	nop2
  3308  0224                     l2123:
  3309                           
  3310                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3311  0224  3006               	movlw	6
  3312  0225  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3313  022A                     l2125:
  3314                           
  3315                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3316  022A  3041               	movlw	65
  3317  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3318  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3319  022D  00A0               	movwf	??_Iniciar_LCD
  3320  022E                     u2017:
  3321  022E  0BA0               	decfsz	??_Iniciar_LCD,f
  3322  022F  2A2E               	goto	u2017
  3323  0230  2A31               	nop2
  3324                           
  3325                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3326  0231  300C               	movlw	12
  3327  0232  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3328  0237                     l167:
  3329  0237  0008               	return
  3330  0238                     __end_of_Iniciar_LCD:
  3331                           
  3332                           	psect	text15
  3333  05A8                     __ptext15:	
  3334 ;; *************** function _Escribir_stringLCD *****************
  3335 ;; Defined at:
  3336 ;;		line 55 in file "LCD.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  3339 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3340 ;;		 -> STR_2(13), STR_1(5), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  i               1    3[BANK0 ] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       2       0       0       0
  3353 ;;      Locals:         0       1       0       0       0
  3354 ;;      Temps:          0       1       0       0       0
  3355 ;;      Totals:         0       4       0       0       0
  3356 ;;Total ram usage:        4 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 4
  3359 ;; This function calls:
  3360 ;;		_Escribir_comandoLCD
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _Escribir_stringLCD
  3368  05A8                     _Escribir_stringLCD:
  3369  05A8                     l2161:	
  3370                           ;incstack = 0
  3371                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3372                           
  3373                           
  3374                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3375  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3376  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3377  05AA  1687               	bsf	7,5	;volatile
  3378  05AB  1208               	bcf	8,4	;volatile
  3379  05AC                     l2163:
  3380                           
  3381                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3382  05AC  01A3               	clrf	Escribir_stringLCD@i
  3383  05AD  2DC5               	goto	l2169
  3384  05AE                     l2165:
  3385                           
  3386                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3387  05AE  0823               	movf	Escribir_stringLCD@i,w
  3388  05AF  0720               	addwf	Escribir_stringLCD@d,w
  3389  05B0  0084               	movwf	4
  3390  05B1  0821               	movf	Escribir_stringLCD@d+1,w
  3391  05B2  1803               	skipnc
  3392  05B3  0A21               	incf	Escribir_stringLCD@d+1,w
  3393  05B4  00FF               	movwf	btemp+1
  3394  05B5  120A  118A  244C  120A  118A  	fcall	stringtab
  3395  05BA  120A  118A  2529  120A  118A  	fcall	_Escribir_comandoLCD
  3396  05BF                     l2167:
  3397                           
  3398                           ;LCD.c: 60:     }
  3399  05BF  3001               	movlw	1
  3400  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3401  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3402  05C2  00A2               	movwf	??_Escribir_stringLCD
  3403  05C3  0822               	movf	??_Escribir_stringLCD,w
  3404  05C4  07A3               	addwf	Escribir_stringLCD@i,f
  3405  05C5                     l2169:
  3406  05C5  0823               	movf	Escribir_stringLCD@i,w
  3407  05C6  0720               	addwf	Escribir_stringLCD@d,w
  3408  05C7  0084               	movwf	4
  3409  05C8  0821               	movf	Escribir_stringLCD@d+1,w
  3410  05C9  1803               	skipnc
  3411  05CA  0A21               	incf	Escribir_stringLCD@d+1,w
  3412  05CB  00FF               	movwf	btemp+1
  3413  05CC  120A  118A  244C  120A  118A  	fcall	stringtab
  3414  05D1  3A00               	xorlw	0
  3415  05D2  1D03               	skipz
  3416  05D3  2DD5               	goto	u1861
  3417  05D4  2DD6               	goto	u1860
  3418  05D5                     u1861:
  3419  05D5  2DAE               	goto	l2165
  3420  05D6                     u1860:
  3421  05D6                     l173:
  3422  05D6  0008               	return
  3423  05D7                     __end_of_Escribir_stringLCD:
  3424                           
  3425                           	psect	text16
  3426  0529                     __ptext16:	
  3427 ;; *************** function _Escribir_comandoLCD *****************
  3428 ;; Defined at:
  3429 ;;		line 17 in file "LCD.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  Comando         1    wreg     unsigned char 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  Comando         1    5[COMMON] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       0       0       0
  3444 ;;      Locals:         1       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0
  3446 ;;      Totals:         1       0       0       0       0
  3447 ;;Total ram usage:        1 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 3
  3450 ;; This function calls:
  3451 ;;		_prender_ELCD
  3452 ;; This function is called by:
  3453 ;;		_Iniciar_LCD
  3454 ;;		_Escribir_stringLCD
  3455 ;;		_Limpiar_pantallaLCD
  3456 ;;		_set_cursor
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _Escribir_comandoLCD
  3462  0529                     _Escribir_comandoLCD:
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3466                           ;Escribir_comandoLCD@Comando stored from wreg
  3467  0529  00F5               	movwf	Escribir_comandoLCD@Comando
  3468  052A                     l2083:
  3469                           
  3470                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3471  052A  1C75               	btfss	Escribir_comandoLCD@Comando,0
  3472  052B  2D2D               	goto	u1741
  3473  052C  2D2E               	goto	u1740
  3474  052D                     u1741:
  3475  052D  2D32               	goto	l148
  3476  052E                     u1740:
  3477  052E                     l2085:
  3478  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3479  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0530  1708               	bsf	8,6	;volatile
  3481  0531  2D35               	goto	l149
  3482  0532                     l148:
  3483  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0534  1308               	bcf	8,6	;volatile
  3486  0535                     l149:
  3487                           
  3488                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3489  0535  1CF5               	btfss	Escribir_comandoLCD@Comando,1
  3490  0536  2D38               	goto	u1751
  3491  0537  2D39               	goto	u1750
  3492  0538                     u1751:
  3493  0538  2D3B               	goto	l150
  3494  0539                     u1750:
  3495  0539                     l2087:
  3496  0539  1788               	bsf	8,7	;volatile
  3497  053A  2D3C               	goto	l151
  3498  053B                     l150:
  3499  053B  1388               	bcf	8,7	;volatile
  3500  053C                     l151:
  3501                           
  3502                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3503  053C  1D75               	btfss	Escribir_comandoLCD@Comando,2
  3504  053D  2D3F               	goto	u1761
  3505  053E  2D40               	goto	u1760
  3506  053F                     u1761:
  3507  053F  2D42               	goto	l152
  3508  0540                     u1760:
  3509  0540                     l2089:
  3510  0540  1406               	bsf	6,0	;volatile
  3511  0541  2D43               	goto	l153
  3512  0542                     l152:
  3513  0542  1006               	bcf	6,0	;volatile
  3514  0543                     l153:
  3515                           
  3516                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3517  0543  1DF5               	btfss	Escribir_comandoLCD@Comando,3
  3518  0544  2D46               	goto	u1771
  3519  0545  2D47               	goto	u1770
  3520  0546                     u1771:
  3521  0546  2D49               	goto	l154
  3522  0547                     u1770:
  3523  0547                     l2091:
  3524  0547  1486               	bsf	6,1	;volatile
  3525  0548  2D4A               	goto	l155
  3526  0549                     l154:
  3527  0549  1086               	bcf	6,1	;volatile
  3528  054A                     l155:
  3529                           
  3530                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3531  054A  1E75               	btfss	Escribir_comandoLCD@Comando,4
  3532  054B  2D4D               	goto	u1781
  3533  054C  2D4E               	goto	u1780
  3534  054D                     u1781:
  3535  054D  2D50               	goto	l156
  3536  054E                     u1780:
  3537  054E                     l2093:
  3538  054E  1506               	bsf	6,2	;volatile
  3539  054F  2D51               	goto	l157
  3540  0550                     l156:
  3541  0550  1106               	bcf	6,2	;volatile
  3542  0551                     l157:
  3543                           
  3544                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3545  0551  1EF5               	btfss	Escribir_comandoLCD@Comando,5
  3546  0552  2D54               	goto	u1791
  3547  0553  2D55               	goto	u1790
  3548  0554                     u1791:
  3549  0554  2D57               	goto	l158
  3550  0555                     u1790:
  3551  0555                     l2095:
  3552  0555  1586               	bsf	6,3	;volatile
  3553  0556  2D58               	goto	l159
  3554  0557                     l158:
  3555  0557  1186               	bcf	6,3	;volatile
  3556  0558                     l159:
  3557                           
  3558                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3559  0558  1F75               	btfss	Escribir_comandoLCD@Comando,6
  3560  0559  2D5B               	goto	u1801
  3561  055A  2D5C               	goto	u1800
  3562  055B                     u1801:
  3563  055B  2D5E               	goto	l160
  3564  055C                     u1800:
  3565  055C                     l2097:
  3566  055C  1606               	bsf	6,4	;volatile
  3567  055D  2D5F               	goto	l161
  3568  055E                     l160:
  3569  055E  1206               	bcf	6,4	;volatile
  3570  055F                     l161:
  3571                           
  3572                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3573  055F  1FF5               	btfss	Escribir_comandoLCD@Comando,7
  3574  0560  2D62               	goto	u1811
  3575  0561  2D63               	goto	u1810
  3576  0562                     u1811:
  3577  0562  2D65               	goto	l162
  3578  0563                     u1810:
  3579  0563                     l2099:
  3580  0563  1686               	bsf	6,5	;volatile
  3581  0564  2D66               	goto	l2101
  3582  0565                     l162:
  3583  0565  1286               	bcf	6,5	;volatile
  3584  0566                     l2101:
  3585                           
  3586                           ;LCD.c: 27:     prender_ELCD();
  3587  0566  120A  118A  269A  120A  118A  	fcall	_prender_ELCD
  3588  056B                     l164:
  3589  056B  0008               	return
  3590  056C                     __end_of_Escribir_comandoLCD:
  3591                           
  3592                           	psect	text17
  3593  069A                     __ptext17:	
  3594 ;; *************** function _prender_ELCD *****************
  3595 ;; Defined at:
  3596 ;;		line 11 in file "LCD.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3610 ;;      Params:         0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0
  3612 ;;      Temps:          1       0       0       0       0
  3613 ;;      Totals:         1       0       0       0       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 2
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_Escribir_comandoLCD
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _prender_ELCD
  3626  069A                     _prender_ELCD:
  3627  069A                     l1881:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _prender_ELCD: [wreg]
  3630                           
  3631                           
  3632                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3633  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3634  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3635  069C  1688               	bsf	8,5	;volatile
  3636  069D                     l1883:
  3637                           
  3638                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3639  069D  30C7               	movlw	199
  3640  069E  00F4               	movwf	??_prender_ELCD
  3641  069F                     u2027:
  3642  069F  2EA0               	nop2
  3643  06A0  0BF4               	decfsz	??_prender_ELCD,f
  3644  06A1  2E9F               	goto	u2027
  3645  06A2  2EA3               	nop2
  3646  06A3  2EA4               	nop2
  3647  06A4                     l1885:
  3648                           
  3649                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3650  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3651  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3652  06A6  1288               	bcf	8,5	;volatile
  3653  06A7                     l145:
  3654  06A7  0008               	return
  3655  06A8                     __end_of_prender_ELCD:
  3656                           
  3657                           	psect	text18
  3658  05D7                     __ptext18:	
  3659 ;; *************** function _isr *****************
  3660 ;; Defined at:
  3661 ;;		line 68 in file "LAB2.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0
  3677 ;;      Temps:          3       0       0       0       0
  3678 ;;      Totals:         3       0       0       0       0
  3679 ;;Total ram usage:        3 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 1
  3682 ;; This function calls:
  3683 ;;		_ADC
  3684 ;; This function is called by:
  3685 ;;		Interrupt level 1
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _isr
  3691  05D7                     _isr:
  3692  05D7                     i1l1811:
  3693                           
  3694                           ;LAB2.c: 69:     if(PIR1bits.ADIF){
  3695  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3696  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3697  05D9  1F0C               	btfss	12,6	;volatile
  3698  05DA  2DDC               	goto	u135_21
  3699  05DB  2DDD               	goto	u135_20
  3700  05DC                     u135_21:
  3701  05DC  2DE5               	goto	i1l1817
  3702  05DD                     u135_20:
  3703  05DD                     i1l1813:
  3704                           
  3705                           ;LAB2.c: 70:         ADC();
  3706  05DD  120A  118A  2660  120A  118A  	fcall	_ADC
  3707  05E2                     i1l1815:
  3708                           
  3709                           ;LAB2.c: 71:         PIR1bits.ADIF = 0;
  3710  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3711  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3712  05E4  130C               	bcf	12,6	;volatile
  3713  05E5                     i1l1817:
  3714                           
  3715                           ;LAB2.c: 73:     if(PIR1bits.RCIF){
  3716  05E5  1E8C               	btfss	12,5	;volatile
  3717  05E6  2DE8               	goto	u136_21
  3718  05E7  2DE9               	goto	u136_20
  3719  05E8                     u136_21:
  3720  05E8  2DFF               	goto	i1l107
  3721  05E9                     u136_20:
  3722  05E9                     i1l1819:
  3723                           
  3724                           ;LAB2.c: 74:         dato = RCREG;
  3725  05E9  081A               	movf	26,w	;volatile
  3726  05EA  00F1               	movwf	??_isr
  3727  05EB  0871               	movf	??_isr,w
  3728  05EC  00F6               	movwf	_dato
  3729  05ED                     i1l1821:
  3730                           
  3731                           ;LAB2.c: 75:         if(dato == 75){
  3732  05ED  304B               	movlw	75
  3733  05EE  0676               	xorwf	_dato,w
  3734  05EF  1D03               	btfss	3,2
  3735  05F0  2DF2               	goto	u137_21
  3736  05F1  2DF3               	goto	u137_20
  3737  05F2                     u137_21:
  3738  05F2  2DF7               	goto	i1l105
  3739  05F3                     u137_20:
  3740  05F3                     i1l1823:
  3741                           
  3742                           ;LAB2.c: 76:             Cont_U++;
  3743  05F3  3001               	movlw	1
  3744  05F4  00F1               	movwf	??_isr
  3745  05F5  0871               	movf	??_isr,w
  3746  05F6  07C7               	addwf	_Cont_U,f
  3747  05F7                     i1l105:	
  3748                           ;LAB2.c: 77:         }
  3749                           
  3750                           
  3751                           ;LAB2.c: 78:         if(dato == 77){
  3752  05F7  304D               	movlw	77
  3753  05F8  0676               	xorwf	_dato,w
  3754  05F9  1D03               	btfss	3,2
  3755  05FA  2DFC               	goto	u138_21
  3756  05FB  2DFD               	goto	u138_20
  3757  05FC                     u138_21:
  3758  05FC  2DFF               	goto	i1l107
  3759  05FD                     u138_20:
  3760  05FD                     i1l1825:
  3761                           
  3762                           ;LAB2.c: 79:             Cont_U--;
  3763  05FD  3001               	movlw	1
  3764  05FE  02C7               	subwf	_Cont_U,f
  3765  05FF                     i1l107:
  3766  05FF  0873               	movf	??_isr+2,w
  3767  0600  008A               	movwf	10
  3768  0601  0E72               	swapf	??_isr+1,w
  3769  0602  0083               	movwf	3
  3770  0603  0EFE               	swapf	btemp,f
  3771  0604  0E7E               	swapf	btemp,w
  3772  0605  0009               	retfie
  3773  0606                     __end_of_isr:
  3774                           
  3775                           	psect	intentry
  3776  0004                     __pintentry:	
  3777                           ;incstack = 0
  3778                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3779                           
  3780  0004                     interrupt_function:
  3781  007E                     saved_w	set	btemp
  3782  0004  00FE               	movwf	btemp
  3783  0005  0E03               	swapf	3,w
  3784  0006  00F2               	movwf	??_isr+1
  3785  0007  080A               	movf	10,w
  3786  0008  00F3               	movwf	??_isr+2
  3787  0009  120A  118A  2DD7   	ljmp	_isr
  3788                           
  3789                           	psect	text19
  3790  0660                     __ptext19:	
  3791 ;; *************** function _ADC *****************
  3792 ;; Defined at:
  3793 ;;		line 11 in file "ADC.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0
  3809 ;;      Temps:          1       0       0       0       0
  3810 ;;      Totals:         1       0       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_isr
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _ADC
  3822  0660                     _ADC:
  3823  0660                     i1l1659:	
  3824                           ;incstack = 0
  3825                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3826                           
  3827                           
  3828                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3829  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0662  0C1F               	rrf	31,w	;volatile
  3832  0663  00F0               	movwf	??_ADC
  3833  0664  0C70               	rrf	??_ADC,w
  3834  0665  390F               	andlw	15
  3835  0666  3A00               	xorlw	0
  3836  0667  1D03               	skipz
  3837  0668  2E6A               	goto	u125_21
  3838  0669  2E6B               	goto	u125_20
  3839  066A                     u125_21:
  3840  066A  2E70               	goto	i1l1663
  3841  066B                     u125_20:
  3842  066B                     i1l1661:
  3843                           
  3844                           ;ADC.c: 13:         cont1 = ADRESH;
  3845  066B  081E               	movf	30,w	;volatile
  3846  066C  00F0               	movwf	??_ADC
  3847  066D  0870               	movf	??_ADC,w
  3848  066E  00C9               	movwf	_cont1
  3849                           
  3850                           ;ADC.c: 14:     }
  3851  066F  2E7D               	goto	i1l210
  3852  0670                     i1l1663:
  3853  0670  0C1F               	rrf	31,w	;volatile
  3854  0671  00F0               	movwf	??_ADC
  3855  0672  0C70               	rrf	??_ADC,w
  3856  0673  390F               	andlw	15
  3857  0674  3A01               	xorlw	1
  3858  0675  1D03               	skipz
  3859  0676  2E78               	goto	u126_21
  3860  0677  2E79               	goto	u126_20
  3861  0678                     u126_21:
  3862  0678  2E7D               	goto	i1l210
  3863  0679                     u126_20:
  3864  0679                     i1l1665:
  3865                           
  3866                           ;ADC.c: 16:         cont2 = ADRESH;
  3867  0679  081E               	movf	30,w	;volatile
  3868  067A  00F0               	movwf	??_ADC
  3869  067B  0870               	movf	??_ADC,w
  3870  067C  00C8               	movwf	_cont2
  3871  067D                     i1l210:
  3872  067D  0008               	return
  3873  067E                     __end_of_ADC:
  3874  007E                     btemp	set	126	;btemp
  3875  007E                     wtemp0	set	126
  3876                           
  3877                           	psect	config
  3878                           
  3879                           ;Config register CONFIG1 @ 0x2007
  3880                           ;	Oscillator Selection bits
  3881                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3882                           ;	Watchdog Timer Enable bit
  3883                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3884                           ;	Power-up Timer Enable bit
  3885                           ;	PWRTE = OFF, PWRT disabled
  3886                           ;	RE3/MCLR pin function select bit
  3887                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3888                           ;	Code Protection bit
  3889                           ;	CP = OFF, Program memory code protection is disabled
  3890                           ;	Data Code Protection bit
  3891                           ;	CPD = OFF, Data memory code protection is disabled
  3892                           ;	Brown Out Reset Selection bits
  3893                           ;	BOREN = OFF, BOR disabled
  3894                           ;	Internal External Switchover bit
  3895                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3896                           ;	Fail-Safe Clock Monitor Enabled bit
  3897                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3898                           ;	Low Voltage Programming Enable bit
  3899                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3900                           ;	In-Circuit Debugger Mode bit
  3901                           ;	DEBUG = 0x1, unprogrammed default
  3902  2007                     	org	8199
  3903  2007  20D4               	dw	8404
  3904                           
  3905                           ;Config register CONFIG2 @ 0x2008
  3906                           ;	Brown-out Reset Selection bit
  3907                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3908                           ;	Flash Program Memory Self Write Enable bits
  3909                           ;	WRT = OFF, Write protection off
  3910  2008                     	org	8200
  3911  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     39      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[13]), STR_1(CODE[5]), 

    divisor1@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _set_cursor->_Escribir_comandoLCD
    _dato_recibido->_divisor1
    _divisor1->___awdiv
    _divisor1->___awmod
    _conversion_char->_divisor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _dato_recibido->_sprintf
    _divisor1->___awdiv
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9955
                                             36 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              0 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3751
                                             29 BANK0      7     7      0
                           _divisor1
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _divisor1                                             8     7      1    1945
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3875
                                             29 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             12 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    2069
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              0 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor1
       ___awdiv
       ___awmod
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 11:24:48 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0023                           l121 02FB                           l131 03FE  
                         l150 053B                           l126 03AD                           l134 0633  
                         l118 044B                           l151 053C                           l160 055E  
                         l152 0542                           l145 06A7                           l161 055F  
                         l153 0543                           l217 065F                           l162 0565  
                         l154 0549                           l155 054A                           l164 056B  
                         l156 0550                           l148 0532                           l157 0551  
                         l149 0535                           l173 05D6                           l158 0557  
                         l159 0558                           l167 0237                           _ADC 0660  
                         l176 0699                           l186 04E2                           l516 02A0  
                         l359 0109                           l529 0356                           l635 0528  
                         l645 05A7                           _dec 0078                           _cen 0077  
                         _isr 05D7                           fsr0 0004                           _uni 0079  
                         indf 0000                  ___awmod@sign 0025                          ?_ADC 0070  
                        l2003 0364                          l2011 0028                          l2101 0566  
                        l2005 039A                          l2021 003B                          l2013 002E  
                        l2111 01E9                          l2103 01C4                          l2007 03A0  
                        l2031 006C                          l2023 0058                          l2015 0035  
                        l2121 0217                          l2113 01F0                          l2105 01C8  
                        l2033 0071                          l2025 0060                          l2017 003A  
                        l2009 0023                          l2201 0199                          l2123 0224  
                        l2115 01FD                          l2107 01D2                          l2131 0682  
                        l2051 00AA                          l2043 008F                          l2027 0064  
                        l2203 01A4                          l2125 022A                          l2117 0203  
                        l2109 01D8                          l2133 0688                          l2053 00AF  
                        l2045 0099                          l2029 0068                          l2061 00F3  
                        l2141 04A2                          l2205 01A9                          l2119 0210  
                        l2135 0693                          l2055 00DF                          l2047 009F  
                        l2039 0073                          l2063 0105                          l2071 03B1  
                        l2143 04A9                          l2207 01B5                          l2161 05A8  
                        l2129 067E                          l2057 00E6                          l2049 00A6  
                        l2081 03F1                          l2153 04C8                          l2145 04AF  
                        l2137 049B                          l2091 0547                          l2083 052A  
                        l2163 05AC                          l1531 0574                          l2059 00EA  
                        l2171 02A1                          l2155 04CE                          l2147 04B5  
                        l2139 049D                          l2093 054E                          l2085 052E  
                        l2165 05AE                          l1541 0590                          l1533 0577  
                        l2229 004D                          l2077 03B3                          l2173 0606  
                        l2157 04D2                          l2149 04C0                          l1701 0438  
                        l2181 0144                          l2095 0555                          l2087 0539  
                        l2167 05BF                          l1543 0596                          l1535 057E  
                        l2079 03EB                          l2159 04D7                          l1711 0442  
                        l1703 0439                          l2191 0169                          l2183 0153  
                        l2175 010A                          l2097 055C                          l2089 0540  
                        l2169 05C5                          l1545 059D                          l1537 0582  
                        l1529 056C                          l1713 0443                          l1705 043A  
                        l2193 0174                          l2185 0156                          l2177 0122  
                        l2099 0563                          l1803 0658                          l1539 0586  
                        l1547 05A3                          l1715 0446                          l1707 043B  
                        l2195 0179                          l2187 015B                          l2179 012D  
                        l1805 065C                          l1901 0253                          l1717 0447  
                        l1709 043E                          l2197 0182                          l2189 0160  
                        l1911 0269                          l1903 0255                          l1719 0448  
                        l1671 0404                          l2199 018D                          l1921 028C  
                        l1913 026D                          l1905 025B                          l1681 041C  
                        l1673 0413                          l1915 027E                          l1907 025E  
                        l1923 0292                          l1931 02FC                          l1691 042B  
                        l1683 041D                          l1675 0419                          l1667 03FF  
                        l1925 0297                          l1917 0284                          l1909 0265  
                        l1941 030E                          l1933 02FF                          l1693 042E  
                        l1685 0423                          l1677 041A                          l1669 0403  
                        l1791 063A                          l1927 029C                          l1919 0285  
                        l1951 0327                          l1943 0313                          l1935 0303  
                        l1695 0431                          l1687 0425                          l1679 041B  
                        l1881 069A                          l1793 0643                          l1953 032B  
                        l1945 0319                          l1961 0348                          l1937 0308  
                        l1697 0434                          l1689 0426                          l1883 069D  
                        l1795 0645                          l1891 023F                          l1963 034D  
                        l1955 0335                          l1947 031C                          l1939 030A  
                        l1971 04E7                          l1699 0437                          l1885 06A4  
                        l1797 064A                          l1789 0634                          l1893 0244  
                        l1965 0352                          l1957 033B                          l1949 0323  
                        l1981 04FF                          l1973 04ED                          l1799 0653  
                        l1895 0246                          l1887 0238                          l1959 0342  
                        l1983 0510                          l1975 04F0                          l1991 0524  
                        l1897 024A                          l1889 023B                          l1985 0516  
                        l1977 04F7                          l1969 04E3                          l1899 024F  
                        l1995 035A                          l1987 0517                          l1979 04FB  
                        l1997 0362                          l1989 051E                          ?_isr 0070  
                        STR_1 0493                          STR_2 0477                          STR_3 0466  
                        STR_4 0484                          STR_5 0484                          STR_6 048C  
                        u1020 0574                          u1021 0573                          u1040 0586  
                        u1041 0585                          u1050 0590                          u1051 058F  
                        u1035 0578                          u1070 05A3                          u2007 0221  
                        u1071 05A2                          u1055 058C                          u1320 063A  
                        u1400 024A                          u2017 022E                          u1321 0639  
                        u1401 0249                          u1065 0597                          u1330 0643  
                        u1410 025B                          u2027 069F                          u1331 0642  
                        u1411 025A                          u1340 0653                          u1500 030E  
                        u1341 0652                          u1501 030D                          u1430 026D  
                        u1510 0319                          u1431 026C                          u1511 0318  
                        u1600 04FF                          u1425 025F                          u1601 04FE  
                        u1450 027E                          u1530 032B                          u1451 027D  
                        u1531 032A                          u1540 0335                          u1620 0510  
                        u1700 009F                          u1445 026E                          u1541 0334  
                        u1525 031D                          u1621 050F                          u1701 009E  
                        u1470 0292                          u1390 023F                          u1710 00F3  
                        u1471 0291                          u1455 027A                          u1391 023E  
                        u1615 0500                          u1711 00F2                          u1800 055C  
                        u1480 0297                          u1560 0348                          u1640 0524  
                        u1720 0105                          u1801 055B                          u1481 0296  
                        u1465 0286                          u1561 0347                          u1545 0331  
                        u1641 0523                          u1625 050C                          u1721 0104  
                        u1810 0563                          u1570 034D                          u1490 0303  
                        u1650 03AD                          u1730 03FE                          u1811 0562  
                        u1571 034C                          u1555 033C                          u1491 0302  
                        u1651 03AC                          u1635 0518                          u1731 03FD  
                        u1740 052E                          u1580 04ED                          u1660 002E  
                        u1820 04A2                          u1741 052D                          u1581 04EC  
                        u1661 002D                          u1821 04A1                          u1750 0539  
                        u1670 0068                          u1830 04AF                          u1751 0538  
                        u1655 03A9                          u1671 0067                          u1735 03FA  
                        u1831 04AE                          u1760 0540                          u1680 008E  
                        u1840 04C7                          u1761 053F                          u1681 008D  
                        u1841 04C6                          u1770 0547                          u1690 0099  
                        u1850 04D7                          u1771 0546                          u1595 04F1  
                        u1691 0098                          u1907 04DD                          u1851 04D6  
                        u1780 054E                          u1860 05D6                          u1781 054D  
                        u1861 05D5                          u1917 0647                          u1685 008A  
                        u1790 0555                          u1791 0554                          u1927 065A  
                        u1937 068E                          u1947 01CE                          u1957 01DE  
                        u1877 014C                          u1967 01ED                          u1887 0428  
                        u1977 01FA                          u1897 04BB                          u1987 0207  
                        u1997 0214                 ??_Iniciar_LCD 0020                          _dato 0076  
                        _main 010A                          _vol1 006A                          _vol2 0069  
                        _vol3 0068                          btemp 007E                          start 000C  
                 divisor1@dig 0075                         ??_ADC 0070                         ??_isr 0071  
  __end_of_Escribir_stringLCD 05D7                         ?_main 0070               __end_of___awdiv 02A1  
             __end_of___awmod 0357                         _ANSEL 0188               ___awdiv@divisor 0020  
             __end_of___lwdiv 0529                         i1l105 05F7                         i1l210 067D  
                       i1l107 05FF               __end_of___lwmod 05A8               ___awdiv@counter 0024  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
                       _TXREG 0019               __end_of_divisor 03AE                         _cont1 0049  
                       _cont2 0048               __end_of_dpowers 0466                         _setup 03FF  
         _Limpiar_pantallaLCD 067E                         pclath 000A             ??_conversion_char 003D  
                       status 0003                         wtemp0 007E               __end_of_sprintf 010A  
             __initialization 000F           __end_of_Iniciar_LCD 0238                  __end_of_main 01C4  
        ?_Limpiar_pantallaLCD 0070                        ??_main 0044            set_cursor@posicion 0020  
                      _ADRESH 001E              ___awdiv@dividend 0022                        ?_setup 0070  
                      _ANSELH 0189                        i1l1811 05D7                        i1l1661 066B  
                      i1l1821 05ED                        i1l1813 05DD                        i1l1663 0670  
                      i1l1823 05F3                        i1l1815 05E2                        i1l1665 0679  
                      i1l1825 05FD                        i1l1817 05E5                        i1l1659 0660  
                      i1l1819 05E9                        u125_20 066B                        u125_21 066A  
                      u126_20 0679                        u126_21 0678                        u135_20 05DD  
                      u135_21 05DC                        u136_20 05E9                        u136_21 05E8  
                      u137_20 05F3                        u137_21 05F2                        u138_20 05FD  
                      u138_21 05FC                        _SPBRGH 009A                        _Cont_U 0047  
            __end_of_divisor1 03FF         ??_Limpiar_pantallaLCD 0020                     ??___awdiv 0074  
                   ??___awmod 0074         __end_of_dato_recibido 0634                     ??___lwdiv 0074  
                   ??___lwmod 0075              ___awdiv@quotient 0026               ___awmod@divisor 0020  
             ___awmod@counter 0024                     ??_divisor 0028                        saved_w 007E  
                   ??_sprintf 0033       __end_of__initialization 001C                   _Iniciar_LCD 01C4  
              __pcstackCOMMON 0070                 __end_of_setup 044C                       ??_setup 0074  
                  __pbssBANK0 0047                    __pmaintext 010A                    __pintentry 0004  
__size_of_Escribir_comandoLCD 0043               _conversion_char 02A1                     ?_divisor1 0075  
          _Escribir_stringLCD 05A8                    __stringtab 044C                    _conversion 0634  
         ?_Escribir_stringLCD 0020                       ___awdiv 0238                       ___awmod 02FC  
                     ___lwdiv 04E3                       ___lwmod 056C                       __ptext1 03FF  
                     __ptext2 0498                       __ptext3 0606                       __ptext4 03AE  
                     __ptext5 02A1                       __ptext6 0020                       __ptext7 056C  
                     __ptext8 04E3                       __ptext9 0357                       _buffer1 005E  
                     _buffer2 0054                       _buffer3 004A                  __size_of_ADC 001E  
                     _divisor 0357          ??_Escribir_stringLCD 0022                       _dpowers 045C  
                __size_of_isr 002F              ___awmod@dividend 0022                 ?_prender_ELCD 0070  
                     _sprintf 0020                       clrloop0 06A9                    ??_divisor1 0028  
        end_of_initialization 001C                    _set_cursor 0498                     _RCSTAbits 0018  
     __end_of_conversion_char 02FC                     _PORTBbits 0006                     _PORTCbits 0007  
                   _PORTDbits 0008                ??_prender_ELCD 0074                  ?_Iniciar_LCD 0070  
                 ?_conversion 0070                     _TXSTAbits 0098   __end_of_Limpiar_pantallaLCD 069A  
                  divisor@dig 0075                   _BAUDCTLbits 0187           start_initialization 000F  
                 __end_of_ADC 067E                   __end_of_isr 0606        __size_of_dato_recibido 002E  
         _Escribir_comandoLCD 0529    Escribir_comandoLCD@Comando 0075                   ?_set_cursor 0020  
            ?_conversion_char 0070          ?_Escribir_comandoLCD 0070           __size_of_conversion 002C  
                 __pbssCOMMON 0076                     ___latbits 0002                 __pcstackBANK0 0020  
                 sprintf@flag 0037             __size_of_divisor1 0051                   sprintf@prec 0038  
        __end_of_prender_ELCD 06A8              ___lwdiv@dividend 0022                      ?___awdiv 0020  
                    ?___awmod 0020                      ?___lwdiv 0020                      ?___lwmod 0027  
       ??_Escribir_comandoLCD 0075                 _dato_recibido 0606                     __pstrings 044C  
                    ?_divisor 0075              ___lwdiv@quotient 0025           __size_of_set_cursor 004B  
                    ?_sprintf 002C                __size_of_setup 004D             interrupt_function 0004  
                   clear_ram0 06A8                      _PIE1bits 008C          __size_of_Iniciar_LCD 0074  
                    _PIR1bits 000C                ?_dato_recibido 0070                    _ADCON0bits 001F  
                 __stringbase 045B                    _ADCON1bits 009F   __size_of_Escribir_stringLCD 002F  
                   divisor1@a 002C                     divisor1@i 002D                  ??_conversion 0074  
         Escribir_stringLCD@d 0020           Escribir_stringLCD@i 0023              __size_of___awdiv 0069  
            __size_of___awmod 005B              __size_of___lwdiv 0046              __size_of___lwmod 003C  
          __end_of__stringtab 045C                    sprintf@val 0039              __size_of_divisor 0057  
          __end_of_conversion 0660               ___lwdiv@divisor 0020               ___lwdiv@counter 0024  
                    __ptext10 02FC                      __ptext11 0238                      __ptext12 0634  
                    __ptext13 067E                      __ptext14 01C4                      __ptext15 05A8  
                    __ptext16 0529                      __ptext17 069A                      __ptext18 05D7  
                    __ptext19 0660                      _divisor1 03AE              __size_of_sprintf 00EA  
       __size_of_prender_ELCD 000E                 __size_of_main 00BA                  ??_set_cursor 0021  
             ??_dato_recibido 003D  __size_of_Limpiar_pantallaLCD 001C                      divisor@a 002A  
                    divisor@b 002B                      divisor@i 002D                    _INTCONbits 000B  
                _prender_ELCD 069A            __end_of_set_cursor 04E3                      intlevel1 0000  
                   sprintf@ap 0036                     sprintf@sp 003B              ___lwmod@dividend 0029  
                   stringcode 0456                    _OSCCONbits 008F                      sprintf@c 003C  
                    sprintf@f 002C               ___lwmod@divisor 0027               ___lwmod@counter 002B  
    __size_of_conversion_char 005B                      stringdir 0456                      stringtab 044C  
 __end_of_Escribir_comandoLCD 056C  
