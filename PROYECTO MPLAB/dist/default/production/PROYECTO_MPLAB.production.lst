

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 00:49:24 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380                           
   381                           	psect	strings
   382  0500                     __pstrings:
   383  0500                     stringtab:
   384  0500                     __stringtab:
   385                           
   386                           ;	String table - string pointers are 1 byte each
   387  0500  1BFF               	btfsc	btemp+1,7
   388  0501  2D0A               	ljmp	stringcode
   389  0502  1383               	bcf	3,7
   390  0503  187F               	btfsc	btemp+1,0
   391  0504  1783               	bsf	3,7
   392  0505  0800               	movf	0,w
   393  0506  0A84               	incf	4,f
   394  0507  1903               	skipnz
   395  0508  0AFF               	incf	btemp+1,f
   396  0509  0008               	return
   397  050A                     stringcode:
   398  050A                     stringdir:
   399  050A  3005               	movlw	high stringdir
   400  050B  008A               	movwf	10
   401  050C  0804               	movf	4,w
   402  050D  0A84               	incf	4,f
   403  050E  0782               	addwf	2,f
   404  050F                     __stringbase:
   405  050F  3400               	retlw	0
   406  0510                     __end_of__stringtab:
   407  0510                     _dpowers:
   408  0510  3401               	retlw	1
   409  0511  3400               	retlw	0
   410  0512  340A               	retlw	10
   411  0513  3400               	retlw	0
   412  0514  3464               	retlw	100
   413  0515  3400               	retlw	0
   414  0516  34E8               	retlw	232
   415  0517  3403               	retlw	3
   416  0518  3410               	retlw	16
   417  0519  3427               	retlw	39
   418  051A                     __end_of_dpowers:
   419  001E                     _ADRESH	set	30
   420  0007                     _PORTCbits	set	7
   421  0006                     _PORTBbits	set	6
   422  0008                     _PORTDbits	set	8
   423  0018                     _RCSTAbits	set	24
   424  000B                     _INTCONbits	set	11
   425  0006                     _PORTB	set	6
   426  0009                     _PORTE	set	9
   427  0007                     _PORTC	set	7
   428  0008                     _PORTD	set	8
   429  0005                     _PORTA	set	5
   430  001F                     _ADCON0bits	set	31
   431  001A                     _RCREG	set	26
   432  000C                     _PIR1bits	set	12
   433  009A                     _SPBRGH	set	154
   434  0099                     _SPBRG	set	153
   435  0098                     _TXSTAbits	set	152
   436  008C                     _PIE1bits	set	140
   437  009F                     _ADCON1bits	set	159
   438  008F                     _OSCCONbits	set	143
   439  0089                     _TRISE	set	137
   440  0087                     _TRISC	set	135
   441  0088                     _TRISD	set	136
   442  0086                     _TRISB	set	134
   443  0085                     _TRISA	set	133
   444  0187                     _BAUDCTLbits	set	391
   445  0189                     _ANSELH	set	393
   446  0188                     _ANSEL	set	392
   447  051A                     STR_3:
   448  051A  3453               	retlw	83	;'S'
   449  051B  3431               	retlw	49	;'1'
   450  051C  343A               	retlw	58	;':'
   451  051D  3420               	retlw	32	;' '
   452  051E  3420               	retlw	32	;' '
   453  051F  3420               	retlw	32	;' '
   454  0520  3420               	retlw	32	;' '
   455  0521  3453               	retlw	83	;'S'
   456  0522  3432               	retlw	50	;'2'
   457  0523  343A               	retlw	58	;':'
   458  0524  3420               	retlw	32	;' '
   459  0525  3420               	retlw	32	;' '
   460  0526  3420               	retlw	32	;' '
   461  0527  3453               	retlw	83	;'S'
   462  0528  3433               	retlw	51	;'3'
   463  0529  343A               	retlw	58	;':'
   464  052A  3400               	retlw	0
   465  052B                     STR_4:
   466  052B  3425               	retlw	37	;'%'
   467  052C  3464               	retlw	100	;'d'
   468  052D  342E               	retlw	46	;'.'
   469  052E  3425               	retlw	37	;'%'
   470  052F  3464               	retlw	100	;'d'
   471  0530  3425               	retlw	37	;'%'
   472  0531  3464               	retlw	100	;'d'
   473  0532  3400               	retlw	0
   474  0533                     STR_2:
   475  0533  3454               	retlw	84	;'T'
   476  0534  3465               	retlw	101	;'e'
   477  0535  3469               	retlw	105	;'i'
   478  0536  3470               	retlw	112	;'p'
   479  0537  3469               	retlw	105	;'i'
   480  0538  346F               	retlw	111	;'o'
   481  0539  3400               	retlw	0
   482  053A                     STR_1:
   483  053A  3448               	retlw	72	;'H'
   484  053B  346F               	retlw	111	;'o'
   485  053C  346C               	retlw	108	;'l'
   486  053D  3461               	retlw	97	;'a'
   487  053E  3400               	retlw	0
   488  0530                     
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493  000F                     __initialization:
   494                           
   495                           ; Clear objects allocated to COMMON
   496  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   497  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   498  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   499  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   500                           
   501                           ; Clear objects allocated to BANK0
   502  0013  1383               	bcf	3,7	;select IRP bank0
   503  0014  3047               	movlw	low __pbssBANK0
   504  0015  0084               	movwf	4
   505  0016  306B               	movlw	low (__pbssBANK0+36)
   506  0017  120A  118A  2661  120A  118A  	fcall	clear_ram0
   507  001C                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  001C                     __end_of__initialization:
   511  001C  0183               	clrf	3
   512  001D  120A  118A  290A   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMMON
   515  0076                     __pbssCOMMON:
   516  0076                     _dato:
   517  0076                     	ds	1
   518  0077                     _cen:
   519  0077                     	ds	1
   520  0078                     _dec:
   521  0078                     	ds	1
   522  0079                     _uni:
   523  0079                     	ds	1
   524                           
   525                           	psect	bssBANK0
   526  0047                     __pbssBANK0:
   527  0047                     _Cont_U:
   528  0047                     	ds	1
   529  0048                     _vol3:
   530  0048                     	ds	1
   531  0049                     _cont2:
   532  0049                     	ds	1
   533  004A                     _cont1:
   534  004A                     	ds	1
   535  004B                     _buffer3:
   536  004B                     	ds	10
   537  0055                     _buffer2:
   538  0055                     	ds	10
   539  005F                     _buffer1:
   540  005F                     	ds	10
   541  0069                     _vol2:
   542  0069                     	ds	1
   543  006A                     _vol1:
   544  006A                     	ds	1
   545                           
   546                           	psect	clrtext
   547  0661                     clear_ram0:	
   548                           ;	Called with FSR containing the base address, and
   549                           ;	W with the last address+1
   550                           
   551  0661  0064               	clrwdt	;clear the watchdog before getting into this loop
   552  0662                     clrloop0:
   553  0662  0180               	clrf	0	;clear RAM location pointed to by FSR
   554  0663  0A84               	incf	4,f	;increment pointer
   555  0664  0604               	xorwf	4,w	;XOR with final address
   556  0665  1903               	btfsc	3,2	;have we reached the end yet?
   557  0666  3400               	retlw	0	;all done for this memory range, return
   558  0667  0604               	xorwf	4,w	;XOR again to restore value
   559  0668  2E62               	goto	clrloop0	;do the next byte
   560                           
   561                           	psect	cstackCOMMON
   562  0070                     __pcstackCOMMON:
   563  0070                     ?_ADC:
   564  0070                     ??_ADC:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_setup:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_Iniciar_LCD:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_Limpiar_pantallaLCD:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_conversion:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_conversion_char:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_dato_recibido:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_isr:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_main:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_prender_ELCD:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_Escribir_comandoLCD:	
   595                           ; 1 bytes @ 0x0
   596                           
   597                           
   598                           ; 1 bytes @ 0x0
   599  0070                     	ds	1
   600  0071                     ??_isr:
   601                           
   602                           ; 1 bytes @ 0x1
   603  0071                     	ds	3
   604  0074                     ??_setup:
   605  0074                     ??_conversion:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     ??_prender_ELCD:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     ??___awdiv:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     ??___awmod:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     ??___lwdiv:	
   618                           ; 1 bytes @ 0x4
   619                           
   620                           
   621                           ; 1 bytes @ 0x4
   622  0074                     	ds	1
   623  0075                     ?_divisor:
   624  0075                     ??_Escribir_comandoLCD:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0075                     ??___lwmod:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     divisor@dig:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     Escribir_comandoLCD@Comando:	
   634                           ; 1 bytes @ 0x5
   635                           
   636                           
   637                           ; 1 bytes @ 0x5
   638  0075                     	ds	1
   639                           
   640                           	psect	cstackBANK0
   641  0020                     __pcstackBANK0:
   642  0020                     ??_Iniciar_LCD:
   643  0020                     ??_Limpiar_pantallaLCD:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0020                     ?_set_cursor:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0020                     ?_Escribir_stringLCD:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0020                     ?___awdiv:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0020                     ?___awmod:	
   656                           ; 2 bytes @ 0x0
   657                           
   658  0020                     ?___lwdiv:	
   659                           ; 2 bytes @ 0x0
   660                           
   661  0020                     set_cursor@posicion:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0020                     Escribir_stringLCD@d:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0020                     ___awdiv@divisor:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0020                     ___awmod@divisor:	
   671                           ; 2 bytes @ 0x0
   672                           
   673  0020                     ___lwdiv@divisor:	
   674                           ; 2 bytes @ 0x0
   675                           
   676                           
   677                           ; 2 bytes @ 0x0
   678  0020                     	ds	1
   679  0021                     ??_set_cursor:
   680                           
   681                           ; 1 bytes @ 0x1
   682  0021                     	ds	1
   683  0022                     ??_Escribir_stringLCD:
   684  0022                     ___awdiv@dividend:	
   685                           ; 1 bytes @ 0x2
   686                           
   687  0022                     ___awmod@dividend:	
   688                           ; 2 bytes @ 0x2
   689                           
   690  0022                     ___lwdiv@dividend:	
   691                           ; 2 bytes @ 0x2
   692                           
   693                           
   694                           ; 2 bytes @ 0x2
   695  0022                     	ds	1
   696  0023                     Escribir_stringLCD@i:
   697  0023                     set_cursor@linea:	
   698                           ; 1 bytes @ 0x3
   699                           
   700                           
   701                           ; 1 bytes @ 0x3
   702  0023                     	ds	1
   703  0024                     ___awdiv@counter:
   704  0024                     ___awmod@counter:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0024                     ___lwdiv@counter:	
   708                           ; 1 bytes @ 0x4
   709                           
   710                           
   711                           ; 1 bytes @ 0x4
   712  0024                     	ds	1
   713  0025                     ___awdiv@sign:
   714  0025                     ___awmod@sign:	
   715                           ; 1 bytes @ 0x5
   716                           
   717  0025                     ___lwdiv@quotient:	
   718                           ; 1 bytes @ 0x5
   719                           
   720                           
   721                           ; 2 bytes @ 0x5
   722  0025                     	ds	1
   723  0026                     ___awdiv@quotient:
   724                           
   725                           ; 2 bytes @ 0x6
   726  0026                     	ds	1
   727  0027                     ?___lwmod:
   728  0027                     ___lwmod@divisor:	
   729                           ; 2 bytes @ 0x7
   730                           
   731                           
   732                           ; 2 bytes @ 0x7
   733  0027                     	ds	1
   734  0028                     ??_divisor:
   735                           
   736                           ; 1 bytes @ 0x8
   737  0028                     	ds	1
   738  0029                     ___lwmod@dividend:
   739                           
   740                           ; 2 bytes @ 0x9
   741  0029                     	ds	1
   742  002A                     divisor@a:
   743                           
   744                           ; 1 bytes @ 0xA
   745  002A                     	ds	1
   746  002B                     ___lwmod@counter:
   747  002B                     divisor@b:	
   748                           ; 1 bytes @ 0xB
   749                           
   750                           
   751                           ; 2 bytes @ 0xB
   752  002B                     	ds	1
   753  002C                     ?_sprintf:
   754  002C                     sprintf@f:	
   755                           ; 2 bytes @ 0xC
   756                           
   757                           
   758                           ; 1 bytes @ 0xC
   759  002C                     	ds	1
   760  002D                     divisor@i:
   761                           
   762                           ; 2 bytes @ 0xD
   763  002D                     	ds	6
   764  0033                     ??_sprintf:
   765                           
   766                           ; 1 bytes @ 0x13
   767  0033                     	ds	3
   768  0036                     sprintf@ap:
   769                           
   770                           ; 1 bytes @ 0x16
   771  0036                     	ds	1
   772  0037                     sprintf@flag:
   773                           
   774                           ; 1 bytes @ 0x17
   775  0037                     	ds	1
   776  0038                     sprintf@prec:
   777                           
   778                           ; 1 bytes @ 0x18
   779  0038                     	ds	1
   780  0039                     sprintf@val:
   781                           
   782                           ; 2 bytes @ 0x19
   783  0039                     	ds	2
   784  003B                     sprintf@sp:
   785                           
   786                           ; 1 bytes @ 0x1B
   787  003B                     	ds	1
   788  003C                     sprintf@c:
   789                           
   790                           ; 1 bytes @ 0x1C
   791  003C                     	ds	1
   792  003D                     ??_conversion_char:
   793  003D                     ??_dato_recibido:	
   794                           ; 1 bytes @ 0x1D
   795                           
   796                           
   797                           ; 1 bytes @ 0x1D
   798  003D                     	ds	7
   799  0044                     ??_main:
   800                           
   801                           ; 1 bytes @ 0x24
   802  0044                     	ds	3
   803                           
   804                           	psect	maintext
   805  010A                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 85 in file "LAB2.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          0       3       0       0       0
   828 ;;      Totals:         0       3       0       0       0
   829 ;;Total ram usage:        3 bytes
   830 ;; Hardware stack levels required when called: 5
   831 ;; This function calls:
   832 ;;		_Escribir_stringLCD
   833 ;;		_Iniciar_LCD
   834 ;;		_Limpiar_pantallaLCD
   835 ;;		_conversion
   836 ;;		_conversion_char
   837 ;;		_dato_recibido
   838 ;;		_set_cursor
   839 ;;		_setup
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _main
   847  010A                     _main:
   848  010A                     l2020:	
   849                           ;incstack = 0
   850                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   851                           
   852                           
   853                           ;LAB2.c: 86:     setup();
   854  010A  120A  118A  23AE  120A  118A  	fcall	_setup
   855                           
   856                           ;LAB2.c: 87:     Iniciar_LCD();
   857  010F  120A  118A  21C4  120A  118A  	fcall	_Iniciar_LCD
   858                           
   859                           ;LAB2.c: 88:     Limpiar_pantallaLCD();
   860  0114  120A  118A  2623  120A  118A  	fcall	_Limpiar_pantallaLCD
   861                           
   862                           ;LAB2.c: 89:     set_cursor(1,0);
   863  0119  1283               	bcf	3,5	;RP0=0, select bank0
   864  011A  1303               	bcf	3,6	;RP1=0, select bank0
   865  011B  01A0               	clrf	set_cursor@posicion
   866  011C  3001               	movlw	1
   867  011D  120A  118A  23FB  120A  118A  	fcall	_set_cursor
   868  0122                     l2022:
   869                           
   870                           ;LAB2.c: 90:     Escribir_stringLCD("Hola");
   871  0122  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   872  0123  1283               	bcf	3,5	;RP0=0, select bank0
   873  0124  1303               	bcf	3,6	;RP1=0, select bank0
   874  0125  00A0               	movwf	Escribir_stringLCD@d
   875  0126  3080               	movlw	128
   876  0127  00A1               	movwf	Escribir_stringLCD@d+1
   877  0128  120A  118A  257B  120A  118A  	fcall	_Escribir_stringLCD
   878  012D                     l2024:
   879                           
   880                           ;LAB2.c: 91:     set_cursor(2,2);
   881  012D  3002               	movlw	2
   882  012E  1283               	bcf	3,5	;RP0=0, select bank0
   883  012F  1303               	bcf	3,6	;RP1=0, select bank0
   884  0130  00C4               	movwf	??_main
   885  0131  0844               	movf	??_main,w
   886  0132  00A0               	movwf	set_cursor@posicion
   887  0133  3002               	movlw	2
   888  0134  120A  118A  23FB  120A  118A  	fcall	_set_cursor
   889                           
   890                           ;LAB2.c: 92:     Escribir_stringLCD("Teipio");
   891  0139  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   892  013A  1283               	bcf	3,5	;RP0=0, select bank0
   893  013B  1303               	bcf	3,6	;RP1=0, select bank0
   894  013C  00A0               	movwf	Escribir_stringLCD@d
   895  013D  3080               	movlw	128
   896  013E  00A1               	movwf	Escribir_stringLCD@d+1
   897  013F  120A  118A  257B  120A  118A  	fcall	_Escribir_stringLCD
   898  0144                     l2026:
   899                           
   900                           ;LAB2.c: 93:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   901  0144  301A               	movlw	26
   902  0145  1283               	bcf	3,5	;RP0=0, select bank0
   903  0146  1303               	bcf	3,6	;RP1=0, select bank0
   904  0147  00C6               	movwf	??_main+2
   905  0148  305E               	movlw	94
   906  0149  00C5               	movwf	??_main+1
   907  014A  306D               	movlw	109
   908  014B  00C4               	movwf	??_main
   909  014C                     u1727:
   910  014C  0BC4               	decfsz	??_main,f
   911  014D  294C               	goto	u1727
   912  014E  0BC5               	decfsz	??_main+1,f
   913  014F  294C               	goto	u1727
   914  0150  0BC6               	decfsz	??_main+2,f
   915  0151  294C               	goto	u1727
   916  0152  2953               	nop2
   917  0153                     l2028:
   918                           
   919                           ;LAB2.c: 94:     ADCON0bits.GO = 1;
   920  0153  1283               	bcf	3,5	;RP0=0, select bank0
   921  0154  1303               	bcf	3,6	;RP1=0, select bank0
   922  0155  149F               	bsf	31,1	;volatile
   923  0156                     l2030:
   924                           
   925                           ;LAB2.c: 96:     Limpiar_pantallaLCD();
   926  0156  120A  118A  2623  120A  118A  	fcall	_Limpiar_pantallaLCD
   927  015B                     l2032:
   928                           
   929                           ;LAB2.c: 99:         conversion();
   930  015B  120A  118A  25D9  120A  118A  	fcall	_conversion
   931  0160                     l2034:
   932                           
   933                           ;LAB2.c: 102:         set_cursor(1,0);
   934  0160  1283               	bcf	3,5	;RP0=0, select bank0
   935  0161  1303               	bcf	3,6	;RP1=0, select bank0
   936  0162  01A0               	clrf	set_cursor@posicion
   937  0163  3001               	movlw	1
   938  0164  120A  118A  23FB  120A  118A  	fcall	_set_cursor
   939  0169                     l2036:
   940                           
   941                           ;LAB2.c: 103:         Escribir_stringLCD("S1:    S2:   S3:");
   942  0169  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   943  016A  1283               	bcf	3,5	;RP0=0, select bank0
   944  016B  1303               	bcf	3,6	;RP1=0, select bank0
   945  016C  00A0               	movwf	Escribir_stringLCD@d
   946  016D  3080               	movlw	128
   947  016E  00A1               	movwf	Escribir_stringLCD@d+1
   948  016F  120A  118A  257B  120A  118A  	fcall	_Escribir_stringLCD
   949  0174                     l2038:
   950                           
   951                           ;LAB2.c: 105:         conversion_char();
   952  0174  120A  118A  22A1  120A  118A  	fcall	_conversion_char
   953  0179                     l2040:
   954                           
   955                           ;LAB2.c: 107:         set_cursor(2,0);
   956  0179  1283               	bcf	3,5	;RP0=0, select bank0
   957  017A  1303               	bcf	3,6	;RP1=0, select bank0
   958  017B  01A0               	clrf	set_cursor@posicion
   959  017C  3002               	movlw	2
   960  017D  120A  118A  23FB  120A  118A  	fcall	_set_cursor
   961  0182                     l2042:
   962                           
   963                           ;LAB2.c: 108:         Escribir_stringLCD(buffer1);
   964  0182  305F               	movlw	(low (_buffer1| 0))& (0+255)
   965  0183  1283               	bcf	3,5	;RP0=0, select bank0
   966  0184  1303               	bcf	3,6	;RP1=0, select bank0
   967  0185  00A0               	movwf	Escribir_stringLCD@d
   968  0186  3000               	movlw	0
   969  0187  00A1               	movwf	Escribir_stringLCD@d+1
   970  0188  120A  118A  257B  120A  118A  	fcall	_Escribir_stringLCD
   971  018D                     l2044:
   972                           
   973                           ;LAB2.c: 109:         set_cursor(2,7);
   974  018D  3007               	movlw	7
   975  018E  1283               	bcf	3,5	;RP0=0, select bank0
   976  018F  1303               	bcf	3,6	;RP1=0, select bank0
   977  0190  00C4               	movwf	??_main
   978  0191  0844               	movf	??_main,w
   979  0192  00A0               	movwf	set_cursor@posicion
   980  0193  3002               	movlw	2
   981  0194  120A  118A  23FB  120A  118A  	fcall	_set_cursor
   982  0199                     l2046:
   983                           
   984                           ;LAB2.c: 110:         Escribir_stringLCD(buffer2);
   985  0199  3055               	movlw	(low (_buffer2| 0))& (0+255)
   986  019A  1283               	bcf	3,5	;RP0=0, select bank0
   987  019B  1303               	bcf	3,6	;RP1=0, select bank0
   988  019C  00A0               	movwf	Escribir_stringLCD@d
   989  019D  3000               	movlw	0
   990  019E  00A1               	movwf	Escribir_stringLCD@d+1
   991  019F  120A  118A  257B  120A  118A  	fcall	_Escribir_stringLCD
   992  01A4                     l2048:
   993                           
   994                           ;LAB2.c: 113:         dato_recibido();
   995  01A4  120A  118A  263F  120A  118A  	fcall	_dato_recibido
   996  01A9                     l2050:
   997                           
   998                           ;LAB2.c: 115:         set_cursor(2,13);
   999  01A9  300D               	movlw	13
  1000  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1001  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1002  01AC  00C4               	movwf	??_main
  1003  01AD  0844               	movf	??_main,w
  1004  01AE  00A0               	movwf	set_cursor@posicion
  1005  01AF  3002               	movlw	2
  1006  01B0  120A  118A  23FB  120A  118A  	fcall	_set_cursor
  1007  01B5                     l2052:
  1008                           
  1009                           ;LAB2.c: 116:         Escribir_stringLCD(buffer3);
  1010  01B5  304B               	movlw	(low (_buffer3| 0))& (0+255)
  1011  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1012  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1013  01B8  00A0               	movwf	Escribir_stringLCD@d
  1014  01B9  3000               	movlw	0
  1015  01BA  00A1               	movwf	Escribir_stringLCD@d+1
  1016  01BB  120A  118A  257B  120A  118A  	fcall	_Escribir_stringLCD
  1017  01C0  295B               	goto	l2032
  1018  01C1  120A  118A  280C   	ljmp	start
  1019  01C4                     __end_of_main:
  1020                           
  1021                           	psect	text1
  1022  03AE                     __ptext1:	
  1023 ;; *************** function _setup *****************
  1024 ;; Defined at:
  1025 ;;		line 121 in file "LAB2.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          1       0       0       0       0
  1042 ;;      Totals:         1       0       0       0       0
  1043 ;;Total ram usage:        1 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 2
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _setup
  1055  03AE                     _setup:
  1056  03AE                     l1524:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _setup: [wreg+status,2+status,0]
  1059                           
  1060                           
  1061                           ;LAB2.c: 124:     ANSEL = 0b0011;
  1062  03AE  3003               	movlw	3
  1063  03AF  1683               	bsf	3,5	;RP0=1, select bank3
  1064  03B0  1703               	bsf	3,6	;RP1=1, select bank3
  1065  03B1  0088               	movwf	8	;volatile
  1066  03B2                     l1526:
  1067                           
  1068                           ;LAB2.c: 125:     ANSELH = 0;
  1069  03B2  0189               	clrf	9	;volatile
  1070  03B3                     l1528:
  1071                           
  1072                           ;LAB2.c: 127:     TRISA = 0b0011;
  1073  03B3  3003               	movlw	3
  1074  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1075  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  1076  03B6  0085               	movwf	5	;volatile
  1077                           
  1078                           ;LAB2.c: 128:     TRISB = 0;
  1079  03B7  0186               	clrf	6	;volatile
  1080                           
  1081                           ;LAB2.c: 129:     TRISD = 0;
  1082  03B8  0188               	clrf	8	;volatile
  1083                           
  1084                           ;LAB2.c: 130:     TRISC = 0;
  1085  03B9  0187               	clrf	7	;volatile
  1086                           
  1087                           ;LAB2.c: 131:     TRISE = 0;
  1088  03BA  0189               	clrf	9	;volatile
  1089                           
  1090                           ;LAB2.c: 133:     PORTA = 0;
  1091  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1092  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1093  03BD  0185               	clrf	5	;volatile
  1094                           
  1095                           ;LAB2.c: 134:     PORTD = 0;
  1096  03BE  0188               	clrf	8	;volatile
  1097                           
  1098                           ;LAB2.c: 135:     PORTC = 0;
  1099  03BF  0187               	clrf	7	;volatile
  1100                           
  1101                           ;LAB2.c: 136:     PORTE = 0;
  1102  03C0  0189               	clrf	9	;volatile
  1103                           
  1104                           ;LAB2.c: 137:     PORTB = 0;
  1105  03C1  0186               	clrf	6	;volatile
  1106  03C2                     l1530:
  1107                           
  1108                           ;LAB2.c: 140:     OSCCONbits.IRCF = 0b0110;
  1109  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1110  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  1111  03C4  080F               	movf	15,w	;volatile
  1112  03C5  398F               	andlw	-113
  1113  03C6  3860               	iorlw	96
  1114  03C7  008F               	movwf	15	;volatile
  1115  03C8                     l1532:
  1116                           
  1117                           ;LAB2.c: 141:     OSCCONbits.SCS = 1;
  1118  03C8  140F               	bsf	15,0	;volatile
  1119  03C9                     l1534:
  1120                           
  1121                           ;LAB2.c: 144:     ADCON1bits.ADFM = 0;
  1122  03C9  139F               	bcf	31,7	;volatile
  1123  03CA                     l1536:
  1124                           
  1125                           ;LAB2.c: 145:     ADCON1bits.VCFG0 = 0;
  1126  03CA  121F               	bcf	31,4	;volatile
  1127  03CB                     l1538:
  1128                           
  1129                           ;LAB2.c: 146:     ADCON1bits.VCFG1 = 0;
  1130  03CB  129F               	bcf	31,5	;volatile
  1131  03CC                     l1540:
  1132                           
  1133                           ;LAB2.c: 148:     ADCON0bits.ADCS = 0b01;
  1134  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1135  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1136  03CE  081F               	movf	31,w	;volatile
  1137  03CF  393F               	andlw	-193
  1138  03D0  3840               	iorlw	64
  1139  03D1  009F               	movwf	31	;volatile
  1140  03D2                     l1542:
  1141                           
  1142                           ;LAB2.c: 149:     ADCON0bits.CHS = 0;
  1143  03D2  30C3               	movlw	-61
  1144  03D3  059F               	andwf	31,f	;volatile
  1145  03D4                     l1544:
  1146                           
  1147                           ;LAB2.c: 150:     ADCON0bits.ADON = 1;
  1148  03D4  141F               	bsf	31,0	;volatile
  1149  03D5                     l1546:
  1150                           
  1151                           ;LAB2.c: 151:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1152  03D5  3010               	movlw	16
  1153  03D6  00F4               	movwf	??_setup
  1154  03D7                     u1737:
  1155  03D7  0BF4               	decfsz	??_setup,f
  1156  03D8  2BD7               	goto	u1737
  1157  03D9  0000               	nop
  1158  03DA                     l1548:
  1159                           
  1160                           ;LAB2.c: 154:     PIR1bits.ADIF = 0;
  1161  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1162  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1163  03DC  130C               	bcf	12,6	;volatile
  1164  03DD                     l1550:
  1165                           
  1166                           ;LAB2.c: 155:     PIE1bits.ADIE = 1;
  1167  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  1168  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  1169  03DF  170C               	bsf	12,6	;volatile
  1170  03E0                     l1552:
  1171                           
  1172                           ;LAB2.c: 156:     PIR1bits.RCIF = 0;
  1173  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1174  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1175  03E2  128C               	bcf	12,5	;volatile
  1176  03E3                     l1554:
  1177                           
  1178                           ;LAB2.c: 157:     PIE1bits.RCIE = 1;
  1179  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1180  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1181  03E5  168C               	bsf	12,5	;volatile
  1182  03E6                     l1556:
  1183                           
  1184                           ;LAB2.c: 158:     INTCONbits.PEIE = 1;
  1185  03E6  170B               	bsf	11,6	;volatile
  1186  03E7                     l1558:
  1187                           
  1188                           ;LAB2.c: 159:     INTCONbits.GIE = 1;
  1189  03E7  178B               	bsf	11,7	;volatile
  1190  03E8                     l1560:
  1191                           
  1192                           ;LAB2.c: 162:     TXSTAbits.SYNC = 0;
  1193  03E8  1218               	bcf	24,4	;volatile
  1194  03E9                     l1562:
  1195                           
  1196                           ;LAB2.c: 163:     TXSTAbits.BRGH = 1;
  1197  03E9  1518               	bsf	24,2	;volatile
  1198  03EA                     l1564:
  1199                           
  1200                           ;LAB2.c: 165:     BAUDCTLbits.BRG16 = 0;
  1201  03EA  1683               	bsf	3,5	;RP0=1, select bank3
  1202  03EB  1703               	bsf	3,6	;RP1=1, select bank3
  1203  03EC  1187               	bcf	7,3	;volatile
  1204  03ED                     l1566:
  1205                           
  1206                           ;LAB2.c: 167:     SPBRG = 23;
  1207  03ED  3017               	movlw	23
  1208  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1209  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  1210  03F0  0099               	movwf	25	;volatile
  1211  03F1                     l1568:
  1212                           
  1213                           ;LAB2.c: 168:     SPBRGH = 0;
  1214  03F1  019A               	clrf	26	;volatile
  1215  03F2                     l1570:
  1216                           
  1217                           ;LAB2.c: 170:     RCSTAbits.SPEN = 1;
  1218  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1219  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1220  03F4  1798               	bsf	24,7	;volatile
  1221  03F5                     l1572:
  1222                           
  1223                           ;LAB2.c: 171:     RCSTAbits.RX9 = 0;
  1224  03F5  1318               	bcf	24,6	;volatile
  1225  03F6                     l1574:
  1226                           
  1227                           ;LAB2.c: 172:     RCSTAbits.CREN = 1;
  1228  03F6  1618               	bsf	24,4	;volatile
  1229  03F7                     l1576:
  1230                           
  1231                           ;LAB2.c: 174:     TXSTAbits.TXEN = 1;
  1232  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1233  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1234  03F9  1698               	bsf	24,5	;volatile
  1235  03FA                     l118:
  1236  03FA  0008               	return
  1237  03FB                     __end_of_setup:
  1238                           
  1239                           	psect	text2
  1240  03FB                     __ptext2:	
  1241 ;; *************** function _set_cursor *****************
  1242 ;; Defined at:
  1243 ;;		line 71 in file "LCD.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  linea           1    wreg     unsigned char 
  1246 ;;  posicion        1    0[BANK0 ] unsigned char 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  linea           1    3[BANK0 ] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       1       0       0       0
  1259 ;;      Locals:         0       1       0       0       0
  1260 ;;      Temps:          0       2       0       0       0
  1261 ;;      Totals:         0       4       0       0       0
  1262 ;;Total ram usage:        4 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 4
  1265 ;; This function calls:
  1266 ;;		_Escribir_comandoLCD
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _set_cursor
  1274  03FB                     _set_cursor:
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1278                           ;set_cursor@linea stored from wreg
  1279  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1280  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1281  03FD  00A3               	movwf	set_cursor@linea
  1282  03FE                     l1982:
  1283                           
  1284                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1285  03FE  1287               	bcf	7,5	;volatile
  1286  03FF  1208               	bcf	8,4	;volatile
  1287  0400                     l1984:
  1288                           
  1289                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1290  0400  0323               	decf	set_cursor@linea,w
  1291  0401  1D03               	btfss	3,2
  1292  0402  2C04               	goto	u1671
  1293  0403  2C05               	goto	u1670
  1294  0404                     u1671:
  1295  0404  2C0C               	goto	l1988
  1296  0405                     u1670:
  1297  0405                     l1986:
  1298  0405  3080               	movlw	128
  1299  0406  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  1300  040B  2C18               	goto	l1992
  1301  040C                     l1988:
  1302  040C  3002               	movlw	2
  1303  040D  0623               	xorwf	set_cursor@linea,w
  1304  040E  1D03               	btfss	3,2
  1305  040F  2C11               	goto	u1681
  1306  0410  2C12               	goto	u1680
  1307  0411                     u1681:
  1308  0411  2C18               	goto	l1992
  1309  0412                     u1680:
  1310  0412                     l1990:
  1311  0412  30C0               	movlw	192
  1312  0413  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  1313  0418                     l1992:
  1314                           
  1315                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1316  0418  3068               	movlw	104
  1317  0419  1283               	bcf	3,5	;RP0=0, select bank0
  1318  041A  1303               	bcf	3,6	;RP1=0, select bank0
  1319  041B  00A2               	movwf	??_set_cursor+1
  1320  041C  30E3               	movlw	227
  1321  041D  00A1               	movwf	??_set_cursor
  1322  041E                     u1747:
  1323  041E  0BA1               	decfsz	??_set_cursor,f
  1324  041F  2C1E               	goto	u1747
  1325  0420  0BA2               	decfsz	??_set_cursor+1,f
  1326  0421  2C1E               	goto	u1747
  1327  0422  2C23               	nop2
  1328  0423                     l1994:
  1329                           
  1330                           ;LCD.c: 80:     if (posicion != 0){
  1331  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0425  0820               	movf	set_cursor@posicion,w
  1334  0426  1903               	btfsc	3,2
  1335  0427  2C29               	goto	u1691
  1336  0428  2C2A               	goto	u1690
  1337  0429                     u1691:
  1338  0429  2C45               	goto	l181
  1339  042A                     u1690:
  1340  042A  2C35               	goto	l2002
  1341  042B                     l1998:
  1342                           
  1343                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1344  042B  3014               	movlw	20
  1345  042C  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  1346  0431                     l2000:
  1347                           
  1348                           ;LCD.c: 83:             posicion--;
  1349  0431  3001               	movlw	1
  1350  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0434  02A0               	subwf	set_cursor@posicion,f
  1353  0435                     l2002:
  1354                           
  1355                           ;LCD.c: 81:         while(posicion > 0){
  1356  0435  0820               	movf	set_cursor@posicion,w
  1357  0436  1D03               	btfss	3,2
  1358  0437  2C39               	goto	u1701
  1359  0438  2C3A               	goto	u1700
  1360  0439                     u1701:
  1361  0439  2C2B               	goto	l1998
  1362  043A                     u1700:
  1363  043A                     l2004:
  1364                           
  1365                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1366  043A  3068               	movlw	104
  1367  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1368  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1369  043D  00A2               	movwf	??_set_cursor+1
  1370  043E  30E3               	movlw	227
  1371  043F  00A1               	movwf	??_set_cursor
  1372  0440                     u1757:
  1373  0440  0BA1               	decfsz	??_set_cursor,f
  1374  0441  2C40               	goto	u1757
  1375  0442  0BA2               	decfsz	??_set_cursor+1,f
  1376  0443  2C40               	goto	u1757
  1377  0444  2C45               	nop2
  1378  0445                     l181:
  1379  0445  0008               	return
  1380  0446                     __end_of_set_cursor:
  1381                           
  1382                           	psect	text3
  1383  063F                     __ptext3:	
  1384 ;; *************** function _dato_recibido *****************
  1385 ;; Defined at:
  1386 ;;		line 194 in file "LAB2.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0
  1402 ;;      Temps:          0       3       0       0       0
  1403 ;;      Totals:         0       3       0       0       0
  1404 ;;Total ram usage:        3 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 4
  1407 ;; This function calls:
  1408 ;;		_sprintf
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _dato_recibido
  1416  063F                     _dato_recibido:
  1417  063F                     l2018:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1420                           
  1421                           
  1422                           ;LAB2.c: 195:     sprintf(buffer3, "%d", Cont_U);
  1423  063F  3021               	movlw	(low (((STR_4+5)-__stringbase)| (0+32768)))& (0+255)
  1424  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0642  00BD               	movwf	??_dato_recibido
  1427  0643  083D               	movf	??_dato_recibido,w
  1428  0644  00AC               	movwf	sprintf@f
  1429  0645  0847               	movf	_Cont_U,w
  1430  0646  00BE               	movwf	??_dato_recibido+1
  1431  0647  01BF               	clrf	??_dato_recibido+2
  1432  0648  083E               	movf	??_dato_recibido+1,w
  1433  0649  00AD               	movwf	?_sprintf+1
  1434  064A  083F               	movf	??_dato_recibido+2,w
  1435  064B  00AE               	movwf	?_sprintf+2
  1436  064C  304B               	movlw	(low (_buffer3| 0))& (0+255)
  1437  064D  120A  118A  2020  120A  118A  	fcall	_sprintf
  1438  0652                     l129:
  1439  0652  0008               	return
  1440  0653                     __end_of_dato_recibido:
  1441                           
  1442                           	psect	text4
  1443  02A1                     __ptext4:	
  1444 ;; *************** function _conversion_char *****************
  1445 ;; Defined at:
  1446 ;;		line 178 in file "LAB2.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0
  1462 ;;      Temps:          0       7       0       0       0
  1463 ;;      Totals:         0       7       0       0       0
  1464 ;;Total ram usage:        7 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 4
  1467 ;; This function calls:
  1468 ;;		_divisor
  1469 ;;		_sprintf
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _conversion_char
  1477  02A1                     _conversion_char:
  1478  02A1                     l2016:	
  1479                           ;incstack = 0
  1480                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1481                           
  1482                           
  1483                           ;LAB2.c: 179:     divisor(cont1, vol1);
  1484  02A1  306A               	movlw	(low (_vol1| 0))& (0+255)
  1485  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1486  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1487  02A4  00BD               	movwf	??_conversion_char
  1488  02A5  083D               	movf	??_conversion_char,w
  1489  02A6  00F5               	movwf	divisor@dig
  1490  02A7  084A               	movf	_cont1,w
  1491  02A8  120A  118A  2357  120A  118A  	fcall	_divisor
  1492                           
  1493                           ;LAB2.c: 180:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1494  02AD  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1495  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1496  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1497  02B0  00BD               	movwf	??_conversion_char
  1498  02B1  083D               	movf	??_conversion_char,w
  1499  02B2  00AC               	movwf	sprintf@f
  1500  02B3  086C               	movf	_vol1+2,w
  1501  02B4  00BE               	movwf	??_conversion_char+1
  1502  02B5  01BF               	clrf	??_conversion_char+2
  1503  02B6  083E               	movf	??_conversion_char+1,w
  1504  02B7  00AD               	movwf	?_sprintf+1
  1505  02B8  083F               	movf	??_conversion_char+2,w
  1506  02B9  00AE               	movwf	?_sprintf+2
  1507  02BA  086B               	movf	_vol1+1,w
  1508  02BB  00C0               	movwf	??_conversion_char+3
  1509  02BC  01C1               	clrf	??_conversion_char+4
  1510  02BD  0840               	movf	??_conversion_char+3,w
  1511  02BE  00AF               	movwf	?_sprintf+3
  1512  02BF  0841               	movf	??_conversion_char+4,w
  1513  02C0  00B0               	movwf	?_sprintf+4
  1514  02C1  086A               	movf	_vol1,w
  1515  02C2  00C2               	movwf	??_conversion_char+5
  1516  02C3  01C3               	clrf	??_conversion_char+6
  1517  02C4  0842               	movf	??_conversion_char+5,w
  1518  02C5  00B1               	movwf	?_sprintf+5
  1519  02C6  0843               	movf	??_conversion_char+6,w
  1520  02C7  00B2               	movwf	?_sprintf+6
  1521  02C8  305F               	movlw	(low (_buffer1| 0))& (0+255)
  1522  02C9  120A  118A  2020  120A  118A  	fcall	_sprintf
  1523                           
  1524                           ;LAB2.c: 182:     divisor(cont2, vol2);
  1525  02CE  3069               	movlw	(low (_vol2| 0))& (0+255)
  1526  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1527  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1528  02D1  00BD               	movwf	??_conversion_char
  1529  02D2  083D               	movf	??_conversion_char,w
  1530  02D3  00F5               	movwf	divisor@dig
  1531  02D4  0849               	movf	_cont2,w
  1532  02D5  120A  118A  2357  120A  118A  	fcall	_divisor
  1533                           
  1534                           ;LAB2.c: 183:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1535  02DA  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1536  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1537  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1538  02DD  00BD               	movwf	??_conversion_char
  1539  02DE  083D               	movf	??_conversion_char,w
  1540  02DF  00AC               	movwf	sprintf@f
  1541  02E0  086B               	movf	_vol2+2,w
  1542  02E1  00BE               	movwf	??_conversion_char+1
  1543  02E2  01BF               	clrf	??_conversion_char+2
  1544  02E3  083E               	movf	??_conversion_char+1,w
  1545  02E4  00AD               	movwf	?_sprintf+1
  1546  02E5  083F               	movf	??_conversion_char+2,w
  1547  02E6  00AE               	movwf	?_sprintf+2
  1548  02E7  086A               	movf	_vol2+1,w
  1549  02E8  00C0               	movwf	??_conversion_char+3
  1550  02E9  01C1               	clrf	??_conversion_char+4
  1551  02EA  0840               	movf	??_conversion_char+3,w
  1552  02EB  00AF               	movwf	?_sprintf+3
  1553  02EC  0841               	movf	??_conversion_char+4,w
  1554  02ED  00B0               	movwf	?_sprintf+4
  1555  02EE  0869               	movf	_vol2,w
  1556  02EF  00C2               	movwf	??_conversion_char+5
  1557  02F0  01C3               	clrf	??_conversion_char+6
  1558  02F1  0842               	movf	??_conversion_char+5,w
  1559  02F2  00B1               	movwf	?_sprintf+5
  1560  02F3  0843               	movf	??_conversion_char+6,w
  1561  02F4  00B2               	movwf	?_sprintf+6
  1562  02F5  3055               	movlw	(low (_buffer2| 0))& (0+255)
  1563  02F6  120A  118A  2020  120A  118A  	fcall	_sprintf
  1564  02FB                     l121:
  1565  02FB  0008               	return
  1566  02FC                     __end_of_conversion_char:
  1567                           
  1568                           	psect	text5
  1569  0020                     __ptext5:	
  1570 ;; *************** function _sprintf *****************
  1571 ;; Defined at:
  1572 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  sp              1    wreg     PTR unsigned char 
  1575 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1576 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1577 ;;		 -> STR_6(3), STR_5(8), STR_4(8), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1580 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1581 ;;  tmpval          4    0        struct .
  1582 ;;  val             2   25[BANK0 ] unsigned int 
  1583 ;;  cp              2    0        PTR const unsigned char 
  1584 ;;  len             2    0        unsigned int 
  1585 ;;  c               1   28[BANK0 ] unsigned char 
  1586 ;;  prec            1   24[BANK0 ] char 
  1587 ;;  flag            1   23[BANK0 ] unsigned char 
  1588 ;;  ap              1   22[BANK0 ] PTR void [1]
  1589 ;;		 -> ?_sprintf(2), 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2   12[BANK0 ] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       7       0       0       0
  1600 ;;      Locals:         0       7       0       0       0
  1601 ;;      Temps:          0       3       0       0       0
  1602 ;;      Totals:         0      17       0       0       0
  1603 ;;Total ram usage:       17 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 3
  1606 ;; This function calls:
  1607 ;;		___lwdiv
  1608 ;;		___lwmod
  1609 ;; This function is called by:
  1610 ;;		_conversion_char
  1611 ;;		_dato_recibido
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _sprintf
  1617  0020                     _sprintf:
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1621                           ;sprintf@sp stored from wreg
  1622  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0022  00BB               	movwf	sprintf@sp
  1625  0023                     l1866:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1628  0023  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1629  0024  00B3               	movwf	??_sprintf
  1630  0025  0833               	movf	??_sprintf,w
  1631  0026  00B6               	movwf	sprintf@ap
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1634  0027  28F3               	goto	l1918
  1635  0028                     l1868:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1638  0028  3025               	movlw	37
  1639  0029  063C               	xorwf	sprintf@c,w
  1640  002A  1903               	btfsc	3,2
  1641  002B  282D               	goto	u1521
  1642  002C  282E               	goto	u1520
  1643  002D                     u1521:
  1644  002D  283A               	goto	l1874
  1645  002E                     u1520:
  1646  002E                     l1870:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1649  002E  083C               	movf	sprintf@c,w
  1650  002F  00B3               	movwf	??_sprintf
  1651  0030  083B               	movf	sprintf@sp,w
  1652  0031  0084               	movwf	4
  1653  0032  0833               	movf	??_sprintf,w
  1654  0033  1383               	bcf	3,7	;select IRP bank0
  1655  0034  0080               	movwf	0
  1656  0035                     l1872:
  1657  0035  3001               	movlw	1
  1658  0036  00B3               	movwf	??_sprintf
  1659  0037  0833               	movf	??_sprintf,w
  1660  0038  07BB               	addwf	sprintf@sp,f
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1663  0039  28F3               	goto	l1918
  1664  003A                     l1874:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1667  003A  01B7               	clrf	sprintf@flag
  1668  003B                     l1878:	
  1669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1670                           
  1671  003B  3001               	movlw	1
  1672  003C  07AC               	addwf	sprintf@f,f
  1673  003D  30FF               	movlw	-1
  1674  003E  072C               	addwf	sprintf@f,w
  1675  003F  0084               	movwf	4
  1676  0040  120A  118A  250A  120A  118A  	fcall	stringdir
  1677  0045  00BC               	movwf	sprintf@c
  1678  0046  00B3               	movwf	??_sprintf
  1679  0047  01B4               	clrf	??_sprintf+1
  1680                           
  1681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1682                           ; Switch size 1, requested type "simple"
  1683                           ; Number of cases is 1, Range of values is 0 to 0
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte            4     3 (average)
  1687                           ; direct_byte           11     8 (fixed)
  1688                           ; jumptable            260     6 (fixed)
  1689                           ;	Chosen strategy is simple_byte
  1690  0048  0834               	movf	??_sprintf+1,w
  1691  0049  3A00               	xorlw	0	; case 0
  1692  004A  1903               	skipnz
  1693  004B  284D               	goto	l2074
  1694  004C  28F3               	goto	l1918
  1695  004D                     l2074:
  1696                           
  1697                           ; Switch size 1, requested type "simple"
  1698                           ; Number of cases is 3, Range of values is 0 to 105
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte           10     6 (average)
  1702                           ; jumptable            260     6 (fixed)
  1703                           ;	Chosen strategy is simple_byte
  1704  004D  0833               	movf	??_sprintf,w
  1705  004E  3A00               	xorlw	0	; case 0
  1706  004F  1903               	skipnz
  1707  0050  2905               	goto	l1920
  1708  0051  3A64               	xorlw	100	; case 100
  1709  0052  1903               	skipnz
  1710  0053  2858               	goto	l1880
  1711  0054  3A0D               	xorlw	13	; case 105
  1712  0055  1903               	skipnz
  1713  0056  2858               	goto	l1880
  1714  0057  28F3               	goto	l1918
  1715  0058                     l1880:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1718  0058  0836               	movf	sprintf@ap,w
  1719  0059  0084               	movwf	4
  1720  005A  1383               	bcf	3,7	;select IRP bank0
  1721  005B  0800               	movf	0,w
  1722  005C  00B9               	movwf	sprintf@val
  1723  005D  0A84               	incf	4,f
  1724  005E  0800               	movf	0,w
  1725  005F  00BA               	movwf	sprintf@val+1
  1726  0060                     l1882:
  1727  0060  3002               	movlw	2
  1728  0061  00B3               	movwf	??_sprintf
  1729  0062  0833               	movf	??_sprintf,w
  1730  0063  07B6               	addwf	sprintf@ap,f
  1731  0064                     l1884:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1734  0064  1FBA               	btfss	sprintf@val+1,7
  1735  0065  2867               	goto	u1531
  1736  0066  2868               	goto	u1530
  1737  0067                     u1531:
  1738  0067  2871               	goto	l1890
  1739  0068                     u1530:
  1740  0068                     l1886:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1743  0068  3003               	movlw	3
  1744  0069  00B3               	movwf	??_sprintf
  1745  006A  0833               	movf	??_sprintf,w
  1746  006B  04B7               	iorwf	sprintf@flag,f
  1747  006C                     l1888:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1750  006C  09B9               	comf	sprintf@val,f
  1751  006D  09BA               	comf	sprintf@val+1,f
  1752  006E  0AB9               	incf	sprintf@val,f
  1753  006F  1903               	skipnz
  1754  0070  0ABA               	incf	sprintf@val+1,f
  1755  0071                     l1890:
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1758  0071  01BC               	clrf	sprintf@c
  1759  0072  0ABC               	incf	sprintf@c,f
  1760  0073                     l1896:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1763  0073  083C               	movf	sprintf@c,w
  1764  0074  00B3               	movwf	??_sprintf
  1765  0075  0733               	addwf	??_sprintf,w
  1766  0076  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1767  0077  0084               	movwf	4
  1768  0078  120A  118A  250A  120A  118A  	fcall	stringdir
  1769  007D  00B4               	movwf	??_sprintf+1
  1770  007E  120A  118A  250A  120A  118A  	fcall	stringdir
  1771  0083  00B5               	movwf	??_sprintf+2
  1772  0084  0835               	movf	??_sprintf+2,w
  1773  0085  023A               	subwf	sprintf@val+1,w
  1774  0086  1D03               	skipz
  1775  0087  288A               	goto	u1545
  1776  0088  0834               	movf	??_sprintf+1,w
  1777  0089  0239               	subwf	sprintf@val,w
  1778  008A                     u1545:
  1779  008A  1803               	skipnc
  1780  008B  288D               	goto	u1541
  1781  008C  288E               	goto	u1540
  1782  008D                     u1541:
  1783  008D  288F               	goto	l1900
  1784  008E                     u1540:
  1785  008E  2899               	goto	l1902
  1786  008F                     l1900:
  1787  008F  3001               	movlw	1
  1788  0090  00B3               	movwf	??_sprintf
  1789  0091  0833               	movf	??_sprintf,w
  1790  0092  07BC               	addwf	sprintf@c,f
  1791  0093  3005               	movlw	5
  1792  0094  063C               	xorwf	sprintf@c,w
  1793  0095  1D03               	btfss	3,2
  1794  0096  2898               	goto	u1551
  1795  0097  2899               	goto	u1550
  1796  0098                     u1551:
  1797  0098  2873               	goto	l1896
  1798  0099                     u1550:
  1799  0099                     l1902:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1802  0099  0837               	movf	sprintf@flag,w
  1803  009A  3903               	andlw	3
  1804  009B  1903               	btfsc	3,2
  1805  009C  289E               	goto	u1561
  1806  009D  289F               	goto	u1560
  1807  009E                     u1561:
  1808  009E  28AA               	goto	l1908
  1809  009F                     u1560:
  1810  009F                     l1904:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1813  009F  302D               	movlw	45
  1814  00A0  00B3               	movwf	??_sprintf
  1815  00A1  083B               	movf	sprintf@sp,w
  1816  00A2  0084               	movwf	4
  1817  00A3  0833               	movf	??_sprintf,w
  1818  00A4  1383               	bcf	3,7	;select IRP bank0
  1819  00A5  0080               	movwf	0
  1820  00A6                     l1906:
  1821  00A6  3001               	movlw	1
  1822  00A7  00B3               	movwf	??_sprintf
  1823  00A8  0833               	movf	??_sprintf,w
  1824  00A9  07BB               	addwf	sprintf@sp,f
  1825  00AA                     l1908:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1828  00AA  083C               	movf	sprintf@c,w
  1829  00AB  00B3               	movwf	??_sprintf
  1830  00AC  0833               	movf	??_sprintf,w
  1831  00AD  00B8               	movwf	sprintf@prec
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1834  00AE  28EA               	goto	l1916
  1835  00AF                     l1910:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1838  00AF  300A               	movlw	10
  1839  00B0  00A7               	movwf	___lwmod@divisor
  1840  00B1  3000               	movlw	0
  1841  00B2  00A8               	movwf	___lwmod@divisor+1
  1842  00B3  0838               	movf	sprintf@prec,w
  1843  00B4  00B3               	movwf	??_sprintf
  1844  00B5  0733               	addwf	??_sprintf,w
  1845  00B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1846  00B7  0084               	movwf	4
  1847  00B8  120A  118A  250A  120A  118A  	fcall	stringdir
  1848  00BD  00A0               	movwf	___lwdiv@divisor
  1849  00BE  120A  118A  250A  120A  118A  	fcall	stringdir
  1850  00C3  00A1               	movwf	___lwdiv@divisor+1
  1851  00C4  083A               	movf	sprintf@val+1,w
  1852  00C5  00A3               	movwf	___lwdiv@dividend+1
  1853  00C6  0839               	movf	sprintf@val,w
  1854  00C7  00A2               	movwf	___lwdiv@dividend
  1855  00C8  120A  118A  2446  120A  118A  	fcall	___lwdiv
  1856  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1857  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1858  00CF  0821               	movf	?___lwdiv+1,w
  1859  00D0  00AA               	movwf	___lwmod@dividend+1
  1860  00D1  0820               	movf	?___lwdiv,w
  1861  00D2  00A9               	movwf	___lwmod@dividend
  1862  00D3  120A  118A  253F  120A  118A  	fcall	___lwmod
  1863  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1864  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1865  00DA  0827               	movf	?___lwmod,w
  1866  00DB  3E30               	addlw	48
  1867  00DC  00B4               	movwf	??_sprintf+1
  1868  00DD  0834               	movf	??_sprintf+1,w
  1869  00DE  00BC               	movwf	sprintf@c
  1870  00DF                     l1912:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1873  00DF  083C               	movf	sprintf@c,w
  1874  00E0  00B3               	movwf	??_sprintf
  1875  00E1  083B               	movf	sprintf@sp,w
  1876  00E2  0084               	movwf	4
  1877  00E3  0833               	movf	??_sprintf,w
  1878  00E4  1383               	bcf	3,7	;select IRP bank0
  1879  00E5  0080               	movwf	0
  1880  00E6                     l1914:
  1881  00E6  3001               	movlw	1
  1882  00E7  00B3               	movwf	??_sprintf
  1883  00E8  0833               	movf	??_sprintf,w
  1884  00E9  07BB               	addwf	sprintf@sp,f
  1885  00EA                     l1916:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1888  00EA  30FF               	movlw	255
  1889  00EB  00B3               	movwf	??_sprintf
  1890  00EC  0833               	movf	??_sprintf,w
  1891  00ED  07B8               	addwf	sprintf@prec,f
  1892  00EE  0A38               	incf	sprintf@prec,w
  1893  00EF  1D03               	btfss	3,2
  1894  00F0  28F2               	goto	u1571
  1895  00F1  28F3               	goto	u1570
  1896  00F2                     u1571:
  1897  00F2  28AF               	goto	l1910
  1898  00F3                     u1570:
  1899  00F3                     l1918:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1902  00F3  3001               	movlw	1
  1903  00F4  07AC               	addwf	sprintf@f,f
  1904  00F5  30FF               	movlw	-1
  1905  00F6  072C               	addwf	sprintf@f,w
  1906  00F7  0084               	movwf	4
  1907  00F8  120A  118A  250A  120A  118A  	fcall	stringdir
  1908  00FD  00B3               	movwf	??_sprintf
  1909  00FE  0833               	movf	??_sprintf,w
  1910  00FF  00BC               	movwf	sprintf@c
  1911  0100  083C               	movf	sprintf@c,w
  1912  0101  1D03               	btfss	3,2
  1913  0102  2904               	goto	u1581
  1914  0103  2905               	goto	u1580
  1915  0104                     u1581:
  1916  0104  2828               	goto	l1868
  1917  0105                     u1580:
  1918  0105                     l1920:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1921  0105  083B               	movf	sprintf@sp,w
  1922  0106  0084               	movwf	4
  1923  0107  1383               	bcf	3,7	;select IRP bank0
  1924  0108  0180               	clrf	0
  1925  0109                     l320:
  1926  0109  0008               	return
  1927  010A                     __end_of_sprintf:
  1928                           
  1929                           	psect	text6
  1930  053F                     __ptext6:	
  1931 ;; *************** function ___lwmod *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  divisor         2    7[BANK0 ] unsigned int 
  1936 ;;  dividend        2    9[BANK0 ] unsigned int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  counter         1   11[BANK0 ] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  2    7[BANK0 ] unsigned int 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1948 ;;      Params:         0       4       0       0       0
  1949 ;;      Locals:         0       1       0       0       0
  1950 ;;      Temps:          1       0       0       0       0
  1951 ;;      Totals:         1       5       0       0       0
  1952 ;;Total ram usage:        6 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 2
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_sprintf
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function ___lwmod
  1964  053F                     ___lwmod:
  1965  053F                     l1398:	
  1966                           ;incstack = 0
  1967                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1968                           
  1969  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0541  0827               	movf	___lwmod@divisor,w
  1972  0542  0428               	iorwf	___lwmod@divisor+1,w
  1973  0543  1903               	btfsc	3,2
  1974  0544  2D46               	goto	u891
  1975  0545  2D47               	goto	u890
  1976  0546                     u891:
  1977  0546  2D76               	goto	l1416
  1978  0547                     u890:
  1979  0547                     l1400:
  1980  0547  01AB               	clrf	___lwmod@counter
  1981  0548  0AAB               	incf	___lwmod@counter,f
  1982  0549  2D55               	goto	l1406
  1983  054A                     l1402:
  1984  054A  3001               	movlw	1
  1985  054B                     u905:
  1986  054B  1003               	clrc
  1987  054C  0DA7               	rlf	___lwmod@divisor,f
  1988  054D  0DA8               	rlf	___lwmod@divisor+1,f
  1989  054E  3EFF               	addlw	-1
  1990  054F  1D03               	skipz
  1991  0550  2D4B               	goto	u905
  1992  0551                     l1404:
  1993  0551  3001               	movlw	1
  1994  0552  00F5               	movwf	??___lwmod
  1995  0553  0875               	movf	??___lwmod,w
  1996  0554  07AB               	addwf	___lwmod@counter,f
  1997  0555                     l1406:
  1998  0555  1FA8               	btfss	___lwmod@divisor+1,7
  1999  0556  2D58               	goto	u911
  2000  0557  2D59               	goto	u910
  2001  0558                     u911:
  2002  0558  2D4A               	goto	l1402
  2003  0559                     u910:
  2004  0559                     l1408:
  2005  0559  0828               	movf	___lwmod@divisor+1,w
  2006  055A  022A               	subwf	___lwmod@dividend+1,w
  2007  055B  1D03               	skipz
  2008  055C  2D5F               	goto	u925
  2009  055D  0827               	movf	___lwmod@divisor,w
  2010  055E  0229               	subwf	___lwmod@dividend,w
  2011  055F                     u925:
  2012  055F  1C03               	skipc
  2013  0560  2D62               	goto	u921
  2014  0561  2D63               	goto	u920
  2015  0562                     u921:
  2016  0562  2D69               	goto	l1412
  2017  0563                     u920:
  2018  0563                     l1410:
  2019  0563  0827               	movf	___lwmod@divisor,w
  2020  0564  02A9               	subwf	___lwmod@dividend,f
  2021  0565  0828               	movf	___lwmod@divisor+1,w
  2022  0566  1C03               	skipc
  2023  0567  03AA               	decf	___lwmod@dividend+1,f
  2024  0568  02AA               	subwf	___lwmod@dividend+1,f
  2025  0569                     l1412:
  2026  0569  3001               	movlw	1
  2027  056A                     u935:
  2028  056A  1003               	clrc
  2029  056B  0CA8               	rrf	___lwmod@divisor+1,f
  2030  056C  0CA7               	rrf	___lwmod@divisor,f
  2031  056D  3EFF               	addlw	-1
  2032  056E  1D03               	skipz
  2033  056F  2D6A               	goto	u935
  2034  0570                     l1414:
  2035  0570  3001               	movlw	1
  2036  0571  02AB               	subwf	___lwmod@counter,f
  2037  0572  1D03               	btfss	3,2
  2038  0573  2D75               	goto	u941
  2039  0574  2D76               	goto	u940
  2040  0575                     u941:
  2041  0575  2D59               	goto	l1408
  2042  0576                     u940:
  2043  0576                     l1416:
  2044  0576  082A               	movf	___lwmod@dividend+1,w
  2045  0577  00A8               	movwf	?___lwmod+1
  2046  0578  0829               	movf	___lwmod@dividend,w
  2047  0579  00A7               	movwf	?___lwmod
  2048  057A                     l606:
  2049  057A  0008               	return
  2050  057B                     __end_of___lwmod:
  2051                           
  2052                           	psect	text7
  2053  0446                     __ptext7:	
  2054 ;; *************** function ___lwdiv *****************
  2055 ;; Defined at:
  2056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  divisor         2    0[BANK0 ] unsigned int 
  2059 ;;  dividend        2    2[BANK0 ] unsigned int 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  quotient        2    5[BANK0 ] unsigned int 
  2062 ;;  counter         1    4[BANK0 ] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2    0[BANK0 ] unsigned int 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       4       0       0       0
  2073 ;;      Locals:         0       3       0       0       0
  2074 ;;      Temps:          1       0       0       0       0
  2075 ;;      Totals:         1       7       0       0       0
  2076 ;;Total ram usage:        8 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 2
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_sprintf
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function ___lwdiv
  2088  0446                     ___lwdiv:
  2089  0446                     l1826:	
  2090                           ;incstack = 0
  2091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2092                           
  2093  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0448  01A5               	clrf	___lwdiv@quotient
  2096  0449  01A6               	clrf	___lwdiv@quotient+1
  2097  044A                     l1828:
  2098  044A  0820               	movf	___lwdiv@divisor,w
  2099  044B  0421               	iorwf	___lwdiv@divisor+1,w
  2100  044C  1903               	btfsc	3,2
  2101  044D  2C4F               	goto	u1441
  2102  044E  2C50               	goto	u1440
  2103  044F                     u1441:
  2104  044F  2C87               	goto	l1848
  2105  0450                     u1440:
  2106  0450                     l1830:
  2107  0450  01A4               	clrf	___lwdiv@counter
  2108  0451  0AA4               	incf	___lwdiv@counter,f
  2109  0452  2C5E               	goto	l1836
  2110  0453                     l1832:
  2111  0453  3001               	movlw	1
  2112  0454                     u1455:
  2113  0454  1003               	clrc
  2114  0455  0DA0               	rlf	___lwdiv@divisor,f
  2115  0456  0DA1               	rlf	___lwdiv@divisor+1,f
  2116  0457  3EFF               	addlw	-1
  2117  0458  1D03               	skipz
  2118  0459  2C54               	goto	u1455
  2119  045A                     l1834:
  2120  045A  3001               	movlw	1
  2121  045B  00F4               	movwf	??___lwdiv
  2122  045C  0874               	movf	??___lwdiv,w
  2123  045D  07A4               	addwf	___lwdiv@counter,f
  2124  045E                     l1836:
  2125  045E  1FA1               	btfss	___lwdiv@divisor+1,7
  2126  045F  2C61               	goto	u1461
  2127  0460  2C62               	goto	u1460
  2128  0461                     u1461:
  2129  0461  2C53               	goto	l1832
  2130  0462                     u1460:
  2131  0462                     l1838:
  2132  0462  3001               	movlw	1
  2133  0463                     u1475:
  2134  0463  1003               	clrc
  2135  0464  0DA5               	rlf	___lwdiv@quotient,f
  2136  0465  0DA6               	rlf	___lwdiv@quotient+1,f
  2137  0466  3EFF               	addlw	-1
  2138  0467  1D03               	skipz
  2139  0468  2C63               	goto	u1475
  2140  0469  0821               	movf	___lwdiv@divisor+1,w
  2141  046A  0223               	subwf	___lwdiv@dividend+1,w
  2142  046B  1D03               	skipz
  2143  046C  2C6F               	goto	u1485
  2144  046D  0820               	movf	___lwdiv@divisor,w
  2145  046E  0222               	subwf	___lwdiv@dividend,w
  2146  046F                     u1485:
  2147  046F  1C03               	skipc
  2148  0470  2C72               	goto	u1481
  2149  0471  2C73               	goto	u1480
  2150  0472                     u1481:
  2151  0472  2C7A               	goto	l1844
  2152  0473                     u1480:
  2153  0473                     l1840:
  2154  0473  0820               	movf	___lwdiv@divisor,w
  2155  0474  02A2               	subwf	___lwdiv@dividend,f
  2156  0475  0821               	movf	___lwdiv@divisor+1,w
  2157  0476  1C03               	skipc
  2158  0477  03A3               	decf	___lwdiv@dividend+1,f
  2159  0478  02A3               	subwf	___lwdiv@dividend+1,f
  2160  0479                     l1842:
  2161  0479  1425               	bsf	___lwdiv@quotient,0
  2162  047A                     l1844:
  2163  047A  3001               	movlw	1
  2164  047B                     u1495:
  2165  047B  1003               	clrc
  2166  047C  0CA1               	rrf	___lwdiv@divisor+1,f
  2167  047D  0CA0               	rrf	___lwdiv@divisor,f
  2168  047E  3EFF               	addlw	-1
  2169  047F  1D03               	skipz
  2170  0480  2C7B               	goto	u1495
  2171  0481                     l1846:
  2172  0481  3001               	movlw	1
  2173  0482  02A4               	subwf	___lwdiv@counter,f
  2174  0483  1D03               	btfss	3,2
  2175  0484  2C86               	goto	u1501
  2176  0485  2C87               	goto	u1500
  2177  0486                     u1501:
  2178  0486  2C62               	goto	l1838
  2179  0487                     u1500:
  2180  0487                     l1848:
  2181  0487  0826               	movf	___lwdiv@quotient+1,w
  2182  0488  00A1               	movwf	?___lwdiv+1
  2183  0489  0825               	movf	___lwdiv@quotient,w
  2184  048A  00A0               	movwf	?___lwdiv
  2185  048B                     l596:
  2186  048B  0008               	return
  2187  048C                     __end_of___lwdiv:
  2188                           
  2189                           	psect	text8
  2190  0357                     __ptext8:	
  2191 ;; *************** function _divisor *****************
  2192 ;; Defined at:
  2193 ;;		line 186 in file "LAB2.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  a               1    wreg     unsigned char 
  2196 ;;  dig             1    5[COMMON] PTR unsigned char 
  2197 ;;		 -> vol2(1), vol1(1), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  a               1   10[BANK0 ] unsigned char 
  2200 ;;  i               2   13[BANK0 ] int 
  2201 ;;  b               2   11[BANK0 ] int 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         1       0       0       0       0
  2212 ;;      Locals:         0       5       0       0       0
  2213 ;;      Temps:          0       2       0       0       0
  2214 ;;      Totals:         1       7       0       0       0
  2215 ;;Total ram usage:        8 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 3
  2218 ;; This function calls:
  2219 ;;		___awdiv
  2220 ;;		___awmod
  2221 ;; This function is called by:
  2222 ;;		_conversion_char
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _divisor
  2228  0357                     _divisor:
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2232                           ;divisor@a stored from wreg
  2233  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0359  00AA               	movwf	divisor@a
  2236  035A                     l1852:
  2237                           
  2238                           ;LAB2.c: 187:     int b = 2*a;
  2239  035A  082A               	movf	divisor@a,w
  2240  035B  00A8               	movwf	??_divisor
  2241  035C  01A9               	clrf	??_divisor+1
  2242  035D  1003               	clrc
  2243  035E  0D28               	rlf	??_divisor,w
  2244  035F  00AB               	movwf	divisor@b
  2245  0360  0D29               	rlf	??_divisor+1,w
  2246  0361  00AC               	movwf	divisor@b+1
  2247  0362                     l1854:
  2248                           
  2249                           ;LAB2.c: 188:     for(int i = 0; i<3 ; i++){
  2250  0362  01AD               	clrf	divisor@i
  2251  0363  01AE               	clrf	divisor@i+1
  2252  0364                     l1860:
  2253                           
  2254                           ;LAB2.c: 189:         dig[i] = b % 10;
  2255  0364  300A               	movlw	10
  2256  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0367  00A0               	movwf	___awmod@divisor
  2259  0368  3000               	movlw	0
  2260  0369  00A1               	movwf	___awmod@divisor+1
  2261  036A  082C               	movf	divisor@b+1,w
  2262  036B  00A3               	movwf	___awmod@dividend+1
  2263  036C  082B               	movf	divisor@b,w
  2264  036D  00A2               	movwf	___awmod@dividend
  2265  036E  120A  118A  22FC  120A  118A  	fcall	___awmod
  2266  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0375  0820               	movf	?___awmod,w
  2269  0376  00A8               	movwf	??_divisor
  2270  0377  082D               	movf	divisor@i,w
  2271  0378  0775               	addwf	divisor@dig,w
  2272  0379  00A9               	movwf	??_divisor+1
  2273  037A  0829               	movf	??_divisor+1,w
  2274  037B  0084               	movwf	4
  2275  037C  0828               	movf	??_divisor,w
  2276  037D  1383               	bcf	3,7	;select IRP bank0
  2277  037E  0080               	movwf	0
  2278                           
  2279                           ;LAB2.c: 190:         b = (b - dig[i])/10;
  2280  037F  300A               	movlw	10
  2281  0380  00A0               	movwf	___awdiv@divisor
  2282  0381  3000               	movlw	0
  2283  0382  00A1               	movwf	___awdiv@divisor+1
  2284  0383  082D               	movf	divisor@i,w
  2285  0384  0775               	addwf	divisor@dig,w
  2286  0385  00A8               	movwf	??_divisor
  2287  0386  0828               	movf	??_divisor,w
  2288  0387  0084               	movwf	4
  2289  0388  0800               	movf	0,w
  2290  0389  022B               	subwf	divisor@b,w
  2291  038A  00A2               	movwf	___awdiv@dividend
  2292  038B  082C               	movf	divisor@b+1,w
  2293  038C  1C03               	skipc
  2294  038D  032C               	decf	divisor@b+1,w
  2295  038E  00A3               	movwf	___awdiv@dividend+1
  2296  038F  120A  118A  2238  120A  118A  	fcall	___awdiv
  2297  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2299  0396  0821               	movf	?___awdiv+1,w
  2300  0397  00AC               	movwf	divisor@b+1
  2301  0398  0820               	movf	?___awdiv,w
  2302  0399  00AB               	movwf	divisor@b
  2303  039A                     l1862:
  2304                           
  2305                           ;LAB2.c: 191:     }
  2306  039A  3001               	movlw	1
  2307  039B  07AD               	addwf	divisor@i,f
  2308  039C  1803               	skipnc
  2309  039D  0AAE               	incf	divisor@i+1,f
  2310  039E  3000               	movlw	0
  2311  039F  07AE               	addwf	divisor@i+1,f
  2312  03A0                     l1864:
  2313  03A0  082E               	movf	divisor@i+1,w
  2314  03A1  3A80               	xorlw	128
  2315  03A2  00FF               	movwf	btemp+1
  2316  03A3  3080               	movlw	128
  2317  03A4  027F               	subwf	btemp+1,w
  2318  03A5  1D03               	skipz
  2319  03A6  2BA9               	goto	u1515
  2320  03A7  3003               	movlw	3
  2321  03A8  022D               	subwf	divisor@i,w
  2322  03A9                     u1515:
  2323  03A9  1C03               	skipc
  2324  03AA  2BAC               	goto	u1511
  2325  03AB  2BAD               	goto	u1510
  2326  03AC                     u1511:
  2327  03AC  2B64               	goto	l1860
  2328  03AD                     u1510:
  2329  03AD                     l126:
  2330  03AD  0008               	return
  2331  03AE                     __end_of_divisor:
  2332                           
  2333                           	psect	text9
  2334  02FC                     __ptext9:	
  2335 ;; *************** function ___awmod *****************
  2336 ;; Defined at:
  2337 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  divisor         2    0[BANK0 ] int 
  2340 ;;  dividend        2    2[BANK0 ] int 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  sign            1    5[BANK0 ] unsigned char 
  2343 ;;  counter         1    4[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  2    0[BANK0 ] int 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       4       0       0       0
  2354 ;;      Locals:         0       2       0       0       0
  2355 ;;      Temps:          1       0       0       0       0
  2356 ;;      Totals:         1       6       0       0       0
  2357 ;;Total ram usage:        7 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 2
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_divisor
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function ___awmod
  2369  02FC                     ___awmod:
  2370  02FC                     l1788:	
  2371                           ;incstack = 0
  2372                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2373                           
  2374  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2375  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2376  02FE  01A5               	clrf	___awmod@sign
  2377  02FF                     l1790:
  2378  02FF  1FA3               	btfss	___awmod@dividend+1,7
  2379  0300  2B02               	goto	u1351
  2380  0301  2B03               	goto	u1350
  2381  0302                     u1351:
  2382  0302  2B0A               	goto	l1796
  2383  0303                     u1350:
  2384  0303                     l1792:
  2385  0303  09A2               	comf	___awmod@dividend,f
  2386  0304  09A3               	comf	___awmod@dividend+1,f
  2387  0305  0AA2               	incf	___awmod@dividend,f
  2388  0306  1903               	skipnz
  2389  0307  0AA3               	incf	___awmod@dividend+1,f
  2390  0308                     l1794:
  2391  0308  01A5               	clrf	___awmod@sign
  2392  0309  0AA5               	incf	___awmod@sign,f
  2393  030A                     l1796:
  2394  030A  1FA1               	btfss	___awmod@divisor+1,7
  2395  030B  2B0D               	goto	u1361
  2396  030C  2B0E               	goto	u1360
  2397  030D                     u1361:
  2398  030D  2B13               	goto	l1800
  2399  030E                     u1360:
  2400  030E                     l1798:
  2401  030E  09A0               	comf	___awmod@divisor,f
  2402  030F  09A1               	comf	___awmod@divisor+1,f
  2403  0310  0AA0               	incf	___awmod@divisor,f
  2404  0311  1903               	skipnz
  2405  0312  0AA1               	incf	___awmod@divisor+1,f
  2406  0313                     l1800:
  2407  0313  0820               	movf	___awmod@divisor,w
  2408  0314  0421               	iorwf	___awmod@divisor+1,w
  2409  0315  1903               	btfsc	3,2
  2410  0316  2B18               	goto	u1371
  2411  0317  2B19               	goto	u1370
  2412  0318                     u1371:
  2413  0318  2B48               	goto	l1818
  2414  0319                     u1370:
  2415  0319                     l1802:
  2416  0319  01A4               	clrf	___awmod@counter
  2417  031A  0AA4               	incf	___awmod@counter,f
  2418  031B  2B27               	goto	l1808
  2419  031C                     l1804:
  2420  031C  3001               	movlw	1
  2421  031D                     u1385:
  2422  031D  1003               	clrc
  2423  031E  0DA0               	rlf	___awmod@divisor,f
  2424  031F  0DA1               	rlf	___awmod@divisor+1,f
  2425  0320  3EFF               	addlw	-1
  2426  0321  1D03               	skipz
  2427  0322  2B1D               	goto	u1385
  2428  0323                     l1806:
  2429  0323  3001               	movlw	1
  2430  0324  00F4               	movwf	??___awmod
  2431  0325  0874               	movf	??___awmod,w
  2432  0326  07A4               	addwf	___awmod@counter,f
  2433  0327                     l1808:
  2434  0327  1FA1               	btfss	___awmod@divisor+1,7
  2435  0328  2B2A               	goto	u1391
  2436  0329  2B2B               	goto	u1390
  2437  032A                     u1391:
  2438  032A  2B1C               	goto	l1804
  2439  032B                     u1390:
  2440  032B                     l1810:
  2441  032B  0821               	movf	___awmod@divisor+1,w
  2442  032C  0223               	subwf	___awmod@dividend+1,w
  2443  032D  1D03               	skipz
  2444  032E  2B31               	goto	u1405
  2445  032F  0820               	movf	___awmod@divisor,w
  2446  0330  0222               	subwf	___awmod@dividend,w
  2447  0331                     u1405:
  2448  0331  1C03               	skipc
  2449  0332  2B34               	goto	u1401
  2450  0333  2B35               	goto	u1400
  2451  0334                     u1401:
  2452  0334  2B3B               	goto	l1814
  2453  0335                     u1400:
  2454  0335                     l1812:
  2455  0335  0820               	movf	___awmod@divisor,w
  2456  0336  02A2               	subwf	___awmod@dividend,f
  2457  0337  0821               	movf	___awmod@divisor+1,w
  2458  0338  1C03               	skipc
  2459  0339  03A3               	decf	___awmod@dividend+1,f
  2460  033A  02A3               	subwf	___awmod@dividend+1,f
  2461  033B                     l1814:
  2462  033B  3001               	movlw	1
  2463  033C                     u1415:
  2464  033C  1003               	clrc
  2465  033D  0CA1               	rrf	___awmod@divisor+1,f
  2466  033E  0CA0               	rrf	___awmod@divisor,f
  2467  033F  3EFF               	addlw	-1
  2468  0340  1D03               	skipz
  2469  0341  2B3C               	goto	u1415
  2470  0342                     l1816:
  2471  0342  3001               	movlw	1
  2472  0343  02A4               	subwf	___awmod@counter,f
  2473  0344  1D03               	btfss	3,2
  2474  0345  2B47               	goto	u1421
  2475  0346  2B48               	goto	u1420
  2476  0347                     u1421:
  2477  0347  2B2B               	goto	l1810
  2478  0348                     u1420:
  2479  0348                     l1818:
  2480  0348  0825               	movf	___awmod@sign,w
  2481  0349  1903               	btfsc	3,2
  2482  034A  2B4C               	goto	u1431
  2483  034B  2B4D               	goto	u1430
  2484  034C                     u1431:
  2485  034C  2B52               	goto	l1822
  2486  034D                     u1430:
  2487  034D                     l1820:
  2488  034D  09A2               	comf	___awmod@dividend,f
  2489  034E  09A3               	comf	___awmod@dividend+1,f
  2490  034F  0AA2               	incf	___awmod@dividend,f
  2491  0350  1903               	skipnz
  2492  0351  0AA3               	incf	___awmod@dividend+1,f
  2493  0352                     l1822:
  2494  0352  0823               	movf	___awmod@dividend+1,w
  2495  0353  00A1               	movwf	?___awmod+1
  2496  0354  0822               	movf	___awmod@dividend,w
  2497  0355  00A0               	movwf	?___awmod
  2498  0356                     l490:
  2499  0356  0008               	return
  2500  0357                     __end_of___awmod:
  2501                           
  2502                           	psect	text10
  2503  0238                     __ptext10:	
  2504 ;; *************** function ___awdiv *****************
  2505 ;; Defined at:
  2506 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  divisor         2    0[BANK0 ] int 
  2509 ;;  dividend        2    2[BANK0 ] int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  quotient        2    6[BANK0 ] int 
  2512 ;;  sign            1    5[BANK0 ] unsigned char 
  2513 ;;  counter         1    4[BANK0 ] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    0[BANK0 ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       4       0       0       0
  2524 ;;      Locals:         0       4       0       0       0
  2525 ;;      Temps:          1       0       0       0       0
  2526 ;;      Totals:         1       8       0       0       0
  2527 ;;Total ram usage:        9 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_divisor
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function ___awdiv
  2539  0238                     ___awdiv:
  2540  0238                     l1744:	
  2541                           ;incstack = 0
  2542                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2543                           
  2544  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2546  023A  01A5               	clrf	___awdiv@sign
  2547  023B                     l1746:
  2548  023B  1FA1               	btfss	___awdiv@divisor+1,7
  2549  023C  2A3E               	goto	u1251
  2550  023D  2A3F               	goto	u1250
  2551  023E                     u1251:
  2552  023E  2A46               	goto	l1752
  2553  023F                     u1250:
  2554  023F                     l1748:
  2555  023F  09A0               	comf	___awdiv@divisor,f
  2556  0240  09A1               	comf	___awdiv@divisor+1,f
  2557  0241  0AA0               	incf	___awdiv@divisor,f
  2558  0242  1903               	skipnz
  2559  0243  0AA1               	incf	___awdiv@divisor+1,f
  2560  0244                     l1750:
  2561  0244  01A5               	clrf	___awdiv@sign
  2562  0245  0AA5               	incf	___awdiv@sign,f
  2563  0246                     l1752:
  2564  0246  1FA3               	btfss	___awdiv@dividend+1,7
  2565  0247  2A49               	goto	u1261
  2566  0248  2A4A               	goto	u1260
  2567  0249                     u1261:
  2568  0249  2A53               	goto	l1758
  2569  024A                     u1260:
  2570  024A                     l1754:
  2571  024A  09A2               	comf	___awdiv@dividend,f
  2572  024B  09A3               	comf	___awdiv@dividend+1,f
  2573  024C  0AA2               	incf	___awdiv@dividend,f
  2574  024D  1903               	skipnz
  2575  024E  0AA3               	incf	___awdiv@dividend+1,f
  2576  024F                     l1756:
  2577  024F  3001               	movlw	1
  2578  0250  00F4               	movwf	??___awdiv
  2579  0251  0874               	movf	??___awdiv,w
  2580  0252  06A5               	xorwf	___awdiv@sign,f
  2581  0253                     l1758:
  2582  0253  01A6               	clrf	___awdiv@quotient
  2583  0254  01A7               	clrf	___awdiv@quotient+1
  2584  0255                     l1760:
  2585  0255  0820               	movf	___awdiv@divisor,w
  2586  0256  0421               	iorwf	___awdiv@divisor+1,w
  2587  0257  1903               	btfsc	3,2
  2588  0258  2A5A               	goto	u1271
  2589  0259  2A5B               	goto	u1270
  2590  025A                     u1271:
  2591  025A  2A92               	goto	l1780
  2592  025B                     u1270:
  2593  025B                     l1762:
  2594  025B  01A4               	clrf	___awdiv@counter
  2595  025C  0AA4               	incf	___awdiv@counter,f
  2596  025D  2A69               	goto	l1768
  2597  025E                     l1764:
  2598  025E  3001               	movlw	1
  2599  025F                     u1285:
  2600  025F  1003               	clrc
  2601  0260  0DA0               	rlf	___awdiv@divisor,f
  2602  0261  0DA1               	rlf	___awdiv@divisor+1,f
  2603  0262  3EFF               	addlw	-1
  2604  0263  1D03               	skipz
  2605  0264  2A5F               	goto	u1285
  2606  0265                     l1766:
  2607  0265  3001               	movlw	1
  2608  0266  00F4               	movwf	??___awdiv
  2609  0267  0874               	movf	??___awdiv,w
  2610  0268  07A4               	addwf	___awdiv@counter,f
  2611  0269                     l1768:
  2612  0269  1FA1               	btfss	___awdiv@divisor+1,7
  2613  026A  2A6C               	goto	u1291
  2614  026B  2A6D               	goto	u1290
  2615  026C                     u1291:
  2616  026C  2A5E               	goto	l1764
  2617  026D                     u1290:
  2618  026D                     l1770:
  2619  026D  3001               	movlw	1
  2620  026E                     u1305:
  2621  026E  1003               	clrc
  2622  026F  0DA6               	rlf	___awdiv@quotient,f
  2623  0270  0DA7               	rlf	___awdiv@quotient+1,f
  2624  0271  3EFF               	addlw	-1
  2625  0272  1D03               	skipz
  2626  0273  2A6E               	goto	u1305
  2627  0274  0821               	movf	___awdiv@divisor+1,w
  2628  0275  0223               	subwf	___awdiv@dividend+1,w
  2629  0276  1D03               	skipz
  2630  0277  2A7A               	goto	u1315
  2631  0278  0820               	movf	___awdiv@divisor,w
  2632  0279  0222               	subwf	___awdiv@dividend,w
  2633  027A                     u1315:
  2634  027A  1C03               	skipc
  2635  027B  2A7D               	goto	u1311
  2636  027C  2A7E               	goto	u1310
  2637  027D                     u1311:
  2638  027D  2A85               	goto	l1776
  2639  027E                     u1310:
  2640  027E                     l1772:
  2641  027E  0820               	movf	___awdiv@divisor,w
  2642  027F  02A2               	subwf	___awdiv@dividend,f
  2643  0280  0821               	movf	___awdiv@divisor+1,w
  2644  0281  1C03               	skipc
  2645  0282  03A3               	decf	___awdiv@dividend+1,f
  2646  0283  02A3               	subwf	___awdiv@dividend+1,f
  2647  0284                     l1774:
  2648  0284  1426               	bsf	___awdiv@quotient,0
  2649  0285                     l1776:
  2650  0285  3001               	movlw	1
  2651  0286                     u1325:
  2652  0286  1003               	clrc
  2653  0287  0CA1               	rrf	___awdiv@divisor+1,f
  2654  0288  0CA0               	rrf	___awdiv@divisor,f
  2655  0289  3EFF               	addlw	-1
  2656  028A  1D03               	skipz
  2657  028B  2A86               	goto	u1325
  2658  028C                     l1778:
  2659  028C  3001               	movlw	1
  2660  028D  02A4               	subwf	___awdiv@counter,f
  2661  028E  1D03               	btfss	3,2
  2662  028F  2A91               	goto	u1331
  2663  0290  2A92               	goto	u1330
  2664  0291                     u1331:
  2665  0291  2A6D               	goto	l1770
  2666  0292                     u1330:
  2667  0292                     l1780:
  2668  0292  0825               	movf	___awdiv@sign,w
  2669  0293  1903               	btfsc	3,2
  2670  0294  2A96               	goto	u1341
  2671  0295  2A97               	goto	u1340
  2672  0296                     u1341:
  2673  0296  2A9C               	goto	l1784
  2674  0297                     u1340:
  2675  0297                     l1782:
  2676  0297  09A6               	comf	___awdiv@quotient,f
  2677  0298  09A7               	comf	___awdiv@quotient+1,f
  2678  0299  0AA6               	incf	___awdiv@quotient,f
  2679  029A  1903               	skipnz
  2680  029B  0AA7               	incf	___awdiv@quotient+1,f
  2681  029C                     l1784:
  2682  029C  0827               	movf	___awdiv@quotient+1,w
  2683  029D  00A1               	movwf	?___awdiv+1
  2684  029E  0826               	movf	___awdiv@quotient,w
  2685  029F  00A0               	movwf	?___awdiv
  2686  02A0                     l477:
  2687  02A0  0008               	return
  2688  02A1                     __end_of___awdiv:
  2689                           
  2690                           	psect	text11
  2691  05D9                     __ptext11:	
  2692 ;; *************** function _conversion *****************
  2693 ;; Defined at:
  2694 ;;		line 21 in file "ADC.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0
  2711 ;;      Totals:         1       0       0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 2
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _conversion
  2724  05D9                     _conversion:
  2725  05D9                     l1646:	
  2726                           ;incstack = 0
  2727                           ; Regs used in _conversion: [wreg+status,2+status,0]
  2728                           
  2729                           
  2730                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  2731  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2732  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2733  05DB  189F               	btfsc	31,1	;volatile
  2734  05DC  2DDE               	goto	u1181
  2735  05DD  2DDF               	goto	u1180
  2736  05DE                     u1181:
  2737  05DE  2E04               	goto	l210
  2738  05DF                     u1180:
  2739  05DF                     l1648:
  2740                           
  2741                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  2742  05DF  0C1F               	rrf	31,w	;volatile
  2743  05E0  00F4               	movwf	??_conversion
  2744  05E1  0C74               	rrf	??_conversion,w
  2745  05E2  390F               	andlw	15
  2746  05E3  3A01               	xorlw	1
  2747  05E4  1D03               	skipz
  2748  05E5  2DE7               	goto	u1191
  2749  05E6  2DE8               	goto	u1190
  2750  05E7                     u1191:
  2751  05E7  2DEF               	goto	l1654
  2752  05E8                     u1190:
  2753  05E8                     l1650:
  2754                           
  2755                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  2756  05E8  30C3               	movlw	-61
  2757  05E9  059F               	andwf	31,f	;volatile
  2758  05EA                     l1652:
  2759                           
  2760                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  2761  05EA  3021               	movlw	33
  2762  05EB  00F4               	movwf	??_conversion
  2763  05EC                     u1767:
  2764  05EC  0BF4               	decfsz	??_conversion,f
  2765  05ED  2DEC               	goto	u1767
  2766                           
  2767                           ;ADC.c: 26:         }
  2768  05EE  2DFD               	goto	l1660
  2769  05EF                     l1654:
  2770  05EF  0C1F               	rrf	31,w	;volatile
  2771  05F0  00F4               	movwf	??_conversion
  2772  05F1  0C74               	rrf	??_conversion,w
  2773  05F2  390F               	andlw	15
  2774  05F3  3A00               	xorlw	0
  2775  05F4  1D03               	skipz
  2776  05F5  2DF7               	goto	u1201
  2777  05F6  2DF8               	goto	u1200
  2778  05F7                     u1201:
  2779  05F7  2DFD               	goto	l1660
  2780  05F8                     u1200:
  2781  05F8                     l1656:
  2782                           
  2783                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  2784  05F8  081F               	movf	31,w	;volatile
  2785  05F9  39C3               	andlw	-61
  2786  05FA  3804               	iorlw	4
  2787  05FB  009F               	movwf	31	;volatile
  2788  05FC  2DEA               	goto	l1652
  2789  05FD                     l1660:
  2790                           
  2791                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2792  05FD  3021               	movlw	33
  2793  05FE  00F4               	movwf	??_conversion
  2794  05FF                     u1777:
  2795  05FF  0BF4               	decfsz	??_conversion,f
  2796  0600  2DFF               	goto	u1777
  2797  0601                     l1662:
  2798                           
  2799                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  2800  0601  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0602  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0603  149F               	bsf	31,1	;volatile
  2803  0604                     l210:
  2804  0604  0008               	return
  2805  0605                     __end_of_conversion:
  2806                           
  2807                           	psect	text12
  2808  0623                     __ptext12:	
  2809 ;; *************** function _Limpiar_pantallaLCD *****************
  2810 ;; Defined at:
  2811 ;;		line 63 in file "LCD.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       2       0       0       0
  2828 ;;      Totals:         0       2       0       0       0
  2829 ;;Total ram usage:        2 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 4
  2832 ;; This function calls:
  2833 ;;		_Escribir_comandoLCD
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _Limpiar_pantallaLCD
  2841  0623                     _Limpiar_pantallaLCD:
  2842  0623                     l1974:	
  2843                           ;incstack = 0
  2844                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2845                           
  2846                           
  2847                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  2848  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0625  1287               	bcf	7,5	;volatile
  2851  0626  1208               	bcf	8,4	;volatile
  2852  0627                     l1976:
  2853                           
  2854                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  2855  0627  3001               	movlw	1
  2856  0628  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  2857  062D                     l1978:
  2858                           
  2859                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2860  062D  301A               	movlw	26
  2861  062E  1283               	bcf	3,5	;RP0=0, select bank0
  2862  062F  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0630  00A1               	movwf	??_Limpiar_pantallaLCD+1
  2864  0631  30F7               	movlw	247
  2865  0632  00A0               	movwf	??_Limpiar_pantallaLCD
  2866  0633                     u1787:
  2867  0633  0BA0               	decfsz	??_Limpiar_pantallaLCD,f
  2868  0634  2E33               	goto	u1787
  2869  0635  0BA1               	decfsz	??_Limpiar_pantallaLCD+1,f
  2870  0636  2E33               	goto	u1787
  2871  0637  2E38               	nop2
  2872  0638                     l1980:
  2873                           
  2874                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  2875  0638  3002               	movlw	2
  2876  0639  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  2877  063E                     l171:
  2878  063E  0008               	return
  2879  063F                     __end_of_Limpiar_pantallaLCD:
  2880                           
  2881                           	psect	text13
  2882  01C4                     __ptext13:	
  2883 ;; *************** function _Iniciar_LCD *****************
  2884 ;; Defined at:
  2885 ;;		line 30 in file "LCD.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         0       0       0       0       0
  2900 ;;      Locals:         0       0       0       0       0
  2901 ;;      Temps:          0       2       0       0       0
  2902 ;;      Totals:         0       2       0       0       0
  2903 ;;Total ram usage:        2 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 4
  2906 ;; This function calls:
  2907 ;;		_Escribir_comandoLCD
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _Iniciar_LCD
  2915  01C4                     _Iniciar_LCD:
  2916  01C4                     l1948:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  2922  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2923  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2924  01C6  1287               	bcf	7,5	;volatile
  2925                           
  2926                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2927  01C7  1208               	bcf	8,4	;volatile
  2928  01C8                     l1950:
  2929                           
  2930                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  2931  01C8  3025               	movlw	37
  2932  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2933  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2934  01CB  00A1               	movwf	??_Iniciar_LCD+1
  2935  01CC  305B               	movlw	91
  2936  01CD  00A0               	movwf	??_Iniciar_LCD
  2937  01CE                     u1797:
  2938  01CE  0BA0               	decfsz	??_Iniciar_LCD,f
  2939  01CF  29CE               	goto	u1797
  2940  01D0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  2941  01D1  29CE               	goto	u1797
  2942  01D2                     l1952:
  2943                           
  2944                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2945  01D2  3030               	movlw	48
  2946  01D3  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  2947  01D8                     l1954:
  2948                           
  2949                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2950  01D8  300B               	movlw	11
  2951  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2952  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2953  01DB  00A1               	movwf	??_Iniciar_LCD+1
  2954  01DC  3061               	movlw	97
  2955  01DD  00A0               	movwf	??_Iniciar_LCD
  2956  01DE                     u1807:
  2957  01DE  0BA0               	decfsz	??_Iniciar_LCD,f
  2958  01DF  29DE               	goto	u1807
  2959  01E0  0BA1               	decfsz	??_Iniciar_LCD+1,f
  2960  01E1  29DE               	goto	u1807
  2961  01E2  29E3               	nop2
  2962                           
  2963                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2964  01E3  3030               	movlw	48
  2965  01E4  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  2966  01E9                     l1956:
  2967                           
  2968                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2969  01E9  3041               	movlw	65
  2970  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2971  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2972  01EC  00A0               	movwf	??_Iniciar_LCD
  2973  01ED                     u1817:
  2974  01ED  0BA0               	decfsz	??_Iniciar_LCD,f
  2975  01EE  29ED               	goto	u1817
  2976  01EF  29F0               	nop2
  2977  01F0                     l1958:
  2978                           
  2979                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2980  01F0  3030               	movlw	48
  2981  01F1  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  2982                           
  2983                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2984  01F6  3041               	movlw	65
  2985  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2986  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2987  01F9  00A0               	movwf	??_Iniciar_LCD
  2988  01FA                     u1827:
  2989  01FA  0BA0               	decfsz	??_Iniciar_LCD,f
  2990  01FB  29FA               	goto	u1827
  2991  01FC  29FD               	nop2
  2992  01FD                     l1960:
  2993                           
  2994                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2995  01FD  3038               	movlw	56
  2996  01FE  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  2997  0203                     l1962:
  2998                           
  2999                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3000  0203  3041               	movlw	65
  3001  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0206  00A0               	movwf	??_Iniciar_LCD
  3004  0207                     u1837:
  3005  0207  0BA0               	decfsz	??_Iniciar_LCD,f
  3006  0208  2A07               	goto	u1837
  3007  0209  2A0A               	nop2
  3008                           
  3009                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3010  020A  3008               	movlw	8
  3011  020B  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  3012  0210                     l1964:
  3013                           
  3014                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3015  0210  3041               	movlw	65
  3016  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0213  00A0               	movwf	??_Iniciar_LCD
  3019  0214                     u1847:
  3020  0214  0BA0               	decfsz	??_Iniciar_LCD,f
  3021  0215  2A14               	goto	u1847
  3022  0216  2A17               	nop2
  3023  0217                     l1966:
  3024                           
  3025                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3026  0217  3001               	movlw	1
  3027  0218  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  3028                           
  3029                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3030  021D  3041               	movlw	65
  3031  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3032  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0220  00A0               	movwf	??_Iniciar_LCD
  3034  0221                     u1857:
  3035  0221  0BA0               	decfsz	??_Iniciar_LCD,f
  3036  0222  2A21               	goto	u1857
  3037  0223  2A24               	nop2
  3038  0224                     l1968:
  3039                           
  3040                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3041  0224  3006               	movlw	6
  3042  0225  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  3043  022A                     l1970:
  3044                           
  3045                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3046  022A  3041               	movlw	65
  3047  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3048  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3049  022D  00A0               	movwf	??_Iniciar_LCD
  3050  022E                     u1867:
  3051  022E  0BA0               	decfsz	??_Iniciar_LCD,f
  3052  022F  2A2E               	goto	u1867
  3053  0230  2A31               	nop2
  3054                           
  3055                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3056  0231  300C               	movlw	12
  3057  0232  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  3058  0237                     l162:
  3059  0237  0008               	return
  3060  0238                     __end_of_Iniciar_LCD:
  3061                           
  3062                           	psect	text14
  3063  057B                     __ptext14:	
  3064 ;; *************** function _Escribir_stringLCD *****************
  3065 ;; Defined at:
  3066 ;;		line 55 in file "LCD.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  d               2    0[BANK0 ] PTR const unsigned char 
  3069 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3070 ;;		 -> STR_2(7), STR_1(5), 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  i               1    3[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       2       0       0       0
  3083 ;;      Locals:         0       1       0       0       0
  3084 ;;      Temps:          0       1       0       0       0
  3085 ;;      Totals:         0       4       0       0       0
  3086 ;;Total ram usage:        4 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 4
  3089 ;; This function calls:
  3090 ;;		_Escribir_comandoLCD
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _Escribir_stringLCD
  3098  057B                     _Escribir_stringLCD:
  3099  057B                     l2006:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3102                           
  3103                           
  3104                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3105  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3106  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3107  057D  1687               	bsf	7,5	;volatile
  3108  057E  1208               	bcf	8,4	;volatile
  3109  057F                     l2008:
  3110                           
  3111                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3112  057F  01A3               	clrf	Escribir_stringLCD@i
  3113  0580  2D98               	goto	l2014
  3114  0581                     l2010:
  3115                           
  3116                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3117  0581  0823               	movf	Escribir_stringLCD@i,w
  3118  0582  0720               	addwf	Escribir_stringLCD@d,w
  3119  0583  0084               	movwf	4
  3120  0584  0821               	movf	Escribir_stringLCD@d+1,w
  3121  0585  1803               	skipnc
  3122  0586  0A21               	incf	Escribir_stringLCD@d+1,w
  3123  0587  00FF               	movwf	btemp+1
  3124  0588  120A  118A  2500  120A  118A  	fcall	stringtab
  3125  058D  120A  118A  248C  120A  118A  	fcall	_Escribir_comandoLCD
  3126  0592                     l2012:
  3127                           
  3128                           ;LCD.c: 60:     }
  3129  0592  3001               	movlw	1
  3130  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0594  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0595  00A2               	movwf	??_Escribir_stringLCD
  3133  0596  0822               	movf	??_Escribir_stringLCD,w
  3134  0597  07A3               	addwf	Escribir_stringLCD@i,f
  3135  0598                     l2014:
  3136  0598  0823               	movf	Escribir_stringLCD@i,w
  3137  0599  0720               	addwf	Escribir_stringLCD@d,w
  3138  059A  0084               	movwf	4
  3139  059B  0821               	movf	Escribir_stringLCD@d+1,w
  3140  059C  1803               	skipnc
  3141  059D  0A21               	incf	Escribir_stringLCD@d+1,w
  3142  059E  00FF               	movwf	btemp+1
  3143  059F  120A  118A  2500  120A  118A  	fcall	stringtab
  3144  05A4  3A00               	xorlw	0
  3145  05A5  1D03               	skipz
  3146  05A6  2DA8               	goto	u1711
  3147  05A7  2DA9               	goto	u1710
  3148  05A8                     u1711:
  3149  05A8  2D81               	goto	l2010
  3150  05A9                     u1710:
  3151  05A9                     l168:
  3152  05A9  0008               	return
  3153  05AA                     __end_of_Escribir_stringLCD:
  3154                           
  3155                           	psect	text15
  3156  048C                     __ptext15:	
  3157 ;; *************** function _Escribir_comandoLCD *****************
  3158 ;; Defined at:
  3159 ;;		line 17 in file "LCD.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  Comando         1    wreg     unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  Comando         1    5[COMMON] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         1       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0
  3176 ;;      Totals:         1       0       0       0       0
  3177 ;;Total ram usage:        1 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 3
  3180 ;; This function calls:
  3181 ;;		_prender_ELCD
  3182 ;; This function is called by:
  3183 ;;		_Iniciar_LCD
  3184 ;;		_Escribir_stringLCD
  3185 ;;		_Limpiar_pantallaLCD
  3186 ;;		_set_cursor
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _Escribir_comandoLCD
  3192  048C                     _Escribir_comandoLCD:
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3196                           ;Escribir_comandoLCD@Comando stored from wreg
  3197  048C  00F5               	movwf	Escribir_comandoLCD@Comando
  3198  048D                     l1928:
  3199                           
  3200                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3201  048D  1C75               	btfss	Escribir_comandoLCD@Comando,0
  3202  048E  2C90               	goto	u1591
  3203  048F  2C91               	goto	u1590
  3204  0490                     u1591:
  3205  0490  2C95               	goto	l143
  3206  0491                     u1590:
  3207  0491                     l1930:
  3208  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3210  0493  1708               	bsf	8,6	;volatile
  3211  0494  2C98               	goto	l144
  3212  0495                     l143:
  3213  0495  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0496  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0497  1308               	bcf	8,6	;volatile
  3216  0498                     l144:
  3217                           
  3218                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3219  0498  1CF5               	btfss	Escribir_comandoLCD@Comando,1
  3220  0499  2C9B               	goto	u1601
  3221  049A  2C9C               	goto	u1600
  3222  049B                     u1601:
  3223  049B  2C9E               	goto	l145
  3224  049C                     u1600:
  3225  049C                     l1932:
  3226  049C  1788               	bsf	8,7	;volatile
  3227  049D  2C9F               	goto	l146
  3228  049E                     l145:
  3229  049E  1388               	bcf	8,7	;volatile
  3230  049F                     l146:
  3231                           
  3232                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3233  049F  1D75               	btfss	Escribir_comandoLCD@Comando,2
  3234  04A0  2CA2               	goto	u1611
  3235  04A1  2CA3               	goto	u1610
  3236  04A2                     u1611:
  3237  04A2  2CA5               	goto	l147
  3238  04A3                     u1610:
  3239  04A3                     l1934:
  3240  04A3  1406               	bsf	6,0	;volatile
  3241  04A4  2CA6               	goto	l148
  3242  04A5                     l147:
  3243  04A5  1006               	bcf	6,0	;volatile
  3244  04A6                     l148:
  3245                           
  3246                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3247  04A6  1DF5               	btfss	Escribir_comandoLCD@Comando,3
  3248  04A7  2CA9               	goto	u1621
  3249  04A8  2CAA               	goto	u1620
  3250  04A9                     u1621:
  3251  04A9  2CAC               	goto	l149
  3252  04AA                     u1620:
  3253  04AA                     l1936:
  3254  04AA  1486               	bsf	6,1	;volatile
  3255  04AB  2CAD               	goto	l150
  3256  04AC                     l149:
  3257  04AC  1086               	bcf	6,1	;volatile
  3258  04AD                     l150:
  3259                           
  3260                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3261  04AD  1E75               	btfss	Escribir_comandoLCD@Comando,4
  3262  04AE  2CB0               	goto	u1631
  3263  04AF  2CB1               	goto	u1630
  3264  04B0                     u1631:
  3265  04B0  2CB3               	goto	l151
  3266  04B1                     u1630:
  3267  04B1                     l1938:
  3268  04B1  1506               	bsf	6,2	;volatile
  3269  04B2  2CB4               	goto	l152
  3270  04B3                     l151:
  3271  04B3  1106               	bcf	6,2	;volatile
  3272  04B4                     l152:
  3273                           
  3274                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3275  04B4  1EF5               	btfss	Escribir_comandoLCD@Comando,5
  3276  04B5  2CB7               	goto	u1641
  3277  04B6  2CB8               	goto	u1640
  3278  04B7                     u1641:
  3279  04B7  2CBA               	goto	l153
  3280  04B8                     u1640:
  3281  04B8                     l1940:
  3282  04B8  1586               	bsf	6,3	;volatile
  3283  04B9  2CBB               	goto	l154
  3284  04BA                     l153:
  3285  04BA  1186               	bcf	6,3	;volatile
  3286  04BB                     l154:
  3287                           
  3288                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3289  04BB  1F75               	btfss	Escribir_comandoLCD@Comando,6
  3290  04BC  2CBE               	goto	u1651
  3291  04BD  2CBF               	goto	u1650
  3292  04BE                     u1651:
  3293  04BE  2CC1               	goto	l155
  3294  04BF                     u1650:
  3295  04BF                     l1942:
  3296  04BF  1606               	bsf	6,4	;volatile
  3297  04C0  2CC2               	goto	l156
  3298  04C1                     l155:
  3299  04C1  1206               	bcf	6,4	;volatile
  3300  04C2                     l156:
  3301                           
  3302                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3303  04C2  1FF5               	btfss	Escribir_comandoLCD@Comando,7
  3304  04C3  2CC5               	goto	u1661
  3305  04C4  2CC6               	goto	u1660
  3306  04C5                     u1661:
  3307  04C5  2CC8               	goto	l157
  3308  04C6                     u1660:
  3309  04C6                     l1944:
  3310  04C6  1686               	bsf	6,5	;volatile
  3311  04C7  2CC9               	goto	l1946
  3312  04C8                     l157:
  3313  04C8  1286               	bcf	6,5	;volatile
  3314  04C9                     l1946:
  3315                           
  3316                           ;LCD.c: 27:     prender_ELCD();
  3317  04C9  120A  118A  2653  120A  118A  	fcall	_prender_ELCD
  3318  04CE                     l159:
  3319  04CE  0008               	return
  3320  04CF                     __end_of_Escribir_comandoLCD:
  3321                           
  3322                           	psect	text16
  3323  0653                     __ptext16:	
  3324 ;; *************** function _prender_ELCD *****************
  3325 ;; Defined at:
  3326 ;;		line 11 in file "LCD.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3340 ;;      Params:         0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0
  3342 ;;      Temps:          1       0       0       0       0
  3343 ;;      Totals:         1       0       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 2
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_Escribir_comandoLCD
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _prender_ELCD
  3356  0653                     _prender_ELCD:
  3357  0653                     l1738:	
  3358                           ;incstack = 0
  3359                           ; Regs used in _prender_ELCD: [wreg]
  3360                           
  3361                           
  3362                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3363  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0655  1688               	bsf	8,5	;volatile
  3366  0656                     l1740:
  3367                           
  3368                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3369  0656  30C7               	movlw	199
  3370  0657  00F4               	movwf	??_prender_ELCD
  3371  0658                     u1877:
  3372  0658  2E59               	nop2
  3373  0659  0BF4               	decfsz	??_prender_ELCD,f
  3374  065A  2E58               	goto	u1877
  3375  065B  2E5C               	nop2
  3376  065C  2E5D               	nop2
  3377  065D                     l1742:
  3378                           
  3379                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3380  065D  1283               	bcf	3,5	;RP0=0, select bank0
  3381  065E  1303               	bcf	3,6	;RP1=0, select bank0
  3382  065F  1288               	bcf	8,5	;volatile
  3383  0660                     l140:
  3384  0660  0008               	return
  3385  0661                     __end_of_prender_ELCD:
  3386                           
  3387                           	psect	text17
  3388  05AA                     __ptext17:	
  3389 ;; *************** function _isr *****************
  3390 ;; Defined at:
  3391 ;;		line 66 in file "LAB2.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0
  3407 ;;      Temps:          3       0       0       0       0
  3408 ;;      Totals:         3       0       0       0       0
  3409 ;;Total ram usage:        3 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 1
  3412 ;; This function calls:
  3413 ;;		_ADC
  3414 ;; This function is called by:
  3415 ;;		Interrupt level 1
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _isr
  3421  05AA                     _isr:
  3422  05AA                     i1l1668:
  3423                           
  3424                           ;LAB2.c: 67:     if(PIR1bits.ADIF){
  3425  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3426  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3427  05AC  1F0C               	btfss	12,6	;volatile
  3428  05AD  2DAF               	goto	u121_21
  3429  05AE  2DB0               	goto	u121_20
  3430  05AF                     u121_21:
  3431  05AF  2DB8               	goto	i1l1674
  3432  05B0                     u121_20:
  3433  05B0                     i1l1670:
  3434                           
  3435                           ;LAB2.c: 68:         ADC();
  3436  05B0  120A  118A  2605  120A  118A  	fcall	_ADC
  3437  05B5                     i1l1672:
  3438                           
  3439                           ;LAB2.c: 69:         PIR1bits.ADIF = 0;
  3440  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3441  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3442  05B7  130C               	bcf	12,6	;volatile
  3443  05B8                     i1l1674:
  3444                           
  3445                           ;LAB2.c: 71:     if(PIR1bits.RCIF){
  3446  05B8  1E8C               	btfss	12,5	;volatile
  3447  05B9  2DBB               	goto	u122_21
  3448  05BA  2DBC               	goto	u122_20
  3449  05BB                     u122_21:
  3450  05BB  2DD2               	goto	i1l107
  3451  05BC                     u122_20:
  3452  05BC                     i1l1676:
  3453                           
  3454                           ;LAB2.c: 72:         dato = RCREG;
  3455  05BC  081A               	movf	26,w	;volatile
  3456  05BD  00F1               	movwf	??_isr
  3457  05BE  0871               	movf	??_isr,w
  3458  05BF  00F6               	movwf	_dato
  3459  05C0                     i1l1678:
  3460                           
  3461                           ;LAB2.c: 73:         if(dato == 75){
  3462  05C0  304B               	movlw	75
  3463  05C1  0676               	xorwf	_dato,w
  3464  05C2  1D03               	btfss	3,2
  3465  05C3  2DC5               	goto	u123_21
  3466  05C4  2DC6               	goto	u123_20
  3467  05C5                     u123_21:
  3468  05C5  2DCA               	goto	i1l105
  3469  05C6                     u123_20:
  3470  05C6                     i1l1680:
  3471                           
  3472                           ;LAB2.c: 74:             Cont_U++;
  3473  05C6  3001               	movlw	1
  3474  05C7  00F1               	movwf	??_isr
  3475  05C8  0871               	movf	??_isr,w
  3476  05C9  07C7               	addwf	_Cont_U,f
  3477  05CA                     i1l105:	
  3478                           ;LAB2.c: 75:         }
  3479                           
  3480                           
  3481                           ;LAB2.c: 76:         if(dato == 77){
  3482  05CA  304D               	movlw	77
  3483  05CB  0676               	xorwf	_dato,w
  3484  05CC  1D03               	btfss	3,2
  3485  05CD  2DCF               	goto	u124_21
  3486  05CE  2DD0               	goto	u124_20
  3487  05CF                     u124_21:
  3488  05CF  2DD2               	goto	i1l107
  3489  05D0                     u124_20:
  3490  05D0                     i1l1682:
  3491                           
  3492                           ;LAB2.c: 77:             Cont_U--;
  3493  05D0  3001               	movlw	1
  3494  05D1  02C7               	subwf	_Cont_U,f
  3495  05D2                     i1l107:
  3496  05D2  0873               	movf	??_isr+2,w
  3497  05D3  008A               	movwf	10
  3498  05D4  0E72               	swapf	??_isr+1,w
  3499  05D5  0083               	movwf	3
  3500  05D6  0EFE               	swapf	btemp,f
  3501  05D7  0E7E               	swapf	btemp,w
  3502  05D8  0009               	retfie
  3503  05D9                     __end_of_isr:
  3504                           
  3505                           	psect	intentry
  3506  0004                     __pintentry:	
  3507                           ;incstack = 0
  3508                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3509                           
  3510  0004                     interrupt_function:
  3511  007E                     saved_w	set	btemp
  3512  0004  00FE               	movwf	btemp
  3513  0005  0E03               	swapf	3,w
  3514  0006  00F2               	movwf	??_isr+1
  3515  0007  080A               	movf	10,w
  3516  0008  00F3               	movwf	??_isr+2
  3517  0009  120A  118A  2DAA   	ljmp	_isr
  3518                           
  3519                           	psect	text18
  3520  0605                     __ptext18:	
  3521 ;; *************** function _ADC *****************
  3522 ;; Defined at:
  3523 ;;		line 11 in file "ADC.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3537 ;;      Params:         0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0
  3539 ;;      Temps:          1       0       0       0       0
  3540 ;;      Totals:         1       0       0       0       0
  3541 ;;Total ram usage:        1 bytes
  3542 ;; Hardware stack levels used: 1
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_isr
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function _ADC
  3552  0605                     _ADC:
  3553  0605                     i1l1516:	
  3554                           ;incstack = 0
  3555                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3556                           
  3557                           
  3558                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3559  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0606  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0607  0C1F               	rrf	31,w	;volatile
  3562  0608  00F0               	movwf	??_ADC
  3563  0609  0C70               	rrf	??_ADC,w
  3564  060A  390F               	andlw	15
  3565  060B  3A00               	xorlw	0
  3566  060C  1D03               	skipz
  3567  060D  2E0F               	goto	u111_21
  3568  060E  2E10               	goto	u111_20
  3569  060F                     u111_21:
  3570  060F  2E15               	goto	i1l1520
  3571  0610                     u111_20:
  3572  0610                     i1l1518:
  3573                           
  3574                           ;ADC.c: 13:         cont1 = ADRESH;
  3575  0610  081E               	movf	30,w	;volatile
  3576  0611  00F0               	movwf	??_ADC
  3577  0612  0870               	movf	??_ADC,w
  3578  0613  00CA               	movwf	_cont1
  3579                           
  3580                           ;ADC.c: 14:     }
  3581  0614  2E22               	goto	i1l203
  3582  0615                     i1l1520:
  3583  0615  0C1F               	rrf	31,w	;volatile
  3584  0616  00F0               	movwf	??_ADC
  3585  0617  0C70               	rrf	??_ADC,w
  3586  0618  390F               	andlw	15
  3587  0619  3A01               	xorlw	1
  3588  061A  1D03               	skipz
  3589  061B  2E1D               	goto	u112_21
  3590  061C  2E1E               	goto	u112_20
  3591  061D                     u112_21:
  3592  061D  2E22               	goto	i1l203
  3593  061E                     u112_20:
  3594  061E                     i1l1522:
  3595                           
  3596                           ;ADC.c: 16:         cont2 = ADRESH;
  3597  061E  081E               	movf	30,w	;volatile
  3598  061F  00F0               	movwf	??_ADC
  3599  0620  0870               	movf	??_ADC,w
  3600  0621  00C9               	movwf	_cont2
  3601  0622                     i1l203:
  3602  0622  0008               	return
  3603  0623                     __end_of_ADC:
  3604  007E                     btemp	set	126	;btemp
  3605  007E                     wtemp0	set	126
  3606                           
  3607                           	psect	config
  3608                           
  3609                           ;Config register CONFIG1 @ 0x2007
  3610                           ;	Oscillator Selection bits
  3611                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3612                           ;	Watchdog Timer Enable bit
  3613                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3614                           ;	Power-up Timer Enable bit
  3615                           ;	PWRTE = OFF, PWRT disabled
  3616                           ;	RE3/MCLR pin function select bit
  3617                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3618                           ;	Code Protection bit
  3619                           ;	CP = OFF, Program memory code protection is disabled
  3620                           ;	Data Code Protection bit
  3621                           ;	CPD = OFF, Data memory code protection is disabled
  3622                           ;	Brown Out Reset Selection bits
  3623                           ;	BOREN = OFF, BOR disabled
  3624                           ;	Internal External Switchover bit
  3625                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3626                           ;	Fail-Safe Clock Monitor Enabled bit
  3627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3628                           ;	Low Voltage Programming Enable bit
  3629                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3630                           ;	In-Circuit Debugger Mode bit
  3631                           ;	DEBUG = 0x1, unprogrammed default
  3632  2007                     	org	8199
  3633  2007  20D4               	dw	8404
  3634                           
  3635                           ;Config register CONFIG2 @ 0x2008
  3636                           ;	Brown-out Reset Selection bit
  3637                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3638                           ;	Flash Program Memory Self Write Enable bits
  3639                           ;	WRT = OFF, Write protection off
  3640  2008                     	org	8200
  3641  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     39      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[3]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[7]), STR_1(CODE[5]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _set_cursor->_Escribir_comandoLCD
    _conversion_char->_divisor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _dato_recibido->_sprintf
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7650
                                             36 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              0 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        3     3      0    1806
                                             29 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3515
                                             29 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             12 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    1709
                                              5 COMMON     1     0      1
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              0 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              0 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              5 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 00:49:24 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0023                           l121 02FB                           l210 0604  
                         l140 0660                           l150 04AD                           l126 03AD  
                         l118 03FA                           l151 04B3                           l143 0495  
                         l152 04B4                           l144 0498                           l320 0109  
                         l153 04BA                           l145 049E                           l129 0652  
                         l154 04BB                           l146 049F                           l162 0237  
                         l155 04C1                           l147 04A5                           l171 063E  
                         l156 04C2                           l148 04A6                           l157 04C8  
                         l149 04AC                           l181 0445                           l159 04CE  
                         _ADC 0605                           l168 05A9                           l606 057A  
                         l490 0356                           l477 02A0                           l596 048B  
                         u910 0559                           u911 0558                           u920 0563  
                         u921 0562                           u905 054B                           u940 0576  
                         u941 0575                           u925 055F                           u935 056A  
                         u890 0547                           u891 0546                           _dec 0078  
                         _cen 0077                           _isr 05AA                           fsr0 0004  
                         _uni 0079                           indf 0000                  ___awmod@sign 0025  
                        ?_ADC 0070                          l2000 0431                          l2010 0581  
                        l2002 0435                          l2012 0592                          l2004 043A  
                        l2020 010A                          l2014 0598                          l2006 057B  
                        l2030 0156                          l2022 0122                          l2008 057F  
                        l1400 0547                          l2016 02A1                          l2040 0179  
                        l2032 015B                          l2024 012D                          l1410 0563  
                        l1402 054A                          l2018 063F                          l2050 01A9  
                        l2042 0182                          l2034 0160                          l2026 0144  
                        l1412 0569                          l1404 0551                          l2052 01B5  
                        l2044 018D                          l2036 0169                          l2028 0153  
                        l1414 0570                          l1406 0555                          l2046 0199  
                        l2038 0174                          l1408 0559                          l1416 0576  
                        l2048 01A4                          l2074 004D                          l1530 03C2  
                        l1540 03CC                          l1532 03C8                          l1524 03AE  
                        l1550 03DD                          l1542 03D2                          l1534 03C9  
                        l1526 03B2                          l1800 0313                          l1560 03E8  
                        l1552 03E0                          l1544 03D4                          l1536 03CA  
                        l1528 03B3                          l1650 05E8                          l1810 032B  
                        l1802 0319                          l1570 03F2                          l1562 03E9  
                        l1554 03E3                          l1546 03D5                          l1538 03CB  
                        l1740 0656                          l1660 05FD                          l1652 05EA  
                        l1820 034D                          l1812 0335                          l1804 031C  
                        l1900 008F                          l1572 03F5                          l1564 03EA  
                        l1556 03E6                          l1548 03DA                          l1742 065D  
                        l1662 0601                          l1654 05EF                          l1646 05D9  
                        l1750 0244                          l1822 0352                          l1814 033B  
                        l1806 0323                          l1830 0450                          l1398 053F  
                        l1910 00AF                          l1902 0099                          l1574 03F6  
                        l1566 03ED                          l1558 03E7                          l1656 05F8  
                        l1648 05DF                          l1760 0255                          l1752 0246  
                        l1744 0238                          l1816 0342                          l1808 0327  
                        l1840 0473                          l1832 0453                          l1912 00DF  
                        l1904 009F                          l1920 0105                          l1576 03F7  
                        l1568 03F1                          l1738 0653                          l1930 0491  
                        l1770 026D                          l1762 025B                          l1754 024A  
                        l1746 023B                          l1818 0348                          l1842 0479  
                        l1834 045A                          l1826 0446                          l1914 00E6  
                        l1906 00A6                          l1940 04B8                          l1932 049C  
                        l1772 027E                          l1764 025E                          l1780 0292  
                        l1756 024F                          l1748 023F                          l1860 0364  
                        l1852 035A                          l1844 047A                          l1836 045E  
                        l1828 044A                          l1916 00EA                          l1908 00AA  
                        l1942 04BF                          l1934 04A3                          l1950 01C8  
                        l1782 0297                          l1774 0284                          l1766 0265  
                        l1758 0253                          l1790 02FF                          l1862 039A  
                        l1854 0362                          l1846 0481                          l1838 0462  
                        l1870 002E                          l1918 00F3                          l1944 04C6  
                        l1936 04AA                          l1928 048D                          l1960 01FD  
                        l1952 01D2                          l1784 029C                          l1776 0285  
                        l1768 0269                          l1792 0303                          l1864 03A0  
                        l1848 0487                          l1880 0058                          l1872 0035  
                        l1946 04C9                          l1938 04B1                          l1970 022A  
                        l1962 0203                          l1954 01D8                          l1778 028C  
                        l1794 0308                          l1890 0071                          l1882 0060  
                        l1874 003A                          l1866 0023                          l1964 0210  
                        l1956 01E9                          l1948 01C4                          l1980 0638  
                        l1796 030A                          l1788 02FC                          l1884 0064  
                        l1868 0028                          l1966 0217                          l1958 01F0  
                        l1974 0623                          l1798 030E                          l1886 0068  
                        l1878 003B                          l1990 0412                          l1982 03FE  
                        l1968 0224                          l1976 0627                          l1896 0073  
                        l1888 006C                          l1992 0418                          l1984 0400  
                        l1978 062D                          l1994 0423                          l1986 0405  
                        l1988 040C                          l1998 042B                          ?_isr 0070  
                        STR_1 053A                          STR_2 0533                          STR_3 051A  
                        STR_4 052B                          STR_5 052B                          STR_6 0530  
                        u1200 05F8                          u1201 05F7                          u1310 027E  
                        u1311 027D                          u1400 0335                          u1305 026E  
                        u1401 0334                          u1330 0292                          u1250 023F  
                        u1331 0291                          u1315 027A                          u1251 023E  
                        u1180 05DF                          u1340 0297                          u1260 024A  
                        u1420 0348                          u1500 0487                          u1181 05DE  
                        u1341 0296                          u1325 0286                          u1261 0249  
                        u1421 0347                          u1405 0331                          u1501 0486  
                        u1190 05E8                          u1270 025B                          u1430 034D  
                        u1350 0303                          u1510 03AD                          u1191 05E7  
                        u1271 025A                          u1431 034C                          u1415 033C  
                        u1351 0302                          u1511 03AC                          u1600 049C  
                        u1360 030E                          u1440 0450                          u1520 002E  
                        u1601 049B                          u1361 030D                          u1441 044F  
                        u1521 002D                          u1610 04A3                          u1290 026D  
                        u1370 0319                          u1530 0068                          u1611 04A2  
                        u1291 026C                          u1371 0318                          u1515 03A9  
                        u1531 0067                          u1620 04AA                          u1460 0462  
                        u1540 008E                          u1700 043A                          u1621 04A9  
                        u1285 025F                          u1461 0461                          u1541 008D  
                        u1701 0439                          u1630 04B1                          u1710 05A9  
                        u1390 032B                          u1550 0099                          u1631 04B0  
                        u1711 05A8                          u1391 032A                          u1455 0454  
                        u1551 0098                          u1640 04B8                          u1480 0473  
                        u1560 009F                          u1641 04B7                          u1385 031D  
                        u1481 0472                          u1561 009E                          u1545 008A  
                        u1650 04BF                          u1570 00F3                          u1651 04BE  
                        u1475 0463                          u1571 00F2                          u1660 04C6  
                        u1580 0105                          u1661 04C5                          u1485 046F  
                        u1581 0104                          u1590 0491                          u1670 0405  
                        u1591 0490                          u1807 01DE                          u1495 047B  
                        u1671 0404                          u1727 014C                          u1680 0412  
                        u1817 01ED                          u1681 0411                          u1737 03D7  
                        u1690 042A                          u1827 01FA                          u1691 0429  
                        u1747 041E                          u1837 0207                          u1757 0440  
                        u1847 0214                          u1767 05EC                          u1857 0221  
                        u1777 05FF                          u1867 022E                          u1787 0633  
                        u1877 0658                          u1797 01CE                 ??_Iniciar_LCD 0020  
                        _dato 0076                          _main 010A                          _vol1 006A  
                        _vol2 0069                          _vol3 0048                          btemp 007E  
                        start 000C                         ??_ADC 0070                         ??_isr 0071  
  __end_of_Escribir_stringLCD 05AA                         ?_main 0070               __end_of___awdiv 02A1  
             __end_of___awmod 0357                         _ANSEL 0188               ___awdiv@divisor 0020  
             __end_of___lwdiv 048C                         i1l105 05CA                         i1l203 0622  
                       i1l107 05D2               __end_of___lwmod 057B               ___awdiv@counter 0024  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
             __end_of_divisor 03AE                         _cont1 004A                         _cont2 0049  
             __end_of_dpowers 051A                         _setup 03AE           _Limpiar_pantallaLCD 0623  
                       pclath 000A             ??_conversion_char 003D                         status 0003  
                       wtemp0 007E               __end_of_sprintf 010A               __initialization 000F  
         __end_of_Iniciar_LCD 0238                  __end_of_main 01C4          ?_Limpiar_pantallaLCD 0070  
                      ??_main 0044            set_cursor@posicion 0020                        _ADRESH 001E  
            ___awdiv@dividend 0022                        ?_setup 0070                        _ANSELH 0189  
                      u111_20 0610                        u111_21 060F                        u112_20 061E  
                      i1l1520 0615                        u112_21 061D                        i1l1522 061E  
                      i1l1516 0605                        i1l1518 0610                        u121_20 05B0  
                      u121_21 05AF                        i1l1670 05B0                        i1l1680 05C6  
                      u122_20 05BC                        i1l1672 05B5                        u122_21 05BB  
                      i1l1682 05D0                        i1l1674 05B8                        i1l1676 05BC  
                      i1l1668 05AA                        i1l1678 05C0                        u123_20 05C6  
                      u123_21 05C5                        u124_20 05D0                        u124_21 05CF  
                      _SPBRGH 009A                        _Cont_U 0047         ??_Limpiar_pantallaLCD 0020  
                   ??___awdiv 0074                     ??___awmod 0074         __end_of_dato_recibido 0653  
                   ??___lwdiv 0074                     ??___lwmod 0075              ___awdiv@quotient 0026  
             ___awmod@divisor 0020               ___awmod@counter 0024                     ??_divisor 0028  
                      saved_w 007E                     ??_sprintf 0033       __end_of__initialization 001C  
                 _Iniciar_LCD 01C4                __pcstackCOMMON 0070                 __end_of_setup 03FB  
                     ??_setup 0074                    __pbssBANK0 0047                    __pmaintext 010A  
                  __pintentry 0004  __size_of_Escribir_comandoLCD 0043               _conversion_char 02A1  
          _Escribir_stringLCD 057B                    __stringtab 0500                    _conversion 05D9  
         ?_Escribir_stringLCD 0020                       ___awdiv 0238                       ___awmod 02FC  
                     ___lwdiv 0446                       ___lwmod 053F                       __ptext1 03AE  
                     __ptext2 03FB                       __ptext3 063F                       __ptext4 02A1  
                     __ptext5 0020                       __ptext6 053F                       __ptext7 0446  
                     __ptext8 0357                       __ptext9 02FC                       _buffer1 005F  
                     _buffer2 0055                       _buffer3 004B                  __size_of_ADC 001E  
                     _divisor 0357          ??_Escribir_stringLCD 0022                       _dpowers 0510  
                __size_of_isr 002F              ___awmod@dividend 0022                 ?_prender_ELCD 0070  
                     _sprintf 0020                       clrloop0 0662          end_of_initialization 001C  
                  _set_cursor 03FB                     _RCSTAbits 0018       __end_of_conversion_char 02FC  
                   _PORTBbits 0006                     _PORTCbits 0007                     _PORTDbits 0008  
              ??_prender_ELCD 0074                  ?_Iniciar_LCD 0070                   ?_conversion 0070  
                   _TXSTAbits 0098   __end_of_Limpiar_pantallaLCD 063F                    divisor@dig 0075  
                 _BAUDCTLbits 0187           start_initialization 000F                   __end_of_ADC 0623  
                 __end_of_isr 05D9        __size_of_dato_recibido 0014           _Escribir_comandoLCD 048C  
  Escribir_comandoLCD@Comando 0075                   ?_set_cursor 0020              ?_conversion_char 0070  
        ?_Escribir_comandoLCD 0070           __size_of_conversion 002C                   __pbssCOMMON 0076  
                   ___latbits 0002                 __pcstackBANK0 0020                   sprintf@flag 0037  
                 sprintf@prec 0038          __end_of_prender_ELCD 0661              ___lwdiv@dividend 0022  
                    ?___awdiv 0020                      ?___awmod 0020                      ?___lwdiv 0020  
                    ?___lwmod 0027         ??_Escribir_comandoLCD 0075                 _dato_recibido 063F  
                   __pstrings 0500                      ?_divisor 0075              ___lwdiv@quotient 0025  
         __size_of_set_cursor 004B                      ?_sprintf 002C                __size_of_setup 004D  
           interrupt_function 0004                     clear_ram0 0661                      _PIE1bits 008C  
        __size_of_Iniciar_LCD 0074                      _PIR1bits 000C                ?_dato_recibido 0070  
                  _ADCON0bits 001F                   __stringbase 050F                    _ADCON1bits 009F  
 __size_of_Escribir_stringLCD 002F                  ??_conversion 0074           Escribir_stringLCD@d 0020  
         Escribir_stringLCD@i 0023              __size_of___awdiv 0069              __size_of___awmod 005B  
            __size_of___lwdiv 0046              __size_of___lwmod 003C            __end_of__stringtab 0510  
                  sprintf@val 0039              __size_of_divisor 0057            __end_of_conversion 0605  
             ___lwdiv@divisor 0020               ___lwdiv@counter 0024                      __ptext10 0238  
                    __ptext11 05D9                      __ptext12 0623                      __ptext13 01C4  
                    __ptext14 057B                      __ptext15 048C                      __ptext16 0653  
                    __ptext17 05AA                      __ptext18 0605              __size_of_sprintf 00EA  
       __size_of_prender_ELCD 000E                 __size_of_main 00BA                  ??_set_cursor 0021  
             ??_dato_recibido 003D  __size_of_Limpiar_pantallaLCD 001C                      divisor@a 002A  
                    divisor@b 002B                      divisor@i 002D                    _INTCONbits 000B  
                _prender_ELCD 0653            __end_of_set_cursor 0446                      intlevel1 0000  
                   sprintf@ap 0036                     sprintf@sp 003B              ___lwmod@dividend 0029  
                   stringcode 050A                    _OSCCONbits 008F                      sprintf@c 003C  
                    sprintf@f 002C               ___lwmod@divisor 0027               ___lwmod@counter 002B  
    __size_of_conversion_char 005B                      stringdir 050A                      stringtab 0500  
 __end_of_Escribir_comandoLCD 04CF  
