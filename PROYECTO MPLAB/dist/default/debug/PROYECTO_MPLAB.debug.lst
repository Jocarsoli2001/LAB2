

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 12:07:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	strings
   463  000F                     __pstrings:
   464  000F                     stringtab:
   465  000F                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468  000F  1BFF               	btfsc	btemp+1,7
   469  0010  2819               	ljmp	stringcode
   470  0011  1383               	bcf	3,7
   471  0012  187F               	btfsc	btemp+1,0
   472  0013  1783               	bsf	3,7
   473  0014  0800               	movf	0,w
   474  0015  0A84               	incf	4,f
   475  0016  1903               	skipnz
   476  0017  0AFF               	incf	btemp+1,f
   477  0018  0008               	return
   478  0019                     stringcode:
   479  0019                     stringdir:
   480  0019  3000               	movlw	high stringdir
   481  001A  008A               	movwf	10
   482  001B  0804               	movf	4,w
   483  001C  0A84               	incf	4,f
   484  001D  0782               	addwf	2,f
   485  001E                     __stringbase:
   486  001E  3400               	retlw	0
   487  001F                     __end_of__stringtab:
   488  001F                     _dpowers:
   489  001F  3401               	retlw	1
   490  0020  3400               	retlw	0
   491  0021  340A               	retlw	10
   492  0022  3400               	retlw	0
   493  0023  3464               	retlw	100
   494  0024  3400               	retlw	0
   495  0025  34E8               	retlw	232
   496  0026  3403               	retlw	3
   497  0027  3410               	retlw	16
   498  0028  3427               	retlw	39
   499  0029                     __end_of_dpowers:
   500  0018                     _RCSTAbits	set	24
   501  001E                     _ADRESH	set	30
   502  0007                     _PORTCbits	set	7
   503  0006                     _PORTBbits	set	6
   504  0008                     _PORTDbits	set	8
   505  000B                     _INTCONbits	set	11
   506  0006                     _PORTB	set	6
   507  0009                     _PORTE	set	9
   508  0007                     _PORTC	set	7
   509  0008                     _PORTD	set	8
   510  0005                     _PORTA	set	5
   511  001F                     _ADCON0bits	set	31
   512  001A                     _RCREG	set	26
   513  000C                     _PIR1bits	set	12
   514  009A                     _SPBRGH	set	154
   515  0099                     _SPBRG	set	153
   516  0098                     _TXSTAbits	set	152
   517  009F                     _ADCON1bits	set	159
   518  008C                     _PIE1bits	set	140
   519  008F                     _OSCCONbits	set	143
   520  0089                     _TRISE	set	137
   521  0087                     _TRISC	set	135
   522  0088                     _TRISD	set	136
   523  0086                     _TRISB	set	134
   524  0085                     _TRISA	set	133
   525  0187                     _BAUDCTLbits	set	391
   526  0189                     _ANSELH	set	393
   527  0188                     _ANSEL	set	392
   528  0029                     STR_3:
   529  0029  3453               	retlw	83	;'S'
   530  002A  3431               	retlw	49	;'1'
   531  002B  343A               	retlw	58	;':'
   532  002C  3420               	retlw	32	;' '
   533  002D  3420               	retlw	32	;' '
   534  002E  3420               	retlw	32	;' '
   535  002F  3420               	retlw	32	;' '
   536  0030  3453               	retlw	83	;'S'
   537  0031  3432               	retlw	50	;'2'
   538  0032  343A               	retlw	58	;':'
   539  0033  3420               	retlw	32	;' '
   540  0034  3420               	retlw	32	;' '
   541  0035  3420               	retlw	32	;' '
   542  0036  3453               	retlw	83	;'S'
   543  0037  3433               	retlw	51	;'3'
   544  0038  343A               	retlw	58	;':'
   545  0039  3400               	retlw	0
   546  003A                     STR_2:
   547  003A  344A               	retlw	74	;'J'
   548  003B  346F               	retlw	111	;'o'
   549  003C  3473               	retlw	115	;'s'
   550  003D  3465               	retlw	101	;'e'
   551  003E  3420               	retlw	32	;' '
   552  003F  3453               	retlw	83	;'S'
   553  0040  3461               	retlw	97	;'a'
   554  0041  346E               	retlw	110	;'n'
   555  0042  3474               	retlw	116	;'t'
   556  0043  3469               	retlw	105	;'i'
   557  0044  347A               	retlw	122	;'z'
   558  0045  346F               	retlw	111	;'o'
   559  0046  3400               	retlw	0
   560  0047                     STR_4:
   561  0047  3425               	retlw	37	;'%'
   562  0048  3464               	retlw	100	;'d'
   563  0049  342E               	retlw	46	;'.'
   564  004A  3425               	retlw	37	;'%'
   565  004B  3464               	retlw	100	;'d'
   566  004C  3425               	retlw	37	;'%'
   567  004D  3464               	retlw	100	;'d'
   568  004E  3400               	retlw	0
   569  004F                     STR_6:
   570  004F  3425               	retlw	37	;'%'
   571  0050  3464               	retlw	100	;'d'
   572  0051  3425               	retlw	37	;'%'
   573  0052  3464               	retlw	100	;'d'
   574  0053  3425               	retlw	37	;'%'
   575  0054  3464               	retlw	100	;'d'
   576  0055  3400               	retlw	0
   577  0056                     STR_1:
   578  0056  3448               	retlw	72	;'H'
   579  0057  346F               	retlw	111	;'o'
   580  0058  346C               	retlw	108	;'l'
   581  0059  3461               	retlw	97	;'a'
   582  005A  3400               	retlw	0
   583  0047                     
   584                           	psect	cinit
   585  07EF                     start_initialization:	
   586                           ; #config settings
   587                           
   588  07EF                     __initialization:
   589                           
   590                           ; Clear objects allocated to COMMON
   591  07EF  01F6               	clrf	__pbssCOMMON& (0+127)
   592  07F0  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   593  07F1  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   594  07F2  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   595                           
   596                           ; Clear objects allocated to BANK0
   597  07F3  1383               	bcf	3,7	;select IRP bank0
   598  07F4  3048               	movlw	low __pbssBANK0
   599  07F5  0084               	movwf	4
   600  07F6  306C               	movlw	low (__pbssBANK0+36)
   601  07F7  120A  118A  20DC  120A  118A  	fcall	clear_ram0
   602  07FC                     end_of_initialization:	
   603                           ;End of C runtime variable initialization code
   604                           
   605  07FC                     __end_of__initialization:
   606  07FC  0183               	clrf	3
   607  07FD  120A  118A  2E4B   	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  0076                     __pbssCOMMON:
   611  0076                     _dato:
   612  0076                     	ds	1
   613  0077                     _cen:
   614  0077                     	ds	1
   615  0078                     _dec:
   616  0078                     	ds	1
   617  0079                     _uni:
   618  0079                     	ds	1
   619                           
   620                           	psect	bssBANK0
   621  0048                     __pbssBANK0:
   622  0048                     _Cont_U:
   623  0048                     	ds	1
   624  0049                     _cont2:
   625  0049                     	ds	1
   626  004A                     _cont1:
   627  004A                     	ds	1
   628  004B                     _buffer3:
   629  004B                     	ds	10
   630  0055                     _buffer2:
   631  0055                     	ds	10
   632  005F                     _buffer1:
   633  005F                     	ds	10
   634  0069                     _vol3:
   635  0069                     	ds	1
   636  006A                     _vol2:
   637  006A                     	ds	1
   638  006B                     _vol1:
   639  006B                     	ds	1
   640                           
   641                           	psect	clrtext
   642  00DC                     clear_ram0:	
   643                           ;	Called with FSR containing the base address, and
   644                           ;	W with the last address+1
   645                           
   646  00DC  0064               	clrwdt	;clear the watchdog before getting into this loop
   647  00DD                     clrloop0:
   648  00DD  0180               	clrf	0	;clear RAM location pointed to by FSR
   649  00DE  0A84               	incf	4,f	;increment pointer
   650  00DF  0604               	xorwf	4,w	;XOR with final address
   651  00E0  1903               	btfsc	3,2	;have we reached the end yet?
   652  00E1  3400               	retlw	0	;all done for this memory range, return
   653  00E2  0604               	xorwf	4,w	;XOR again to restore value
   654  00E3  28DD               	goto	clrloop0	;do the next byte
   655                           
   656                           	psect	cstackCOMMON
   657  0071                     __pcstackCOMMON:
   658  0071                     ?_ADC:
   659  0071                     ??_ADC:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0071                     ?_setup:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0071                     ?_Iniciar_LCD:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0071                     ?_Limpiar_pantallaLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0071                     ?_conversion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0071                     ?_conversion_char:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0071                     ?_dato_recibido:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0071                     ?_isr:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0071                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0071                     ?_prender_ELCD:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0071                     ?_Escribir_comandoLCD:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  0071                     	ds	1
   695  0072                     ??_isr:
   696                           
   697                           ; 1 bytes @ 0x1
   698  0072                     	ds	3
   699  0075                     ??_conversion:
   700  0075                     ??_config_ADC:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0075                     ??_Config_USART:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0075                     ??_prender_ELCD:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0075                     ??___awdiv:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0075                     ??___awmod:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0075                     ??___lwdiv:	
   716                           ; 1 bytes @ 0x4
   717                           
   718                           
   719                           ; 1 bytes @ 0x4
   720  0075                     	ds	1
   721  0076                     ??_setup:
   722  0076                     ??_Escribir_comandoLCD:	
   723                           ; 1 bytes @ 0x5
   724                           
   725                           
   726                           	psect	cstackBANK0
   727  0020                     __pcstackBANK0:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0020                     ?_config_ADC:
   731  0020                     ?_Config_USART:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0020                     ?___awdiv:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0020                     ?___awmod:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0020                     ?___lwdiv:	
   741                           ; 2 bytes @ 0x0
   742                           
   743  0020                     Escribir_comandoLCD@Comando:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0020                     config_ADC@channel:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0020                     Config_USART@baud_rate:	
   750                           ; 2 bytes @ 0x0
   751                           
   752  0020                     ___awdiv@divisor:	
   753                           ; 2 bytes @ 0x0
   754                           
   755  0020                     ___awmod@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758  0020                     ___lwdiv@divisor:	
   759                           ; 2 bytes @ 0x0
   760                           
   761                           
   762                           ; 2 bytes @ 0x0
   763  0020                     	ds	1
   764  0021                     ??_Iniciar_LCD:
   765  0021                     ??_Limpiar_pantallaLCD:	
   766                           ; 1 bytes @ 0x1
   767                           
   768  0021                     ?_set_cursor:	
   769                           ; 1 bytes @ 0x1
   770                           
   771  0021                     ?_Escribir_stringLCD:	
   772                           ; 1 bytes @ 0x1
   773                           
   774  0021                     set_cursor@posicion:	
   775                           ; 1 bytes @ 0x1
   776                           
   777  0021                     Escribir_stringLCD@d:	
   778                           ; 1 bytes @ 0x1
   779                           
   780                           
   781                           ; 2 bytes @ 0x1
   782  0021                     	ds	1
   783  0022                     ??_set_cursor:
   784  0022                     Config_USART@Freq:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0022                     ___awdiv@dividend:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0022                     ___awmod@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793  0022                     ___lwdiv@dividend:	
   794                           ; 2 bytes @ 0x2
   795                           
   796                           
   797                           ; 2 bytes @ 0x2
   798  0022                     	ds	1
   799  0023                     ??_Escribir_stringLCD:
   800                           
   801                           ; 1 bytes @ 0x3
   802  0023                     	ds	1
   803  0024                     Escribir_stringLCD@i:
   804  0024                     set_cursor@linea:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0024                     ___awdiv@counter:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0024                     ___awmod@counter:	
   811                           ; 1 bytes @ 0x4
   812                           
   813  0024                     ___lwdiv@counter:	
   814                           ; 1 bytes @ 0x4
   815                           
   816                           
   817                           ; 1 bytes @ 0x4
   818  0024                     	ds	1
   819  0025                     ___awdiv@sign:
   820  0025                     ___awmod@sign:	
   821                           ; 1 bytes @ 0x5
   822                           
   823  0025                     ___lwdiv@quotient:	
   824                           ; 1 bytes @ 0x5
   825                           
   826                           
   827                           ; 2 bytes @ 0x5
   828  0025                     	ds	1
   829  0026                     ___awdiv@quotient:
   830                           
   831                           ; 2 bytes @ 0x6
   832  0026                     	ds	1
   833  0027                     ?___lwmod:
   834  0027                     ___lwmod@divisor:	
   835                           ; 2 bytes @ 0x7
   836                           
   837                           
   838                           ; 2 bytes @ 0x7
   839  0027                     	ds	1
   840  0028                     ?_divisor:
   841  0028                     ?_divisor1:	
   842                           ; 1 bytes @ 0x8
   843                           
   844  0028                     divisor@dig:	
   845                           ; 1 bytes @ 0x8
   846                           
   847  0028                     divisor1@dig:	
   848                           ; 1 bytes @ 0x8
   849                           
   850                           
   851                           ; 1 bytes @ 0x8
   852  0028                     	ds	1
   853  0029                     ??_divisor:
   854  0029                     ??_divisor1:	
   855                           ; 1 bytes @ 0x9
   856                           
   857  0029                     ___lwmod@dividend:	
   858                           ; 1 bytes @ 0x9
   859                           
   860                           
   861                           ; 2 bytes @ 0x9
   862  0029                     	ds	2
   863  002B                     ??___lwmod:
   864  002B                     divisor@a:	
   865                           ; 1 bytes @ 0xB
   866                           
   867                           
   868                           ; 1 bytes @ 0xB
   869  002B                     	ds	1
   870  002C                     ___lwmod@counter:
   871  002C                     divisor@b:	
   872                           ; 1 bytes @ 0xC
   873                           
   874                           
   875                           ; 2 bytes @ 0xC
   876  002C                     	ds	1
   877  002D                     ?_sprintf:
   878  002D                     divisor1@a:	
   879                           ; 2 bytes @ 0xD
   880                           
   881  002D                     sprintf@f:	
   882                           ; 1 bytes @ 0xD
   883                           
   884                           
   885                           ; 1 bytes @ 0xD
   886  002D                     	ds	1
   887  002E                     divisor@i:
   888  002E                     divisor1@i:	
   889                           ; 2 bytes @ 0xE
   890                           
   891                           
   892                           ; 2 bytes @ 0xE
   893  002E                     	ds	6
   894  0034                     ??_sprintf:
   895                           
   896                           ; 1 bytes @ 0x14
   897  0034                     	ds	3
   898  0037                     sprintf@ap:
   899                           
   900                           ; 1 bytes @ 0x17
   901  0037                     	ds	1
   902  0038                     sprintf@flag:
   903                           
   904                           ; 1 bytes @ 0x18
   905  0038                     	ds	1
   906  0039                     sprintf@prec:
   907                           
   908                           ; 1 bytes @ 0x19
   909  0039                     	ds	1
   910  003A                     sprintf@val:
   911                           
   912                           ; 2 bytes @ 0x1A
   913  003A                     	ds	2
   914  003C                     sprintf@sp:
   915                           
   916                           ; 1 bytes @ 0x1C
   917  003C                     	ds	1
   918  003D                     sprintf@c:
   919                           
   920                           ; 1 bytes @ 0x1D
   921  003D                     	ds	1
   922  003E                     ??_conversion_char:
   923  003E                     ??_dato_recibido:	
   924                           ; 1 bytes @ 0x1E
   925                           
   926                           
   927                           ; 1 bytes @ 0x1E
   928  003E                     	ds	7
   929  0045                     ??_main:
   930                           
   931                           ; 1 bytes @ 0x25
   932  0045                     	ds	3
   933                           
   934                           	psect	maintext
   935  064B                     __pmaintext:	
   936 ;;
   937 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   938 ;;
   939 ;; *************** function _main *****************
   940 ;; Defined at:
   941 ;;		line 87 in file "LAB2.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : B00/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          0       3       0       0       0
   958 ;;      Totals:         0       3       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels required when called: 5
   961 ;; This function calls:
   962 ;;		_Escribir_stringLCD
   963 ;;		_Iniciar_LCD
   964 ;;		_Limpiar_pantallaLCD
   965 ;;		_conversion
   966 ;;		_conversion_char
   967 ;;		_dato_recibido
   968 ;;		_set_cursor
   969 ;;		_setup
   970 ;; This function is called by:
   971 ;;		Startup code after reset
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _main
   977  064B                     _main:
   978  064B                     l2287:	
   979                           ;incstack = 0
   980                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   981                           
   982                           
   983                           ;LAB2.c: 88:     setup();
   984  064B  120A  118A  2287  120A  118A  	fcall	_setup
   985                           
   986                           ;LAB2.c: 89:     Iniciar_LCD();
   987  0650  120A  118A  2522  120A  118A  	fcall	_Iniciar_LCD
   988                           
   989                           ;LAB2.c: 90:     Limpiar_pantallaLCD();
   990  0655  120A  118A  210C  120A  118A  	fcall	_Limpiar_pantallaLCD
   991                           
   992                           ;LAB2.c: 91:     set_cursor(1,0);
   993  065A  1283               	bcf	3,5	;RP0=0, select bank0
   994  065B  1303               	bcf	3,6	;RP1=0, select bank0
   995  065C  01A1               	clrf	set_cursor@posicion
   996  065D  3001               	movlw	1
   997  065E  120A  118A  2310  120A  118A  	fcall	_set_cursor
   998  0663                     l2289:
   999                           
  1000                           ;LAB2.c: 92:     Escribir_stringLCD("Hola");
  1001  0663  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1002  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0666  00A1               	movwf	Escribir_stringLCD@d
  1005  0667  3080               	movlw	128
  1006  0668  00A2               	movwf	Escribir_stringLCD@d+1
  1007  0669  120A  118A  21A0  120A  118A  	fcall	_Escribir_stringLCD
  1008  066E                     l2291:
  1009                           
  1010                           ;LAB2.c: 93:     set_cursor(2,2);
  1011  066E  3002               	movlw	2
  1012  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0671  00C5               	movwf	??_main
  1015  0672  0845               	movf	??_main,w
  1016  0673  00A1               	movwf	set_cursor@posicion
  1017  0674  3002               	movlw	2
  1018  0675  120A  118A  2310  120A  118A  	fcall	_set_cursor
  1019                           
  1020                           ;LAB2.c: 94:     Escribir_stringLCD("Jose Santizo");
  1021  067A  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1022  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1023  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1024  067D  00A1               	movwf	Escribir_stringLCD@d
  1025  067E  3080               	movlw	128
  1026  067F  00A2               	movwf	Escribir_stringLCD@d+1
  1027  0680  120A  118A  21A0  120A  118A  	fcall	_Escribir_stringLCD
  1028  0685                     l2293:
  1029                           
  1030                           ;LAB2.c: 95:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1031  0685  301A               	movlw	26
  1032  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0688  00C7               	movwf	??_main+2
  1035  0689  305E               	movlw	94
  1036  068A  00C6               	movwf	??_main+1
  1037  068B  306D               	movlw	109
  1038  068C  00C5               	movwf	??_main
  1039  068D                     u2157:
  1040  068D  0BC5               	decfsz	??_main,f
  1041  068E  2E8D               	goto	u2157
  1042  068F  0BC6               	decfsz	??_main+1,f
  1043  0690  2E8D               	goto	u2157
  1044  0691  0BC7               	decfsz	??_main+2,f
  1045  0692  2E8D               	goto	u2157
  1046  0693  2E94               	nop2
  1047  0694                     l2295:
  1048                           
  1049                           ;LAB2.c: 96:     ADCON0bits.GO = 1;
  1050  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0696  149F               	bsf	31,1	;volatile
  1053  0697                     l2297:
  1054                           
  1055                           ;LAB2.c: 98:     Limpiar_pantallaLCD();
  1056  0697  120A  118A  210C  120A  118A  	fcall	_Limpiar_pantallaLCD
  1057  069C                     l2299:
  1058                           
  1059                           ;LAB2.c: 101:         conversion();
  1060  069C  120A  118A  2146  120A  118A  	fcall	_conversion
  1061  06A1                     l2301:
  1062                           
  1063                           ;LAB2.c: 104:         set_cursor(1,0);
  1064  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1065  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1066  06A3  01A1               	clrf	set_cursor@posicion
  1067  06A4  3001               	movlw	1
  1068  06A5  120A  118A  2310  120A  118A  	fcall	_set_cursor
  1069  06AA                     l2303:
  1070                           
  1071                           ;LAB2.c: 105:         Escribir_stringLCD("S1:    S2:   S3:");
  1072  06AA  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1073  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1074  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1075  06AD  00A1               	movwf	Escribir_stringLCD@d
  1076  06AE  3080               	movlw	128
  1077  06AF  00A2               	movwf	Escribir_stringLCD@d+1
  1078  06B0  120A  118A  21A0  120A  118A  	fcall	_Escribir_stringLCD
  1079  06B5                     l2305:
  1080                           
  1081                           ;LAB2.c: 107:         conversion_char();
  1082  06B5  120A  118A  245E  120A  118A  	fcall	_conversion_char
  1083  06BA                     l2307:
  1084                           
  1085                           ;LAB2.c: 109:         set_cursor(2,0);
  1086  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1087  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1088  06BC  01A1               	clrf	set_cursor@posicion
  1089  06BD  3002               	movlw	2
  1090  06BE  120A  118A  2310  120A  118A  	fcall	_set_cursor
  1091  06C3                     l2309:
  1092                           
  1093                           ;LAB2.c: 110:         Escribir_stringLCD(buffer1);
  1094  06C3  305F               	movlw	(low (_buffer1| 0))& (0+255)
  1095  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1096  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1097  06C6  00A1               	movwf	Escribir_stringLCD@d
  1098  06C7  3000               	movlw	0
  1099  06C8  00A2               	movwf	Escribir_stringLCD@d+1
  1100  06C9  120A  118A  21A0  120A  118A  	fcall	_Escribir_stringLCD
  1101  06CE                     l2311:
  1102                           
  1103                           ;LAB2.c: 111:         set_cursor(2,7);
  1104  06CE  3007               	movlw	7
  1105  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1106  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1107  06D1  00C5               	movwf	??_main
  1108  06D2  0845               	movf	??_main,w
  1109  06D3  00A1               	movwf	set_cursor@posicion
  1110  06D4  3002               	movlw	2
  1111  06D5  120A  118A  2310  120A  118A  	fcall	_set_cursor
  1112  06DA                     l2313:
  1113                           
  1114                           ;LAB2.c: 112:         Escribir_stringLCD(buffer2);
  1115  06DA  3055               	movlw	(low (_buffer2| 0))& (0+255)
  1116  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1117  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1118  06DD  00A1               	movwf	Escribir_stringLCD@d
  1119  06DE  3000               	movlw	0
  1120  06DF  00A2               	movwf	Escribir_stringLCD@d+1
  1121  06E0  120A  118A  21A0  120A  118A  	fcall	_Escribir_stringLCD
  1122  06E5                     l2315:
  1123                           
  1124                           ;LAB2.c: 115:         dato_recibido();
  1125  06E5  120A  118A  2172  120A  118A  	fcall	_dato_recibido
  1126  06EA                     l2317:
  1127                           
  1128                           ;LAB2.c: 117:         set_cursor(2,13);
  1129  06EA  300D               	movlw	13
  1130  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1131  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1132  06ED  00C5               	movwf	??_main
  1133  06EE  0845               	movf	??_main,w
  1134  06EF  00A1               	movwf	set_cursor@posicion
  1135  06F0  3002               	movlw	2
  1136  06F1  120A  118A  2310  120A  118A  	fcall	_set_cursor
  1137  06F6                     l2319:
  1138                           
  1139                           ;LAB2.c: 118:         Escribir_stringLCD(buffer3);
  1140  06F6  304B               	movlw	(low (_buffer3| 0))& (0+255)
  1141  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1142  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1143  06F9  00A1               	movwf	Escribir_stringLCD@d
  1144  06FA  3000               	movlw	0
  1145  06FB  00A2               	movwf	Escribir_stringLCD@d+1
  1146  06FC  120A  118A  21A0  120A  118A  	fcall	_Escribir_stringLCD
  1147  0701  2E9C               	goto	l2299
  1148  0702  120A  118A  280C   	ljmp	start
  1149  0705                     __end_of_main:
  1150                           
  1151                           	psect	text1
  1152  0287                     __ptext1:	
  1153 ;; *************** function _setup *****************
  1154 ;; Defined at:
  1155 ;;		line 123 in file "LAB2.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; Hardware stack levels required when called: 3
  1176 ;; This function calls:
  1177 ;;		_Config_USART
  1178 ;;		_config_ADC
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _setup
  1186  0287                     _setup:
  1187  0287                     l2189:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1190                           
  1191                           
  1192                           ;LAB2.c: 126:     ANSEL = 0b0011;
  1193  0287  3003               	movlw	3
  1194  0288  1683               	bsf	3,5	;RP0=1, select bank3
  1195  0289  1703               	bsf	3,6	;RP1=1, select bank3
  1196  028A  0088               	movwf	8	;volatile
  1197  028B                     l2191:
  1198                           
  1199                           ;LAB2.c: 127:     ANSELH = 0;
  1200  028B  0189               	clrf	9	;volatile
  1201  028C                     l2193:
  1202                           
  1203                           ;LAB2.c: 129:     TRISA = 0b0011;
  1204  028C  3003               	movlw	3
  1205  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1206  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1207  028F  0085               	movwf	5	;volatile
  1208                           
  1209                           ;LAB2.c: 130:     TRISB = 0;
  1210  0290  0186               	clrf	6	;volatile
  1211                           
  1212                           ;LAB2.c: 131:     TRISD = 0;
  1213  0291  0188               	clrf	8	;volatile
  1214                           
  1215                           ;LAB2.c: 132:     TRISC = 0;
  1216  0292  0187               	clrf	7	;volatile
  1217                           
  1218                           ;LAB2.c: 133:     TRISE = 0;
  1219  0293  0189               	clrf	9	;volatile
  1220                           
  1221                           ;LAB2.c: 135:     PORTA = 0;
  1222  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0296  0185               	clrf	5	;volatile
  1225                           
  1226                           ;LAB2.c: 136:     PORTD = 0;
  1227  0297  0188               	clrf	8	;volatile
  1228                           
  1229                           ;LAB2.c: 137:     PORTC = 0;
  1230  0298  0187               	clrf	7	;volatile
  1231                           
  1232                           ;LAB2.c: 138:     PORTE = 0;
  1233  0299  0189               	clrf	9	;volatile
  1234                           
  1235                           ;LAB2.c: 139:     PORTB = 0;
  1236  029A  0186               	clrf	6	;volatile
  1237  029B                     l2195:
  1238                           
  1239                           ;LAB2.c: 142:     OSCCONbits.IRCF = 0b0110;
  1240  029B  1683               	bsf	3,5	;RP0=1, select bank1
  1241  029C  1303               	bcf	3,6	;RP1=0, select bank1
  1242  029D  080F               	movf	15,w	;volatile
  1243  029E  398F               	andlw	-113
  1244  029F  3860               	iorlw	96
  1245  02A0  008F               	movwf	15	;volatile
  1246  02A1                     l2197:
  1247                           
  1248                           ;LAB2.c: 143:     OSCCONbits.SCS = 1;
  1249  02A1  140F               	bsf	15,0	;volatile
  1250  02A2                     l2199:
  1251                           
  1252                           ;LAB2.c: 146:     config_ADC(0);
  1253  02A2  3000               	movlw	0
  1254  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1255  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1256  02A5  00A0               	movwf	config_ADC@channel
  1257  02A6  00A1               	movwf	config_ADC@channel+1
  1258  02A7  120A  118A  20F2  120A  118A  	fcall	_config_ADC
  1259  02AC                     l2201:
  1260                           
  1261                           ;LAB2.c: 149:     PIR1bits.ADIF = 0;
  1262  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1263  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1264  02AE  130C               	bcf	12,6	;volatile
  1265  02AF                     l2203:
  1266                           
  1267                           ;LAB2.c: 150:     PIE1bits.ADIE = 1;
  1268  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1269  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  1270  02B1  170C               	bsf	12,6	;volatile
  1271  02B2                     l2205:
  1272                           
  1273                           ;LAB2.c: 151:     PIR1bits.RCIF = 0;
  1274  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1275  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1276  02B4  128C               	bcf	12,5	;volatile
  1277  02B5                     l2207:
  1278                           
  1279                           ;LAB2.c: 152:     PIE1bits.RCIE = 1;
  1280  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  1281  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  1282  02B7  168C               	bsf	12,5	;volatile
  1283  02B8                     l2209:
  1284                           
  1285                           ;LAB2.c: 153:     INTCONbits.PEIE = 1;
  1286  02B8  170B               	bsf	11,6	;volatile
  1287  02B9                     l2211:
  1288                           
  1289                           ;LAB2.c: 154:     INTCONbits.GIE = 1;
  1290  02B9  178B               	bsf	11,7	;volatile
  1291  02BA                     l2213:
  1292                           
  1293                           ;LAB2.c: 157:     Config_USART(9600,4);
  1294  02BA  3080               	movlw	128
  1295  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1296  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1297  02BD  00A0               	movwf	Config_USART@baud_rate
  1298  02BE  3025               	movlw	37
  1299  02BF  00A1               	movwf	Config_USART@baud_rate+1
  1300  02C0  3004               	movlw	4
  1301  02C1  00A2               	movwf	Config_USART@Freq
  1302  02C2  3000               	movlw	0
  1303  02C3  00A3               	movwf	Config_USART@Freq+1
  1304  02C4  120A  118A  2596  120A  118A  	fcall	_Config_USART
  1305  02C9                     l114:
  1306  02C9  0008               	return
  1307  02CA                     __end_of_setup:
  1308                           
  1309                           	psect	text2
  1310  00F2                     __ptext2:	
  1311 ;; *************** function _config_ADC *****************
  1312 ;; Defined at:
  1313 ;;		line 36 in file "ADC.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  channel         2    0[BANK0 ] int 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       2       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0
  1330 ;;      Totals:         1       2       0       0       0
  1331 ;;Total ram usage:        3 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 2
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_setup
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _config_ADC
  1343  00F2                     _config_ADC:
  1344  00F2                     l2005:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1347                           
  1348                           
  1349                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1350  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1351  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1352  00F4  139F               	bcf	31,7	;volatile
  1353                           
  1354                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1355  00F5  121F               	bcf	31,4	;volatile
  1356                           
  1357                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1358  00F6  129F               	bcf	31,5	;volatile
  1359  00F7                     l2007:
  1360                           
  1361                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1362  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1363  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1364  00F9  081F               	movf	31,w	;volatile
  1365  00FA  393F               	andlw	-193
  1366  00FB  3840               	iorlw	64
  1367  00FC  009F               	movwf	31	;volatile
  1368                           
  1369                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1370  00FD  0820               	movf	config_ADC@channel,w
  1371  00FE  00F5               	movwf	??_config_ADC
  1372  00FF  0DF5               	rlf	??_config_ADC,f
  1373  0100  0DF5               	rlf	??_config_ADC,f
  1374  0101  081F               	movf	31,w	;volatile
  1375  0102  0675               	xorwf	??_config_ADC,w
  1376  0103  39C3               	andlw	-61
  1377  0104  0675               	xorwf	??_config_ADC,w
  1378  0105  009F               	movwf	31	;volatile
  1379  0106                     l2009:
  1380                           
  1381                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1382  0106  141F               	bsf	31,0	;volatile
  1383  0107                     l2011:
  1384                           
  1385                           ;ADC.c: 44:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1386  0107  3021               	movlw	33
  1387  0108  00F5               	movwf	??_config_ADC
  1388  0109                     u2167:
  1389  0109  0BF5               	decfsz	??_config_ADC,f
  1390  010A  2909               	goto	u2167
  1391  010B                     l216:
  1392  010B  0008               	return
  1393  010C                     __end_of_config_ADC:
  1394                           
  1395                           	psect	text3
  1396  0596                     __ptext3:	
  1397 ;; *************** function _Config_USART *****************
  1398 ;; Defined at:
  1399 ;;		line 13 in file "USART.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  baud_rate       2    0[BANK0 ] int 
  1402 ;;  Freq            2    2[BANK0 ] int 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       4       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0
  1417 ;;      Totals:         0       4       0       0       0
  1418 ;;Total ram usage:        4 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 2
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_setup
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _Config_USART
  1430  0596                     _Config_USART:
  1431  0596                     l2013:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  1434                           
  1435                           
  1436                           ;USART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  1437  0596  3080               	movlw	128
  1438  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0599  0620               	xorwf	Config_USART@baud_rate,w
  1441  059A  3025               	movlw	37
  1442  059B  1903               	skipnz
  1443  059C  0621               	xorwf	Config_USART@baud_rate+1,w
  1444  059D  1D03               	btfss	3,2
  1445  059E  2DA0               	goto	u1811
  1446  059F  2DA1               	goto	u1810
  1447  05A0                     u1811:
  1448  05A0  2DB4               	goto	l2023
  1449  05A1                     u1810:
  1450  05A1                     l2015:
  1451  05A1  3004               	movlw	4
  1452  05A2  0622               	xorwf	Config_USART@Freq,w
  1453  05A3  0423               	iorwf	Config_USART@Freq+1,w
  1454  05A4  1D03               	btfss	3,2
  1455  05A5  2DA7               	goto	u1821
  1456  05A6  2DA8               	goto	u1820
  1457  05A7                     u1821:
  1458  05A7  2DB4               	goto	l2023
  1459  05A8                     u1820:
  1460  05A8                     l2017:
  1461                           
  1462                           ;USART.c: 15:         TXSTAbits.SYNC = 0;
  1463  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  1464  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  1465  05AA  1218               	bcf	24,4	;volatile
  1466                           
  1467                           ;USART.c: 16:         TXSTAbits.BRGH = 1;
  1468  05AB  1518               	bsf	24,2	;volatile
  1469                           
  1470                           ;USART.c: 18:         BAUDCTLbits.BRG16 = 0;
  1471  05AC  1683               	bsf	3,5	;RP0=1, select bank3
  1472  05AD  1703               	bsf	3,6	;RP1=1, select bank3
  1473  05AE  1187               	bcf	7,3	;volatile
  1474  05AF                     l2019:
  1475                           
  1476                           ;USART.c: 20:         SPBRG = 25;
  1477  05AF  3019               	movlw	25
  1478  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  1479  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  1480  05B2  0099               	movwf	25	;volatile
  1481  05B3                     l2021:
  1482                           
  1483                           ;USART.c: 21:         SPBRGH = 0;
  1484  05B3  019A               	clrf	26	;volatile
  1485  05B4                     l2023:
  1486                           
  1487                           ;USART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  1488  05B4  3080               	movlw	128
  1489  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1490  05B6  0620               	xorwf	Config_USART@baud_rate,w
  1491  05B7  3025               	movlw	37
  1492  05B8  1903               	skipnz
  1493  05B9  0621               	xorwf	Config_USART@baud_rate+1,w
  1494  05BA  1D03               	btfss	3,2
  1495  05BB  2DBD               	goto	u1831
  1496  05BC  2DBE               	goto	u1830
  1497  05BD                     u1831:
  1498  05BD  2DD1               	goto	l2033
  1499  05BE                     u1830:
  1500  05BE                     l2025:
  1501  05BE  3008               	movlw	8
  1502  05BF  0622               	xorwf	Config_USART@Freq,w
  1503  05C0  0423               	iorwf	Config_USART@Freq+1,w
  1504  05C1  1D03               	btfss	3,2
  1505  05C2  2DC4               	goto	u1841
  1506  05C3  2DC5               	goto	u1840
  1507  05C4                     u1841:
  1508  05C4  2DD1               	goto	l2033
  1509  05C5                     u1840:
  1510  05C5                     l2027:
  1511                           
  1512                           ;USART.c: 25:         TXSTAbits.SYNC = 0;
  1513  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  1514  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  1515  05C7  1218               	bcf	24,4	;volatile
  1516                           
  1517                           ;USART.c: 26:         TXSTAbits.BRGH = 0;
  1518  05C8  1118               	bcf	24,2	;volatile
  1519                           
  1520                           ;USART.c: 28:         BAUDCTLbits.BRG16 = 1;
  1521  05C9  1683               	bsf	3,5	;RP0=1, select bank3
  1522  05CA  1703               	bsf	3,6	;RP1=1, select bank3
  1523  05CB  1587               	bsf	7,3	;volatile
  1524  05CC                     l2029:
  1525                           
  1526                           ;USART.c: 30:         SPBRG = 51;
  1527  05CC  3033               	movlw	51
  1528  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  1529  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  1530  05CF  0099               	movwf	25	;volatile
  1531  05D0                     l2031:
  1532                           
  1533                           ;USART.c: 31:         SPBRGH = 0;
  1534  05D0  019A               	clrf	26	;volatile
  1535  05D1                     l2033:
  1536                           
  1537                           ;USART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  1538  05D1  3080               	movlw	128
  1539  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1540  05D3  0620               	xorwf	Config_USART@baud_rate,w
  1541  05D4  3025               	movlw	37
  1542  05D5  1903               	skipnz
  1543  05D6  0621               	xorwf	Config_USART@baud_rate+1,w
  1544  05D7  1D03               	btfss	3,2
  1545  05D8  2DDA               	goto	u1851
  1546  05D9  2DDB               	goto	u1850
  1547  05DA                     u1851:
  1548  05DA  2DED               	goto	l2043
  1549  05DB                     u1850:
  1550  05DB                     l2035:
  1551  05DB  0322               	decf	Config_USART@Freq,w
  1552  05DC  0423               	iorwf	Config_USART@Freq+1,w
  1553  05DD  1D03               	btfss	3,2
  1554  05DE  2DE0               	goto	u1861
  1555  05DF  2DE1               	goto	u1860
  1556  05E0                     u1861:
  1557  05E0  2DED               	goto	l2043
  1558  05E1                     u1860:
  1559  05E1                     l2037:
  1560                           
  1561                           ;USART.c: 35:         TXSTAbits.SYNC = 0;
  1562  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  1563  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  1564  05E3  1218               	bcf	24,4	;volatile
  1565                           
  1566                           ;USART.c: 36:         TXSTAbits.BRGH = 1;
  1567  05E4  1518               	bsf	24,2	;volatile
  1568                           
  1569                           ;USART.c: 38:         BAUDCTLbits.BRG16 = 1;
  1570  05E5  1683               	bsf	3,5	;RP0=1, select bank3
  1571  05E6  1703               	bsf	3,6	;RP1=1, select bank3
  1572  05E7  1587               	bsf	7,3	;volatile
  1573  05E8                     l2039:
  1574                           
  1575                           ;USART.c: 40:         SPBRG = 25;
  1576  05E8  3019               	movlw	25
  1577  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1578  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1579  05EB  0099               	movwf	25	;volatile
  1580  05EC                     l2041:
  1581                           
  1582                           ;USART.c: 41:         SPBRGH = 0;
  1583  05EC  019A               	clrf	26	;volatile
  1584  05ED                     l2043:
  1585                           
  1586                           ;USART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  1587  05ED  30B1               	movlw	177
  1588  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1589  05EF  0620               	xorwf	Config_USART@baud_rate,w
  1590  05F0  3028               	movlw	40
  1591  05F1  1903               	skipnz
  1592  05F2  0621               	xorwf	Config_USART@baud_rate+1,w
  1593  05F3  1D03               	btfss	3,2
  1594  05F4  2DF6               	goto	u1871
  1595  05F5  2DF7               	goto	u1870
  1596  05F6                     u1871:
  1597  05F6  2E0A               	goto	l2053
  1598  05F7                     u1870:
  1599  05F7                     l2045:
  1600  05F7  3004               	movlw	4
  1601  05F8  0622               	xorwf	Config_USART@Freq,w
  1602  05F9  0423               	iorwf	Config_USART@Freq+1,w
  1603  05FA  1D03               	btfss	3,2
  1604  05FB  2DFD               	goto	u1881
  1605  05FC  2DFE               	goto	u1880
  1606  05FD                     u1881:
  1607  05FD  2E0A               	goto	l2053
  1608  05FE                     u1880:
  1609  05FE                     l2047:
  1610                           
  1611                           ;USART.c: 45:         TXSTAbits.SYNC = 0;
  1612  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  1613  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0600  1218               	bcf	24,4	;volatile
  1615                           
  1616                           ;USART.c: 46:         TXSTAbits.BRGH = 1;
  1617  0601  1518               	bsf	24,2	;volatile
  1618                           
  1619                           ;USART.c: 48:         BAUDCTLbits.BRG16 = 1;
  1620  0602  1683               	bsf	3,5	;RP0=1, select bank3
  1621  0603  1703               	bsf	3,6	;RP1=1, select bank3
  1622  0604  1587               	bsf	7,3	;volatile
  1623  0605                     l2049:
  1624                           
  1625                           ;USART.c: 50:         SPBRG = 23;
  1626  0605  3017               	movlw	23
  1627  0606  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0607  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0608  0099               	movwf	25	;volatile
  1630  0609                     l2051:
  1631                           
  1632                           ;USART.c: 51:         SPBRGH = 0;
  1633  0609  019A               	clrf	26	;volatile
  1634  060A                     l2053:
  1635                           
  1636                           ;USART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  1637  060A  30B1               	movlw	177
  1638  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1639  060C  0620               	xorwf	Config_USART@baud_rate,w
  1640  060D  3028               	movlw	40
  1641  060E  1903               	skipnz
  1642  060F  0621               	xorwf	Config_USART@baud_rate+1,w
  1643  0610  1D03               	btfss	3,2
  1644  0611  2E13               	goto	u1891
  1645  0612  2E14               	goto	u1890
  1646  0613                     u1891:
  1647  0613  2E27               	goto	l2063
  1648  0614                     u1890:
  1649  0614                     l2055:
  1650  0614  3008               	movlw	8
  1651  0615  0622               	xorwf	Config_USART@Freq,w
  1652  0616  0423               	iorwf	Config_USART@Freq+1,w
  1653  0617  1D03               	btfss	3,2
  1654  0618  2E1A               	goto	u1901
  1655  0619  2E1B               	goto	u1900
  1656  061A                     u1901:
  1657  061A  2E27               	goto	l2063
  1658  061B                     u1900:
  1659  061B                     l2057:
  1660                           
  1661                           ;USART.c: 55:         TXSTAbits.SYNC = 0;
  1662  061B  1683               	bsf	3,5	;RP0=1, select bank1
  1663  061C  1303               	bcf	3,6	;RP1=0, select bank1
  1664  061D  1218               	bcf	24,4	;volatile
  1665                           
  1666                           ;USART.c: 56:         TXSTAbits.BRGH = 0;
  1667  061E  1118               	bcf	24,2	;volatile
  1668                           
  1669                           ;USART.c: 58:         BAUDCTLbits.BRG16 = 1;
  1670  061F  1683               	bsf	3,5	;RP0=1, select bank3
  1671  0620  1703               	bsf	3,6	;RP1=1, select bank3
  1672  0621  1587               	bsf	7,3	;volatile
  1673  0622                     l2059:
  1674                           
  1675                           ;USART.c: 60:         SPBRG = 47;
  1676  0622  302F               	movlw	47
  1677  0623  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0624  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0625  0099               	movwf	25	;volatile
  1680  0626                     l2061:
  1681                           
  1682                           ;USART.c: 61:         SPBRGH = 0;
  1683  0626  019A               	clrf	26	;volatile
  1684  0627                     l2063:
  1685                           
  1686                           ;USART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  1687  0627  30B1               	movlw	177
  1688  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0629  0620               	xorwf	Config_USART@baud_rate,w
  1690  062A  3028               	movlw	40
  1691  062B  1903               	skipnz
  1692  062C  0621               	xorwf	Config_USART@baud_rate+1,w
  1693  062D  1D03               	btfss	3,2
  1694  062E  2E30               	goto	u1911
  1695  062F  2E31               	goto	u1910
  1696  0630                     u1911:
  1697  0630  2E43               	goto	l2073
  1698  0631                     u1910:
  1699  0631                     l2065:
  1700  0631  0322               	decf	Config_USART@Freq,w
  1701  0632  0423               	iorwf	Config_USART@Freq+1,w
  1702  0633  1D03               	btfss	3,2
  1703  0634  2E36               	goto	u1921
  1704  0635  2E37               	goto	u1920
  1705  0636                     u1921:
  1706  0636  2E43               	goto	l2073
  1707  0637                     u1920:
  1708  0637                     l2067:
  1709                           
  1710                           ;USART.c: 65:         TXSTAbits.SYNC = 0;
  1711  0637  1683               	bsf	3,5	;RP0=1, select bank1
  1712  0638  1303               	bcf	3,6	;RP1=0, select bank1
  1713  0639  1218               	bcf	24,4	;volatile
  1714                           
  1715                           ;USART.c: 66:         TXSTAbits.BRGH = 0;
  1716  063A  1118               	bcf	24,2	;volatile
  1717                           
  1718                           ;USART.c: 68:         BAUDCTLbits.BRG16 = 1;
  1719  063B  1683               	bsf	3,5	;RP0=1, select bank3
  1720  063C  1703               	bsf	3,6	;RP1=1, select bank3
  1721  063D  1587               	bsf	7,3	;volatile
  1722  063E                     l2069:
  1723                           
  1724                           ;USART.c: 70:         SPBRG = 5;
  1725  063E  3005               	movlw	5
  1726  063F  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0640  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0641  0099               	movwf	25	;volatile
  1729  0642                     l2071:
  1730                           
  1731                           ;USART.c: 71:         SPBRGH = 0;
  1732  0642  019A               	clrf	26	;volatile
  1733  0643                     l2073:
  1734                           
  1735                           ;USART.c: 74:     RCSTAbits.SPEN = 1;
  1736  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0644  1798               	bsf	24,7	;volatile
  1738  0645                     l2075:
  1739                           
  1740                           ;USART.c: 75:     RCSTAbits.RX9 = 0;
  1741  0645  1318               	bcf	24,6	;volatile
  1742  0646                     l2077:
  1743                           
  1744                           ;USART.c: 76:     RCSTAbits.CREN = 1;
  1745  0646  1618               	bsf	24,4	;volatile
  1746  0647                     l2079:
  1747                           
  1748                           ;USART.c: 78:     TXSTAbits.TXEN = 1;
  1749  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1750  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1751  0649  1698               	bsf	24,5	;volatile
  1752  064A                     l235:
  1753  064A  0008               	return
  1754  064B                     __end_of_Config_USART:
  1755                           
  1756                           	psect	text4
  1757  0310                     __ptext4:	
  1758 ;; *************** function _set_cursor *****************
  1759 ;; Defined at:
  1760 ;;		line 71 in file "LCD.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  linea           1    wreg     unsigned char 
  1763 ;;  posicion        1    1[BANK0 ] unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  linea           1    4[BANK0 ] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       1       0       0       0
  1776 ;;      Locals:         0       1       0       0       0
  1777 ;;      Temps:          0       2       0       0       0
  1778 ;;      Totals:         0       4       0       0       0
  1779 ;;Total ram usage:        4 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 4
  1782 ;; This function calls:
  1783 ;;		_Escribir_comandoLCD
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _set_cursor
  1791  0310                     _set_cursor:
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1795                           ;set_cursor@linea stored from wreg
  1796  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0312  00A4               	movwf	set_cursor@linea
  1799  0313                     l2249:
  1800                           
  1801                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1802  0313  1287               	bcf	7,5	;volatile
  1803  0314  1208               	bcf	8,4	;volatile
  1804  0315                     l2251:
  1805                           
  1806                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1807  0315  0324               	decf	set_cursor@linea,w
  1808  0316  1D03               	btfss	3,2
  1809  0317  2B19               	goto	u2101
  1810  0318  2B1A               	goto	u2100
  1811  0319                     u2101:
  1812  0319  2B21               	goto	l2255
  1813  031A                     u2100:
  1814  031A                     l2253:
  1815  031A  3080               	movlw	128
  1816  031B  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  1817  0320  2B2D               	goto	l2259
  1818  0321                     l2255:
  1819  0321  3002               	movlw	2
  1820  0322  0624               	xorwf	set_cursor@linea,w
  1821  0323  1D03               	btfss	3,2
  1822  0324  2B26               	goto	u2111
  1823  0325  2B27               	goto	u2110
  1824  0326                     u2111:
  1825  0326  2B2D               	goto	l2259
  1826  0327                     u2110:
  1827  0327                     l2257:
  1828  0327  30C0               	movlw	192
  1829  0328  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  1830  032D                     l2259:
  1831                           
  1832                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1833  032D  3068               	movlw	104
  1834  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1835  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0330  00A3               	movwf	??_set_cursor+1
  1837  0331  30E3               	movlw	227
  1838  0332  00A2               	movwf	??_set_cursor
  1839  0333                     u2177:
  1840  0333  0BA2               	decfsz	??_set_cursor,f
  1841  0334  2B33               	goto	u2177
  1842  0335  0BA3               	decfsz	??_set_cursor+1,f
  1843  0336  2B33               	goto	u2177
  1844  0337  2B38               	nop2
  1845  0338                     l2261:
  1846                           
  1847                           ;LCD.c: 80:     if (posicion != 0){
  1848  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1850  033A  0821               	movf	set_cursor@posicion,w
  1851  033B  1903               	btfsc	3,2
  1852  033C  2B3E               	goto	u2121
  1853  033D  2B3F               	goto	u2120
  1854  033E                     u2121:
  1855  033E  2B5A               	goto	l182
  1856  033F                     u2120:
  1857  033F  2B4A               	goto	l2269
  1858  0340                     l2265:
  1859                           
  1860                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1861  0340  3014               	movlw	20
  1862  0341  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  1863  0346                     l2267:
  1864                           
  1865                           ;LCD.c: 83:             posicion--;
  1866  0346  3001               	movlw	1
  1867  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0349  02A1               	subwf	set_cursor@posicion,f
  1870  034A                     l2269:
  1871                           
  1872                           ;LCD.c: 81:         while(posicion > 0){
  1873  034A  0821               	movf	set_cursor@posicion,w
  1874  034B  1D03               	btfss	3,2
  1875  034C  2B4E               	goto	u2131
  1876  034D  2B4F               	goto	u2130
  1877  034E                     u2131:
  1878  034E  2B40               	goto	l2265
  1879  034F                     u2130:
  1880  034F                     l2271:
  1881                           
  1882                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1883  034F  3068               	movlw	104
  1884  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0352  00A3               	movwf	??_set_cursor+1
  1887  0353  30E3               	movlw	227
  1888  0354  00A2               	movwf	??_set_cursor
  1889  0355                     u2187:
  1890  0355  0BA2               	decfsz	??_set_cursor,f
  1891  0356  2B55               	goto	u2187
  1892  0357  0BA3               	decfsz	??_set_cursor+1,f
  1893  0358  2B55               	goto	u2187
  1894  0359  2B5A               	nop2
  1895  035A                     l182:
  1896  035A  0008               	return
  1897  035B                     __end_of_set_cursor:
  1898                           
  1899                           	psect	text5
  1900  0172                     __ptext5:	
  1901 ;; *************** function _dato_recibido *****************
  1902 ;; Defined at:
  1903 ;;		line 184 in file "LAB2.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       7       0       0       0
  1920 ;;      Totals:         0       7       0       0       0
  1921 ;;Total ram usage:        7 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 4
  1924 ;; This function calls:
  1925 ;;		_divisor1
  1926 ;;		_sprintf
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _dato_recibido
  1934  0172                     _dato_recibido:
  1935  0172                     l2285:	
  1936                           ;incstack = 0
  1937                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1938                           
  1939                           
  1940                           ;LAB2.c: 185:     divisor1(Cont_U, vol3);
  1941  0172  3069               	movlw	(low (_vol3| 0))& (0+255)
  1942  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0175  00BE               	movwf	??_dato_recibido
  1945  0176  083E               	movf	??_dato_recibido,w
  1946  0177  00A8               	movwf	divisor1@dig
  1947  0178  0848               	movf	_Cont_U,w
  1948  0179  120A  118A  235B  120A  118A  	fcall	_divisor1
  1949                           
  1950                           ;LAB2.c: 186:     sprintf(buffer3, "%d%d%d", vol3[2], vol3[1], vol3[0]);
  1951  017E  3031               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1952  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0181  00BE               	movwf	??_dato_recibido
  1955  0182  083E               	movf	??_dato_recibido,w
  1956  0183  00AD               	movwf	sprintf@f
  1957  0184  086B               	movf	_vol3+2,w
  1958  0185  00BF               	movwf	??_dato_recibido+1
  1959  0186  01C0               	clrf	??_dato_recibido+2
  1960  0187  083F               	movf	??_dato_recibido+1,w
  1961  0188  00AE               	movwf	?_sprintf+1
  1962  0189  0840               	movf	??_dato_recibido+2,w
  1963  018A  00AF               	movwf	?_sprintf+2
  1964  018B  086A               	movf	_vol3+1,w
  1965  018C  00C1               	movwf	??_dato_recibido+3
  1966  018D  01C2               	clrf	??_dato_recibido+4
  1967  018E  0841               	movf	??_dato_recibido+3,w
  1968  018F  00B0               	movwf	?_sprintf+3
  1969  0190  0842               	movf	??_dato_recibido+4,w
  1970  0191  00B1               	movwf	?_sprintf+4
  1971  0192  0869               	movf	_vol3,w
  1972  0193  00C3               	movwf	??_dato_recibido+5
  1973  0194  01C4               	clrf	??_dato_recibido+6
  1974  0195  0843               	movf	??_dato_recibido+5,w
  1975  0196  00B2               	movwf	?_sprintf+5
  1976  0197  0844               	movf	??_dato_recibido+6,w
  1977  0198  00B3               	movwf	?_sprintf+6
  1978  0199  304B               	movlw	(low (_buffer3| 0))& (0+255)
  1979  019A  120A  118A  2705  120A  118A  	fcall	_sprintf
  1980  019F                     l130:
  1981  019F  0008               	return
  1982  01A0                     __end_of_dato_recibido:
  1983                           
  1984                           	psect	text6
  1985  035B                     __ptext6:	
  1986 ;; *************** function _divisor1 *****************
  1987 ;; Defined at:
  1988 ;;		line 177 in file "LAB2.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  a               1    wreg     unsigned char 
  1991 ;;  dig             1    8[BANK0 ] PTR unsigned char 
  1992 ;;		 -> vol3(1), 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  a               1   13[BANK0 ] unsigned char 
  1995 ;;  i               2   14[BANK0 ] int 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       1       0       0       0
  2006 ;;      Locals:         0       3       0       0       0
  2007 ;;      Temps:          0       4       0       0       0
  2008 ;;      Totals:         0       8       0       0       0
  2009 ;;Total ram usage:        8 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 3
  2012 ;; This function calls:
  2013 ;;		___awdiv
  2014 ;;		___awmod
  2015 ;; This function is called by:
  2016 ;;		_dato_recibido
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _divisor1
  2022  035B                     _divisor1:
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _divisor1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2026                           ;divisor1@a stored from wreg
  2027  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2028  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2029  035D  00AD               	movwf	divisor1@a
  2030  035E                     l2157:
  2031                           
  2032                           ;LAB2.c: 178:     for(int i = 0; i<3 ; i++){
  2033  035E  01AE               	clrf	divisor1@i
  2034  035F  01AF               	clrf	divisor1@i+1
  2035  0360                     l2163:
  2036                           
  2037                           ;LAB2.c: 179:         dig[i] = a % 10;
  2038  0360  300A               	movlw	10
  2039  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0363  00A0               	movwf	___awmod@divisor
  2042  0364  3000               	movlw	0
  2043  0365  00A1               	movwf	___awmod@divisor+1
  2044  0366  082D               	movf	divisor1@a,w
  2045  0367  00A9               	movwf	??_divisor1
  2046  0368  01AA               	clrf	??_divisor1+1
  2047  0369  0829               	movf	??_divisor1,w
  2048  036A  00A2               	movwf	___awmod@dividend
  2049  036B  082A               	movf	??_divisor1+1,w
  2050  036C  00A3               	movwf	___awmod@dividend+1
  2051  036D  120A  118A  2403  120A  118A  	fcall	___awmod
  2052  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0374  0820               	movf	?___awmod,w
  2055  0375  00AB               	movwf	??_divisor1+2
  2056  0376  082E               	movf	divisor1@i,w
  2057  0377  0728               	addwf	divisor1@dig,w
  2058  0378  00AC               	movwf	??_divisor1+3
  2059  0379  082C               	movf	??_divisor1+3,w
  2060  037A  0084               	movwf	4
  2061  037B  082B               	movf	??_divisor1+2,w
  2062  037C  1383               	bcf	3,7	;select IRP bank0
  2063  037D  0080               	movwf	0
  2064                           
  2065                           ;LAB2.c: 180:         a = (a - dig[i])/10;
  2066  037E  300A               	movlw	10
  2067  037F  00A0               	movwf	___awdiv@divisor
  2068  0380  3000               	movlw	0
  2069  0381  00A1               	movwf	___awdiv@divisor+1
  2070  0382  082E               	movf	divisor1@i,w
  2071  0383  0728               	addwf	divisor1@dig,w
  2072  0384  00A9               	movwf	??_divisor1
  2073  0385  0829               	movf	??_divisor1,w
  2074  0386  0084               	movwf	4
  2075  0387  0800               	movf	0,w
  2076  0388  022D               	subwf	divisor1@a,w
  2077  0389  00A2               	movwf	___awdiv@dividend
  2078  038A  01A3               	clrf	___awdiv@dividend+1
  2079  038B  1C03               	skipc
  2080  038C  03A3               	decf	___awdiv@dividend+1,f
  2081  038D  120A  118A  24B9  120A  118A  	fcall	___awdiv
  2082  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0394  0820               	movf	?___awdiv,w
  2085  0395  00AA               	movwf	??_divisor1+1
  2086  0396  082A               	movf	??_divisor1+1,w
  2087  0397  00AD               	movwf	divisor1@a
  2088  0398                     l2165:
  2089                           
  2090                           ;LAB2.c: 181:     }
  2091  0398  3001               	movlw	1
  2092  0399  07AE               	addwf	divisor1@i,f
  2093  039A  1803               	skipnc
  2094  039B  0AAF               	incf	divisor1@i+1,f
  2095  039C  3000               	movlw	0
  2096  039D  07AF               	addwf	divisor1@i+1,f
  2097  039E                     l2167:
  2098  039E  082F               	movf	divisor1@i+1,w
  2099  039F  3A80               	xorlw	128
  2100  03A0  00FF               	movwf	btemp+1
  2101  03A1  3080               	movlw	128
  2102  03A2  027F               	subwf	btemp+1,w
  2103  03A3  1D03               	skipz
  2104  03A4  2BA7               	goto	u2015
  2105  03A5  3003               	movlw	3
  2106  03A6  022E               	subwf	divisor1@i,w
  2107  03A7                     u2015:
  2108  03A7  1C03               	skipc
  2109  03A8  2BAA               	goto	u2011
  2110  03A9  2BAB               	goto	u2010
  2111  03AA                     u2011:
  2112  03AA  2B60               	goto	l2163
  2113  03AB                     u2010:
  2114  03AB                     l127:
  2115  03AB  0008               	return
  2116  03AC                     __end_of_divisor1:
  2117                           
  2118                           	psect	text7
  2119  045E                     __ptext7:	
  2120 ;; *************** function _conversion_char *****************
  2121 ;; Defined at:
  2122 ;;		line 161 in file "LAB2.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0
  2138 ;;      Temps:          0       7       0       0       0
  2139 ;;      Totals:         0       7       0       0       0
  2140 ;;Total ram usage:        7 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 4
  2143 ;; This function calls:
  2144 ;;		_divisor
  2145 ;;		_sprintf
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _conversion_char
  2153  045E                     _conversion_char:
  2154  045E                     l2283:	
  2155                           ;incstack = 0
  2156                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2157                           
  2158                           
  2159                           ;LAB2.c: 162:     divisor(cont1, vol1);
  2160  045E  306B               	movlw	(low (_vol1| 0))& (0+255)
  2161  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0461  00BE               	movwf	??_conversion_char
  2164  0462  083E               	movf	??_conversion_char,w
  2165  0463  00A8               	movwf	divisor@dig
  2166  0464  084A               	movf	_cont1,w
  2167  0465  120A  118A  23AC  120A  118A  	fcall	_divisor
  2168                           
  2169                           ;LAB2.c: 163:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  2170  046A  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2171  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2172  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2173  046D  00BE               	movwf	??_conversion_char
  2174  046E  083E               	movf	??_conversion_char,w
  2175  046F  00AD               	movwf	sprintf@f
  2176  0470  086D               	movf	_vol1+2,w
  2177  0471  00BF               	movwf	??_conversion_char+1
  2178  0472  01C0               	clrf	??_conversion_char+2
  2179  0473  083F               	movf	??_conversion_char+1,w
  2180  0474  00AE               	movwf	?_sprintf+1
  2181  0475  0840               	movf	??_conversion_char+2,w
  2182  0476  00AF               	movwf	?_sprintf+2
  2183  0477  086C               	movf	_vol1+1,w
  2184  0478  00C1               	movwf	??_conversion_char+3
  2185  0479  01C2               	clrf	??_conversion_char+4
  2186  047A  0841               	movf	??_conversion_char+3,w
  2187  047B  00B0               	movwf	?_sprintf+3
  2188  047C  0842               	movf	??_conversion_char+4,w
  2189  047D  00B1               	movwf	?_sprintf+4
  2190  047E  086B               	movf	_vol1,w
  2191  047F  00C3               	movwf	??_conversion_char+5
  2192  0480  01C4               	clrf	??_conversion_char+6
  2193  0481  0843               	movf	??_conversion_char+5,w
  2194  0482  00B2               	movwf	?_sprintf+5
  2195  0483  0844               	movf	??_conversion_char+6,w
  2196  0484  00B3               	movwf	?_sprintf+6
  2197  0485  305F               	movlw	(low (_buffer1| 0))& (0+255)
  2198  0486  120A  118A  2705  120A  118A  	fcall	_sprintf
  2199                           
  2200                           ;LAB2.c: 165:     divisor(cont2, vol2);
  2201  048B  306A               	movlw	(low (_vol2| 0))& (0+255)
  2202  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2203  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2204  048E  00BE               	movwf	??_conversion_char
  2205  048F  083E               	movf	??_conversion_char,w
  2206  0490  00A8               	movwf	divisor@dig
  2207  0491  0849               	movf	_cont2,w
  2208  0492  120A  118A  23AC  120A  118A  	fcall	_divisor
  2209                           
  2210                           ;LAB2.c: 166:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  2211  0497  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2212  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2214  049A  00BE               	movwf	??_conversion_char
  2215  049B  083E               	movf	??_conversion_char,w
  2216  049C  00AD               	movwf	sprintf@f
  2217  049D  086C               	movf	_vol2+2,w
  2218  049E  00BF               	movwf	??_conversion_char+1
  2219  049F  01C0               	clrf	??_conversion_char+2
  2220  04A0  083F               	movf	??_conversion_char+1,w
  2221  04A1  00AE               	movwf	?_sprintf+1
  2222  04A2  0840               	movf	??_conversion_char+2,w
  2223  04A3  00AF               	movwf	?_sprintf+2
  2224  04A4  086B               	movf	_vol2+1,w
  2225  04A5  00C1               	movwf	??_conversion_char+3
  2226  04A6  01C2               	clrf	??_conversion_char+4
  2227  04A7  0841               	movf	??_conversion_char+3,w
  2228  04A8  00B0               	movwf	?_sprintf+3
  2229  04A9  0842               	movf	??_conversion_char+4,w
  2230  04AA  00B1               	movwf	?_sprintf+4
  2231  04AB  086A               	movf	_vol2,w
  2232  04AC  00C3               	movwf	??_conversion_char+5
  2233  04AD  01C4               	clrf	??_conversion_char+6
  2234  04AE  0843               	movf	??_conversion_char+5,w
  2235  04AF  00B2               	movwf	?_sprintf+5
  2236  04B0  0844               	movf	??_conversion_char+6,w
  2237  04B1  00B3               	movwf	?_sprintf+6
  2238  04B2  3055               	movlw	(low (_buffer2| 0))& (0+255)
  2239  04B3  120A  118A  2705  120A  118A  	fcall	_sprintf
  2240  04B8                     l117:
  2241  04B8  0008               	return
  2242  04B9                     __end_of_conversion_char:
  2243                           
  2244                           	psect	text8
  2245  0705                     __ptext8:	
  2246 ;; *************** function _sprintf *****************
  2247 ;; Defined at:
  2248 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  sp              1    wreg     PTR unsigned char 
  2251 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  2252 ;;  f               1   13[BANK0 ] PTR const unsigned char 
  2253 ;;		 -> STR_6(7), STR_5(8), STR_4(8), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  2256 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  2257 ;;  tmpval          4    0        struct .
  2258 ;;  val             2   26[BANK0 ] unsigned int 
  2259 ;;  cp              2    0        PTR const unsigned char 
  2260 ;;  len             2    0        unsigned int 
  2261 ;;  c               1   29[BANK0 ] unsigned char 
  2262 ;;  prec            1   25[BANK0 ] char 
  2263 ;;  flag            1   24[BANK0 ] unsigned char 
  2264 ;;  ap              1   23[BANK0 ] PTR void [1]
  2265 ;;		 -> ?_sprintf(2), 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   13[BANK0 ] int 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       7       0       0       0
  2276 ;;      Locals:         0       7       0       0       0
  2277 ;;      Temps:          0       3       0       0       0
  2278 ;;      Totals:         0      17       0       0       0
  2279 ;;Total ram usage:       17 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 3
  2282 ;; This function calls:
  2283 ;;		___lwdiv
  2284 ;;		___lwmod
  2285 ;; This function is called by:
  2286 ;;		_conversion_char
  2287 ;;		_dato_recibido
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _sprintf
  2293  0705                     _sprintf:
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2297                           ;sprintf@sp stored from wreg
  2298  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0706  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0707  00BC               	movwf	sprintf@sp
  2301  0708                     l2095:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2304  0708  302E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2305  0709  00B4               	movwf	??_sprintf
  2306  070A  0834               	movf	??_sprintf,w
  2307  070B  00B7               	movwf	sprintf@ap
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2310  070C  2FD8               	goto	l2147
  2311  070D                     l2097:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2314  070D  3025               	movlw	37
  2315  070E  063D               	xorwf	sprintf@c,w
  2316  070F  1903               	btfsc	3,2
  2317  0710  2F12               	goto	u1941
  2318  0711  2F13               	goto	u1940
  2319  0712                     u1941:
  2320  0712  2F1F               	goto	l2103
  2321  0713                     u1940:
  2322  0713                     l2099:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2325  0713  083D               	movf	sprintf@c,w
  2326  0714  00B4               	movwf	??_sprintf
  2327  0715  083C               	movf	sprintf@sp,w
  2328  0716  0084               	movwf	4
  2329  0717  0834               	movf	??_sprintf,w
  2330  0718  1383               	bcf	3,7	;select IRP bank0
  2331  0719  0080               	movwf	0
  2332  071A                     l2101:
  2333  071A  3001               	movlw	1
  2334  071B  00B4               	movwf	??_sprintf
  2335  071C  0834               	movf	??_sprintf,w
  2336  071D  07BC               	addwf	sprintf@sp,f
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2339  071E  2FD8               	goto	l2147
  2340  071F                     l2103:
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2343  071F  01B8               	clrf	sprintf@flag
  2344  0720                     l2107:	
  2345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2346                           
  2347  0720  3001               	movlw	1
  2348  0721  07AD               	addwf	sprintf@f,f
  2349  0722  30FF               	movlw	-1
  2350  0723  072D               	addwf	sprintf@f,w
  2351  0724  0084               	movwf	4
  2352  0725  120A  118A  2019  120A  118A  	fcall	stringdir
  2353  072A  00BD               	movwf	sprintf@c
  2354  072B  00B4               	movwf	??_sprintf
  2355  072C  01B5               	clrf	??_sprintf+1
  2356                           
  2357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2358                           ; Switch size 1, requested type "simple"
  2359                           ; Number of cases is 1, Range of values is 0 to 0
  2360                           ; switch strategies available:
  2361                           ; Name         Instructions Cycles
  2362                           ; simple_byte            4     3 (average)
  2363                           ; direct_byte           11     8 (fixed)
  2364                           ; jumptable            260     6 (fixed)
  2365                           ;	Chosen strategy is simple_byte
  2366  072D  0835               	movf	??_sprintf+1,w
  2367  072E  3A00               	xorlw	0	; case 0
  2368  072F  1903               	skipnz
  2369  0730  2F32               	goto	l2341
  2370  0731  2FD8               	goto	l2147
  2371  0732                     l2341:
  2372                           
  2373                           ; Switch size 1, requested type "simple"
  2374                           ; Number of cases is 3, Range of values is 0 to 105
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte           10     6 (average)
  2378                           ; jumptable            260     6 (fixed)
  2379                           ;	Chosen strategy is simple_byte
  2380  0732  0834               	movf	??_sprintf,w
  2381  0733  3A00               	xorlw	0	; case 0
  2382  0734  1903               	skipnz
  2383  0735  2FEA               	goto	l2149
  2384  0736  3A64               	xorlw	100	; case 100
  2385  0737  1903               	skipnz
  2386  0738  2F3D               	goto	l2109
  2387  0739  3A0D               	xorlw	13	; case 105
  2388  073A  1903               	skipnz
  2389  073B  2F3D               	goto	l2109
  2390  073C  2FD8               	goto	l2147
  2391  073D                     l2109:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2394  073D  0837               	movf	sprintf@ap,w
  2395  073E  0084               	movwf	4
  2396  073F  1383               	bcf	3,7	;select IRP bank0
  2397  0740  0800               	movf	0,w
  2398  0741  00BA               	movwf	sprintf@val
  2399  0742  0A84               	incf	4,f
  2400  0743  0800               	movf	0,w
  2401  0744  00BB               	movwf	sprintf@val+1
  2402  0745                     l2111:
  2403  0745  3002               	movlw	2
  2404  0746  00B4               	movwf	??_sprintf
  2405  0747  0834               	movf	??_sprintf,w
  2406  0748  07B7               	addwf	sprintf@ap,f
  2407  0749                     l2113:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2410  0749  1FBB               	btfss	sprintf@val+1,7
  2411  074A  2F4C               	goto	u1951
  2412  074B  2F4D               	goto	u1950
  2413  074C                     u1951:
  2414  074C  2F56               	goto	l2119
  2415  074D                     u1950:
  2416  074D                     l2115:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2419  074D  3003               	movlw	3
  2420  074E  00B4               	movwf	??_sprintf
  2421  074F  0834               	movf	??_sprintf,w
  2422  0750  04B8               	iorwf	sprintf@flag,f
  2423  0751                     l2117:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2426  0751  09BA               	comf	sprintf@val,f
  2427  0752  09BB               	comf	sprintf@val+1,f
  2428  0753  0ABA               	incf	sprintf@val,f
  2429  0754  1903               	skipnz
  2430  0755  0ABB               	incf	sprintf@val+1,f
  2431  0756                     l2119:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2434  0756  01BD               	clrf	sprintf@c
  2435  0757  0ABD               	incf	sprintf@c,f
  2436  0758                     l2125:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2439  0758  083D               	movf	sprintf@c,w
  2440  0759  00B4               	movwf	??_sprintf
  2441  075A  0734               	addwf	??_sprintf,w
  2442  075B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2443  075C  0084               	movwf	4
  2444  075D  120A  118A  2019  120A  118A  	fcall	stringdir
  2445  0762  00B5               	movwf	??_sprintf+1
  2446  0763  120A  118A  2019  120A  118A  	fcall	stringdir
  2447  0768  00B6               	movwf	??_sprintf+2
  2448  0769  0836               	movf	??_sprintf+2,w
  2449  076A  023B               	subwf	sprintf@val+1,w
  2450  076B  1D03               	skipz
  2451  076C  2F6F               	goto	u1965
  2452  076D  0835               	movf	??_sprintf+1,w
  2453  076E  023A               	subwf	sprintf@val,w
  2454  076F                     u1965:
  2455  076F  1803               	skipnc
  2456  0770  2F72               	goto	u1961
  2457  0771  2F73               	goto	u1960
  2458  0772                     u1961:
  2459  0772  2F74               	goto	l2129
  2460  0773                     u1960:
  2461  0773  2F7E               	goto	l2131
  2462  0774                     l2129:
  2463  0774  3001               	movlw	1
  2464  0775  00B4               	movwf	??_sprintf
  2465  0776  0834               	movf	??_sprintf,w
  2466  0777  07BD               	addwf	sprintf@c,f
  2467  0778  3005               	movlw	5
  2468  0779  063D               	xorwf	sprintf@c,w
  2469  077A  1D03               	btfss	3,2
  2470  077B  2F7D               	goto	u1971
  2471  077C  2F7E               	goto	u1970
  2472  077D                     u1971:
  2473  077D  2F58               	goto	l2125
  2474  077E                     u1970:
  2475  077E                     l2131:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2478  077E  0838               	movf	sprintf@flag,w
  2479  077F  3903               	andlw	3
  2480  0780  1903               	btfsc	3,2
  2481  0781  2F83               	goto	u1981
  2482  0782  2F84               	goto	u1980
  2483  0783                     u1981:
  2484  0783  2F8F               	goto	l2137
  2485  0784                     u1980:
  2486  0784                     l2133:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2489  0784  302D               	movlw	45
  2490  0785  00B4               	movwf	??_sprintf
  2491  0786  083C               	movf	sprintf@sp,w
  2492  0787  0084               	movwf	4
  2493  0788  0834               	movf	??_sprintf,w
  2494  0789  1383               	bcf	3,7	;select IRP bank0
  2495  078A  0080               	movwf	0
  2496  078B                     l2135:
  2497  078B  3001               	movlw	1
  2498  078C  00B4               	movwf	??_sprintf
  2499  078D  0834               	movf	??_sprintf,w
  2500  078E  07BC               	addwf	sprintf@sp,f
  2501  078F                     l2137:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2504  078F  083D               	movf	sprintf@c,w
  2505  0790  00B4               	movwf	??_sprintf
  2506  0791  0834               	movf	??_sprintf,w
  2507  0792  00B9               	movwf	sprintf@prec
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2510  0793  2FCF               	goto	l2145
  2511  0794                     l2139:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2514  0794  300A               	movlw	10
  2515  0795  00A7               	movwf	___lwmod@divisor
  2516  0796  3000               	movlw	0
  2517  0797  00A8               	movwf	___lwmod@divisor+1
  2518  0798  0839               	movf	sprintf@prec,w
  2519  0799  00B4               	movwf	??_sprintf
  2520  079A  0734               	addwf	??_sprintf,w
  2521  079B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2522  079C  0084               	movwf	4
  2523  079D  120A  118A  2019  120A  118A  	fcall	stringdir
  2524  07A2  00A0               	movwf	___lwdiv@divisor
  2525  07A3  120A  118A  2019  120A  118A  	fcall	stringdir
  2526  07A8  00A1               	movwf	___lwdiv@divisor+1
  2527  07A9  083B               	movf	sprintf@val+1,w
  2528  07AA  00A3               	movwf	___lwdiv@dividend+1
  2529  07AB  083A               	movf	sprintf@val,w
  2530  07AC  00A2               	movwf	___lwdiv@dividend
  2531  07AD  120A  118A  22CA  120A  118A  	fcall	___lwdiv
  2532  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2533  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2534  07B4  0821               	movf	?___lwdiv+1,w
  2535  07B5  00AA               	movwf	___lwmod@dividend+1
  2536  07B6  0820               	movf	?___lwdiv,w
  2537  07B7  00A9               	movwf	___lwmod@dividend
  2538  07B8  120A  118A  220A  120A  118A  	fcall	___lwmod
  2539  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2540  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2541  07BF  0827               	movf	?___lwmod,w
  2542  07C0  3E30               	addlw	48
  2543  07C1  00B5               	movwf	??_sprintf+1
  2544  07C2  0835               	movf	??_sprintf+1,w
  2545  07C3  00BD               	movwf	sprintf@c
  2546  07C4                     l2141:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2549  07C4  083D               	movf	sprintf@c,w
  2550  07C5  00B4               	movwf	??_sprintf
  2551  07C6  083C               	movf	sprintf@sp,w
  2552  07C7  0084               	movwf	4
  2553  07C8  0834               	movf	??_sprintf,w
  2554  07C9  1383               	bcf	3,7	;select IRP bank0
  2555  07CA  0080               	movwf	0
  2556  07CB                     l2143:
  2557  07CB  3001               	movlw	1
  2558  07CC  00B4               	movwf	??_sprintf
  2559  07CD  0834               	movf	??_sprintf,w
  2560  07CE  07BC               	addwf	sprintf@sp,f
  2561  07CF                     l2145:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2564  07CF  30FF               	movlw	255
  2565  07D0  00B4               	movwf	??_sprintf
  2566  07D1  0834               	movf	??_sprintf,w
  2567  07D2  07B9               	addwf	sprintf@prec,f
  2568  07D3  0A39               	incf	sprintf@prec,w
  2569  07D4  1D03               	btfss	3,2
  2570  07D5  2FD7               	goto	u1991
  2571  07D6  2FD8               	goto	u1990
  2572  07D7                     u1991:
  2573  07D7  2F94               	goto	l2139
  2574  07D8                     u1990:
  2575  07D8                     l2147:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2578  07D8  3001               	movlw	1
  2579  07D9  07AD               	addwf	sprintf@f,f
  2580  07DA  30FF               	movlw	-1
  2581  07DB  072D               	addwf	sprintf@f,w
  2582  07DC  0084               	movwf	4
  2583  07DD  120A  118A  2019  120A  118A  	fcall	stringdir
  2584  07E2  00B4               	movwf	??_sprintf
  2585  07E3  0834               	movf	??_sprintf,w
  2586  07E4  00BD               	movwf	sprintf@c
  2587  07E5  083D               	movf	sprintf@c,w
  2588  07E6  1D03               	btfss	3,2
  2589  07E7  2FE9               	goto	u2001
  2590  07E8  2FEA               	goto	u2000
  2591  07E9                     u2001:
  2592  07E9  2F0D               	goto	l2097
  2593  07EA                     u2000:
  2594  07EA                     l2149:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2597  07EA  083C               	movf	sprintf@sp,w
  2598  07EB  0084               	movwf	4
  2599  07EC  1383               	bcf	3,7	;select IRP bank0
  2600  07ED  0180               	clrf	0
  2601  07EE                     l345:
  2602  07EE  0008               	return
  2603  07EF                     __end_of_sprintf:
  2604                           
  2605                           	psect	text9
  2606  020A                     __ptext9:	
  2607 ;; *************** function ___lwmod *****************
  2608 ;; Defined at:
  2609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  divisor         2    7[BANK0 ] unsigned int 
  2612 ;;  dividend        2    9[BANK0 ] unsigned int 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  counter         1   12[BANK0 ] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2    7[BANK0 ] unsigned int 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       4       0       0       0
  2625 ;;      Locals:         0       1       0       0       0
  2626 ;;      Temps:          0       1       0       0       0
  2627 ;;      Totals:         0       6       0       0       0
  2628 ;;Total ram usage:        6 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 2
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_sprintf
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function ___lwmod
  2640  020A                     ___lwmod:
  2641  020A                     l1487:	
  2642                           ;incstack = 0
  2643                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2644                           
  2645  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2646  020B  1303               	bcf	3,6	;RP1=0, select bank0
  2647  020C  0827               	movf	___lwmod@divisor,w
  2648  020D  0428               	iorwf	___lwmod@divisor+1,w
  2649  020E  1903               	btfsc	3,2
  2650  020F  2A11               	goto	u1041
  2651  0210  2A12               	goto	u1040
  2652  0211                     u1041:
  2653  0211  2A41               	goto	l1505
  2654  0212                     u1040:
  2655  0212                     l1489:
  2656  0212  01AC               	clrf	___lwmod@counter
  2657  0213  0AAC               	incf	___lwmod@counter,f
  2658  0214  2A20               	goto	l1495
  2659  0215                     l1491:
  2660  0215  3001               	movlw	1
  2661  0216                     u1055:
  2662  0216  1003               	clrc
  2663  0217  0DA7               	rlf	___lwmod@divisor,f
  2664  0218  0DA8               	rlf	___lwmod@divisor+1,f
  2665  0219  3EFF               	addlw	-1
  2666  021A  1D03               	skipz
  2667  021B  2A16               	goto	u1055
  2668  021C                     l1493:
  2669  021C  3001               	movlw	1
  2670  021D  00AB               	movwf	??___lwmod
  2671  021E  082B               	movf	??___lwmod,w
  2672  021F  07AC               	addwf	___lwmod@counter,f
  2673  0220                     l1495:
  2674  0220  1FA8               	btfss	___lwmod@divisor+1,7
  2675  0221  2A23               	goto	u1061
  2676  0222  2A24               	goto	u1060
  2677  0223                     u1061:
  2678  0223  2A15               	goto	l1491
  2679  0224                     u1060:
  2680  0224                     l1497:
  2681  0224  0828               	movf	___lwmod@divisor+1,w
  2682  0225  022A               	subwf	___lwmod@dividend+1,w
  2683  0226  1D03               	skipz
  2684  0227  2A2A               	goto	u1075
  2685  0228  0827               	movf	___lwmod@divisor,w
  2686  0229  0229               	subwf	___lwmod@dividend,w
  2687  022A                     u1075:
  2688  022A  1C03               	skipc
  2689  022B  2A2D               	goto	u1071
  2690  022C  2A2E               	goto	u1070
  2691  022D                     u1071:
  2692  022D  2A34               	goto	l1501
  2693  022E                     u1070:
  2694  022E                     l1499:
  2695  022E  0827               	movf	___lwmod@divisor,w
  2696  022F  02A9               	subwf	___lwmod@dividend,f
  2697  0230  0828               	movf	___lwmod@divisor+1,w
  2698  0231  1C03               	skipc
  2699  0232  03AA               	decf	___lwmod@dividend+1,f
  2700  0233  02AA               	subwf	___lwmod@dividend+1,f
  2701  0234                     l1501:
  2702  0234  3001               	movlw	1
  2703  0235                     u1085:
  2704  0235  1003               	clrc
  2705  0236  0CA8               	rrf	___lwmod@divisor+1,f
  2706  0237  0CA7               	rrf	___lwmod@divisor,f
  2707  0238  3EFF               	addlw	-1
  2708  0239  1D03               	skipz
  2709  023A  2A35               	goto	u1085
  2710  023B                     l1503:
  2711  023B  3001               	movlw	1
  2712  023C  02AC               	subwf	___lwmod@counter,f
  2713  023D  1D03               	btfss	3,2
  2714  023E  2A40               	goto	u1091
  2715  023F  2A41               	goto	u1090
  2716  0240                     u1091:
  2717  0240  2A24               	goto	l1497
  2718  0241                     u1090:
  2719  0241                     l1505:
  2720  0241  082A               	movf	___lwmod@dividend+1,w
  2721  0242  00A8               	movwf	?___lwmod+1
  2722  0243  0829               	movf	___lwmod@dividend,w
  2723  0244  00A7               	movwf	?___lwmod
  2724  0245                     l631:
  2725  0245  0008               	return
  2726  0246                     __end_of___lwmod:
  2727                           
  2728                           	psect	text10
  2729  02CA                     __ptext10:	
  2730 ;; *************** function ___lwdiv *****************
  2731 ;; Defined at:
  2732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  divisor         2    0[BANK0 ] unsigned int 
  2735 ;;  dividend        2    2[BANK0 ] unsigned int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  quotient        2    5[BANK0 ] unsigned int 
  2738 ;;  counter         1    4[BANK0 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2    0[BANK0 ] unsigned int 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         0       4       0       0       0
  2749 ;;      Locals:         0       3       0       0       0
  2750 ;;      Temps:          1       0       0       0       0
  2751 ;;      Totals:         1       7       0       0       0
  2752 ;;Total ram usage:        8 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 2
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_sprintf
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function ___lwdiv
  2764  02CA                     ___lwdiv:
  2765  02CA                     l1979:	
  2766                           ;incstack = 0
  2767                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2768                           
  2769  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2770  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2771  02CC  01A5               	clrf	___lwdiv@quotient
  2772  02CD  01A6               	clrf	___lwdiv@quotient+1
  2773  02CE                     l1981:
  2774  02CE  0820               	movf	___lwdiv@divisor,w
  2775  02CF  0421               	iorwf	___lwdiv@divisor+1,w
  2776  02D0  1903               	btfsc	3,2
  2777  02D1  2AD3               	goto	u1741
  2778  02D2  2AD4               	goto	u1740
  2779  02D3                     u1741:
  2780  02D3  2B0B               	goto	l2001
  2781  02D4                     u1740:
  2782  02D4                     l1983:
  2783  02D4  01A4               	clrf	___lwdiv@counter
  2784  02D5  0AA4               	incf	___lwdiv@counter,f
  2785  02D6  2AE2               	goto	l1989
  2786  02D7                     l1985:
  2787  02D7  3001               	movlw	1
  2788  02D8                     u1755:
  2789  02D8  1003               	clrc
  2790  02D9  0DA0               	rlf	___lwdiv@divisor,f
  2791  02DA  0DA1               	rlf	___lwdiv@divisor+1,f
  2792  02DB  3EFF               	addlw	-1
  2793  02DC  1D03               	skipz
  2794  02DD  2AD8               	goto	u1755
  2795  02DE                     l1987:
  2796  02DE  3001               	movlw	1
  2797  02DF  00F5               	movwf	??___lwdiv
  2798  02E0  0875               	movf	??___lwdiv,w
  2799  02E1  07A4               	addwf	___lwdiv@counter,f
  2800  02E2                     l1989:
  2801  02E2  1FA1               	btfss	___lwdiv@divisor+1,7
  2802  02E3  2AE5               	goto	u1761
  2803  02E4  2AE6               	goto	u1760
  2804  02E5                     u1761:
  2805  02E5  2AD7               	goto	l1985
  2806  02E6                     u1760:
  2807  02E6                     l1991:
  2808  02E6  3001               	movlw	1
  2809  02E7                     u1775:
  2810  02E7  1003               	clrc
  2811  02E8  0DA5               	rlf	___lwdiv@quotient,f
  2812  02E9  0DA6               	rlf	___lwdiv@quotient+1,f
  2813  02EA  3EFF               	addlw	-1
  2814  02EB  1D03               	skipz
  2815  02EC  2AE7               	goto	u1775
  2816  02ED  0821               	movf	___lwdiv@divisor+1,w
  2817  02EE  0223               	subwf	___lwdiv@dividend+1,w
  2818  02EF  1D03               	skipz
  2819  02F0  2AF3               	goto	u1785
  2820  02F1  0820               	movf	___lwdiv@divisor,w
  2821  02F2  0222               	subwf	___lwdiv@dividend,w
  2822  02F3                     u1785:
  2823  02F3  1C03               	skipc
  2824  02F4  2AF6               	goto	u1781
  2825  02F5  2AF7               	goto	u1780
  2826  02F6                     u1781:
  2827  02F6  2AFE               	goto	l1997
  2828  02F7                     u1780:
  2829  02F7                     l1993:
  2830  02F7  0820               	movf	___lwdiv@divisor,w
  2831  02F8  02A2               	subwf	___lwdiv@dividend,f
  2832  02F9  0821               	movf	___lwdiv@divisor+1,w
  2833  02FA  1C03               	skipc
  2834  02FB  03A3               	decf	___lwdiv@dividend+1,f
  2835  02FC  02A3               	subwf	___lwdiv@dividend+1,f
  2836  02FD                     l1995:
  2837  02FD  1425               	bsf	___lwdiv@quotient,0
  2838  02FE                     l1997:
  2839  02FE  3001               	movlw	1
  2840  02FF                     u1795:
  2841  02FF  1003               	clrc
  2842  0300  0CA1               	rrf	___lwdiv@divisor+1,f
  2843  0301  0CA0               	rrf	___lwdiv@divisor,f
  2844  0302  3EFF               	addlw	-1
  2845  0303  1D03               	skipz
  2846  0304  2AFF               	goto	u1795
  2847  0305                     l1999:
  2848  0305  3001               	movlw	1
  2849  0306  02A4               	subwf	___lwdiv@counter,f
  2850  0307  1D03               	btfss	3,2
  2851  0308  2B0A               	goto	u1801
  2852  0309  2B0B               	goto	u1800
  2853  030A                     u1801:
  2854  030A  2AE6               	goto	l1991
  2855  030B                     u1800:
  2856  030B                     l2001:
  2857  030B  0826               	movf	___lwdiv@quotient+1,w
  2858  030C  00A1               	movwf	?___lwdiv+1
  2859  030D  0825               	movf	___lwdiv@quotient,w
  2860  030E  00A0               	movwf	?___lwdiv
  2861  030F                     l621:
  2862  030F  0008               	return
  2863  0310                     __end_of___lwdiv:
  2864                           
  2865                           	psect	text11
  2866  03AC                     __ptext11:	
  2867 ;; *************** function _divisor *****************
  2868 ;; Defined at:
  2869 ;;		line 169 in file "LAB2.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  a               1    wreg     unsigned char 
  2872 ;;  dig             1    8[BANK0 ] PTR unsigned char 
  2873 ;;		 -> vol2(1), vol1(1), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  a               1   11[BANK0 ] unsigned char 
  2876 ;;  i               2   14[BANK0 ] int 
  2877 ;;  b               2   12[BANK0 ] int 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       1       0       0       0
  2888 ;;      Locals:         0       5       0       0       0
  2889 ;;      Temps:          0       2       0       0       0
  2890 ;;      Totals:         0       8       0       0       0
  2891 ;;Total ram usage:        8 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 3
  2894 ;; This function calls:
  2895 ;;		___awdiv
  2896 ;;		___awmod
  2897 ;; This function is called by:
  2898 ;;		_conversion_char
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           
  2903                           ;psect for function _divisor
  2904  03AC                     _divisor:
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2908                           ;divisor@a stored from wreg
  2909  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2910  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2911  03AE  00AB               	movwf	divisor@a
  2912  03AF                     l2081:
  2913                           
  2914                           ;LAB2.c: 170:     int b = 2*a;
  2915  03AF  082B               	movf	divisor@a,w
  2916  03B0  00A9               	movwf	??_divisor
  2917  03B1  01AA               	clrf	??_divisor+1
  2918  03B2  1003               	clrc
  2919  03B3  0D29               	rlf	??_divisor,w
  2920  03B4  00AC               	movwf	divisor@b
  2921  03B5  0D2A               	rlf	??_divisor+1,w
  2922  03B6  00AD               	movwf	divisor@b+1
  2923  03B7                     l2083:
  2924                           
  2925                           ;LAB2.c: 171:     for(int i = 0; i<3 ; i++){
  2926  03B7  01AE               	clrf	divisor@i
  2927  03B8  01AF               	clrf	divisor@i+1
  2928  03B9                     l2089:
  2929                           
  2930                           ;LAB2.c: 172:         dig[i] = b % 10;
  2931  03B9  300A               	movlw	10
  2932  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2933  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2934  03BC  00A0               	movwf	___awmod@divisor
  2935  03BD  3000               	movlw	0
  2936  03BE  00A1               	movwf	___awmod@divisor+1
  2937  03BF  082D               	movf	divisor@b+1,w
  2938  03C0  00A3               	movwf	___awmod@dividend+1
  2939  03C1  082C               	movf	divisor@b,w
  2940  03C2  00A2               	movwf	___awmod@dividend
  2941  03C3  120A  118A  2403  120A  118A  	fcall	___awmod
  2942  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2943  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2944  03CA  0820               	movf	?___awmod,w
  2945  03CB  00A9               	movwf	??_divisor
  2946  03CC  082E               	movf	divisor@i,w
  2947  03CD  0728               	addwf	divisor@dig,w
  2948  03CE  00AA               	movwf	??_divisor+1
  2949  03CF  082A               	movf	??_divisor+1,w
  2950  03D0  0084               	movwf	4
  2951  03D1  0829               	movf	??_divisor,w
  2952  03D2  1383               	bcf	3,7	;select IRP bank0
  2953  03D3  0080               	movwf	0
  2954                           
  2955                           ;LAB2.c: 173:         b = (b - dig[i])/10;
  2956  03D4  300A               	movlw	10
  2957  03D5  00A0               	movwf	___awdiv@divisor
  2958  03D6  3000               	movlw	0
  2959  03D7  00A1               	movwf	___awdiv@divisor+1
  2960  03D8  082E               	movf	divisor@i,w
  2961  03D9  0728               	addwf	divisor@dig,w
  2962  03DA  00A9               	movwf	??_divisor
  2963  03DB  0829               	movf	??_divisor,w
  2964  03DC  0084               	movwf	4
  2965  03DD  0800               	movf	0,w
  2966  03DE  022C               	subwf	divisor@b,w
  2967  03DF  00A2               	movwf	___awdiv@dividend
  2968  03E0  082D               	movf	divisor@b+1,w
  2969  03E1  1C03               	skipc
  2970  03E2  032D               	decf	divisor@b+1,w
  2971  03E3  00A3               	movwf	___awdiv@dividend+1
  2972  03E4  120A  118A  24B9  120A  118A  	fcall	___awdiv
  2973  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2974  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2975  03EB  0821               	movf	?___awdiv+1,w
  2976  03EC  00AD               	movwf	divisor@b+1
  2977  03ED  0820               	movf	?___awdiv,w
  2978  03EE  00AC               	movwf	divisor@b
  2979  03EF                     l2091:
  2980                           
  2981                           ;LAB2.c: 174:     }
  2982  03EF  3001               	movlw	1
  2983  03F0  07AE               	addwf	divisor@i,f
  2984  03F1  1803               	skipnc
  2985  03F2  0AAF               	incf	divisor@i+1,f
  2986  03F3  3000               	movlw	0
  2987  03F4  07AF               	addwf	divisor@i+1,f
  2988  03F5                     l2093:
  2989  03F5  082F               	movf	divisor@i+1,w
  2990  03F6  3A80               	xorlw	128
  2991  03F7  00FF               	movwf	btemp+1
  2992  03F8  3080               	movlw	128
  2993  03F9  027F               	subwf	btemp+1,w
  2994  03FA  1D03               	skipz
  2995  03FB  2BFE               	goto	u1935
  2996  03FC  3003               	movlw	3
  2997  03FD  022E               	subwf	divisor@i,w
  2998  03FE                     u1935:
  2999  03FE  1C03               	skipc
  3000  03FF  2C01               	goto	u1931
  3001  0400  2C02               	goto	u1930
  3002  0401                     u1931:
  3003  0401  2BB9               	goto	l2089
  3004  0402                     u1930:
  3005  0402                     l122:
  3006  0402  0008               	return
  3007  0403                     __end_of_divisor:
  3008                           
  3009                           	psect	text12
  3010  0403                     __ptext12:	
  3011 ;; *************** function ___awmod *****************
  3012 ;; Defined at:
  3013 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  divisor         2    0[BANK0 ] int 
  3016 ;;  dividend        2    2[BANK0 ] int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  sign            1    5[BANK0 ] unsigned char 
  3019 ;;  counter         1    4[BANK0 ] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  2    0[BANK0 ] int 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         0       4       0       0       0
  3030 ;;      Locals:         0       2       0       0       0
  3031 ;;      Temps:          1       0       0       0       0
  3032 ;;      Totals:         1       6       0       0       0
  3033 ;;Total ram usage:        7 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 2
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_divisor
  3040 ;;		_divisor1
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function ___awmod
  3046  0403                     ___awmod:
  3047  0403                     l1941:	
  3048                           ;incstack = 0
  3049                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3050                           
  3051  0403  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0404  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0405  01A5               	clrf	___awmod@sign
  3054  0406                     l1943:
  3055  0406  1FA3               	btfss	___awmod@dividend+1,7
  3056  0407  2C09               	goto	u1651
  3057  0408  2C0A               	goto	u1650
  3058  0409                     u1651:
  3059  0409  2C11               	goto	l1949
  3060  040A                     u1650:
  3061  040A                     l1945:
  3062  040A  09A2               	comf	___awmod@dividend,f
  3063  040B  09A3               	comf	___awmod@dividend+1,f
  3064  040C  0AA2               	incf	___awmod@dividend,f
  3065  040D  1903               	skipnz
  3066  040E  0AA3               	incf	___awmod@dividend+1,f
  3067  040F                     l1947:
  3068  040F  01A5               	clrf	___awmod@sign
  3069  0410  0AA5               	incf	___awmod@sign,f
  3070  0411                     l1949:
  3071  0411  1FA1               	btfss	___awmod@divisor+1,7
  3072  0412  2C14               	goto	u1661
  3073  0413  2C15               	goto	u1660
  3074  0414                     u1661:
  3075  0414  2C1A               	goto	l1953
  3076  0415                     u1660:
  3077  0415                     l1951:
  3078  0415  09A0               	comf	___awmod@divisor,f
  3079  0416  09A1               	comf	___awmod@divisor+1,f
  3080  0417  0AA0               	incf	___awmod@divisor,f
  3081  0418  1903               	skipnz
  3082  0419  0AA1               	incf	___awmod@divisor+1,f
  3083  041A                     l1953:
  3084  041A  0820               	movf	___awmod@divisor,w
  3085  041B  0421               	iorwf	___awmod@divisor+1,w
  3086  041C  1903               	btfsc	3,2
  3087  041D  2C1F               	goto	u1671
  3088  041E  2C20               	goto	u1670
  3089  041F                     u1671:
  3090  041F  2C4F               	goto	l1971
  3091  0420                     u1670:
  3092  0420                     l1955:
  3093  0420  01A4               	clrf	___awmod@counter
  3094  0421  0AA4               	incf	___awmod@counter,f
  3095  0422  2C2E               	goto	l1961
  3096  0423                     l1957:
  3097  0423  3001               	movlw	1
  3098  0424                     u1685:
  3099  0424  1003               	clrc
  3100  0425  0DA0               	rlf	___awmod@divisor,f
  3101  0426  0DA1               	rlf	___awmod@divisor+1,f
  3102  0427  3EFF               	addlw	-1
  3103  0428  1D03               	skipz
  3104  0429  2C24               	goto	u1685
  3105  042A                     l1959:
  3106  042A  3001               	movlw	1
  3107  042B  00F5               	movwf	??___awmod
  3108  042C  0875               	movf	??___awmod,w
  3109  042D  07A4               	addwf	___awmod@counter,f
  3110  042E                     l1961:
  3111  042E  1FA1               	btfss	___awmod@divisor+1,7
  3112  042F  2C31               	goto	u1691
  3113  0430  2C32               	goto	u1690
  3114  0431                     u1691:
  3115  0431  2C23               	goto	l1957
  3116  0432                     u1690:
  3117  0432                     l1963:
  3118  0432  0821               	movf	___awmod@divisor+1,w
  3119  0433  0223               	subwf	___awmod@dividend+1,w
  3120  0434  1D03               	skipz
  3121  0435  2C38               	goto	u1705
  3122  0436  0820               	movf	___awmod@divisor,w
  3123  0437  0222               	subwf	___awmod@dividend,w
  3124  0438                     u1705:
  3125  0438  1C03               	skipc
  3126  0439  2C3B               	goto	u1701
  3127  043A  2C3C               	goto	u1700
  3128  043B                     u1701:
  3129  043B  2C42               	goto	l1967
  3130  043C                     u1700:
  3131  043C                     l1965:
  3132  043C  0820               	movf	___awmod@divisor,w
  3133  043D  02A2               	subwf	___awmod@dividend,f
  3134  043E  0821               	movf	___awmod@divisor+1,w
  3135  043F  1C03               	skipc
  3136  0440  03A3               	decf	___awmod@dividend+1,f
  3137  0441  02A3               	subwf	___awmod@dividend+1,f
  3138  0442                     l1967:
  3139  0442  3001               	movlw	1
  3140  0443                     u1715:
  3141  0443  1003               	clrc
  3142  0444  0CA1               	rrf	___awmod@divisor+1,f
  3143  0445  0CA0               	rrf	___awmod@divisor,f
  3144  0446  3EFF               	addlw	-1
  3145  0447  1D03               	skipz
  3146  0448  2C43               	goto	u1715
  3147  0449                     l1969:
  3148  0449  3001               	movlw	1
  3149  044A  02A4               	subwf	___awmod@counter,f
  3150  044B  1D03               	btfss	3,2
  3151  044C  2C4E               	goto	u1721
  3152  044D  2C4F               	goto	u1720
  3153  044E                     u1721:
  3154  044E  2C32               	goto	l1963
  3155  044F                     u1720:
  3156  044F                     l1971:
  3157  044F  0825               	movf	___awmod@sign,w
  3158  0450  1903               	btfsc	3,2
  3159  0451  2C53               	goto	u1731
  3160  0452  2C54               	goto	u1730
  3161  0453                     u1731:
  3162  0453  2C59               	goto	l1975
  3163  0454                     u1730:
  3164  0454                     l1973:
  3165  0454  09A2               	comf	___awmod@dividend,f
  3166  0455  09A3               	comf	___awmod@dividend+1,f
  3167  0456  0AA2               	incf	___awmod@dividend,f
  3168  0457  1903               	skipnz
  3169  0458  0AA3               	incf	___awmod@dividend+1,f
  3170  0459                     l1975:
  3171  0459  0823               	movf	___awmod@dividend+1,w
  3172  045A  00A1               	movwf	?___awmod+1
  3173  045B  0822               	movf	___awmod@dividend,w
  3174  045C  00A0               	movwf	?___awmod
  3175  045D                     l515:
  3176  045D  0008               	return
  3177  045E                     __end_of___awmod:
  3178                           
  3179                           	psect	text13
  3180  04B9                     __ptext13:	
  3181 ;; *************** function ___awdiv *****************
  3182 ;; Defined at:
  3183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  divisor         2    0[BANK0 ] int 
  3186 ;;  dividend        2    2[BANK0 ] int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  quotient        2    6[BANK0 ] int 
  3189 ;;  sign            1    5[BANK0 ] unsigned char 
  3190 ;;  counter         1    4[BANK0 ] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2    0[BANK0 ] int 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3200 ;;      Params:         0       4       0       0       0
  3201 ;;      Locals:         0       4       0       0       0
  3202 ;;      Temps:          1       0       0       0       0
  3203 ;;      Totals:         1       8       0       0       0
  3204 ;;Total ram usage:        9 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 2
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_divisor
  3211 ;;		_divisor1
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function ___awdiv
  3217  04B9                     ___awdiv:
  3218  04B9                     l1897:	
  3219                           ;incstack = 0
  3220                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3221                           
  3222  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3223  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3224  04BB  01A5               	clrf	___awdiv@sign
  3225  04BC                     l1899:
  3226  04BC  1FA1               	btfss	___awdiv@divisor+1,7
  3227  04BD  2CBF               	goto	u1551
  3228  04BE  2CC0               	goto	u1550
  3229  04BF                     u1551:
  3230  04BF  2CC7               	goto	l1905
  3231  04C0                     u1550:
  3232  04C0                     l1901:
  3233  04C0  09A0               	comf	___awdiv@divisor,f
  3234  04C1  09A1               	comf	___awdiv@divisor+1,f
  3235  04C2  0AA0               	incf	___awdiv@divisor,f
  3236  04C3  1903               	skipnz
  3237  04C4  0AA1               	incf	___awdiv@divisor+1,f
  3238  04C5                     l1903:
  3239  04C5  01A5               	clrf	___awdiv@sign
  3240  04C6  0AA5               	incf	___awdiv@sign,f
  3241  04C7                     l1905:
  3242  04C7  1FA3               	btfss	___awdiv@dividend+1,7
  3243  04C8  2CCA               	goto	u1561
  3244  04C9  2CCB               	goto	u1560
  3245  04CA                     u1561:
  3246  04CA  2CD4               	goto	l1911
  3247  04CB                     u1560:
  3248  04CB                     l1907:
  3249  04CB  09A2               	comf	___awdiv@dividend,f
  3250  04CC  09A3               	comf	___awdiv@dividend+1,f
  3251  04CD  0AA2               	incf	___awdiv@dividend,f
  3252  04CE  1903               	skipnz
  3253  04CF  0AA3               	incf	___awdiv@dividend+1,f
  3254  04D0                     l1909:
  3255  04D0  3001               	movlw	1
  3256  04D1  00F5               	movwf	??___awdiv
  3257  04D2  0875               	movf	??___awdiv,w
  3258  04D3  06A5               	xorwf	___awdiv@sign,f
  3259  04D4                     l1911:
  3260  04D4  01A6               	clrf	___awdiv@quotient
  3261  04D5  01A7               	clrf	___awdiv@quotient+1
  3262  04D6                     l1913:
  3263  04D6  0820               	movf	___awdiv@divisor,w
  3264  04D7  0421               	iorwf	___awdiv@divisor+1,w
  3265  04D8  1903               	btfsc	3,2
  3266  04D9  2CDB               	goto	u1571
  3267  04DA  2CDC               	goto	u1570
  3268  04DB                     u1571:
  3269  04DB  2D13               	goto	l1933
  3270  04DC                     u1570:
  3271  04DC                     l1915:
  3272  04DC  01A4               	clrf	___awdiv@counter
  3273  04DD  0AA4               	incf	___awdiv@counter,f
  3274  04DE  2CEA               	goto	l1921
  3275  04DF                     l1917:
  3276  04DF  3001               	movlw	1
  3277  04E0                     u1585:
  3278  04E0  1003               	clrc
  3279  04E1  0DA0               	rlf	___awdiv@divisor,f
  3280  04E2  0DA1               	rlf	___awdiv@divisor+1,f
  3281  04E3  3EFF               	addlw	-1
  3282  04E4  1D03               	skipz
  3283  04E5  2CE0               	goto	u1585
  3284  04E6                     l1919:
  3285  04E6  3001               	movlw	1
  3286  04E7  00F5               	movwf	??___awdiv
  3287  04E8  0875               	movf	??___awdiv,w
  3288  04E9  07A4               	addwf	___awdiv@counter,f
  3289  04EA                     l1921:
  3290  04EA  1FA1               	btfss	___awdiv@divisor+1,7
  3291  04EB  2CED               	goto	u1591
  3292  04EC  2CEE               	goto	u1590
  3293  04ED                     u1591:
  3294  04ED  2CDF               	goto	l1917
  3295  04EE                     u1590:
  3296  04EE                     l1923:
  3297  04EE  3001               	movlw	1
  3298  04EF                     u1605:
  3299  04EF  1003               	clrc
  3300  04F0  0DA6               	rlf	___awdiv@quotient,f
  3301  04F1  0DA7               	rlf	___awdiv@quotient+1,f
  3302  04F2  3EFF               	addlw	-1
  3303  04F3  1D03               	skipz
  3304  04F4  2CEF               	goto	u1605
  3305  04F5  0821               	movf	___awdiv@divisor+1,w
  3306  04F6  0223               	subwf	___awdiv@dividend+1,w
  3307  04F7  1D03               	skipz
  3308  04F8  2CFB               	goto	u1615
  3309  04F9  0820               	movf	___awdiv@divisor,w
  3310  04FA  0222               	subwf	___awdiv@dividend,w
  3311  04FB                     u1615:
  3312  04FB  1C03               	skipc
  3313  04FC  2CFE               	goto	u1611
  3314  04FD  2CFF               	goto	u1610
  3315  04FE                     u1611:
  3316  04FE  2D06               	goto	l1929
  3317  04FF                     u1610:
  3318  04FF                     l1925:
  3319  04FF  0820               	movf	___awdiv@divisor,w
  3320  0500  02A2               	subwf	___awdiv@dividend,f
  3321  0501  0821               	movf	___awdiv@divisor+1,w
  3322  0502  1C03               	skipc
  3323  0503  03A3               	decf	___awdiv@dividend+1,f
  3324  0504  02A3               	subwf	___awdiv@dividend+1,f
  3325  0505                     l1927:
  3326  0505  1426               	bsf	___awdiv@quotient,0
  3327  0506                     l1929:
  3328  0506  3001               	movlw	1
  3329  0507                     u1625:
  3330  0507  1003               	clrc
  3331  0508  0CA1               	rrf	___awdiv@divisor+1,f
  3332  0509  0CA0               	rrf	___awdiv@divisor,f
  3333  050A  3EFF               	addlw	-1
  3334  050B  1D03               	skipz
  3335  050C  2D07               	goto	u1625
  3336  050D                     l1931:
  3337  050D  3001               	movlw	1
  3338  050E  02A4               	subwf	___awdiv@counter,f
  3339  050F  1D03               	btfss	3,2
  3340  0510  2D12               	goto	u1631
  3341  0511  2D13               	goto	u1630
  3342  0512                     u1631:
  3343  0512  2CEE               	goto	l1923
  3344  0513                     u1630:
  3345  0513                     l1933:
  3346  0513  0825               	movf	___awdiv@sign,w
  3347  0514  1903               	btfsc	3,2
  3348  0515  2D17               	goto	u1641
  3349  0516  2D18               	goto	u1640
  3350  0517                     u1641:
  3351  0517  2D1D               	goto	l1937
  3352  0518                     u1640:
  3353  0518                     l1935:
  3354  0518  09A6               	comf	___awdiv@quotient,f
  3355  0519  09A7               	comf	___awdiv@quotient+1,f
  3356  051A  0AA6               	incf	___awdiv@quotient,f
  3357  051B  1903               	skipnz
  3358  051C  0AA7               	incf	___awdiv@quotient+1,f
  3359  051D                     l1937:
  3360  051D  0827               	movf	___awdiv@quotient+1,w
  3361  051E  00A1               	movwf	?___awdiv+1
  3362  051F  0826               	movf	___awdiv@quotient,w
  3363  0520  00A0               	movwf	?___awdiv
  3364  0521                     l502:
  3365  0521  0008               	return
  3366  0522                     __end_of___awdiv:
  3367                           
  3368                           	psect	text14
  3369  0146                     __ptext14:	
  3370 ;; *************** function _conversion *****************
  3371 ;; Defined at:
  3372 ;;		line 21 in file "ADC.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          1       0       0       0       0
  3389 ;;      Totals:         1       0       0       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 2
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _conversion
  3402  0146                     _conversion:
  3403  0146                     l1795:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _conversion: [wreg+status,2+status,0]
  3406                           
  3407                           
  3408                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  3409  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0147  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0148  189F               	btfsc	31,1	;volatile
  3412  0149  294B               	goto	u1461
  3413  014A  294C               	goto	u1460
  3414  014B                     u1461:
  3415  014B  2971               	goto	l213
  3416  014C                     u1460:
  3417  014C                     l1797:
  3418                           
  3419                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  3420  014C  0C1F               	rrf	31,w	;volatile
  3421  014D  00F5               	movwf	??_conversion
  3422  014E  0C75               	rrf	??_conversion,w
  3423  014F  390F               	andlw	15
  3424  0150  3A01               	xorlw	1
  3425  0151  1D03               	skipz
  3426  0152  2954               	goto	u1471
  3427  0153  2955               	goto	u1470
  3428  0154                     u1471:
  3429  0154  295C               	goto	l1803
  3430  0155                     u1470:
  3431  0155                     l1799:
  3432                           
  3433                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  3434  0155  30C3               	movlw	-61
  3435  0156  059F               	andwf	31,f	;volatile
  3436  0157                     l1801:
  3437                           
  3438                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  3439  0157  3021               	movlw	33
  3440  0158  00F5               	movwf	??_conversion
  3441  0159                     u2197:
  3442  0159  0BF5               	decfsz	??_conversion,f
  3443  015A  2959               	goto	u2197
  3444                           
  3445                           ;ADC.c: 26:         }
  3446  015B  296A               	goto	l1809
  3447  015C                     l1803:
  3448  015C  0C1F               	rrf	31,w	;volatile
  3449  015D  00F5               	movwf	??_conversion
  3450  015E  0C75               	rrf	??_conversion,w
  3451  015F  390F               	andlw	15
  3452  0160  3A00               	xorlw	0
  3453  0161  1D03               	skipz
  3454  0162  2964               	goto	u1481
  3455  0163  2965               	goto	u1480
  3456  0164                     u1481:
  3457  0164  296A               	goto	l1809
  3458  0165                     u1480:
  3459  0165                     l1805:
  3460                           
  3461                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  3462  0165  081F               	movf	31,w	;volatile
  3463  0166  39C3               	andlw	-61
  3464  0167  3804               	iorlw	4
  3465  0168  009F               	movwf	31	;volatile
  3466  0169  2957               	goto	l1801
  3467  016A                     l1809:
  3468                           
  3469                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  3470  016A  3021               	movlw	33
  3471  016B  00F5               	movwf	??_conversion
  3472  016C                     u2207:
  3473  016C  0BF5               	decfsz	??_conversion,f
  3474  016D  296C               	goto	u2207
  3475  016E                     l1811:
  3476                           
  3477                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  3478  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3479  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0170  149F               	bsf	31,1	;volatile
  3481  0171                     l213:
  3482  0171  0008               	return
  3483  0172                     __end_of_conversion:
  3484                           
  3485                           	psect	text15
  3486  010C                     __ptext15:	
  3487 ;; *************** function _Limpiar_pantallaLCD *****************
  3488 ;; Defined at:
  3489 ;;		line 63 in file "LCD.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0
  3505 ;;      Temps:          0       2       0       0       0
  3506 ;;      Totals:         0       2       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 4
  3510 ;; This function calls:
  3511 ;;		_Escribir_comandoLCD
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _Limpiar_pantallaLCD
  3519  010C                     _Limpiar_pantallaLCD:
  3520  010C                     l2241:	
  3521                           ;incstack = 0
  3522                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  3523                           
  3524                           
  3525                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  3526  010C  1283               	bcf	3,5	;RP0=0, select bank0
  3527  010D  1303               	bcf	3,6	;RP1=0, select bank0
  3528  010E  1287               	bcf	7,5	;volatile
  3529  010F  1208               	bcf	8,4	;volatile
  3530  0110                     l2243:
  3531                           
  3532                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  3533  0110  3001               	movlw	1
  3534  0111  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3535  0116                     l2245:
  3536                           
  3537                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3538  0116  301A               	movlw	26
  3539  0117  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0118  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0119  00A2               	movwf	??_Limpiar_pantallaLCD+1
  3542  011A  30F7               	movlw	247
  3543  011B  00A1               	movwf	??_Limpiar_pantallaLCD
  3544  011C                     u2217:
  3545  011C  0BA1               	decfsz	??_Limpiar_pantallaLCD,f
  3546  011D  291C               	goto	u2217
  3547  011E  0BA2               	decfsz	??_Limpiar_pantallaLCD+1,f
  3548  011F  291C               	goto	u2217
  3549  0120  2921               	nop2
  3550  0121                     l2247:
  3551                           
  3552                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  3553  0121  3002               	movlw	2
  3554  0122  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3555  0127                     l172:
  3556  0127  0008               	return
  3557  0128                     __end_of_Limpiar_pantallaLCD:
  3558                           
  3559                           	psect	text16
  3560  0522                     __ptext16:	
  3561 ;; *************** function _Iniciar_LCD *****************
  3562 ;; Defined at:
  3563 ;;		line 30 in file "LCD.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0
  3579 ;;      Temps:          0       2       0       0       0
  3580 ;;      Totals:         0       2       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 4
  3584 ;; This function calls:
  3585 ;;		_Escribir_comandoLCD
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _Iniciar_LCD
  3593  0522                     _Iniciar_LCD:
  3594  0522                     l2215:	
  3595                           ;incstack = 0
  3596                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3597                           
  3598                           
  3599                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  3600  0522  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0523  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0524  1287               	bcf	7,5	;volatile
  3603                           
  3604                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3605  0525  1208               	bcf	8,4	;volatile
  3606  0526                     l2217:
  3607                           
  3608                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3609  0526  3025               	movlw	37
  3610  0527  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0528  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0529  00A2               	movwf	??_Iniciar_LCD+1
  3613  052A  305B               	movlw	91
  3614  052B  00A1               	movwf	??_Iniciar_LCD
  3615  052C                     u2227:
  3616  052C  0BA1               	decfsz	??_Iniciar_LCD,f
  3617  052D  2D2C               	goto	u2227
  3618  052E  0BA2               	decfsz	??_Iniciar_LCD+1,f
  3619  052F  2D2C               	goto	u2227
  3620  0530                     l2219:
  3621                           
  3622                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3623  0530  3030               	movlw	48
  3624  0531  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3625  0536                     l2221:
  3626                           
  3627                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3628  0536  300B               	movlw	11
  3629  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0539  00A2               	movwf	??_Iniciar_LCD+1
  3632  053A  3061               	movlw	97
  3633  053B  00A1               	movwf	??_Iniciar_LCD
  3634  053C                     u2237:
  3635  053C  0BA1               	decfsz	??_Iniciar_LCD,f
  3636  053D  2D3C               	goto	u2237
  3637  053E  0BA2               	decfsz	??_Iniciar_LCD+1,f
  3638  053F  2D3C               	goto	u2237
  3639  0540  2D41               	nop2
  3640                           
  3641                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3642  0541  3030               	movlw	48
  3643  0542  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3644  0547                     l2223:
  3645                           
  3646                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3647  0547  3041               	movlw	65
  3648  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3650  054A  00A1               	movwf	??_Iniciar_LCD
  3651  054B                     u2247:
  3652  054B  0BA1               	decfsz	??_Iniciar_LCD,f
  3653  054C  2D4B               	goto	u2247
  3654  054D  2D4E               	nop2
  3655  054E                     l2225:
  3656                           
  3657                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3658  054E  3030               	movlw	48
  3659  054F  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3660                           
  3661                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3662  0554  3041               	movlw	65
  3663  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0557  00A1               	movwf	??_Iniciar_LCD
  3666  0558                     u2257:
  3667  0558  0BA1               	decfsz	??_Iniciar_LCD,f
  3668  0559  2D58               	goto	u2257
  3669  055A  2D5B               	nop2
  3670  055B                     l2227:
  3671                           
  3672                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3673  055B  3038               	movlw	56
  3674  055C  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3675  0561                     l2229:
  3676                           
  3677                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3678  0561  3041               	movlw	65
  3679  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0564  00A1               	movwf	??_Iniciar_LCD
  3682  0565                     u2267:
  3683  0565  0BA1               	decfsz	??_Iniciar_LCD,f
  3684  0566  2D65               	goto	u2267
  3685  0567  2D68               	nop2
  3686                           
  3687                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3688  0568  3008               	movlw	8
  3689  0569  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3690  056E                     l2231:
  3691                           
  3692                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3693  056E  3041               	movlw	65
  3694  056F  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0570  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0571  00A1               	movwf	??_Iniciar_LCD
  3697  0572                     u2277:
  3698  0572  0BA1               	decfsz	??_Iniciar_LCD,f
  3699  0573  2D72               	goto	u2277
  3700  0574  2D75               	nop2
  3701  0575                     l2233:
  3702                           
  3703                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3704  0575  3001               	movlw	1
  3705  0576  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3706                           
  3707                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3708  057B  3041               	movlw	65
  3709  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3710  057D  1303               	bcf	3,6	;RP1=0, select bank0
  3711  057E  00A1               	movwf	??_Iniciar_LCD
  3712  057F                     u2287:
  3713  057F  0BA1               	decfsz	??_Iniciar_LCD,f
  3714  0580  2D7F               	goto	u2287
  3715  0581  2D82               	nop2
  3716  0582                     l2235:
  3717                           
  3718                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3719  0582  3006               	movlw	6
  3720  0583  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3721  0588                     l2237:
  3722                           
  3723                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3724  0588  3041               	movlw	65
  3725  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3726  058A  1303               	bcf	3,6	;RP1=0, select bank0
  3727  058B  00A1               	movwf	??_Iniciar_LCD
  3728  058C                     u2297:
  3729  058C  0BA1               	decfsz	??_Iniciar_LCD,f
  3730  058D  2D8C               	goto	u2297
  3731  058E  2D8F               	nop2
  3732                           
  3733                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3734  058F  300C               	movlw	12
  3735  0590  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3736  0595                     l163:
  3737  0595  0008               	return
  3738  0596                     __end_of_Iniciar_LCD:
  3739                           
  3740                           	psect	text17
  3741  01A0                     __ptext17:	
  3742 ;; *************** function _Escribir_stringLCD *****************
  3743 ;; Defined at:
  3744 ;;		line 55 in file "LCD.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  d               2    1[BANK0 ] PTR const unsigned char 
  3747 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3748 ;;		 -> STR_2(13), STR_1(5), 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  i               1    4[BANK0 ] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       2       0       0       0
  3761 ;;      Locals:         0       1       0       0       0
  3762 ;;      Temps:          0       1       0       0       0
  3763 ;;      Totals:         0       4       0       0       0
  3764 ;;Total ram usage:        4 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 4
  3767 ;; This function calls:
  3768 ;;		_Escribir_comandoLCD
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _Escribir_stringLCD
  3776  01A0                     _Escribir_stringLCD:
  3777  01A0                     l2273:	
  3778                           ;incstack = 0
  3779                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3780                           
  3781                           
  3782                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3783  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3784  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3785  01A2  1687               	bsf	7,5	;volatile
  3786  01A3  1208               	bcf	8,4	;volatile
  3787  01A4                     l2275:
  3788                           
  3789                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3790  01A4  01A4               	clrf	Escribir_stringLCD@i
  3791  01A5  29BD               	goto	l2281
  3792  01A6                     l2277:
  3793                           
  3794                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3795  01A6  0824               	movf	Escribir_stringLCD@i,w
  3796  01A7  0721               	addwf	Escribir_stringLCD@d,w
  3797  01A8  0084               	movwf	4
  3798  01A9  0822               	movf	Escribir_stringLCD@d+1,w
  3799  01AA  1803               	skipnc
  3800  01AB  0A22               	incf	Escribir_stringLCD@d+1,w
  3801  01AC  00FF               	movwf	btemp+1
  3802  01AD  120A  118A  200F  120A  118A  	fcall	stringtab
  3803  01B2  120A  118A  2246  120A  118A  	fcall	_Escribir_comandoLCD
  3804  01B7                     l2279:
  3805                           
  3806                           ;LCD.c: 60:     }
  3807  01B7  3001               	movlw	1
  3808  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3809  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3810  01BA  00A3               	movwf	??_Escribir_stringLCD
  3811  01BB  0823               	movf	??_Escribir_stringLCD,w
  3812  01BC  07A4               	addwf	Escribir_stringLCD@i,f
  3813  01BD                     l2281:
  3814  01BD  0824               	movf	Escribir_stringLCD@i,w
  3815  01BE  0721               	addwf	Escribir_stringLCD@d,w
  3816  01BF  0084               	movwf	4
  3817  01C0  0822               	movf	Escribir_stringLCD@d+1,w
  3818  01C1  1803               	skipnc
  3819  01C2  0A22               	incf	Escribir_stringLCD@d+1,w
  3820  01C3  00FF               	movwf	btemp+1
  3821  01C4  120A  118A  200F  120A  118A  	fcall	stringtab
  3822  01C9  3A00               	xorlw	0
  3823  01CA  1D03               	skipz
  3824  01CB  29CD               	goto	u2141
  3825  01CC  29CE               	goto	u2140
  3826  01CD                     u2141:
  3827  01CD  29A6               	goto	l2277
  3828  01CE                     u2140:
  3829  01CE                     l169:
  3830  01CE  0008               	return
  3831  01CF                     __end_of_Escribir_stringLCD:
  3832                           
  3833                           	psect	text18
  3834  0246                     __ptext18:	
  3835 ;; *************** function _Escribir_comandoLCD *****************
  3836 ;; Defined at:
  3837 ;;		line 17 in file "LCD.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  Comando         1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  Comando         1    0[BANK0 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         0       1       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         0       1       0       0       0
  3855 ;;Total ram usage:        1 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 3
  3858 ;; This function calls:
  3859 ;;		_prender_ELCD
  3860 ;; This function is called by:
  3861 ;;		_Iniciar_LCD
  3862 ;;		_Escribir_stringLCD
  3863 ;;		_Limpiar_pantallaLCD
  3864 ;;		_set_cursor
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _Escribir_comandoLCD
  3870  0246                     _Escribir_comandoLCD:
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3874                           ;Escribir_comandoLCD@Comando stored from wreg
  3875  0246  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0247  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0248  00A0               	movwf	Escribir_comandoLCD@Comando
  3878  0249                     l2169:
  3879                           
  3880                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3881  0249  1C20               	btfss	Escribir_comandoLCD@Comando,0
  3882  024A  2A4C               	goto	u2021
  3883  024B  2A4D               	goto	u2020
  3884  024C                     u2021:
  3885  024C  2A4F               	goto	l144
  3886  024D                     u2020:
  3887  024D                     l2171:
  3888  024D  1708               	bsf	8,6	;volatile
  3889  024E  2A50               	goto	l145
  3890  024F                     l144:
  3891  024F  1308               	bcf	8,6	;volatile
  3892  0250                     l145:
  3893                           
  3894                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3895  0250  1CA0               	btfss	Escribir_comandoLCD@Comando,1
  3896  0251  2A53               	goto	u2031
  3897  0252  2A54               	goto	u2030
  3898  0253                     u2031:
  3899  0253  2A56               	goto	l146
  3900  0254                     u2030:
  3901  0254                     l2173:
  3902  0254  1788               	bsf	8,7	;volatile
  3903  0255  2A57               	goto	l147
  3904  0256                     l146:
  3905  0256  1388               	bcf	8,7	;volatile
  3906  0257                     l147:
  3907                           
  3908                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3909  0257  1D20               	btfss	Escribir_comandoLCD@Comando,2
  3910  0258  2A5A               	goto	u2041
  3911  0259  2A5B               	goto	u2040
  3912  025A                     u2041:
  3913  025A  2A5D               	goto	l148
  3914  025B                     u2040:
  3915  025B                     l2175:
  3916  025B  1406               	bsf	6,0	;volatile
  3917  025C  2A5E               	goto	l149
  3918  025D                     l148:
  3919  025D  1006               	bcf	6,0	;volatile
  3920  025E                     l149:
  3921                           
  3922                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3923  025E  1DA0               	btfss	Escribir_comandoLCD@Comando,3
  3924  025F  2A61               	goto	u2051
  3925  0260  2A62               	goto	u2050
  3926  0261                     u2051:
  3927  0261  2A64               	goto	l150
  3928  0262                     u2050:
  3929  0262                     l2177:
  3930  0262  1486               	bsf	6,1	;volatile
  3931  0263  2A65               	goto	l151
  3932  0264                     l150:
  3933  0264  1086               	bcf	6,1	;volatile
  3934  0265                     l151:
  3935                           
  3936                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3937  0265  1E20               	btfss	Escribir_comandoLCD@Comando,4
  3938  0266  2A68               	goto	u2061
  3939  0267  2A69               	goto	u2060
  3940  0268                     u2061:
  3941  0268  2A6B               	goto	l152
  3942  0269                     u2060:
  3943  0269                     l2179:
  3944  0269  1506               	bsf	6,2	;volatile
  3945  026A  2A6C               	goto	l153
  3946  026B                     l152:
  3947  026B  1106               	bcf	6,2	;volatile
  3948  026C                     l153:
  3949                           
  3950                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3951  026C  1EA0               	btfss	Escribir_comandoLCD@Comando,5
  3952  026D  2A6F               	goto	u2071
  3953  026E  2A70               	goto	u2070
  3954  026F                     u2071:
  3955  026F  2A72               	goto	l154
  3956  0270                     u2070:
  3957  0270                     l2181:
  3958  0270  1586               	bsf	6,3	;volatile
  3959  0271  2A73               	goto	l155
  3960  0272                     l154:
  3961  0272  1186               	bcf	6,3	;volatile
  3962  0273                     l155:
  3963                           
  3964                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3965  0273  1F20               	btfss	Escribir_comandoLCD@Comando,6
  3966  0274  2A76               	goto	u2081
  3967  0275  2A77               	goto	u2080
  3968  0276                     u2081:
  3969  0276  2A79               	goto	l156
  3970  0277                     u2080:
  3971  0277                     l2183:
  3972  0277  1606               	bsf	6,4	;volatile
  3973  0278  2A7A               	goto	l157
  3974  0279                     l156:
  3975  0279  1206               	bcf	6,4	;volatile
  3976  027A                     l157:
  3977                           
  3978                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3979  027A  1FA0               	btfss	Escribir_comandoLCD@Comando,7
  3980  027B  2A7D               	goto	u2091
  3981  027C  2A7E               	goto	u2090
  3982  027D                     u2091:
  3983  027D  2A80               	goto	l158
  3984  027E                     u2090:
  3985  027E                     l2185:
  3986  027E  1686               	bsf	6,5	;volatile
  3987  027F  2A81               	goto	l2187
  3988  0280                     l158:
  3989  0280  1286               	bcf	6,5	;volatile
  3990  0281                     l2187:
  3991                           
  3992                           ;LCD.c: 27:     prender_ELCD();
  3993  0281  120A  118A  20E4  120A  118A  	fcall	_prender_ELCD
  3994  0286                     l160:
  3995  0286  0008               	return
  3996  0287                     __end_of_Escribir_comandoLCD:
  3997                           
  3998                           	psect	text19
  3999  00E4                     __ptext19:	
  4000 ;; *************** function _prender_ELCD *****************
  4001 ;; Defined at:
  4002 ;;		line 11 in file "LCD.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4016 ;;      Params:         0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0
  4018 ;;      Temps:          1       0       0       0       0
  4019 ;;      Totals:         1       0       0       0       0
  4020 ;;Total ram usage:        1 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 2
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_Escribir_comandoLCD
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function _prender_ELCD
  4032  00E4                     _prender_ELCD:
  4033  00E4                     l1891:	
  4034                           ;incstack = 0
  4035                           ; Regs used in _prender_ELCD: [wreg]
  4036                           
  4037                           
  4038                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4039  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4040  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4041  00E6  1688               	bsf	8,5	;volatile
  4042  00E7                     l1893:
  4043                           
  4044                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4045  00E7  30C7               	movlw	199
  4046  00E8  00F5               	movwf	??_prender_ELCD
  4047  00E9                     u2307:
  4048  00E9  28EA               	nop2
  4049  00EA  0BF5               	decfsz	??_prender_ELCD,f
  4050  00EB  28E9               	goto	u2307
  4051  00EC  28ED               	nop2
  4052  00ED  28EE               	nop2
  4053  00EE                     l1895:
  4054                           
  4055                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4056  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4057  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4058  00F0  1288               	bcf	8,5	;volatile
  4059  00F1                     l141:
  4060  00F1  0008               	return
  4061  00F2                     __end_of_prender_ELCD:
  4062                           
  4063                           	psect	text20
  4064  01CF                     __ptext20:	
  4065 ;; *************** function _isr *****************
  4066 ;; Defined at:
  4067 ;;		line 68 in file "LAB2.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4081 ;;      Params:         0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0
  4083 ;;      Temps:          3       0       0       0       0
  4084 ;;      Totals:         3       0       0       0       0
  4085 ;;Total ram usage:        3 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 1
  4088 ;; This function calls:
  4089 ;;		_ADC
  4090 ;; This function is called by:
  4091 ;;		Interrupt level 1
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function _isr
  4097  01CF                     _isr:
  4098  01CF                     i1l1817:
  4099                           
  4100                           ;LAB2.c: 69:     if(PIR1bits.ADIF){
  4101  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  4102  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  4103  01D1  1F0C               	btfss	12,6	;volatile
  4104  01D2  29D4               	goto	u149_21
  4105  01D3  29D5               	goto	u149_20
  4106  01D4                     u149_21:
  4107  01D4  29DD               	goto	i1l1823
  4108  01D5                     u149_20:
  4109  01D5                     i1l1819:
  4110                           
  4111                           ;LAB2.c: 70:         ADC();
  4112  01D5  120A  118A  2128  120A  118A  	fcall	_ADC
  4113  01DA                     i1l1821:
  4114                           
  4115                           ;LAB2.c: 71:         PIR1bits.ADIF = 0;
  4116  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  4117  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  4118  01DC  130C               	bcf	12,6	;volatile
  4119  01DD                     i1l1823:
  4120                           
  4121                           ;LAB2.c: 73:     if(PIR1bits.RCIF){
  4122  01DD  1E8C               	btfss	12,5	;volatile
  4123  01DE  29E0               	goto	u150_21
  4124  01DF  29E1               	goto	u150_20
  4125  01E0                     u150_21:
  4126  01E0  2A03               	goto	i1l103
  4127  01E1                     u150_20:
  4128  01E1                     i1l1825:
  4129                           
  4130                           ;LAB2.c: 74:         dato = RCREG;
  4131  01E1  081A               	movf	26,w	;volatile
  4132  01E2  00F2               	movwf	??_isr
  4133  01E3  0872               	movf	??_isr,w
  4134  01E4  00F6               	movwf	_dato
  4135  01E5                     i1l1827:
  4136                           
  4137                           ;LAB2.c: 75:         if(dato == 0x2B || dato == 77){
  4138  01E5  302B               	movlw	43
  4139  01E6  0676               	xorwf	_dato,w
  4140  01E7  1903               	btfsc	3,2
  4141  01E8  29EA               	goto	u151_21
  4142  01E9  29EB               	goto	u151_20
  4143  01EA                     u151_21:
  4144  01EA  29F1               	goto	i1l1831
  4145  01EB                     u151_20:
  4146  01EB                     i1l1829:
  4147  01EB  304D               	movlw	77
  4148  01EC  0676               	xorwf	_dato,w
  4149  01ED  1D03               	btfss	3,2
  4150  01EE  29F0               	goto	u152_21
  4151  01EF  29F1               	goto	u152_20
  4152  01F0                     u152_21:
  4153  01F0  29F5               	goto	i1l97
  4154  01F1                     u152_20:
  4155  01F1                     i1l1831:
  4156                           
  4157                           ;LAB2.c: 76:             Cont_U++;
  4158  01F1  3001               	movlw	1
  4159  01F2  00F2               	movwf	??_isr
  4160  01F3  0872               	movf	??_isr,w
  4161  01F4  07C8               	addwf	_Cont_U,f
  4162  01F5                     i1l97:	
  4163                           ;LAB2.c: 77:         }
  4164                           
  4165                           
  4166                           ;LAB2.c: 78:         if(dato == 0x2D || dato == 75){
  4167  01F5  302D               	movlw	45
  4168  01F6  0676               	xorwf	_dato,w
  4169  01F7  1903               	btfsc	3,2
  4170  01F8  29FA               	goto	u153_21
  4171  01F9  29FB               	goto	u153_20
  4172  01FA                     u153_21:
  4173  01FA  2A01               	goto	i1l1835
  4174  01FB                     u153_20:
  4175  01FB                     i1l1833:
  4176  01FB  304B               	movlw	75
  4177  01FC  0676               	xorwf	_dato,w
  4178  01FD  1D03               	btfss	3,2
  4179  01FE  2A00               	goto	u154_21
  4180  01FF  2A01               	goto	u154_20
  4181  0200                     u154_21:
  4182  0200  2A03               	goto	i1l103
  4183  0201                     u154_20:
  4184  0201                     i1l1835:
  4185                           
  4186                           ;LAB2.c: 79:             Cont_U--;
  4187  0201  3001               	movlw	1
  4188  0202  02C8               	subwf	_Cont_U,f
  4189  0203                     i1l103:
  4190  0203  0874               	movf	??_isr+2,w
  4191  0204  008A               	movwf	10
  4192  0205  0E73               	swapf	??_isr+1,w
  4193  0206  0083               	movwf	3
  4194  0207  0EFE               	swapf	btemp,f
  4195  0208  0E7E               	swapf	btemp,w
  4196  0209  0009               	retfie
  4197  020A                     __end_of_isr:
  4198                           
  4199                           	psect	intentry
  4200  0004                     __pintentry:	
  4201                           ;incstack = 0
  4202                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4203                           
  4204  0004                     interrupt_function:
  4205  007E                     saved_w	set	btemp
  4206  0004  00FE               	movwf	btemp
  4207  0005  0E03               	swapf	3,w
  4208  0006  00F3               	movwf	??_isr+1
  4209  0007  080A               	movf	10,w
  4210  0008  00F4               	movwf	??_isr+2
  4211  0009  120A  118A  29CF   	ljmp	_isr
  4212                           
  4213                           	psect	text21
  4214  0128                     __ptext21:	
  4215 ;; *************** function _ADC *****************
  4216 ;; Defined at:
  4217 ;;		line 11 in file "ADC.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0
  4233 ;;      Temps:          1       0       0       0       0
  4234 ;;      Totals:         1       0       0       0       0
  4235 ;;Total ram usage:        1 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_isr
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _ADC
  4246  0128                     _ADC:
  4247  0128                     i1l1693:	
  4248                           ;incstack = 0
  4249                           ; Regs used in _ADC: [wreg+status,2+status,0]
  4250                           
  4251                           
  4252                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  4253  0128  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0129  1303               	bcf	3,6	;RP1=0, select bank0
  4255  012A  0C1F               	rrf	31,w	;volatile
  4256  012B  00F1               	movwf	??_ADC
  4257  012C  0C71               	rrf	??_ADC,w
  4258  012D  390F               	andlw	15
  4259  012E  3A00               	xorlw	0
  4260  012F  1D03               	skipz
  4261  0130  2932               	goto	u139_21
  4262  0131  2933               	goto	u139_20
  4263  0132                     u139_21:
  4264  0132  2938               	goto	i1l1697
  4265  0133                     u139_20:
  4266  0133                     i1l1695:
  4267                           
  4268                           ;ADC.c: 13:         cont1 = ADRESH;
  4269  0133  081E               	movf	30,w	;volatile
  4270  0134  00F1               	movwf	??_ADC
  4271  0135  0871               	movf	??_ADC,w
  4272  0136  00CA               	movwf	_cont1
  4273                           
  4274                           ;ADC.c: 14:     }
  4275  0137  2945               	goto	i1l206
  4276  0138                     i1l1697:
  4277  0138  0C1F               	rrf	31,w	;volatile
  4278  0139  00F1               	movwf	??_ADC
  4279  013A  0C71               	rrf	??_ADC,w
  4280  013B  390F               	andlw	15
  4281  013C  3A01               	xorlw	1
  4282  013D  1D03               	skipz
  4283  013E  2940               	goto	u140_21
  4284  013F  2941               	goto	u140_20
  4285  0140                     u140_21:
  4286  0140  2945               	goto	i1l206
  4287  0141                     u140_20:
  4288  0141                     i1l1699:
  4289                           
  4290                           ;ADC.c: 16:         cont2 = ADRESH;
  4291  0141  081E               	movf	30,w	;volatile
  4292  0142  00F1               	movwf	??_ADC
  4293  0143  0871               	movf	??_ADC,w
  4294  0144  00C9               	movwf	_cont2
  4295  0145                     i1l206:
  4296  0145  0008               	return
  4297  0146                     __end_of_ADC:
  4298  007E                     btemp	set	126	;btemp
  4299  007E                     wtemp0	set	126
  4300                           
  4301                           	psect	config
  4302                           
  4303                           ;Config register CONFIG1 @ 0x2007
  4304                           ;	Oscillator Selection bits
  4305                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4306                           ;	Watchdog Timer Enable bit
  4307                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4308                           ;	Power-up Timer Enable bit
  4309                           ;	PWRTE = OFF, PWRT disabled
  4310                           ;	RE3/MCLR pin function select bit
  4311                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4312                           ;	Code Protection bit
  4313                           ;	CP = OFF, Program memory code protection is disabled
  4314                           ;	Data Code Protection bit
  4315                           ;	CPD = OFF, Data memory code protection is disabled
  4316                           ;	Brown Out Reset Selection bits
  4317                           ;	BOREN = OFF, BOR disabled
  4318                           ;	Internal External Switchover bit
  4319                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4320                           ;	Fail-Safe Clock Monitor Enabled bit
  4321                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4322                           ;	Low Voltage Programming Enable bit
  4323                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4324                           ;	In-Circuit Debugger Mode bit
  4325                           ;	DEBUG = 0x1, unprogrammed default
  4326  2007                     	org	8199
  4327  2007  20D4               	dw	8404
  4328                           
  4329                           ;Config register CONFIG2 @ 0x2008
  4330                           ;	Brown-out Reset Selection bit
  4331                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4332                           ;	Flash Program Memory Self Write Enable bits
  4333                           ;	WRT = OFF, Write protection off
  4334  2008                     	org	8200
  4335  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5       9
    BANK0            80     40      76
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[13]), STR_1(CODE[5]), 

    divisor1@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_conversion
    _setup->_config_ADC
    _divisor1->___awdiv
    _divisor1->___awmod
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _setup->_Config_USART
    _set_cursor->_Escribir_comandoLCD
    _dato_recibido->_sprintf
    _divisor1->___awdiv
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10628
                                             37 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     673
                       _Config_USART
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2     121
                                              4 COMMON     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     552
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              1 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3751
                                             30 BANK0      7     7      0
                           _divisor1
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _divisor1                                             8     7      1    1945
                                              8 BANK0      8     7      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3875
                                             30 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             13 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    2069
                                              8 BANK0      8     7      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              1 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              1 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              1 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              0 BANK0      1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor1
       ___awdiv
       ___awmod
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _config_ADC

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      5       9       1       69.2%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 12:07:27 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0024                           l122 0402                           l130 019F  
                         l114 02C9                           l141 00F1                           l213 0171  
                         l117 04B8                           l150 0264                           l151 0265  
                         l127 03AB                           l160 0286                           l152 026B  
                         l144 024F                           l216 010B                           l153 026C  
                         l145 0250                           l154 0272                           l146 0256  
                         l155 0273                           l147 0257                           l163 0595  
                         l235 064A                           l156 0279                           l148 025D  
                         l172 0127                           l157 027A                           l149 025E  
                         l158 0280                           l502 0521                           l182 035A  
                         _ADC 0128                           l169 01CE                           l345 07EE  
                         l515 045D                           l621 030F                           l631 0245  
                         _dec 0078                           _cen 0077                           _isr 01CF  
                         fsr0 0004                           _uni 0079                           indf 0000  
                ___awmod@sign 0025                          ?_ADC 0071                          l2001 030B  
                        l2011 0107                          l2101 071A                          l2021 05B3  
                        l2013 0596                          l2005 00F2                          l2111 0745  
                        l2103 071F                          l2031 05D0                          l2015 05A1  
                        l2023 05B4                          l2007 00F7                          l2113 0749  
                        l2041 05EC                          l2025 05BE                          l2033 05D1  
                        l2017 05A8                          l2009 0106                          l2201 02AC  
                        l2131 077E                          l2115 074D                          l2107 0720  
                        l2051 0609                          l2035 05DB                          l2043 05ED  
                        l2027 05C5                          l2019 05AF                          l2211 02B9  
                        l2203 02AF                          l2221 0536                          l1501 0234  
                        l2141 07C4                          l2133 0784                          l2125 0758  
                        l2117 0751                          l2109 073D                          l2061 0626  
                        l2045 05F7                          l2053 060A                          l2037 05E1  
                        l2029 05CC                          l2213 02BA                          l2205 02B2  
                        l2301 06A1                          l2231 056E                          l2223 0547  
                        l2215 0522                          l1503 023B                          l2143 07CB  
                        l2135 078B                          l2119 0756                          l2071 0642  
                        l2055 0614                          l2063 0627                          l2047 05FE  
                        l2039 05E8                          l2207 02B5                          l2311 06CE  
                        l2303 06AA                          l2233 0575                          l2225 054E  
                        l2217 0526                          l2241 010C                          l2081 03AF  
                        l1505 0241                          l2145 07CF                          l2137 078F  
                        l2129 0774                          l2065 0631                          l2073 0643  
                        l2057 061B                          l2049 0605                          l2209 02B8  
                        l2313 06DA                          l2305 06B5                          l2171 024D  
                        l2235 0582                          l2227 055B                          l2219 0530  
                        l2243 0110                          l2091 03EF                          l2083 03B7  
                        l2139 0794                          l2147 07D8                          l2163 0360  
                        l2251 0315                          l2075 0645                          l2067 0637  
                        l2059 0622                          l2315 06E5                          l2307 06BA  
                        l2181 0270                          l2173 0254                          l2237 0588  
                        l2229 0561                          l2245 0116                          l2093 03F5  
                        l2149 07EA                          l2341 0732                          l2165 0398  
                        l2157 035E                          l2261 0338                          l2253 031A  
                        l2077 0646                          l2069 063E                          l2317 06EA  
                        l2309 06C3                          l2183 0277                          l2175 025B  
                        l2247 0121                          l2095 0708                          l2167 039E  
                        l2271 034F                          l2255 0321                          l2079 0647  
                        l2191 028B                          l2319 06F6                          l2185 027E  
                        l2177 0262                          l2169 0249                          l2281 01BD  
                        l2273 01A0                          l1801 0157                          l2089 03B9  
                        l2097 070D                          l2265 0340                          l2257 0327  
                        l2249 0313                          l2193 028C                          l2187 0281  
                        l2179 0269                          l2275 01A4                          l1811 016E  
                        l1803 015C                          l1491 0215                          l2099 0713  
                        l2283 045E                          l2267 0346                          l2259 032D  
                        l2195 029B                          l2291 066E                          l2277 01A6  
                        l1805 0165                          l1901 04C0                          l1493 021C  
                        l2285 0172                          l2269 034A                          l2197 02A1  
                        l2189 0287                          l2293 0685                          l2279 01B7  
                        l1911 04D4                          l1903 04C5                          l1495 0220  
                        l1487 020A                          l2199 02A2                          l2295 0694  
                        l2287 064B                          l1809 016A                          l1921 04EA  
                        l1913 04D6                          l1905 04C7                          l1497 0224  
                        l1489 0212                          l2297 0697                          l2289 0663  
                        l1931 050D                          l1923 04EE                          l1915 04DC  
                        l1907 04CB                          l1499 022E                          l2299 069C  
                        l1925 04FF                          l1917 04DF                          l1933 0513  
                        l1909 04D0                          l1941 0403                          l1935 0518  
                        l1927 0505                          l1919 04E6                          l1951 0415  
                        l1943 0406                          l1937 051D                          l1929 0506  
                        l1961 042E                          l1953 041A                          l1945 040A  
                        l1891 00E4                          l1795 0146                          l1963 0432  
                        l1955 0420                          l1971 044F                          l1947 040F  
                        l1893 00E7                          l1797 014C                          l1973 0454  
                        l1965 043C                          l1957 0423                          l1949 0411  
                        l1981 02CE                          l1895 00EE                          l1799 0155  
                        l1975 0459                          l1967 0442                          l1959 042A  
                        l1991 02E6                          l1983 02D4                          l1897 04B9  
                        l1969 0449                          l1993 02F7                          l1985 02D7  
                        l1899 04BC                          l1995 02FD                          l1987 02DE  
                        l1979 02CA                          l1997 02FE                          l1989 02E2  
                        l1999 0305                          ?_isr 0071                          STR_1 0056  
                        STR_2 003A                          STR_3 0029                          STR_4 0047  
                        STR_5 0047                          STR_6 004F                          u1040 0212  
                        u2000 07EA                          u1041 0211                          u2001 07E9  
                        u2010 03AB                          u2011 03AA                          u2020 024D  
                        u1060 0224                          u2100 031A                          u2021 024C  
                        u1061 0223                          u2101 0319                          u2030 0254  
                        u1070 022E                          u2110 0327                          u2031 0253  
                        u1071 022D                          u1055 0216                          u2015 03A7  
                        u2111 0326                          u2040 025B                          u2120 033F  
                        u2041 025A                          u2121 033E                          u2050 0262  
                        u1090 0241                          u2130 034F                          u2051 0261  
                        u1091 0240                          u1075 022A                          u2131 034E  
                        u2060 0269                          u2140 01CE                          u2061 0268  
                        u2141 01CD                          u1085 0235                          u2070 0270  
                        u2071 026F                          u2207 016C                          u2080 0277  
                        u2081 0276                          u2217 011C                          u2090 027E  
                        u1610 04FF                          u2307 00E9                          u2091 027D  
                        u2227 052C                          u1611 04FE                          u1460 014C  
                        u1700 043C                          u2237 053C                          u1461 014B  
                        u1605 04EF                          u1701 043B                          u2157 068D  
                        u1470 0155                          u1630 0513                          u1550 04C0  
                        u2247 054B                          u1471 0154                          u1631 0512  
                        u1615 04FB                          u1551 04BF                          u2167 0109  
                        u1480 0165                          u1640 0518                          u1560 04CB  
                        u1720 044F                          u1800 030B                          u2257 0558  
                        u1481 0164                          u1641 0517                          u1625 0507  
                        u1561 04CA                          u1721 044E                          u1705 0438  
                        u1801 030A                          u2177 0333                          u1570 04DC  
                        u1730 0454                          u1650 040A                          u1810 05A1  
                        u2267 0565                          u1571 04DB                          u1731 0453  
                        u1715 0443                          u1651 0409                          u2187 0355  
                        u1811 05A0                          u1660 0415                          u1740 02D4  
                        u1900 061B                          u1820 05A8                          u2277 0572  
                        u2197 0159                          u1661 0414                          u1741 02D3  
                        u1901 061A                          u1821 05A7                          u1590 04EE  
                        u1670 0420                          u1910 0631                          u1830 05BE  
                        u2287 057F                          u1591 04ED                          u1671 041F  
                        u1911 0630                          u1831 05BD                          u1760 02E6  
                        u1920 0637                          u1840 05C5                          u2297 058C  
                        u1585 04E0                          u1761 02E5                          u1921 0636  
                        u1841 05C4                          u1690 0432                          u1930 0402  
                        u1850 05DB                          u1691 0431                          u1931 0401  
                        u1755 02D8                          u1851 05DA                          u1780 02F7  
                        u1940 0713                          u1860 05E1                          u1685 0424  
                        u1781 02F6                          u1941 0712                          u1861 05E0  
                        u1950 074D                          u1870 05F7                          u1935 03FE  
                        u1775 02E7                          u1951 074C                          u1871 05F6  
                        u1960 0773                          u1880 05FE                          u1785 02F3  
                        u1961 0772                          u1881 05FD                          u1970 077E  
                        u1890 0614                          u1795 02FF                          u1971 077D  
                        u1891 0613                          u1980 0784                          u1981 0783  
                        u1965 076F                          u1990 07D8                          u1991 07D7  
                        i1l97 01F5                 ??_Iniciar_LCD 0021                          _dato 0076  
                        _main 064B                          _vol1 006B                          _vol2 006A  
                        _vol3 0069                          btemp 007E                          start 000C  
                 divisor1@dig 0028                         ??_ADC 0071                         ??_isr 0072  
  __end_of_Escribir_stringLCD 01CF                         ?_main 0071               __end_of___awdiv 0522  
             __end_of___awmod 045E                         _ANSEL 0188               ___awdiv@divisor 0020  
             __end_of___lwdiv 0310                         i1l103 0203                         i1l206 0145  
             __end_of___lwmod 0246               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089               __end_of_divisor 0403  
                       _cont1 004A                         _cont2 0049               __end_of_dpowers 0029  
                       _setup 0287           _Limpiar_pantallaLCD 010C                         pclath 000A  
           ??_conversion_char 003E                         status 0003                         wtemp0 007E  
             __end_of_sprintf 07EF          __end_of_Config_USART 064B               __initialization 07EF  
         __end_of_Iniciar_LCD 0596                  __end_of_main 0705          ?_Limpiar_pantallaLCD 0071  
                      ??_main 0045            set_cursor@posicion 0021                        _ADRESH 001E  
            ___awdiv@dividend 0022                        ?_setup 0071                        _ANSELH 0189  
                      i1l1821 01DA                        i1l1831 01F1                        i1l1823 01DD  
                      i1l1833 01FB                        i1l1825 01E1                        i1l1817 01CF  
                      i1l1835 0201                        i1l1827 01E5                        i1l1819 01D5  
                      i1l1693 0128                        i1l1829 01EB                        i1l1695 0133  
                      i1l1697 0138                        i1l1699 0141                        u140_20 0141  
                      u140_21 0140                        u150_20 01E1                        u150_21 01E0  
                      u151_20 01EB                        u151_21 01EA                        u152_20 01F1  
                      u152_21 01F0                        u153_20 01FB                        u153_21 01FA  
                      u154_20 0201                        u154_21 0200                        u139_20 0133  
                      u139_21 0132                        u149_20 01D5                        u149_21 01D4  
                      _SPBRGH 009A                        _Cont_U 0048              __end_of_divisor1 03AC  
       ??_Limpiar_pantallaLCD 0021                     ??___awdiv 0075                     ??___awmod 0075  
       __end_of_dato_recibido 01A0                     ??___lwdiv 0075                     ??___lwmod 002B  
            ___awdiv@quotient 0026               ___awmod@divisor 0020               ___awmod@counter 0024  
                   ??_divisor 0029                        saved_w 007E                     ??_sprintf 0034  
     __end_of__initialization 07FC                   _Iniciar_LCD 0522                __pcstackCOMMON 0071  
               __end_of_setup 02CA                       ??_setup 0076                    __pbssBANK0 0048  
       __size_of_Config_USART 00B5                    __pmaintext 064B                    __pintentry 0004  
__size_of_Escribir_comandoLCD 0041               _conversion_char 045E                    _config_ADC 00F2  
                _Config_USART 0596                     ?_divisor1 0028            _Escribir_stringLCD 01A0  
                  __stringtab 000F                    _conversion 0146           ?_Escribir_stringLCD 0021  
                     ___awdiv 04B9                       ___awmod 0403                       ___lwdiv 02CA  
                     ___lwmod 020A                       __ptext1 0287                       __ptext2 00F2  
                     __ptext3 0596                       __ptext4 0310                       __ptext5 0172  
                     __ptext6 035B                       __ptext7 045E                       __ptext8 0705  
                     __ptext9 020A                       _buffer1 005F                       _buffer2 0055  
                     _buffer3 004B                  __size_of_ADC 001E                       _divisor 03AC  
        ??_Escribir_stringLCD 0023                       _dpowers 001F                  __size_of_isr 003B  
            ___awmod@dividend 0022                 ?_prender_ELCD 0071                       _sprintf 0705  
                     clrloop0 00DD                    ??_divisor1 0029          end_of_initialization 07FC  
                  _set_cursor 0310                     _RCSTAbits 0018       __end_of_conversion_char 04B9  
                   _PORTBbits 0006                     _PORTCbits 0007                     _PORTDbits 0008  
              ??_prender_ELCD 0075                   ?_config_ADC 0020                  ?_Iniciar_LCD 0071  
                 ?_conversion 0071                     _TXSTAbits 0098   __end_of_Limpiar_pantallaLCD 0128  
                  divisor@dig 0028                   _BAUDCTLbits 0187           start_initialization 07EF  
                 __end_of_ADC 0146                   __end_of_isr 020A        __size_of_dato_recibido 002E  
         _Escribir_comandoLCD 0246    Escribir_comandoLCD@Comando 0020           __size_of_config_ADC 001A  
                 ?_set_cursor 0021              ?_conversion_char 0071          ?_Escribir_comandoLCD 0071  
         __size_of_conversion 002C                   __pbssCOMMON 0076                     ___latbits 0002  
               __pcstackBANK0 0020                   sprintf@flag 0038             __size_of_divisor1 0051  
                 sprintf@prec 0039          __end_of_prender_ELCD 00F2              ___lwdiv@dividend 0022  
                    ?___awdiv 0020                      ?___awmod 0020                      ?___lwdiv 0020  
                    ?___lwmod 0027         ??_Escribir_comandoLCD 0076                 _dato_recibido 0172  
                   __pstrings 000F                      ?_divisor 0028             config_ADC@channel 0020  
            ___lwdiv@quotient 0025           __size_of_set_cursor 004B                      ?_sprintf 002D  
              __size_of_setup 0043             interrupt_function 0004                     clear_ram0 00DC  
                    _PIE1bits 008C          __size_of_Iniciar_LCD 0074                      _PIR1bits 000C  
              ?_dato_recibido 0071                    _ADCON0bits 001F                   __stringbase 001E  
                  _ADCON1bits 009F                  ??_config_ADC 0075   __size_of_Escribir_stringLCD 002F  
                   divisor1@a 002D                     divisor1@i 002E                  ??_conversion 0075  
         Escribir_stringLCD@d 0021           Escribir_stringLCD@i 0024            __end_of_config_ADC 010C  
            __size_of___awdiv 0069              __size_of___awmod 005B              __size_of___lwdiv 0046  
            __size_of___lwmod 003C            __end_of__stringtab 001F                    sprintf@val 003A  
            __size_of_divisor 0057            __end_of_conversion 0172               ___lwdiv@divisor 0020  
             ___lwdiv@counter 0024                      __ptext10 02CA                      __ptext11 03AC  
                    __ptext20 01CF                      __ptext12 0403                      __ptext21 0128  
                    __ptext13 04B9                      __ptext14 0146                      __ptext15 010C  
                    __ptext16 0522                      __ptext17 01A0                      __ptext18 0246  
                    __ptext19 00E4                      _divisor1 035B              __size_of_sprintf 00EA  
       __size_of_prender_ELCD 000E                 __size_of_main 00BA                  ??_set_cursor 0022  
             ??_dato_recibido 003E  __size_of_Limpiar_pantallaLCD 001C                      divisor@a 002B  
                    divisor@b 002C                      divisor@i 002E                    _INTCONbits 000B  
                _prender_ELCD 00E4                 ?_Config_USART 0020              Config_USART@Freq 0022  
          __end_of_set_cursor 035B                      intlevel1 0000                     sprintf@ap 0037  
                   sprintf@sp 003C              ___lwmod@dividend 0029                     stringcode 0019  
                  _OSCCONbits 008F                      sprintf@c 003D                      sprintf@f 002D  
             ___lwmod@divisor 0027                ??_Config_USART 0075               ___lwmod@counter 002C  
    __size_of_conversion_char 005B                      stringdir 0019                      stringtab 000F  
       Config_USART@baud_rate 0020   __end_of_Escribir_comandoLCD 0287  
