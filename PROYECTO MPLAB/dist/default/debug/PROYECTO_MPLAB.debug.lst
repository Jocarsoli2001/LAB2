

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 07 11:52:16 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460                           
   461                           	psect	strings
   462  000F                     __pstrings:
   463  000F                     stringtab:
   464  000F                     __stringtab:
   465                           
   466                           ;	String table - string pointers are 1 byte each
   467  000F  1BFF               	btfsc	btemp+1,7
   468  0010  2819               	ljmp	stringcode
   469  0011  1383               	bcf	3,7
   470  0012  187F               	btfsc	btemp+1,0
   471  0013  1783               	bsf	3,7
   472  0014  0800               	movf	0,w
   473  0015  0A84               	incf	4,f
   474  0016  1903               	skipnz
   475  0017  0AFF               	incf	btemp+1,f
   476  0018  0008               	return
   477  0019                     stringcode:
   478  0019                     stringdir:
   479  0019  3000               	movlw	high stringdir
   480  001A  008A               	movwf	10
   481  001B  0804               	movf	4,w
   482  001C  0A84               	incf	4,f
   483  001D  0782               	addwf	2,f
   484  001E                     __stringbase:
   485  001E  3400               	retlw	0
   486  001F                     __end_of__stringtab:
   487  001F                     _dpowers:
   488  001F  3401               	retlw	1
   489  0020  3400               	retlw	0
   490  0021  340A               	retlw	10
   491  0022  3400               	retlw	0
   492  0023  3464               	retlw	100
   493  0024  3400               	retlw	0
   494  0025  34E8               	retlw	232
   495  0026  3403               	retlw	3
   496  0027  3410               	retlw	16
   497  0028  3427               	retlw	39
   498  0029                     __end_of_dpowers:
   499  0019                     _TXREG	set	25
   500  001E                     _ADRESH	set	30
   501  0007                     _PORTCbits	set	7
   502  0006                     _PORTBbits	set	6
   503  0008                     _PORTDbits	set	8
   504  0018                     _RCSTAbits	set	24
   505  000B                     _INTCONbits	set	11
   506  0006                     _PORTB	set	6
   507  0009                     _PORTE	set	9
   508  0007                     _PORTC	set	7
   509  0008                     _PORTD	set	8
   510  0005                     _PORTA	set	5
   511  001F                     _ADCON0bits	set	31
   512  001A                     _RCREG	set	26
   513  000C                     _PIR1bits	set	12
   514  009F                     _ADCON1bits	set	159
   515  009A                     _SPBRGH	set	154
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  008C                     _PIE1bits	set	140
   519  008F                     _OSCCONbits	set	143
   520  0089                     _TRISE	set	137
   521  0087                     _TRISC	set	135
   522  0088                     _TRISD	set	136
   523  0086                     _TRISB	set	134
   524  0085                     _TRISA	set	133
   525  0187                     _BAUDCTLbits	set	391
   526  0189                     _ANSELH	set	393
   527  0188                     _ANSEL	set	392
   528  0029                     STR_3:
   529  0029  3453               	retlw	83	;'S'
   530  002A  3431               	retlw	49	;'1'
   531  002B  343A               	retlw	58	;':'
   532  002C  3420               	retlw	32	;' '
   533  002D  3420               	retlw	32	;' '
   534  002E  3420               	retlw	32	;' '
   535  002F  3420               	retlw	32	;' '
   536  0030  3453               	retlw	83	;'S'
   537  0031  3432               	retlw	50	;'2'
   538  0032  343A               	retlw	58	;':'
   539  0033  3420               	retlw	32	;' '
   540  0034  3420               	retlw	32	;' '
   541  0035  3420               	retlw	32	;' '
   542  0036  3453               	retlw	83	;'S'
   543  0037  3433               	retlw	51	;'3'
   544  0038  343A               	retlw	58	;':'
   545  0039  3400               	retlw	0
   546  003A                     STR_2:
   547  003A  344A               	retlw	74	;'J'
   548  003B  346F               	retlw	111	;'o'
   549  003C  3473               	retlw	115	;'s'
   550  003D  3465               	retlw	101	;'e'
   551  003E  3420               	retlw	32	;' '
   552  003F  3453               	retlw	83	;'S'
   553  0040  3461               	retlw	97	;'a'
   554  0041  346E               	retlw	110	;'n'
   555  0042  3474               	retlw	116	;'t'
   556  0043  3469               	retlw	105	;'i'
   557  0044  347A               	retlw	122	;'z'
   558  0045  346F               	retlw	111	;'o'
   559  0046  3400               	retlw	0
   560  0047                     STR_4:
   561  0047  3425               	retlw	37	;'%'
   562  0048  3464               	retlw	100	;'d'
   563  0049  342E               	retlw	46	;'.'
   564  004A  3425               	retlw	37	;'%'
   565  004B  3464               	retlw	100	;'d'
   566  004C  3425               	retlw	37	;'%'
   567  004D  3464               	retlw	100	;'d'
   568  004E  3400               	retlw	0
   569  004F                     STR_6:
   570  004F  3425               	retlw	37	;'%'
   571  0050  3464               	retlw	100	;'d'
   572  0051  3425               	retlw	37	;'%'
   573  0052  3464               	retlw	100	;'d'
   574  0053  3425               	retlw	37	;'%'
   575  0054  3464               	retlw	100	;'d'
   576  0055  3400               	retlw	0
   577  0056                     STR_1:
   578  0056  3448               	retlw	72	;'H'
   579  0057  346F               	retlw	111	;'o'
   580  0058  346C               	retlw	108	;'l'
   581  0059  3461               	retlw	97	;'a'
   582  005A  3400               	retlw	0
   583  0047                     
   584                           	psect	cinit
   585  07EF                     start_initialization:	
   586                           ; #config settings
   587                           
   588  07EF                     __initialization:
   589                           
   590                           ; Clear objects allocated to COMMON
   591  07EF  01F6               	clrf	__pbssCOMMON& (0+127)
   592  07F0  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   593  07F1  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   594  07F2  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   595                           
   596                           ; Clear objects allocated to BANK0
   597  07F3  1383               	bcf	3,7	;select IRP bank0
   598  07F4  3048               	movlw	low __pbssBANK0
   599  07F5  0084               	movwf	4
   600  07F6  306C               	movlw	low (__pbssBANK0+36)
   601  07F7  120A  118A  218E  120A  118A  	fcall	clear_ram0
   602  07FC                     end_of_initialization:	
   603                           ;End of C runtime variable initialization code
   604                           
   605  07FC                     __end_of__initialization:
   606  07FC  0183               	clrf	3
   607  07FD  120A  118A  2E4B   	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  0076                     __pbssCOMMON:
   611  0076                     _dato:
   612  0076                     	ds	1
   613  0077                     _cen:
   614  0077                     	ds	1
   615  0078                     _dec:
   616  0078                     	ds	1
   617  0079                     _uni:
   618  0079                     	ds	1
   619                           
   620                           	psect	bssBANK0
   621  0048                     __pbssBANK0:
   622  0048                     _Cont_U:
   623  0048                     	ds	1
   624  0049                     _cont2:
   625  0049                     	ds	1
   626  004A                     _cont1:
   627  004A                     	ds	1
   628  004B                     _buffer3:
   629  004B                     	ds	10
   630  0055                     _buffer2:
   631  0055                     	ds	10
   632  005F                     _buffer1:
   633  005F                     	ds	10
   634  0069                     _vol3:
   635  0069                     	ds	1
   636  006A                     _vol2:
   637  006A                     	ds	1
   638  006B                     _vol1:
   639  006B                     	ds	1
   640                           
   641                           	psect	clrtext
   642  018E                     clear_ram0:	
   643                           ;	Called with FSR containing the base address, and
   644                           ;	W with the last address+1
   645                           
   646  018E  0064               	clrwdt	;clear the watchdog before getting into this loop
   647  018F                     clrloop0:
   648  018F  0180               	clrf	0	;clear RAM location pointed to by FSR
   649  0190  0A84               	incf	4,f	;increment pointer
   650  0191  0604               	xorwf	4,w	;XOR with final address
   651  0192  1903               	btfsc	3,2	;have we reached the end yet?
   652  0193  3400               	retlw	0	;all done for this memory range, return
   653  0194  0604               	xorwf	4,w	;XOR again to restore value
   654  0195  298F               	goto	clrloop0	;do the next byte
   655                           
   656                           	psect	cstackCOMMON
   657  0071                     __pcstackCOMMON:
   658  0071                     ?_ADC:
   659  0071                     ??_ADC:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0071                     ?_setup:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0071                     ?_Iniciar_LCD:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0071                     ?_Limpiar_pantallaLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0071                     ?_conversion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0071                     ?_conversion_char:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0071                     ?_dato_recibido:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0071                     ?_isr:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0071                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0071                     ?_prender_ELCD:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0071                     ?_Escribir_comandoLCD:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  0071                     	ds	1
   695  0072                     ??_isr:
   696                           
   697                           ; 1 bytes @ 0x1
   698  0072                     	ds	3
   699  0075                     ??_conversion:
   700  0075                     ??_config_ADC:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0075                     ??_prender_ELCD:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0075                     ??___awdiv:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0075                     ??___awmod:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0075                     ??___lwdiv:	
   713                           ; 1 bytes @ 0x4
   714                           
   715                           
   716                           ; 1 bytes @ 0x4
   717  0075                     	ds	1
   718  0076                     ??_setup:
   719  0076                     ??_Escribir_comandoLCD:	
   720                           ; 1 bytes @ 0x5
   721                           
   722                           
   723                           	psect	cstackBANK0
   724  0020                     __pcstackBANK0:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0020                     ?_config_ADC:
   728  0020                     ?___awdiv:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0020                     ?___awmod:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ?___lwdiv:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0020                     Escribir_comandoLCD@Comando:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0020                     config_ADC@channel:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0020                     ___awdiv@divisor:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0020                     ___awmod@divisor:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0020                     ___lwdiv@divisor:	
   750                           ; 2 bytes @ 0x0
   751                           
   752                           
   753                           ; 2 bytes @ 0x0
   754  0020                     	ds	1
   755  0021                     ??_Iniciar_LCD:
   756  0021                     ??_Limpiar_pantallaLCD:	
   757                           ; 1 bytes @ 0x1
   758                           
   759  0021                     ?_set_cursor:	
   760                           ; 1 bytes @ 0x1
   761                           
   762  0021                     ?_Escribir_stringLCD:	
   763                           ; 1 bytes @ 0x1
   764                           
   765  0021                     set_cursor@posicion:	
   766                           ; 1 bytes @ 0x1
   767                           
   768  0021                     Escribir_stringLCD@d:	
   769                           ; 1 bytes @ 0x1
   770                           
   771                           
   772                           ; 2 bytes @ 0x1
   773  0021                     	ds	1
   774  0022                     ??_set_cursor:
   775  0022                     ___awdiv@dividend:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0022                     ___awmod@dividend:	
   779                           ; 2 bytes @ 0x2
   780                           
   781  0022                     ___lwdiv@dividend:	
   782                           ; 2 bytes @ 0x2
   783                           
   784                           
   785                           ; 2 bytes @ 0x2
   786  0022                     	ds	1
   787  0023                     ??_Escribir_stringLCD:
   788                           
   789                           ; 1 bytes @ 0x3
   790  0023                     	ds	1
   791  0024                     Escribir_stringLCD@i:
   792  0024                     set_cursor@linea:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0024                     ___awdiv@counter:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0024                     ___awmod@counter:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0024                     ___lwdiv@counter:	
   802                           ; 1 bytes @ 0x4
   803                           
   804                           
   805                           ; 1 bytes @ 0x4
   806  0024                     	ds	1
   807  0025                     ___awdiv@sign:
   808  0025                     ___awmod@sign:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0025                     ___lwdiv@quotient:	
   812                           ; 1 bytes @ 0x5
   813                           
   814                           
   815                           ; 2 bytes @ 0x5
   816  0025                     	ds	1
   817  0026                     ___awdiv@quotient:
   818                           
   819                           ; 2 bytes @ 0x6
   820  0026                     	ds	1
   821  0027                     ?___lwmod:
   822  0027                     ___lwmod@divisor:	
   823                           ; 2 bytes @ 0x7
   824                           
   825                           
   826                           ; 2 bytes @ 0x7
   827  0027                     	ds	1
   828  0028                     ?_divisor:
   829  0028                     ?_divisor1:	
   830                           ; 1 bytes @ 0x8
   831                           
   832  0028                     divisor@dig:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  0028                     divisor1@dig:	
   836                           ; 1 bytes @ 0x8
   837                           
   838                           
   839                           ; 1 bytes @ 0x8
   840  0028                     	ds	1
   841  0029                     ??_divisor:
   842  0029                     ??_divisor1:	
   843                           ; 1 bytes @ 0x9
   844                           
   845  0029                     ___lwmod@dividend:	
   846                           ; 1 bytes @ 0x9
   847                           
   848                           
   849                           ; 2 bytes @ 0x9
   850  0029                     	ds	2
   851  002B                     ??___lwmod:
   852  002B                     divisor@a:	
   853                           ; 1 bytes @ 0xB
   854                           
   855                           
   856                           ; 1 bytes @ 0xB
   857  002B                     	ds	1
   858  002C                     ___lwmod@counter:
   859  002C                     divisor@b:	
   860                           ; 1 bytes @ 0xC
   861                           
   862                           
   863                           ; 2 bytes @ 0xC
   864  002C                     	ds	1
   865  002D                     ?_sprintf:
   866  002D                     divisor1@a:	
   867                           ; 2 bytes @ 0xD
   868                           
   869  002D                     sprintf@f:	
   870                           ; 1 bytes @ 0xD
   871                           
   872                           
   873                           ; 1 bytes @ 0xD
   874  002D                     	ds	1
   875  002E                     divisor@i:
   876  002E                     divisor1@i:	
   877                           ; 2 bytes @ 0xE
   878                           
   879                           
   880                           ; 2 bytes @ 0xE
   881  002E                     	ds	6
   882  0034                     ??_sprintf:
   883                           
   884                           ; 1 bytes @ 0x14
   885  0034                     	ds	3
   886  0037                     sprintf@ap:
   887                           
   888                           ; 1 bytes @ 0x17
   889  0037                     	ds	1
   890  0038                     sprintf@flag:
   891                           
   892                           ; 1 bytes @ 0x18
   893  0038                     	ds	1
   894  0039                     sprintf@prec:
   895                           
   896                           ; 1 bytes @ 0x19
   897  0039                     	ds	1
   898  003A                     sprintf@val:
   899                           
   900                           ; 2 bytes @ 0x1A
   901  003A                     	ds	2
   902  003C                     sprintf@sp:
   903                           
   904                           ; 1 bytes @ 0x1C
   905  003C                     	ds	1
   906  003D                     sprintf@c:
   907                           
   908                           ; 1 bytes @ 0x1D
   909  003D                     	ds	1
   910  003E                     ??_conversion_char:
   911  003E                     ??_dato_recibido:	
   912                           ; 1 bytes @ 0x1E
   913                           
   914                           
   915                           ; 1 bytes @ 0x1E
   916  003E                     	ds	7
   917  0045                     ??_main:
   918                           
   919                           ; 1 bytes @ 0x25
   920  0045                     	ds	3
   921                           
   922                           	psect	maintext
   923  064B                     __pmaintext:	
   924 ;;
   925 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   926 ;;
   927 ;; *************** function _main *****************
   928 ;; Defined at:
   929 ;;		line 87 in file "LAB2.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : B00/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0
   945 ;;      Temps:          0       3       0       0       0
   946 ;;      Totals:         0       3       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels required when called: 5
   949 ;; This function calls:
   950 ;;		_Escribir_stringLCD
   951 ;;		_Iniciar_LCD
   952 ;;		_Limpiar_pantallaLCD
   953 ;;		_conversion
   954 ;;		_conversion_char
   955 ;;		_dato_recibido
   956 ;;		_set_cursor
   957 ;;		_setup
   958 ;; This function is called by:
   959 ;;		Startup code after reset
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _main
   965  064B                     _main:
   966  064B                     l2221:	
   967                           ;incstack = 0
   968                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   969                           
   970                           
   971                           ;LAB2.c: 88:     setup();
   972  064B  120A  118A  237F  120A  118A  	fcall	_setup
   973                           
   974                           ;LAB2.c: 89:     Iniciar_LCD();
   975  0650  120A  118A  25D7  120A  118A  	fcall	_Iniciar_LCD
   976                           
   977                           ;LAB2.c: 90:     Limpiar_pantallaLCD();
   978  0655  120A  118A  21BE  120A  118A  	fcall	_Limpiar_pantallaLCD
   979                           
   980                           ;LAB2.c: 91:     set_cursor(1,0);
   981  065A  1283               	bcf	3,5	;RP0=0, select bank0
   982  065B  1303               	bcf	3,6	;RP1=0, select bank0
   983  065C  01A1               	clrf	set_cursor@posicion
   984  065D  3001               	movlw	1
   985  065E  120A  118A  23C5  120A  118A  	fcall	_set_cursor
   986  0663                     l2223:
   987                           
   988                           ;LAB2.c: 92:     Escribir_stringLCD("Hola");
   989  0663  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   990  0664  1283               	bcf	3,5	;RP0=0, select bank0
   991  0665  1303               	bcf	3,6	;RP1=0, select bank0
   992  0666  00A1               	movwf	Escribir_stringLCD@d
   993  0667  3080               	movlw	128
   994  0668  00A2               	movwf	Escribir_stringLCD@d+1
   995  0669  120A  118A  2252  120A  118A  	fcall	_Escribir_stringLCD
   996  066E                     l2225:
   997                           
   998                           ;LAB2.c: 93:     set_cursor(2,2);
   999  066E  3002               	movlw	2
  1000  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0671  00C5               	movwf	??_main
  1003  0672  0845               	movf	??_main,w
  1004  0673  00A1               	movwf	set_cursor@posicion
  1005  0674  3002               	movlw	2
  1006  0675  120A  118A  23C5  120A  118A  	fcall	_set_cursor
  1007                           
  1008                           ;LAB2.c: 94:     Escribir_stringLCD("Jose Santizo");
  1009  067A  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1010  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1011  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1012  067D  00A1               	movwf	Escribir_stringLCD@d
  1013  067E  3080               	movlw	128
  1014  067F  00A2               	movwf	Escribir_stringLCD@d+1
  1015  0680  120A  118A  2252  120A  118A  	fcall	_Escribir_stringLCD
  1016  0685                     l2227:
  1017                           
  1018                           ;LAB2.c: 95:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1019  0685  301A               	movlw	26
  1020  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0688  00C7               	movwf	??_main+2
  1023  0689  305E               	movlw	94
  1024  068A  00C6               	movwf	??_main+1
  1025  068B  306D               	movlw	109
  1026  068C  00C5               	movwf	??_main
  1027  068D                     u1917:
  1028  068D  0BC5               	decfsz	??_main,f
  1029  068E  2E8D               	goto	u1917
  1030  068F  0BC6               	decfsz	??_main+1,f
  1031  0690  2E8D               	goto	u1917
  1032  0691  0BC7               	decfsz	??_main+2,f
  1033  0692  2E8D               	goto	u1917
  1034  0693  2E94               	nop2
  1035  0694                     l2229:
  1036                           
  1037                           ;LAB2.c: 96:     ADCON0bits.GO = 1;
  1038  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0696  149F               	bsf	31,1	;volatile
  1041  0697                     l2231:
  1042                           
  1043                           ;LAB2.c: 98:     Limpiar_pantallaLCD();
  1044  0697  120A  118A  21BE  120A  118A  	fcall	_Limpiar_pantallaLCD
  1045  069C                     l2233:
  1046                           
  1047                           ;LAB2.c: 101:         conversion();
  1048  069C  120A  118A  21F8  120A  118A  	fcall	_conversion
  1049  06A1                     l2235:
  1050                           
  1051                           ;LAB2.c: 104:         set_cursor(1,0);
  1052  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1053  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1054  06A3  01A1               	clrf	set_cursor@posicion
  1055  06A4  3001               	movlw	1
  1056  06A5  120A  118A  23C5  120A  118A  	fcall	_set_cursor
  1057  06AA                     l2237:
  1058                           
  1059                           ;LAB2.c: 105:         Escribir_stringLCD("S1:    S2:   S3:");
  1060  06AA  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1061  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1062  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1063  06AD  00A1               	movwf	Escribir_stringLCD@d
  1064  06AE  3080               	movlw	128
  1065  06AF  00A2               	movwf	Escribir_stringLCD@d+1
  1066  06B0  120A  118A  2252  120A  118A  	fcall	_Escribir_stringLCD
  1067  06B5                     l2239:
  1068                           
  1069                           ;LAB2.c: 107:         conversion_char();
  1070  06B5  120A  118A  2513  120A  118A  	fcall	_conversion_char
  1071  06BA                     l2241:
  1072                           
  1073                           ;LAB2.c: 109:         set_cursor(2,0);
  1074  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1075  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1076  06BC  01A1               	clrf	set_cursor@posicion
  1077  06BD  3002               	movlw	2
  1078  06BE  120A  118A  23C5  120A  118A  	fcall	_set_cursor
  1079  06C3                     l2243:
  1080                           
  1081                           ;LAB2.c: 110:         Escribir_stringLCD(buffer1);
  1082  06C3  305F               	movlw	(low (_buffer1| 0))& (0+255)
  1083  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1084  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1085  06C6  00A1               	movwf	Escribir_stringLCD@d
  1086  06C7  3000               	movlw	0
  1087  06C8  00A2               	movwf	Escribir_stringLCD@d+1
  1088  06C9  120A  118A  2252  120A  118A  	fcall	_Escribir_stringLCD
  1089  06CE                     l2245:
  1090                           
  1091                           ;LAB2.c: 111:         set_cursor(2,7);
  1092  06CE  3007               	movlw	7
  1093  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1094  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1095  06D1  00C5               	movwf	??_main
  1096  06D2  0845               	movf	??_main,w
  1097  06D3  00A1               	movwf	set_cursor@posicion
  1098  06D4  3002               	movlw	2
  1099  06D5  120A  118A  23C5  120A  118A  	fcall	_set_cursor
  1100  06DA                     l2247:
  1101                           
  1102                           ;LAB2.c: 112:         Escribir_stringLCD(buffer2);
  1103  06DA  3055               	movlw	(low (_buffer2| 0))& (0+255)
  1104  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1105  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1106  06DD  00A1               	movwf	Escribir_stringLCD@d
  1107  06DE  3000               	movlw	0
  1108  06DF  00A2               	movwf	Escribir_stringLCD@d+1
  1109  06E0  120A  118A  2252  120A  118A  	fcall	_Escribir_stringLCD
  1110  06E5                     l2249:
  1111                           
  1112                           ;LAB2.c: 115:         dato_recibido();
  1113  06E5  120A  118A  2224  120A  118A  	fcall	_dato_recibido
  1114  06EA                     l2251:
  1115                           
  1116                           ;LAB2.c: 117:         set_cursor(2,13);
  1117  06EA  300D               	movlw	13
  1118  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1119  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1120  06ED  00C5               	movwf	??_main
  1121  06EE  0845               	movf	??_main,w
  1122  06EF  00A1               	movwf	set_cursor@posicion
  1123  06F0  3002               	movlw	2
  1124  06F1  120A  118A  23C5  120A  118A  	fcall	_set_cursor
  1125  06F6                     l2253:
  1126                           
  1127                           ;LAB2.c: 118:         Escribir_stringLCD(buffer3);
  1128  06F6  304B               	movlw	(low (_buffer3| 0))& (0+255)
  1129  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1130  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1131  06F9  00A1               	movwf	Escribir_stringLCD@d
  1132  06FA  3000               	movlw	0
  1133  06FB  00A2               	movwf	Escribir_stringLCD@d+1
  1134  06FC  120A  118A  2252  120A  118A  	fcall	_Escribir_stringLCD
  1135  0701  2E9C               	goto	l2233
  1136  0702  120A  118A  280C   	ljmp	start
  1137  0705                     __end_of_main:
  1138                           
  1139                           	psect	text1
  1140  037F                     __ptext1:	
  1141 ;; *************** function _setup *****************
  1142 ;; Defined at:
  1143 ;;		line 123 in file "LAB2.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, pclath, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 3
  1164 ;; This function calls:
  1165 ;;		_config_ADC
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _setup
  1173  037F                     _setup:
  1174  037F                     l2107:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1177                           
  1178                           
  1179                           ;LAB2.c: 126:     ANSEL = 0b0011;
  1180  037F  3003               	movlw	3
  1181  0380  1683               	bsf	3,5	;RP0=1, select bank3
  1182  0381  1703               	bsf	3,6	;RP1=1, select bank3
  1183  0382  0088               	movwf	8	;volatile
  1184  0383                     l2109:
  1185                           
  1186                           ;LAB2.c: 127:     ANSELH = 0;
  1187  0383  0189               	clrf	9	;volatile
  1188  0384                     l2111:
  1189                           
  1190                           ;LAB2.c: 129:     TRISA = 0b0011;
  1191  0384  3003               	movlw	3
  1192  0385  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0386  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0387  0085               	movwf	5	;volatile
  1195                           
  1196                           ;LAB2.c: 130:     TRISB = 0;
  1197  0388  0186               	clrf	6	;volatile
  1198                           
  1199                           ;LAB2.c: 131:     TRISD = 0;
  1200  0389  0188               	clrf	8	;volatile
  1201                           
  1202                           ;LAB2.c: 132:     TRISC = 0;
  1203  038A  0187               	clrf	7	;volatile
  1204                           
  1205                           ;LAB2.c: 133:     TRISE = 0;
  1206  038B  0189               	clrf	9	;volatile
  1207                           
  1208                           ;LAB2.c: 135:     PORTA = 0;
  1209  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1210  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1211  038E  0185               	clrf	5	;volatile
  1212                           
  1213                           ;LAB2.c: 136:     PORTD = 0;
  1214  038F  0188               	clrf	8	;volatile
  1215                           
  1216                           ;LAB2.c: 137:     PORTC = 0;
  1217  0390  0187               	clrf	7	;volatile
  1218                           
  1219                           ;LAB2.c: 138:     PORTE = 0;
  1220  0391  0189               	clrf	9	;volatile
  1221                           
  1222                           ;LAB2.c: 139:     PORTB = 0;
  1223  0392  0186               	clrf	6	;volatile
  1224  0393                     l2113:
  1225                           
  1226                           ;LAB2.c: 142:     OSCCONbits.IRCF = 0b0110;
  1227  0393  1683               	bsf	3,5	;RP0=1, select bank1
  1228  0394  1303               	bcf	3,6	;RP1=0, select bank1
  1229  0395  080F               	movf	15,w	;volatile
  1230  0396  398F               	andlw	-113
  1231  0397  3860               	iorlw	96
  1232  0398  008F               	movwf	15	;volatile
  1233  0399                     l2115:
  1234                           
  1235                           ;LAB2.c: 143:     OSCCONbits.SCS = 1;
  1236  0399  140F               	bsf	15,0	;volatile
  1237  039A                     l2117:
  1238                           
  1239                           ;LAB2.c: 146:     config_ADC(0);
  1240  039A  3000               	movlw	0
  1241  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1242  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1243  039D  00A0               	movwf	config_ADC@channel
  1244  039E  00A1               	movwf	config_ADC@channel+1
  1245  039F  120A  118A  21A4  120A  118A  	fcall	_config_ADC
  1246  03A4                     l2119:
  1247                           
  1248                           ;LAB2.c: 149:     PIR1bits.ADIF = 0;
  1249  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1250  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1251  03A6  130C               	bcf	12,6	;volatile
  1252  03A7                     l2121:
  1253                           
  1254                           ;LAB2.c: 150:     PIE1bits.ADIE = 1;
  1255  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1256  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1257  03A9  170C               	bsf	12,6	;volatile
  1258  03AA                     l2123:
  1259                           
  1260                           ;LAB2.c: 151:     PIR1bits.RCIF = 0;
  1261  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1262  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1263  03AC  128C               	bcf	12,5	;volatile
  1264  03AD                     l2125:
  1265                           
  1266                           ;LAB2.c: 152:     PIE1bits.RCIE = 1;
  1267  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  1268  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  1269  03AF  168C               	bsf	12,5	;volatile
  1270  03B0                     l2127:
  1271                           
  1272                           ;LAB2.c: 153:     INTCONbits.PEIE = 1;
  1273  03B0  170B               	bsf	11,6	;volatile
  1274  03B1                     l2129:
  1275                           
  1276                           ;LAB2.c: 154:     INTCONbits.GIE = 1;
  1277  03B1  178B               	bsf	11,7	;volatile
  1278  03B2                     l2131:
  1279                           
  1280                           ;LAB2.c: 157:     TXSTAbits.SYNC = 0;
  1281  03B2  1218               	bcf	24,4	;volatile
  1282  03B3                     l2133:
  1283                           
  1284                           ;LAB2.c: 158:     TXSTAbits.BRGH = 1;
  1285  03B3  1518               	bsf	24,2	;volatile
  1286  03B4                     l2135:
  1287                           
  1288                           ;LAB2.c: 160:     BAUDCTLbits.BRG16 = 0;
  1289  03B4  1683               	bsf	3,5	;RP0=1, select bank3
  1290  03B5  1703               	bsf	3,6	;RP1=1, select bank3
  1291  03B6  1187               	bcf	7,3	;volatile
  1292  03B7                     l2137:
  1293                           
  1294                           ;LAB2.c: 162:     SPBRG = 25;
  1295  03B7  3019               	movlw	25
  1296  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1297  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1298  03BA  0099               	movwf	25	;volatile
  1299  03BB                     l2139:
  1300                           
  1301                           ;LAB2.c: 163:     SPBRGH = 0;
  1302  03BB  019A               	clrf	26	;volatile
  1303  03BC                     l2141:
  1304                           
  1305                           ;LAB2.c: 165:     RCSTAbits.SPEN = 1;
  1306  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1307  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1308  03BE  1798               	bsf	24,7	;volatile
  1309  03BF                     l2143:
  1310                           
  1311                           ;LAB2.c: 166:     RCSTAbits.RX9 = 0;
  1312  03BF  1318               	bcf	24,6	;volatile
  1313  03C0                     l2145:
  1314                           
  1315                           ;LAB2.c: 167:     RCSTAbits.CREN = 1;
  1316  03C0  1618               	bsf	24,4	;volatile
  1317  03C1                     l2147:
  1318                           
  1319                           ;LAB2.c: 169:     TXSTAbits.TXEN = 1;
  1320  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1321  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1322  03C3  1698               	bsf	24,5	;volatile
  1323  03C4                     l122:
  1324  03C4  0008               	return
  1325  03C5                     __end_of_setup:
  1326                           
  1327                           	psect	text2
  1328  01A4                     __ptext2:	
  1329 ;; *************** function _config_ADC *****************
  1330 ;; Defined at:
  1331 ;;		line 36 in file "ADC.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  channel         2    0[BANK0 ] int 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       2       0       0       0
  1346 ;;      Locals:         0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0
  1348 ;;      Totals:         1       2       0       0       0
  1349 ;;Total ram usage:        3 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 2
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_setup
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _config_ADC
  1361  01A4                     _config_ADC:
  1362  01A4                     l1991:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1365                           
  1366                           
  1367                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1368  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1369  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1370  01A6  139F               	bcf	31,7	;volatile
  1371                           
  1372                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1373  01A7  121F               	bcf	31,4	;volatile
  1374                           
  1375                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1376  01A8  129F               	bcf	31,5	;volatile
  1377  01A9                     l1993:
  1378                           
  1379                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1380  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1381  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1382  01AB  081F               	movf	31,w	;volatile
  1383  01AC  393F               	andlw	-193
  1384  01AD  3840               	iorlw	64
  1385  01AE  009F               	movwf	31	;volatile
  1386                           
  1387                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1388  01AF  0820               	movf	config_ADC@channel,w
  1389  01B0  00F5               	movwf	??_config_ADC
  1390  01B1  0DF5               	rlf	??_config_ADC,f
  1391  01B2  0DF5               	rlf	??_config_ADC,f
  1392  01B3  081F               	movf	31,w	;volatile
  1393  01B4  0675               	xorwf	??_config_ADC,w
  1394  01B5  39C3               	andlw	-61
  1395  01B6  0675               	xorwf	??_config_ADC,w
  1396  01B7  009F               	movwf	31	;volatile
  1397  01B8                     l1995:
  1398                           
  1399                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1400  01B8  141F               	bsf	31,0	;volatile
  1401  01B9                     l1997:
  1402                           
  1403                           ;ADC.c: 44:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1404  01B9  3021               	movlw	33
  1405  01BA  00F5               	movwf	??_config_ADC
  1406  01BB                     u1927:
  1407  01BB  0BF5               	decfsz	??_config_ADC,f
  1408  01BC  29BB               	goto	u1927
  1409  01BD                     l224:
  1410  01BD  0008               	return
  1411  01BE                     __end_of_config_ADC:
  1412                           
  1413                           	psect	text3
  1414  03C5                     __ptext3:	
  1415 ;; *************** function _set_cursor *****************
  1416 ;; Defined at:
  1417 ;;		line 71 in file "LCD.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  linea           1    wreg     unsigned char 
  1420 ;;  posicion        1    1[BANK0 ] unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  linea           1    4[BANK0 ] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       1       0       0       0
  1433 ;;      Locals:         0       1       0       0       0
  1434 ;;      Temps:          0       2       0       0       0
  1435 ;;      Totals:         0       4       0       0       0
  1436 ;;Total ram usage:        4 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 4
  1439 ;; This function calls:
  1440 ;;		_Escribir_comandoLCD
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _set_cursor
  1448  03C5                     _set_cursor:
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1452                           ;set_cursor@linea stored from wreg
  1453  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1454  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1455  03C7  00A4               	movwf	set_cursor@linea
  1456  03C8                     l2183:
  1457                           
  1458                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1459  03C8  1287               	bcf	7,5	;volatile
  1460  03C9  1208               	bcf	8,4	;volatile
  1461  03CA                     l2185:
  1462                           
  1463                           ;LCD.c: 75:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1464  03CA  0324               	decf	set_cursor@linea,w
  1465  03CB  1D03               	btfss	3,2
  1466  03CC  2BCE               	goto	u1861
  1467  03CD  2BCF               	goto	u1860
  1468  03CE                     u1861:
  1469  03CE  2BD6               	goto	l2189
  1470  03CF                     u1860:
  1471  03CF                     l2187:
  1472  03CF  3080               	movlw	128
  1473  03D0  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  1474  03D5  2BE2               	goto	l2193
  1475  03D6                     l2189:
  1476  03D6  3002               	movlw	2
  1477  03D7  0624               	xorwf	set_cursor@linea,w
  1478  03D8  1D03               	btfss	3,2
  1479  03D9  2BDB               	goto	u1871
  1480  03DA  2BDC               	goto	u1870
  1481  03DB                     u1871:
  1482  03DB  2BE2               	goto	l2193
  1483  03DC                     u1870:
  1484  03DC                     l2191:
  1485  03DC  30C0               	movlw	192
  1486  03DD  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  1487  03E2                     l2193:
  1488                           
  1489                           ;LCD.c: 78:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1490  03E2  3068               	movlw	104
  1491  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1492  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1493  03E5  00A3               	movwf	??_set_cursor+1
  1494  03E6  30E3               	movlw	227
  1495  03E7  00A2               	movwf	??_set_cursor
  1496  03E8                     u1937:
  1497  03E8  0BA2               	decfsz	??_set_cursor,f
  1498  03E9  2BE8               	goto	u1937
  1499  03EA  0BA3               	decfsz	??_set_cursor+1,f
  1500  03EB  2BE8               	goto	u1937
  1501  03EC  2BED               	nop2
  1502  03ED                     l2195:
  1503                           
  1504                           ;LCD.c: 80:     if (posicion != 0){
  1505  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1506  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1507  03EF  0821               	movf	set_cursor@posicion,w
  1508  03F0  1903               	btfsc	3,2
  1509  03F1  2BF3               	goto	u1881
  1510  03F2  2BF4               	goto	u1880
  1511  03F3                     u1881:
  1512  03F3  2C0F               	goto	l190
  1513  03F4                     u1880:
  1514  03F4  2BFF               	goto	l2203
  1515  03F5                     l2199:
  1516                           
  1517                           ;LCD.c: 82:             Escribir_comandoLCD(0b00010100);
  1518  03F5  3014               	movlw	20
  1519  03F6  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  1520  03FB                     l2201:
  1521                           
  1522                           ;LCD.c: 83:             posicion--;
  1523  03FB  3001               	movlw	1
  1524  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1525  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1526  03FE  02A1               	subwf	set_cursor@posicion,f
  1527  03FF                     l2203:
  1528                           
  1529                           ;LCD.c: 81:         while(posicion > 0){
  1530  03FF  0821               	movf	set_cursor@posicion,w
  1531  0400  1D03               	btfss	3,2
  1532  0401  2C03               	goto	u1891
  1533  0402  2C04               	goto	u1890
  1534  0403                     u1891:
  1535  0403  2BF5               	goto	l2199
  1536  0404                     u1890:
  1537  0404                     l2205:
  1538                           
  1539                           ;LCD.c: 86:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1540  0404  3068               	movlw	104
  1541  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0407  00A3               	movwf	??_set_cursor+1
  1544  0408  30E3               	movlw	227
  1545  0409  00A2               	movwf	??_set_cursor
  1546  040A                     u1947:
  1547  040A  0BA2               	decfsz	??_set_cursor,f
  1548  040B  2C0A               	goto	u1947
  1549  040C  0BA3               	decfsz	??_set_cursor+1,f
  1550  040D  2C0A               	goto	u1947
  1551  040E  2C0F               	nop2
  1552  040F                     l190:
  1553  040F  0008               	return
  1554  0410                     __end_of_set_cursor:
  1555                           
  1556                           	psect	text4
  1557  0224                     __ptext4:	
  1558 ;; *************** function _dato_recibido *****************
  1559 ;; Defined at:
  1560 ;;		line 196 in file "LAB2.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0
  1576 ;;      Temps:          0       7       0       0       0
  1577 ;;      Totals:         0       7       0       0       0
  1578 ;;Total ram usage:        7 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 4
  1581 ;; This function calls:
  1582 ;;		_divisor1
  1583 ;;		_sprintf
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _dato_recibido
  1591  0224                     _dato_recibido:
  1592  0224                     l2219:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _dato_recibido: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1595                           
  1596                           
  1597                           ;LAB2.c: 197:     divisor1(Cont_U, vol3);
  1598  0224  3069               	movlw	(low (_vol3| 0))& (0+255)
  1599  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0227  00BE               	movwf	??_dato_recibido
  1602  0228  083E               	movf	??_dato_recibido,w
  1603  0229  00A8               	movwf	divisor1@dig
  1604  022A  0848               	movf	_Cont_U,w
  1605  022B  120A  118A  2410  120A  118A  	fcall	_divisor1
  1606                           
  1607                           ;LAB2.c: 198:     sprintf(buffer3, "%d%d%d", vol3[2], vol3[1], vol3[0]);
  1608  0230  3031               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1609  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0233  00BE               	movwf	??_dato_recibido
  1612  0234  083E               	movf	??_dato_recibido,w
  1613  0235  00AD               	movwf	sprintf@f
  1614  0236  086B               	movf	_vol3+2,w
  1615  0237  00BF               	movwf	??_dato_recibido+1
  1616  0238  01C0               	clrf	??_dato_recibido+2
  1617  0239  083F               	movf	??_dato_recibido+1,w
  1618  023A  00AE               	movwf	?_sprintf+1
  1619  023B  0840               	movf	??_dato_recibido+2,w
  1620  023C  00AF               	movwf	?_sprintf+2
  1621  023D  086A               	movf	_vol3+1,w
  1622  023E  00C1               	movwf	??_dato_recibido+3
  1623  023F  01C2               	clrf	??_dato_recibido+4
  1624  0240  0841               	movf	??_dato_recibido+3,w
  1625  0241  00B0               	movwf	?_sprintf+3
  1626  0242  0842               	movf	??_dato_recibido+4,w
  1627  0243  00B1               	movwf	?_sprintf+4
  1628  0244  0869               	movf	_vol3,w
  1629  0245  00C3               	movwf	??_dato_recibido+5
  1630  0246  01C4               	clrf	??_dato_recibido+6
  1631  0247  0843               	movf	??_dato_recibido+5,w
  1632  0248  00B2               	movwf	?_sprintf+5
  1633  0249  0844               	movf	??_dato_recibido+6,w
  1634  024A  00B3               	movwf	?_sprintf+6
  1635  024B  304B               	movlw	(low (_buffer3| 0))& (0+255)
  1636  024C  120A  118A  2705  120A  118A  	fcall	_sprintf
  1637  0251                     l138:
  1638  0251  0008               	return
  1639  0252                     __end_of_dato_recibido:
  1640                           
  1641                           	psect	text5
  1642  0410                     __ptext5:	
  1643 ;; *************** function _divisor1 *****************
  1644 ;; Defined at:
  1645 ;;		line 189 in file "LAB2.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  a               1    wreg     unsigned char 
  1648 ;;  dig             1    8[BANK0 ] PTR unsigned char 
  1649 ;;		 -> vol3(1), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  a               1   13[BANK0 ] unsigned char 
  1652 ;;  i               2   14[BANK0 ] int 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       1       0       0       0
  1663 ;;      Locals:         0       3       0       0       0
  1664 ;;      Temps:          0       4       0       0       0
  1665 ;;      Totals:         0       8       0       0       0
  1666 ;;Total ram usage:        8 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 3
  1669 ;; This function calls:
  1670 ;;		___awdiv
  1671 ;;		___awmod
  1672 ;; This function is called by:
  1673 ;;		_dato_recibido
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _divisor1
  1679  0410                     _divisor1:
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _divisor1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1683                           ;divisor1@a stored from wreg
  1684  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0412  00AD               	movwf	divisor1@a
  1687  0413                     l2075:
  1688                           
  1689                           ;LAB2.c: 190:     for(int i = 0; i<3 ; i++){
  1690  0413  01AE               	clrf	divisor1@i
  1691  0414  01AF               	clrf	divisor1@i+1
  1692  0415                     l2081:
  1693                           
  1694                           ;LAB2.c: 191:         dig[i] = a % 10;
  1695  0415  300A               	movlw	10
  1696  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0418  00A0               	movwf	___awmod@divisor
  1699  0419  3000               	movlw	0
  1700  041A  00A1               	movwf	___awmod@divisor+1
  1701  041B  082D               	movf	divisor1@a,w
  1702  041C  00A9               	movwf	??_divisor1
  1703  041D  01AA               	clrf	??_divisor1+1
  1704  041E  0829               	movf	??_divisor1,w
  1705  041F  00A2               	movwf	___awmod@dividend
  1706  0420  082A               	movf	??_divisor1+1,w
  1707  0421  00A3               	movwf	___awmod@dividend+1
  1708  0422  120A  118A  24B8  120A  118A  	fcall	___awmod
  1709  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0429  0820               	movf	?___awmod,w
  1712  042A  00AB               	movwf	??_divisor1+2
  1713  042B  082E               	movf	divisor1@i,w
  1714  042C  0728               	addwf	divisor1@dig,w
  1715  042D  00AC               	movwf	??_divisor1+3
  1716  042E  082C               	movf	??_divisor1+3,w
  1717  042F  0084               	movwf	4
  1718  0430  082B               	movf	??_divisor1+2,w
  1719  0431  1383               	bcf	3,7	;select IRP bank0
  1720  0432  0080               	movwf	0
  1721                           
  1722                           ;LAB2.c: 192:         a = (a - dig[i])/10;
  1723  0433  300A               	movlw	10
  1724  0434  00A0               	movwf	___awdiv@divisor
  1725  0435  3000               	movlw	0
  1726  0436  00A1               	movwf	___awdiv@divisor+1
  1727  0437  082E               	movf	divisor1@i,w
  1728  0438  0728               	addwf	divisor1@dig,w
  1729  0439  00A9               	movwf	??_divisor1
  1730  043A  0829               	movf	??_divisor1,w
  1731  043B  0084               	movwf	4
  1732  043C  0800               	movf	0,w
  1733  043D  022D               	subwf	divisor1@a,w
  1734  043E  00A2               	movwf	___awdiv@dividend
  1735  043F  01A3               	clrf	___awdiv@dividend+1
  1736  0440  1C03               	skipc
  1737  0441  03A3               	decf	___awdiv@dividend+1,f
  1738  0442  120A  118A  256E  120A  118A  	fcall	___awdiv
  1739  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0449  0820               	movf	?___awdiv,w
  1742  044A  00AA               	movwf	??_divisor1+1
  1743  044B  082A               	movf	??_divisor1+1,w
  1744  044C  00AD               	movwf	divisor1@a
  1745  044D                     l2083:
  1746                           
  1747                           ;LAB2.c: 193:     }
  1748  044D  3001               	movlw	1
  1749  044E  07AE               	addwf	divisor1@i,f
  1750  044F  1803               	skipnc
  1751  0450  0AAF               	incf	divisor1@i+1,f
  1752  0451  3000               	movlw	0
  1753  0452  07AF               	addwf	divisor1@i+1,f
  1754  0453                     l2085:
  1755  0453  082F               	movf	divisor1@i+1,w
  1756  0454  3A80               	xorlw	128
  1757  0455  00FF               	movwf	btemp+1
  1758  0456  3080               	movlw	128
  1759  0457  027F               	subwf	btemp+1,w
  1760  0458  1D03               	skipz
  1761  0459  2C5C               	goto	u1775
  1762  045A  3003               	movlw	3
  1763  045B  022E               	subwf	divisor1@i,w
  1764  045C                     u1775:
  1765  045C  1C03               	skipc
  1766  045D  2C5F               	goto	u1771
  1767  045E  2C60               	goto	u1770
  1768  045F                     u1771:
  1769  045F  2C15               	goto	l2081
  1770  0460                     u1770:
  1771  0460                     l135:
  1772  0460  0008               	return
  1773  0461                     __end_of_divisor1:
  1774                           
  1775                           	psect	text6
  1776  0513                     __ptext6:	
  1777 ;; *************** function _conversion_char *****************
  1778 ;; Defined at:
  1779 ;;		line 173 in file "LAB2.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0
  1795 ;;      Temps:          0       7       0       0       0
  1796 ;;      Totals:         0       7       0       0       0
  1797 ;;Total ram usage:        7 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 4
  1800 ;; This function calls:
  1801 ;;		_divisor
  1802 ;;		_sprintf
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _conversion_char
  1810  0513                     _conversion_char:
  1811  0513                     l2217:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _conversion_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1814                           
  1815                           
  1816                           ;LAB2.c: 174:     divisor(cont1, vol1);
  1817  0513  306B               	movlw	(low (_vol1| 0))& (0+255)
  1818  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0516  00BE               	movwf	??_conversion_char
  1821  0517  083E               	movf	??_conversion_char,w
  1822  0518  00A8               	movwf	divisor@dig
  1823  0519  084A               	movf	_cont1,w
  1824  051A  120A  118A  2461  120A  118A  	fcall	_divisor
  1825                           
  1826                           ;LAB2.c: 175:     sprintf(buffer1, "%d.%d%d", vol1[2], vol1[1], vol1[0]);
  1827  051F  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1828  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0522  00BE               	movwf	??_conversion_char
  1831  0523  083E               	movf	??_conversion_char,w
  1832  0524  00AD               	movwf	sprintf@f
  1833  0525  086D               	movf	_vol1+2,w
  1834  0526  00BF               	movwf	??_conversion_char+1
  1835  0527  01C0               	clrf	??_conversion_char+2
  1836  0528  083F               	movf	??_conversion_char+1,w
  1837  0529  00AE               	movwf	?_sprintf+1
  1838  052A  0840               	movf	??_conversion_char+2,w
  1839  052B  00AF               	movwf	?_sprintf+2
  1840  052C  086C               	movf	_vol1+1,w
  1841  052D  00C1               	movwf	??_conversion_char+3
  1842  052E  01C2               	clrf	??_conversion_char+4
  1843  052F  0841               	movf	??_conversion_char+3,w
  1844  0530  00B0               	movwf	?_sprintf+3
  1845  0531  0842               	movf	??_conversion_char+4,w
  1846  0532  00B1               	movwf	?_sprintf+4
  1847  0533  086B               	movf	_vol1,w
  1848  0534  00C3               	movwf	??_conversion_char+5
  1849  0535  01C4               	clrf	??_conversion_char+6
  1850  0536  0843               	movf	??_conversion_char+5,w
  1851  0537  00B2               	movwf	?_sprintf+5
  1852  0538  0844               	movf	??_conversion_char+6,w
  1853  0539  00B3               	movwf	?_sprintf+6
  1854  053A  305F               	movlw	(low (_buffer1| 0))& (0+255)
  1855  053B  120A  118A  2705  120A  118A  	fcall	_sprintf
  1856                           
  1857                           ;LAB2.c: 177:     divisor(cont2, vol2);
  1858  0540  306A               	movlw	(low (_vol2| 0))& (0+255)
  1859  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1861  0543  00BE               	movwf	??_conversion_char
  1862  0544  083E               	movf	??_conversion_char,w
  1863  0545  00A8               	movwf	divisor@dig
  1864  0546  0849               	movf	_cont2,w
  1865  0547  120A  118A  2461  120A  118A  	fcall	_divisor
  1866                           
  1867                           ;LAB2.c: 178:     sprintf(buffer2, "%d.%d%d", vol2[2], vol2[1], vol2[0]);
  1868  054C  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1869  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1870  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1871  054F  00BE               	movwf	??_conversion_char
  1872  0550  083E               	movf	??_conversion_char,w
  1873  0551  00AD               	movwf	sprintf@f
  1874  0552  086C               	movf	_vol2+2,w
  1875  0553  00BF               	movwf	??_conversion_char+1
  1876  0554  01C0               	clrf	??_conversion_char+2
  1877  0555  083F               	movf	??_conversion_char+1,w
  1878  0556  00AE               	movwf	?_sprintf+1
  1879  0557  0840               	movf	??_conversion_char+2,w
  1880  0558  00AF               	movwf	?_sprintf+2
  1881  0559  086B               	movf	_vol2+1,w
  1882  055A  00C1               	movwf	??_conversion_char+3
  1883  055B  01C2               	clrf	??_conversion_char+4
  1884  055C  0841               	movf	??_conversion_char+3,w
  1885  055D  00B0               	movwf	?_sprintf+3
  1886  055E  0842               	movf	??_conversion_char+4,w
  1887  055F  00B1               	movwf	?_sprintf+4
  1888  0560  086A               	movf	_vol2,w
  1889  0561  00C3               	movwf	??_conversion_char+5
  1890  0562  01C4               	clrf	??_conversion_char+6
  1891  0563  0843               	movf	??_conversion_char+5,w
  1892  0564  00B2               	movwf	?_sprintf+5
  1893  0565  0844               	movf	??_conversion_char+6,w
  1894  0566  00B3               	movwf	?_sprintf+6
  1895  0567  3055               	movlw	(low (_buffer2| 0))& (0+255)
  1896  0568  120A  118A  2705  120A  118A  	fcall	_sprintf
  1897  056D                     l125:
  1898  056D  0008               	return
  1899  056E                     __end_of_conversion_char:
  1900                           
  1901                           	psect	text7
  1902  0705                     __ptext7:	
  1903 ;; *************** function _sprintf *****************
  1904 ;; Defined at:
  1905 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  sp              1    wreg     PTR unsigned char 
  1908 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1909 ;;  f               1   13[BANK0 ] PTR const unsigned char 
  1910 ;;		 -> STR_6(7), STR_5(8), STR_4(8), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1913 ;;		 -> buffer3(10), buffer2(10), buffer1(10), 
  1914 ;;  tmpval          4    0        struct .
  1915 ;;  val             2   26[BANK0 ] unsigned int 
  1916 ;;  cp              2    0        PTR const unsigned char 
  1917 ;;  len             2    0        unsigned int 
  1918 ;;  c               1   29[BANK0 ] unsigned char 
  1919 ;;  prec            1   25[BANK0 ] char 
  1920 ;;  flag            1   24[BANK0 ] unsigned char 
  1921 ;;  ap              1   23[BANK0 ] PTR void [1]
  1922 ;;		 -> ?_sprintf(2), 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  2   13[BANK0 ] int 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1932 ;;      Params:         0       7       0       0       0
  1933 ;;      Locals:         0       7       0       0       0
  1934 ;;      Temps:          0       3       0       0       0
  1935 ;;      Totals:         0      17       0       0       0
  1936 ;;Total ram usage:       17 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 3
  1939 ;; This function calls:
  1940 ;;		___lwdiv
  1941 ;;		___lwmod
  1942 ;; This function is called by:
  1943 ;;		_conversion_char
  1944 ;;		_dato_recibido
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _sprintf
  1950  0705                     _sprintf:
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1954                           ;sprintf@sp stored from wreg
  1955  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0707  00BC               	movwf	sprintf@sp
  1958  0708                     l2013:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1961  0708  302E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1962  0709  00B4               	movwf	??_sprintf
  1963  070A  0834               	movf	??_sprintf,w
  1964  070B  00B7               	movwf	sprintf@ap
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1967  070C  2FD8               	goto	l2065
  1968  070D                     l2015:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1971  070D  3025               	movlw	37
  1972  070E  063D               	xorwf	sprintf@c,w
  1973  070F  1903               	btfsc	3,2
  1974  0710  2F12               	goto	u1701
  1975  0711  2F13               	goto	u1700
  1976  0712                     u1701:
  1977  0712  2F1F               	goto	l2021
  1978  0713                     u1700:
  1979  0713                     l2017:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1982  0713  083D               	movf	sprintf@c,w
  1983  0714  00B4               	movwf	??_sprintf
  1984  0715  083C               	movf	sprintf@sp,w
  1985  0716  0084               	movwf	4
  1986  0717  0834               	movf	??_sprintf,w
  1987  0718  1383               	bcf	3,7	;select IRP bank0
  1988  0719  0080               	movwf	0
  1989  071A                     l2019:
  1990  071A  3001               	movlw	1
  1991  071B  00B4               	movwf	??_sprintf
  1992  071C  0834               	movf	??_sprintf,w
  1993  071D  07BC               	addwf	sprintf@sp,f
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1996  071E  2FD8               	goto	l2065
  1997  071F                     l2021:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2000  071F  01B8               	clrf	sprintf@flag
  2001  0720                     l2025:	
  2002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2003                           
  2004  0720  3001               	movlw	1
  2005  0721  07AD               	addwf	sprintf@f,f
  2006  0722  30FF               	movlw	-1
  2007  0723  072D               	addwf	sprintf@f,w
  2008  0724  0084               	movwf	4
  2009  0725  120A  118A  2019  120A  118A  	fcall	stringdir
  2010  072A  00BD               	movwf	sprintf@c
  2011  072B  00B4               	movwf	??_sprintf
  2012  072C  01B5               	clrf	??_sprintf+1
  2013                           
  2014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 1, Range of values is 0 to 0
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte            4     3 (average)
  2020                           ; direct_byte           11     8 (fixed)
  2021                           ; jumptable            260     6 (fixed)
  2022                           ;	Chosen strategy is simple_byte
  2023  072D  0835               	movf	??_sprintf+1,w
  2024  072E  3A00               	xorlw	0	; case 0
  2025  072F  1903               	skipnz
  2026  0730  2F32               	goto	l2275
  2027  0731  2FD8               	goto	l2065
  2028  0732                     l2275:
  2029                           
  2030                           ; Switch size 1, requested type "simple"
  2031                           ; Number of cases is 3, Range of values is 0 to 105
  2032                           ; switch strategies available:
  2033                           ; Name         Instructions Cycles
  2034                           ; simple_byte           10     6 (average)
  2035                           ; jumptable            260     6 (fixed)
  2036                           ;	Chosen strategy is simple_byte
  2037  0732  0834               	movf	??_sprintf,w
  2038  0733  3A00               	xorlw	0	; case 0
  2039  0734  1903               	skipnz
  2040  0735  2FEA               	goto	l2067
  2041  0736  3A64               	xorlw	100	; case 100
  2042  0737  1903               	skipnz
  2043  0738  2F3D               	goto	l2027
  2044  0739  3A0D               	xorlw	13	; case 105
  2045  073A  1903               	skipnz
  2046  073B  2F3D               	goto	l2027
  2047  073C  2FD8               	goto	l2065
  2048  073D                     l2027:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2051  073D  0837               	movf	sprintf@ap,w
  2052  073E  0084               	movwf	4
  2053  073F  1383               	bcf	3,7	;select IRP bank0
  2054  0740  0800               	movf	0,w
  2055  0741  00BA               	movwf	sprintf@val
  2056  0742  0A84               	incf	4,f
  2057  0743  0800               	movf	0,w
  2058  0744  00BB               	movwf	sprintf@val+1
  2059  0745                     l2029:
  2060  0745  3002               	movlw	2
  2061  0746  00B4               	movwf	??_sprintf
  2062  0747  0834               	movf	??_sprintf,w
  2063  0748  07B7               	addwf	sprintf@ap,f
  2064  0749                     l2031:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2067  0749  1FBB               	btfss	sprintf@val+1,7
  2068  074A  2F4C               	goto	u1711
  2069  074B  2F4D               	goto	u1710
  2070  074C                     u1711:
  2071  074C  2F56               	goto	l2037
  2072  074D                     u1710:
  2073  074D                     l2033:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2076  074D  3003               	movlw	3
  2077  074E  00B4               	movwf	??_sprintf
  2078  074F  0834               	movf	??_sprintf,w
  2079  0750  04B8               	iorwf	sprintf@flag,f
  2080  0751                     l2035:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2083  0751  09BA               	comf	sprintf@val,f
  2084  0752  09BB               	comf	sprintf@val+1,f
  2085  0753  0ABA               	incf	sprintf@val,f
  2086  0754  1903               	skipnz
  2087  0755  0ABB               	incf	sprintf@val+1,f
  2088  0756                     l2037:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2091  0756  01BD               	clrf	sprintf@c
  2092  0757  0ABD               	incf	sprintf@c,f
  2093  0758                     l2043:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2096  0758  083D               	movf	sprintf@c,w
  2097  0759  00B4               	movwf	??_sprintf
  2098  075A  0734               	addwf	??_sprintf,w
  2099  075B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2100  075C  0084               	movwf	4
  2101  075D  120A  118A  2019  120A  118A  	fcall	stringdir
  2102  0762  00B5               	movwf	??_sprintf+1
  2103  0763  120A  118A  2019  120A  118A  	fcall	stringdir
  2104  0768  00B6               	movwf	??_sprintf+2
  2105  0769  0836               	movf	??_sprintf+2,w
  2106  076A  023B               	subwf	sprintf@val+1,w
  2107  076B  1D03               	skipz
  2108  076C  2F6F               	goto	u1725
  2109  076D  0835               	movf	??_sprintf+1,w
  2110  076E  023A               	subwf	sprintf@val,w
  2111  076F                     u1725:
  2112  076F  1803               	skipnc
  2113  0770  2F72               	goto	u1721
  2114  0771  2F73               	goto	u1720
  2115  0772                     u1721:
  2116  0772  2F74               	goto	l2047
  2117  0773                     u1720:
  2118  0773  2F7E               	goto	l2049
  2119  0774                     l2047:
  2120  0774  3001               	movlw	1
  2121  0775  00B4               	movwf	??_sprintf
  2122  0776  0834               	movf	??_sprintf,w
  2123  0777  07BD               	addwf	sprintf@c,f
  2124  0778  3005               	movlw	5
  2125  0779  063D               	xorwf	sprintf@c,w
  2126  077A  1D03               	btfss	3,2
  2127  077B  2F7D               	goto	u1731
  2128  077C  2F7E               	goto	u1730
  2129  077D                     u1731:
  2130  077D  2F58               	goto	l2043
  2131  077E                     u1730:
  2132  077E                     l2049:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2135  077E  0838               	movf	sprintf@flag,w
  2136  077F  3903               	andlw	3
  2137  0780  1903               	btfsc	3,2
  2138  0781  2F83               	goto	u1741
  2139  0782  2F84               	goto	u1740
  2140  0783                     u1741:
  2141  0783  2F8F               	goto	l2055
  2142  0784                     u1740:
  2143  0784                     l2051:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2146  0784  302D               	movlw	45
  2147  0785  00B4               	movwf	??_sprintf
  2148  0786  083C               	movf	sprintf@sp,w
  2149  0787  0084               	movwf	4
  2150  0788  0834               	movf	??_sprintf,w
  2151  0789  1383               	bcf	3,7	;select IRP bank0
  2152  078A  0080               	movwf	0
  2153  078B                     l2053:
  2154  078B  3001               	movlw	1
  2155  078C  00B4               	movwf	??_sprintf
  2156  078D  0834               	movf	??_sprintf,w
  2157  078E  07BC               	addwf	sprintf@sp,f
  2158  078F                     l2055:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2161  078F  083D               	movf	sprintf@c,w
  2162  0790  00B4               	movwf	??_sprintf
  2163  0791  0834               	movf	??_sprintf,w
  2164  0792  00B9               	movwf	sprintf@prec
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2167  0793  2FCF               	goto	l2063
  2168  0794                     l2057:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2171  0794  300A               	movlw	10
  2172  0795  00A7               	movwf	___lwmod@divisor
  2173  0796  3000               	movlw	0
  2174  0797  00A8               	movwf	___lwmod@divisor+1
  2175  0798  0839               	movf	sprintf@prec,w
  2176  0799  00B4               	movwf	??_sprintf
  2177  079A  0734               	addwf	??_sprintf,w
  2178  079B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2179  079C  0084               	movwf	4
  2180  079D  120A  118A  2019  120A  118A  	fcall	stringdir
  2181  07A2  00A0               	movwf	___lwdiv@divisor
  2182  07A3  120A  118A  2019  120A  118A  	fcall	stringdir
  2183  07A8  00A1               	movwf	___lwdiv@divisor+1
  2184  07A9  083B               	movf	sprintf@val+1,w
  2185  07AA  00A3               	movwf	___lwdiv@dividend+1
  2186  07AB  083A               	movf	sprintf@val,w
  2187  07AC  00A2               	movwf	___lwdiv@dividend
  2188  07AD  120A  118A  2339  120A  118A  	fcall	___lwdiv
  2189  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2190  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2191  07B4  0821               	movf	?___lwdiv+1,w
  2192  07B5  00AA               	movwf	___lwmod@dividend+1
  2193  07B6  0820               	movf	?___lwdiv,w
  2194  07B7  00A9               	movwf	___lwmod@dividend
  2195  07B8  120A  118A  22BC  120A  118A  	fcall	___lwmod
  2196  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2197  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2198  07BF  0827               	movf	?___lwmod,w
  2199  07C0  3E30               	addlw	48
  2200  07C1  00B5               	movwf	??_sprintf+1
  2201  07C2  0835               	movf	??_sprintf+1,w
  2202  07C3  00BD               	movwf	sprintf@c
  2203  07C4                     l2059:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2206  07C4  083D               	movf	sprintf@c,w
  2207  07C5  00B4               	movwf	??_sprintf
  2208  07C6  083C               	movf	sprintf@sp,w
  2209  07C7  0084               	movwf	4
  2210  07C8  0834               	movf	??_sprintf,w
  2211  07C9  1383               	bcf	3,7	;select IRP bank0
  2212  07CA  0080               	movwf	0
  2213  07CB                     l2061:
  2214  07CB  3001               	movlw	1
  2215  07CC  00B4               	movwf	??_sprintf
  2216  07CD  0834               	movf	??_sprintf,w
  2217  07CE  07BC               	addwf	sprintf@sp,f
  2218  07CF                     l2063:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2221  07CF  30FF               	movlw	255
  2222  07D0  00B4               	movwf	??_sprintf
  2223  07D1  0834               	movf	??_sprintf,w
  2224  07D2  07B9               	addwf	sprintf@prec,f
  2225  07D3  0A39               	incf	sprintf@prec,w
  2226  07D4  1D03               	btfss	3,2
  2227  07D5  2FD7               	goto	u1751
  2228  07D6  2FD8               	goto	u1750
  2229  07D7                     u1751:
  2230  07D7  2F94               	goto	l2057
  2231  07D8                     u1750:
  2232  07D8                     l2065:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2235  07D8  3001               	movlw	1
  2236  07D9  07AD               	addwf	sprintf@f,f
  2237  07DA  30FF               	movlw	-1
  2238  07DB  072D               	addwf	sprintf@f,w
  2239  07DC  0084               	movwf	4
  2240  07DD  120A  118A  2019  120A  118A  	fcall	stringdir
  2241  07E2  00B4               	movwf	??_sprintf
  2242  07E3  0834               	movf	??_sprintf,w
  2243  07E4  00BD               	movwf	sprintf@c
  2244  07E5  083D               	movf	sprintf@c,w
  2245  07E6  1D03               	btfss	3,2
  2246  07E7  2FE9               	goto	u1761
  2247  07E8  2FEA               	goto	u1760
  2248  07E9                     u1761:
  2249  07E9  2F0D               	goto	l2015
  2250  07EA                     u1760:
  2251  07EA                     l2067:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2254  07EA  083C               	movf	sprintf@sp,w
  2255  07EB  0084               	movwf	4
  2256  07EC  1383               	bcf	3,7	;select IRP bank0
  2257  07ED  0180               	clrf	0
  2258  07EE                     l363:
  2259  07EE  0008               	return
  2260  07EF                     __end_of_sprintf:
  2261                           
  2262                           	psect	text8
  2263  02BC                     __ptext8:	
  2264 ;; *************** function ___lwmod *****************
  2265 ;; Defined at:
  2266 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  divisor         2    7[BANK0 ] unsigned int 
  2269 ;;  dividend        2    9[BANK0 ] unsigned int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  counter         1   12[BANK0 ] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    7[BANK0 ] unsigned int 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       4       0       0       0
  2282 ;;      Locals:         0       1       0       0       0
  2283 ;;      Temps:          0       1       0       0       0
  2284 ;;      Totals:         0       6       0       0       0
  2285 ;;Total ram usage:        6 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 2
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_sprintf
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function ___lwmod
  2297  02BC                     ___lwmod:
  2298  02BC                     l1525:	
  2299                           ;incstack = 0
  2300                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2301                           
  2302  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2303  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2304  02BE  0827               	movf	___lwmod@divisor,w
  2305  02BF  0428               	iorwf	___lwmod@divisor+1,w
  2306  02C0  1903               	btfsc	3,2
  2307  02C1  2AC3               	goto	u1041
  2308  02C2  2AC4               	goto	u1040
  2309  02C3                     u1041:
  2310  02C3  2AF3               	goto	l1543
  2311  02C4                     u1040:
  2312  02C4                     l1527:
  2313  02C4  01AC               	clrf	___lwmod@counter
  2314  02C5  0AAC               	incf	___lwmod@counter,f
  2315  02C6  2AD2               	goto	l1533
  2316  02C7                     l1529:
  2317  02C7  3001               	movlw	1
  2318  02C8                     u1055:
  2319  02C8  1003               	clrc
  2320  02C9  0DA7               	rlf	___lwmod@divisor,f
  2321  02CA  0DA8               	rlf	___lwmod@divisor+1,f
  2322  02CB  3EFF               	addlw	-1
  2323  02CC  1D03               	skipz
  2324  02CD  2AC8               	goto	u1055
  2325  02CE                     l1531:
  2326  02CE  3001               	movlw	1
  2327  02CF  00AB               	movwf	??___lwmod
  2328  02D0  082B               	movf	??___lwmod,w
  2329  02D1  07AC               	addwf	___lwmod@counter,f
  2330  02D2                     l1533:
  2331  02D2  1FA8               	btfss	___lwmod@divisor+1,7
  2332  02D3  2AD5               	goto	u1061
  2333  02D4  2AD6               	goto	u1060
  2334  02D5                     u1061:
  2335  02D5  2AC7               	goto	l1529
  2336  02D6                     u1060:
  2337  02D6                     l1535:
  2338  02D6  0828               	movf	___lwmod@divisor+1,w
  2339  02D7  022A               	subwf	___lwmod@dividend+1,w
  2340  02D8  1D03               	skipz
  2341  02D9  2ADC               	goto	u1075
  2342  02DA  0827               	movf	___lwmod@divisor,w
  2343  02DB  0229               	subwf	___lwmod@dividend,w
  2344  02DC                     u1075:
  2345  02DC  1C03               	skipc
  2346  02DD  2ADF               	goto	u1071
  2347  02DE  2AE0               	goto	u1070
  2348  02DF                     u1071:
  2349  02DF  2AE6               	goto	l1539
  2350  02E0                     u1070:
  2351  02E0                     l1537:
  2352  02E0  0827               	movf	___lwmod@divisor,w
  2353  02E1  02A9               	subwf	___lwmod@dividend,f
  2354  02E2  0828               	movf	___lwmod@divisor+1,w
  2355  02E3  1C03               	skipc
  2356  02E4  03AA               	decf	___lwmod@dividend+1,f
  2357  02E5  02AA               	subwf	___lwmod@dividend+1,f
  2358  02E6                     l1539:
  2359  02E6  3001               	movlw	1
  2360  02E7                     u1085:
  2361  02E7  1003               	clrc
  2362  02E8  0CA8               	rrf	___lwmod@divisor+1,f
  2363  02E9  0CA7               	rrf	___lwmod@divisor,f
  2364  02EA  3EFF               	addlw	-1
  2365  02EB  1D03               	skipz
  2366  02EC  2AE7               	goto	u1085
  2367  02ED                     l1541:
  2368  02ED  3001               	movlw	1
  2369  02EE  02AC               	subwf	___lwmod@counter,f
  2370  02EF  1D03               	btfss	3,2
  2371  02F0  2AF2               	goto	u1091
  2372  02F1  2AF3               	goto	u1090
  2373  02F2                     u1091:
  2374  02F2  2AD6               	goto	l1535
  2375  02F3                     u1090:
  2376  02F3                     l1543:
  2377  02F3  082A               	movf	___lwmod@dividend+1,w
  2378  02F4  00A8               	movwf	?___lwmod+1
  2379  02F5  0829               	movf	___lwmod@dividend,w
  2380  02F6  00A7               	movwf	?___lwmod
  2381  02F7                     l649:
  2382  02F7  0008               	return
  2383  02F8                     __end_of___lwmod:
  2384                           
  2385                           	psect	text9
  2386  0339                     __ptext9:	
  2387 ;; *************** function ___lwdiv *****************
  2388 ;; Defined at:
  2389 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  divisor         2    0[BANK0 ] unsigned int 
  2392 ;;  dividend        2    2[BANK0 ] unsigned int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  quotient        2    5[BANK0 ] unsigned int 
  2395 ;;  counter         1    4[BANK0 ] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2    0[BANK0 ] unsigned int 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       4       0       0       0
  2406 ;;      Locals:         0       3       0       0       0
  2407 ;;      Temps:          1       0       0       0       0
  2408 ;;      Totals:         1       7       0       0       0
  2409 ;;Total ram usage:        8 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 2
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_sprintf
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function ___lwdiv
  2421  0339                     ___lwdiv:
  2422  0339                     l1965:	
  2423                           ;incstack = 0
  2424                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2425                           
  2426  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2427  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2428  033B  01A5               	clrf	___lwdiv@quotient
  2429  033C  01A6               	clrf	___lwdiv@quotient+1
  2430  033D                     l1967:
  2431  033D  0820               	movf	___lwdiv@divisor,w
  2432  033E  0421               	iorwf	___lwdiv@divisor+1,w
  2433  033F  1903               	btfsc	3,2
  2434  0340  2B42               	goto	u1621
  2435  0341  2B43               	goto	u1620
  2436  0342                     u1621:
  2437  0342  2B7A               	goto	l1987
  2438  0343                     u1620:
  2439  0343                     l1969:
  2440  0343  01A4               	clrf	___lwdiv@counter
  2441  0344  0AA4               	incf	___lwdiv@counter,f
  2442  0345  2B51               	goto	l1975
  2443  0346                     l1971:
  2444  0346  3001               	movlw	1
  2445  0347                     u1635:
  2446  0347  1003               	clrc
  2447  0348  0DA0               	rlf	___lwdiv@divisor,f
  2448  0349  0DA1               	rlf	___lwdiv@divisor+1,f
  2449  034A  3EFF               	addlw	-1
  2450  034B  1D03               	skipz
  2451  034C  2B47               	goto	u1635
  2452  034D                     l1973:
  2453  034D  3001               	movlw	1
  2454  034E  00F5               	movwf	??___lwdiv
  2455  034F  0875               	movf	??___lwdiv,w
  2456  0350  07A4               	addwf	___lwdiv@counter,f
  2457  0351                     l1975:
  2458  0351  1FA1               	btfss	___lwdiv@divisor+1,7
  2459  0352  2B54               	goto	u1641
  2460  0353  2B55               	goto	u1640
  2461  0354                     u1641:
  2462  0354  2B46               	goto	l1971
  2463  0355                     u1640:
  2464  0355                     l1977:
  2465  0355  3001               	movlw	1
  2466  0356                     u1655:
  2467  0356  1003               	clrc
  2468  0357  0DA5               	rlf	___lwdiv@quotient,f
  2469  0358  0DA6               	rlf	___lwdiv@quotient+1,f
  2470  0359  3EFF               	addlw	-1
  2471  035A  1D03               	skipz
  2472  035B  2B56               	goto	u1655
  2473  035C  0821               	movf	___lwdiv@divisor+1,w
  2474  035D  0223               	subwf	___lwdiv@dividend+1,w
  2475  035E  1D03               	skipz
  2476  035F  2B62               	goto	u1665
  2477  0360  0820               	movf	___lwdiv@divisor,w
  2478  0361  0222               	subwf	___lwdiv@dividend,w
  2479  0362                     u1665:
  2480  0362  1C03               	skipc
  2481  0363  2B65               	goto	u1661
  2482  0364  2B66               	goto	u1660
  2483  0365                     u1661:
  2484  0365  2B6D               	goto	l1983
  2485  0366                     u1660:
  2486  0366                     l1979:
  2487  0366  0820               	movf	___lwdiv@divisor,w
  2488  0367  02A2               	subwf	___lwdiv@dividend,f
  2489  0368  0821               	movf	___lwdiv@divisor+1,w
  2490  0369  1C03               	skipc
  2491  036A  03A3               	decf	___lwdiv@dividend+1,f
  2492  036B  02A3               	subwf	___lwdiv@dividend+1,f
  2493  036C                     l1981:
  2494  036C  1425               	bsf	___lwdiv@quotient,0
  2495  036D                     l1983:
  2496  036D  3001               	movlw	1
  2497  036E                     u1675:
  2498  036E  1003               	clrc
  2499  036F  0CA1               	rrf	___lwdiv@divisor+1,f
  2500  0370  0CA0               	rrf	___lwdiv@divisor,f
  2501  0371  3EFF               	addlw	-1
  2502  0372  1D03               	skipz
  2503  0373  2B6E               	goto	u1675
  2504  0374                     l1985:
  2505  0374  3001               	movlw	1
  2506  0375  02A4               	subwf	___lwdiv@counter,f
  2507  0376  1D03               	btfss	3,2
  2508  0377  2B79               	goto	u1681
  2509  0378  2B7A               	goto	u1680
  2510  0379                     u1681:
  2511  0379  2B55               	goto	l1977
  2512  037A                     u1680:
  2513  037A                     l1987:
  2514  037A  0826               	movf	___lwdiv@quotient+1,w
  2515  037B  00A1               	movwf	?___lwdiv+1
  2516  037C  0825               	movf	___lwdiv@quotient,w
  2517  037D  00A0               	movwf	?___lwdiv
  2518  037E                     l639:
  2519  037E  0008               	return
  2520  037F                     __end_of___lwdiv:
  2521                           
  2522                           	psect	text10
  2523  0461                     __ptext10:	
  2524 ;; *************** function _divisor *****************
  2525 ;; Defined at:
  2526 ;;		line 181 in file "LAB2.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  a               1    wreg     unsigned char 
  2529 ;;  dig             1    8[BANK0 ] PTR unsigned char 
  2530 ;;		 -> vol2(1), vol1(1), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  a               1   11[BANK0 ] unsigned char 
  2533 ;;  i               2   14[BANK0 ] int 
  2534 ;;  b               2   12[BANK0 ] int 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       1       0       0       0
  2545 ;;      Locals:         0       5       0       0       0
  2546 ;;      Temps:          0       2       0       0       0
  2547 ;;      Totals:         0       8       0       0       0
  2548 ;;Total ram usage:        8 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 3
  2551 ;; This function calls:
  2552 ;;		___awdiv
  2553 ;;		___awmod
  2554 ;; This function is called by:
  2555 ;;		_conversion_char
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _divisor
  2561  0461                     _divisor:
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2565                           ;divisor@a stored from wreg
  2566  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0463  00AB               	movwf	divisor@a
  2569  0464                     l1999:
  2570                           
  2571                           ;LAB2.c: 182:     int b = 2*a;
  2572  0464  082B               	movf	divisor@a,w
  2573  0465  00A9               	movwf	??_divisor
  2574  0466  01AA               	clrf	??_divisor+1
  2575  0467  1003               	clrc
  2576  0468  0D29               	rlf	??_divisor,w
  2577  0469  00AC               	movwf	divisor@b
  2578  046A  0D2A               	rlf	??_divisor+1,w
  2579  046B  00AD               	movwf	divisor@b+1
  2580  046C                     l2001:
  2581                           
  2582                           ;LAB2.c: 183:     for(int i = 0; i<3 ; i++){
  2583  046C  01AE               	clrf	divisor@i
  2584  046D  01AF               	clrf	divisor@i+1
  2585  046E                     l2007:
  2586                           
  2587                           ;LAB2.c: 184:         dig[i] = b % 10;
  2588  046E  300A               	movlw	10
  2589  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0471  00A0               	movwf	___awmod@divisor
  2592  0472  3000               	movlw	0
  2593  0473  00A1               	movwf	___awmod@divisor+1
  2594  0474  082D               	movf	divisor@b+1,w
  2595  0475  00A3               	movwf	___awmod@dividend+1
  2596  0476  082C               	movf	divisor@b,w
  2597  0477  00A2               	movwf	___awmod@dividend
  2598  0478  120A  118A  24B8  120A  118A  	fcall	___awmod
  2599  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2600  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2601  047F  0820               	movf	?___awmod,w
  2602  0480  00A9               	movwf	??_divisor
  2603  0481  082E               	movf	divisor@i,w
  2604  0482  0728               	addwf	divisor@dig,w
  2605  0483  00AA               	movwf	??_divisor+1
  2606  0484  082A               	movf	??_divisor+1,w
  2607  0485  0084               	movwf	4
  2608  0486  0829               	movf	??_divisor,w
  2609  0487  1383               	bcf	3,7	;select IRP bank0
  2610  0488  0080               	movwf	0
  2611                           
  2612                           ;LAB2.c: 185:         b = (b - dig[i])/10;
  2613  0489  300A               	movlw	10
  2614  048A  00A0               	movwf	___awdiv@divisor
  2615  048B  3000               	movlw	0
  2616  048C  00A1               	movwf	___awdiv@divisor+1
  2617  048D  082E               	movf	divisor@i,w
  2618  048E  0728               	addwf	divisor@dig,w
  2619  048F  00A9               	movwf	??_divisor
  2620  0490  0829               	movf	??_divisor,w
  2621  0491  0084               	movwf	4
  2622  0492  0800               	movf	0,w
  2623  0493  022C               	subwf	divisor@b,w
  2624  0494  00A2               	movwf	___awdiv@dividend
  2625  0495  082D               	movf	divisor@b+1,w
  2626  0496  1C03               	skipc
  2627  0497  032D               	decf	divisor@b+1,w
  2628  0498  00A3               	movwf	___awdiv@dividend+1
  2629  0499  120A  118A  256E  120A  118A  	fcall	___awdiv
  2630  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2631  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2632  04A0  0821               	movf	?___awdiv+1,w
  2633  04A1  00AD               	movwf	divisor@b+1
  2634  04A2  0820               	movf	?___awdiv,w
  2635  04A3  00AC               	movwf	divisor@b
  2636  04A4                     l2009:
  2637                           
  2638                           ;LAB2.c: 186:     }
  2639  04A4  3001               	movlw	1
  2640  04A5  07AE               	addwf	divisor@i,f
  2641  04A6  1803               	skipnc
  2642  04A7  0AAF               	incf	divisor@i+1,f
  2643  04A8  3000               	movlw	0
  2644  04A9  07AF               	addwf	divisor@i+1,f
  2645  04AA                     l2011:
  2646  04AA  082F               	movf	divisor@i+1,w
  2647  04AB  3A80               	xorlw	128
  2648  04AC  00FF               	movwf	btemp+1
  2649  04AD  3080               	movlw	128
  2650  04AE  027F               	subwf	btemp+1,w
  2651  04AF  1D03               	skipz
  2652  04B0  2CB3               	goto	u1695
  2653  04B1  3003               	movlw	3
  2654  04B2  022E               	subwf	divisor@i,w
  2655  04B3                     u1695:
  2656  04B3  1C03               	skipc
  2657  04B4  2CB6               	goto	u1691
  2658  04B5  2CB7               	goto	u1690
  2659  04B6                     u1691:
  2660  04B6  2C6E               	goto	l2007
  2661  04B7                     u1690:
  2662  04B7                     l130:
  2663  04B7  0008               	return
  2664  04B8                     __end_of_divisor:
  2665                           
  2666                           	psect	text11
  2667  04B8                     __ptext11:	
  2668 ;; *************** function ___awmod *****************
  2669 ;; Defined at:
  2670 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  divisor         2    0[BANK0 ] int 
  2673 ;;  dividend        2    2[BANK0 ] int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  sign            1    5[BANK0 ] unsigned char 
  2676 ;;  counter         1    4[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2    0[BANK0 ] int 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       4       0       0       0
  2687 ;;      Locals:         0       2       0       0       0
  2688 ;;      Temps:          1       0       0       0       0
  2689 ;;      Totals:         1       6       0       0       0
  2690 ;;Total ram usage:        7 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 2
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_divisor
  2697 ;;		_divisor1
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function ___awmod
  2703  04B8                     ___awmod:
  2704  04B8                     l1927:	
  2705                           ;incstack = 0
  2706                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2707                           
  2708  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2709  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2710  04BA  01A5               	clrf	___awmod@sign
  2711  04BB                     l1929:
  2712  04BB  1FA3               	btfss	___awmod@dividend+1,7
  2713  04BC  2CBE               	goto	u1531
  2714  04BD  2CBF               	goto	u1530
  2715  04BE                     u1531:
  2716  04BE  2CC6               	goto	l1935
  2717  04BF                     u1530:
  2718  04BF                     l1931:
  2719  04BF  09A2               	comf	___awmod@dividend,f
  2720  04C0  09A3               	comf	___awmod@dividend+1,f
  2721  04C1  0AA2               	incf	___awmod@dividend,f
  2722  04C2  1903               	skipnz
  2723  04C3  0AA3               	incf	___awmod@dividend+1,f
  2724  04C4                     l1933:
  2725  04C4  01A5               	clrf	___awmod@sign
  2726  04C5  0AA5               	incf	___awmod@sign,f
  2727  04C6                     l1935:
  2728  04C6  1FA1               	btfss	___awmod@divisor+1,7
  2729  04C7  2CC9               	goto	u1541
  2730  04C8  2CCA               	goto	u1540
  2731  04C9                     u1541:
  2732  04C9  2CCF               	goto	l1939
  2733  04CA                     u1540:
  2734  04CA                     l1937:
  2735  04CA  09A0               	comf	___awmod@divisor,f
  2736  04CB  09A1               	comf	___awmod@divisor+1,f
  2737  04CC  0AA0               	incf	___awmod@divisor,f
  2738  04CD  1903               	skipnz
  2739  04CE  0AA1               	incf	___awmod@divisor+1,f
  2740  04CF                     l1939:
  2741  04CF  0820               	movf	___awmod@divisor,w
  2742  04D0  0421               	iorwf	___awmod@divisor+1,w
  2743  04D1  1903               	btfsc	3,2
  2744  04D2  2CD4               	goto	u1551
  2745  04D3  2CD5               	goto	u1550
  2746  04D4                     u1551:
  2747  04D4  2D04               	goto	l1957
  2748  04D5                     u1550:
  2749  04D5                     l1941:
  2750  04D5  01A4               	clrf	___awmod@counter
  2751  04D6  0AA4               	incf	___awmod@counter,f
  2752  04D7  2CE3               	goto	l1947
  2753  04D8                     l1943:
  2754  04D8  3001               	movlw	1
  2755  04D9                     u1565:
  2756  04D9  1003               	clrc
  2757  04DA  0DA0               	rlf	___awmod@divisor,f
  2758  04DB  0DA1               	rlf	___awmod@divisor+1,f
  2759  04DC  3EFF               	addlw	-1
  2760  04DD  1D03               	skipz
  2761  04DE  2CD9               	goto	u1565
  2762  04DF                     l1945:
  2763  04DF  3001               	movlw	1
  2764  04E0  00F5               	movwf	??___awmod
  2765  04E1  0875               	movf	??___awmod,w
  2766  04E2  07A4               	addwf	___awmod@counter,f
  2767  04E3                     l1947:
  2768  04E3  1FA1               	btfss	___awmod@divisor+1,7
  2769  04E4  2CE6               	goto	u1571
  2770  04E5  2CE7               	goto	u1570
  2771  04E6                     u1571:
  2772  04E6  2CD8               	goto	l1943
  2773  04E7                     u1570:
  2774  04E7                     l1949:
  2775  04E7  0821               	movf	___awmod@divisor+1,w
  2776  04E8  0223               	subwf	___awmod@dividend+1,w
  2777  04E9  1D03               	skipz
  2778  04EA  2CED               	goto	u1585
  2779  04EB  0820               	movf	___awmod@divisor,w
  2780  04EC  0222               	subwf	___awmod@dividend,w
  2781  04ED                     u1585:
  2782  04ED  1C03               	skipc
  2783  04EE  2CF0               	goto	u1581
  2784  04EF  2CF1               	goto	u1580
  2785  04F0                     u1581:
  2786  04F0  2CF7               	goto	l1953
  2787  04F1                     u1580:
  2788  04F1                     l1951:
  2789  04F1  0820               	movf	___awmod@divisor,w
  2790  04F2  02A2               	subwf	___awmod@dividend,f
  2791  04F3  0821               	movf	___awmod@divisor+1,w
  2792  04F4  1C03               	skipc
  2793  04F5  03A3               	decf	___awmod@dividend+1,f
  2794  04F6  02A3               	subwf	___awmod@dividend+1,f
  2795  04F7                     l1953:
  2796  04F7  3001               	movlw	1
  2797  04F8                     u1595:
  2798  04F8  1003               	clrc
  2799  04F9  0CA1               	rrf	___awmod@divisor+1,f
  2800  04FA  0CA0               	rrf	___awmod@divisor,f
  2801  04FB  3EFF               	addlw	-1
  2802  04FC  1D03               	skipz
  2803  04FD  2CF8               	goto	u1595
  2804  04FE                     l1955:
  2805  04FE  3001               	movlw	1
  2806  04FF  02A4               	subwf	___awmod@counter,f
  2807  0500  1D03               	btfss	3,2
  2808  0501  2D03               	goto	u1601
  2809  0502  2D04               	goto	u1600
  2810  0503                     u1601:
  2811  0503  2CE7               	goto	l1949
  2812  0504                     u1600:
  2813  0504                     l1957:
  2814  0504  0825               	movf	___awmod@sign,w
  2815  0505  1903               	btfsc	3,2
  2816  0506  2D08               	goto	u1611
  2817  0507  2D09               	goto	u1610
  2818  0508                     u1611:
  2819  0508  2D0E               	goto	l1961
  2820  0509                     u1610:
  2821  0509                     l1959:
  2822  0509  09A2               	comf	___awmod@dividend,f
  2823  050A  09A3               	comf	___awmod@dividend+1,f
  2824  050B  0AA2               	incf	___awmod@dividend,f
  2825  050C  1903               	skipnz
  2826  050D  0AA3               	incf	___awmod@dividend+1,f
  2827  050E                     l1961:
  2828  050E  0823               	movf	___awmod@dividend+1,w
  2829  050F  00A1               	movwf	?___awmod+1
  2830  0510  0822               	movf	___awmod@dividend,w
  2831  0511  00A0               	movwf	?___awmod
  2832  0512                     l533:
  2833  0512  0008               	return
  2834  0513                     __end_of___awmod:
  2835                           
  2836                           	psect	text12
  2837  056E                     __ptext12:	
  2838 ;; *************** function ___awdiv *****************
  2839 ;; Defined at:
  2840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  divisor         2    0[BANK0 ] int 
  2843 ;;  dividend        2    2[BANK0 ] int 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  quotient        2    6[BANK0 ] int 
  2846 ;;  sign            1    5[BANK0 ] unsigned char 
  2847 ;;  counter         1    4[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  2    0[BANK0 ] int 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       4       0       0       0
  2858 ;;      Locals:         0       4       0       0       0
  2859 ;;      Temps:          1       0       0       0       0
  2860 ;;      Totals:         1       8       0       0       0
  2861 ;;Total ram usage:        9 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 2
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_divisor
  2868 ;;		_divisor1
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function ___awdiv
  2874  056E                     ___awdiv:
  2875  056E                     l1883:	
  2876                           ;incstack = 0
  2877                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2878                           
  2879  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2880  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0570  01A5               	clrf	___awdiv@sign
  2882  0571                     l1885:
  2883  0571  1FA1               	btfss	___awdiv@divisor+1,7
  2884  0572  2D74               	goto	u1431
  2885  0573  2D75               	goto	u1430
  2886  0574                     u1431:
  2887  0574  2D7C               	goto	l1891
  2888  0575                     u1430:
  2889  0575                     l1887:
  2890  0575  09A0               	comf	___awdiv@divisor,f
  2891  0576  09A1               	comf	___awdiv@divisor+1,f
  2892  0577  0AA0               	incf	___awdiv@divisor,f
  2893  0578  1903               	skipnz
  2894  0579  0AA1               	incf	___awdiv@divisor+1,f
  2895  057A                     l1889:
  2896  057A  01A5               	clrf	___awdiv@sign
  2897  057B  0AA5               	incf	___awdiv@sign,f
  2898  057C                     l1891:
  2899  057C  1FA3               	btfss	___awdiv@dividend+1,7
  2900  057D  2D7F               	goto	u1441
  2901  057E  2D80               	goto	u1440
  2902  057F                     u1441:
  2903  057F  2D89               	goto	l1897
  2904  0580                     u1440:
  2905  0580                     l1893:
  2906  0580  09A2               	comf	___awdiv@dividend,f
  2907  0581  09A3               	comf	___awdiv@dividend+1,f
  2908  0582  0AA2               	incf	___awdiv@dividend,f
  2909  0583  1903               	skipnz
  2910  0584  0AA3               	incf	___awdiv@dividend+1,f
  2911  0585                     l1895:
  2912  0585  3001               	movlw	1
  2913  0586  00F5               	movwf	??___awdiv
  2914  0587  0875               	movf	??___awdiv,w
  2915  0588  06A5               	xorwf	___awdiv@sign,f
  2916  0589                     l1897:
  2917  0589  01A6               	clrf	___awdiv@quotient
  2918  058A  01A7               	clrf	___awdiv@quotient+1
  2919  058B                     l1899:
  2920  058B  0820               	movf	___awdiv@divisor,w
  2921  058C  0421               	iorwf	___awdiv@divisor+1,w
  2922  058D  1903               	btfsc	3,2
  2923  058E  2D90               	goto	u1451
  2924  058F  2D91               	goto	u1450
  2925  0590                     u1451:
  2926  0590  2DC8               	goto	l1919
  2927  0591                     u1450:
  2928  0591                     l1901:
  2929  0591  01A4               	clrf	___awdiv@counter
  2930  0592  0AA4               	incf	___awdiv@counter,f
  2931  0593  2D9F               	goto	l1907
  2932  0594                     l1903:
  2933  0594  3001               	movlw	1
  2934  0595                     u1465:
  2935  0595  1003               	clrc
  2936  0596  0DA0               	rlf	___awdiv@divisor,f
  2937  0597  0DA1               	rlf	___awdiv@divisor+1,f
  2938  0598  3EFF               	addlw	-1
  2939  0599  1D03               	skipz
  2940  059A  2D95               	goto	u1465
  2941  059B                     l1905:
  2942  059B  3001               	movlw	1
  2943  059C  00F5               	movwf	??___awdiv
  2944  059D  0875               	movf	??___awdiv,w
  2945  059E  07A4               	addwf	___awdiv@counter,f
  2946  059F                     l1907:
  2947  059F  1FA1               	btfss	___awdiv@divisor+1,7
  2948  05A0  2DA2               	goto	u1471
  2949  05A1  2DA3               	goto	u1470
  2950  05A2                     u1471:
  2951  05A2  2D94               	goto	l1903
  2952  05A3                     u1470:
  2953  05A3                     l1909:
  2954  05A3  3001               	movlw	1
  2955  05A4                     u1485:
  2956  05A4  1003               	clrc
  2957  05A5  0DA6               	rlf	___awdiv@quotient,f
  2958  05A6  0DA7               	rlf	___awdiv@quotient+1,f
  2959  05A7  3EFF               	addlw	-1
  2960  05A8  1D03               	skipz
  2961  05A9  2DA4               	goto	u1485
  2962  05AA  0821               	movf	___awdiv@divisor+1,w
  2963  05AB  0223               	subwf	___awdiv@dividend+1,w
  2964  05AC  1D03               	skipz
  2965  05AD  2DB0               	goto	u1495
  2966  05AE  0820               	movf	___awdiv@divisor,w
  2967  05AF  0222               	subwf	___awdiv@dividend,w
  2968  05B0                     u1495:
  2969  05B0  1C03               	skipc
  2970  05B1  2DB3               	goto	u1491
  2971  05B2  2DB4               	goto	u1490
  2972  05B3                     u1491:
  2973  05B3  2DBB               	goto	l1915
  2974  05B4                     u1490:
  2975  05B4                     l1911:
  2976  05B4  0820               	movf	___awdiv@divisor,w
  2977  05B5  02A2               	subwf	___awdiv@dividend,f
  2978  05B6  0821               	movf	___awdiv@divisor+1,w
  2979  05B7  1C03               	skipc
  2980  05B8  03A3               	decf	___awdiv@dividend+1,f
  2981  05B9  02A3               	subwf	___awdiv@dividend+1,f
  2982  05BA                     l1913:
  2983  05BA  1426               	bsf	___awdiv@quotient,0
  2984  05BB                     l1915:
  2985  05BB  3001               	movlw	1
  2986  05BC                     u1505:
  2987  05BC  1003               	clrc
  2988  05BD  0CA1               	rrf	___awdiv@divisor+1,f
  2989  05BE  0CA0               	rrf	___awdiv@divisor,f
  2990  05BF  3EFF               	addlw	-1
  2991  05C0  1D03               	skipz
  2992  05C1  2DBC               	goto	u1505
  2993  05C2                     l1917:
  2994  05C2  3001               	movlw	1
  2995  05C3  02A4               	subwf	___awdiv@counter,f
  2996  05C4  1D03               	btfss	3,2
  2997  05C5  2DC7               	goto	u1511
  2998  05C6  2DC8               	goto	u1510
  2999  05C7                     u1511:
  3000  05C7  2DA3               	goto	l1909
  3001  05C8                     u1510:
  3002  05C8                     l1919:
  3003  05C8  0825               	movf	___awdiv@sign,w
  3004  05C9  1903               	btfsc	3,2
  3005  05CA  2DCC               	goto	u1521
  3006  05CB  2DCD               	goto	u1520
  3007  05CC                     u1521:
  3008  05CC  2DD2               	goto	l1923
  3009  05CD                     u1520:
  3010  05CD                     l1921:
  3011  05CD  09A6               	comf	___awdiv@quotient,f
  3012  05CE  09A7               	comf	___awdiv@quotient+1,f
  3013  05CF  0AA6               	incf	___awdiv@quotient,f
  3014  05D0  1903               	skipnz
  3015  05D1  0AA7               	incf	___awdiv@quotient+1,f
  3016  05D2                     l1923:
  3017  05D2  0827               	movf	___awdiv@quotient+1,w
  3018  05D3  00A1               	movwf	?___awdiv+1
  3019  05D4  0826               	movf	___awdiv@quotient,w
  3020  05D5  00A0               	movwf	?___awdiv
  3021  05D6                     l520:
  3022  05D6  0008               	return
  3023  05D7                     __end_of___awdiv:
  3024                           
  3025                           	psect	text13
  3026  01F8                     __ptext13:	
  3027 ;; *************** function _conversion *****************
  3028 ;; Defined at:
  3029 ;;		line 21 in file "ADC.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          1       0       0       0       0
  3046 ;;      Totals:         1       0       0       0       0
  3047 ;;Total ram usage:        1 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _conversion
  3059  01F8                     _conversion:
  3060  01F8                     l1781:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _conversion: [wreg+status,2+status,0]
  3063                           
  3064                           
  3065                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  3066  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  3067  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  3068  01FA  189F               	btfsc	31,1	;volatile
  3069  01FB  29FD               	goto	u1341
  3070  01FC  29FE               	goto	u1340
  3071  01FD                     u1341:
  3072  01FD  2A23               	goto	l221
  3073  01FE                     u1340:
  3074  01FE                     l1783:
  3075                           
  3076                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  3077  01FE  0C1F               	rrf	31,w	;volatile
  3078  01FF  00F5               	movwf	??_conversion
  3079  0200  0C75               	rrf	??_conversion,w
  3080  0201  390F               	andlw	15
  3081  0202  3A01               	xorlw	1
  3082  0203  1D03               	skipz
  3083  0204  2A06               	goto	u1351
  3084  0205  2A07               	goto	u1350
  3085  0206                     u1351:
  3086  0206  2A0E               	goto	l1789
  3087  0207                     u1350:
  3088  0207                     l1785:
  3089                           
  3090                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  3091  0207  30C3               	movlw	-61
  3092  0208  059F               	andwf	31,f	;volatile
  3093  0209                     l1787:
  3094                           
  3095                           ;ADC.c: 25:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  3096  0209  3021               	movlw	33
  3097  020A  00F5               	movwf	??_conversion
  3098  020B                     u1957:
  3099  020B  0BF5               	decfsz	??_conversion,f
  3100  020C  2A0B               	goto	u1957
  3101                           
  3102                           ;ADC.c: 26:         }
  3103  020D  2A1C               	goto	l1795
  3104  020E                     l1789:
  3105  020E  0C1F               	rrf	31,w	;volatile
  3106  020F  00F5               	movwf	??_conversion
  3107  0210  0C75               	rrf	??_conversion,w
  3108  0211  390F               	andlw	15
  3109  0212  3A00               	xorlw	0
  3110  0213  1D03               	skipz
  3111  0214  2A16               	goto	u1361
  3112  0215  2A17               	goto	u1360
  3113  0216                     u1361:
  3114  0216  2A1C               	goto	l1795
  3115  0217                     u1360:
  3116  0217                     l1791:
  3117                           
  3118                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  3119  0217  081F               	movf	31,w	;volatile
  3120  0218  39C3               	andlw	-61
  3121  0219  3804               	iorlw	4
  3122  021A  009F               	movwf	31	;volatile
  3123  021B  2A09               	goto	l1787
  3124  021C                     l1795:
  3125                           
  3126                           ;ADC.c: 31:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  3127  021C  3021               	movlw	33
  3128  021D  00F5               	movwf	??_conversion
  3129  021E                     u1967:
  3130  021E  0BF5               	decfsz	??_conversion,f
  3131  021F  2A1E               	goto	u1967
  3132  0220                     l1797:
  3133                           
  3134                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  3135  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0222  149F               	bsf	31,1	;volatile
  3138  0223                     l221:
  3139  0223  0008               	return
  3140  0224                     __end_of_conversion:
  3141                           
  3142                           	psect	text14
  3143  01BE                     __ptext14:	
  3144 ;; *************** function _Limpiar_pantallaLCD *****************
  3145 ;; Defined at:
  3146 ;;		line 63 in file "LCD.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0
  3162 ;;      Temps:          0       2       0       0       0
  3163 ;;      Totals:         0       2       0       0       0
  3164 ;;Total ram usage:        2 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 4
  3167 ;; This function calls:
  3168 ;;		_Escribir_comandoLCD
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _Limpiar_pantallaLCD
  3176  01BE                     _Limpiar_pantallaLCD:
  3177  01BE                     l2175:	
  3178                           ;incstack = 0
  3179                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  3180                           
  3181                           
  3182                           ;LCD.c: 64:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  3183  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3184  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3185  01C0  1287               	bcf	7,5	;volatile
  3186  01C1  1208               	bcf	8,4	;volatile
  3187  01C2                     l2177:
  3188                           
  3189                           ;LCD.c: 66:     Escribir_comandoLCD(0b00000001);
  3190  01C2  3001               	movlw	1
  3191  01C3  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3192  01C8                     l2179:
  3193                           
  3194                           ;LCD.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3195  01C8  301A               	movlw	26
  3196  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3197  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3198  01CB  00A2               	movwf	??_Limpiar_pantallaLCD+1
  3199  01CC  30F7               	movlw	247
  3200  01CD  00A1               	movwf	??_Limpiar_pantallaLCD
  3201  01CE                     u1977:
  3202  01CE  0BA1               	decfsz	??_Limpiar_pantallaLCD,f
  3203  01CF  29CE               	goto	u1977
  3204  01D0  0BA2               	decfsz	??_Limpiar_pantallaLCD+1,f
  3205  01D1  29CE               	goto	u1977
  3206  01D2  29D3               	nop2
  3207  01D3                     l2181:
  3208                           
  3209                           ;LCD.c: 68:     Escribir_comandoLCD(0b00000010);
  3210  01D3  3002               	movlw	2
  3211  01D4  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3212  01D9                     l180:
  3213  01D9  0008               	return
  3214  01DA                     __end_of_Limpiar_pantallaLCD:
  3215                           
  3216                           	psect	text15
  3217  05D7                     __ptext15:	
  3218 ;; *************** function _Iniciar_LCD *****************
  3219 ;; Defined at:
  3220 ;;		line 30 in file "LCD.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       2       0       0       0
  3237 ;;      Totals:         0       2       0       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 4
  3241 ;; This function calls:
  3242 ;;		_Escribir_comandoLCD
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _Iniciar_LCD
  3250  05D7                     _Iniciar_LCD:
  3251  05D7                     l2149:	
  3252                           ;incstack = 0
  3253                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3254                           
  3255                           
  3256                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  3257  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3258  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3259  05D9  1287               	bcf	7,5	;volatile
  3260                           
  3261                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3262  05DA  1208               	bcf	8,4	;volatile
  3263  05DB                     l2151:
  3264                           
  3265                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3266  05DB  3025               	movlw	37
  3267  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3268  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3269  05DE  00A2               	movwf	??_Iniciar_LCD+1
  3270  05DF  305B               	movlw	91
  3271  05E0  00A1               	movwf	??_Iniciar_LCD
  3272  05E1                     u1987:
  3273  05E1  0BA1               	decfsz	??_Iniciar_LCD,f
  3274  05E2  2DE1               	goto	u1987
  3275  05E3  0BA2               	decfsz	??_Iniciar_LCD+1,f
  3276  05E4  2DE1               	goto	u1987
  3277  05E5                     l2153:
  3278                           
  3279                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3280  05E5  3030               	movlw	48
  3281  05E6  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3282  05EB                     l2155:
  3283                           
  3284                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3285  05EB  300B               	movlw	11
  3286  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3287  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3288  05EE  00A2               	movwf	??_Iniciar_LCD+1
  3289  05EF  3061               	movlw	97
  3290  05F0  00A1               	movwf	??_Iniciar_LCD
  3291  05F1                     u1997:
  3292  05F1  0BA1               	decfsz	??_Iniciar_LCD,f
  3293  05F2  2DF1               	goto	u1997
  3294  05F3  0BA2               	decfsz	??_Iniciar_LCD+1,f
  3295  05F4  2DF1               	goto	u1997
  3296  05F5  2DF6               	nop2
  3297                           
  3298                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3299  05F6  3030               	movlw	48
  3300  05F7  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3301  05FC                     l2157:
  3302                           
  3303                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3304  05FC  3041               	movlw	65
  3305  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3306  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3307  05FF  00A1               	movwf	??_Iniciar_LCD
  3308  0600                     u2007:
  3309  0600  0BA1               	decfsz	??_Iniciar_LCD,f
  3310  0601  2E00               	goto	u2007
  3311  0602  2E03               	nop2
  3312  0603                     l2159:
  3313                           
  3314                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3315  0603  3030               	movlw	48
  3316  0604  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3317                           
  3318                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3319  0609  3041               	movlw	65
  3320  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3321  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3322  060C  00A1               	movwf	??_Iniciar_LCD
  3323  060D                     u2017:
  3324  060D  0BA1               	decfsz	??_Iniciar_LCD,f
  3325  060E  2E0D               	goto	u2017
  3326  060F  2E10               	nop2
  3327  0610                     l2161:
  3328                           
  3329                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3330  0610  3038               	movlw	56
  3331  0611  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3332  0616                     l2163:
  3333                           
  3334                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3335  0616  3041               	movlw	65
  3336  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0619  00A1               	movwf	??_Iniciar_LCD
  3339  061A                     u2027:
  3340  061A  0BA1               	decfsz	??_Iniciar_LCD,f
  3341  061B  2E1A               	goto	u2027
  3342  061C  2E1D               	nop2
  3343                           
  3344                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3345  061D  3008               	movlw	8
  3346  061E  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3347  0623                     l2165:
  3348                           
  3349                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3350  0623  3041               	movlw	65
  3351  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0626  00A1               	movwf	??_Iniciar_LCD
  3354  0627                     u2037:
  3355  0627  0BA1               	decfsz	??_Iniciar_LCD,f
  3356  0628  2E27               	goto	u2037
  3357  0629  2E2A               	nop2
  3358  062A                     l2167:
  3359                           
  3360                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3361  062A  3001               	movlw	1
  3362  062B  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3363                           
  3364                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3365  0630  3041               	movlw	65
  3366  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0633  00A1               	movwf	??_Iniciar_LCD
  3369  0634                     u2047:
  3370  0634  0BA1               	decfsz	??_Iniciar_LCD,f
  3371  0635  2E34               	goto	u2047
  3372  0636  2E37               	nop2
  3373  0637                     l2169:
  3374                           
  3375                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3376  0637  3006               	movlw	6
  3377  0638  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3378  063D                     l2171:
  3379                           
  3380                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3381  063D  3041               	movlw	65
  3382  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3383  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0640  00A1               	movwf	??_Iniciar_LCD
  3385  0641                     u2057:
  3386  0641  0BA1               	decfsz	??_Iniciar_LCD,f
  3387  0642  2E41               	goto	u2057
  3388  0643  2E44               	nop2
  3389                           
  3390                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3391  0644  300C               	movlw	12
  3392  0645  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3393  064A                     l171:
  3394  064A  0008               	return
  3395  064B                     __end_of_Iniciar_LCD:
  3396                           
  3397                           	psect	text16
  3398  0252                     __ptext16:	
  3399 ;; *************** function _Escribir_stringLCD *****************
  3400 ;; Defined at:
  3401 ;;		line 55 in file "LCD.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  d               2    1[BANK0 ] PTR const unsigned char 
  3404 ;;		 -> buffer3(10), buffer2(10), buffer1(10), STR_3(17), 
  3405 ;;		 -> STR_2(13), STR_1(5), 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  i               1    4[BANK0 ] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       2       0       0       0
  3418 ;;      Locals:         0       1       0       0       0
  3419 ;;      Temps:          0       1       0       0       0
  3420 ;;      Totals:         0       4       0       0       0
  3421 ;;Total ram usage:        4 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 4
  3424 ;; This function calls:
  3425 ;;		_Escribir_comandoLCD
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function _Escribir_stringLCD
  3433  0252                     _Escribir_stringLCD:
  3434  0252                     l2207:	
  3435                           ;incstack = 0
  3436                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3437                           
  3438                           
  3439                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  3440  0252  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0253  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0254  1687               	bsf	7,5	;volatile
  3443  0255  1208               	bcf	8,4	;volatile
  3444  0256                     l2209:
  3445                           
  3446                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3447  0256  01A4               	clrf	Escribir_stringLCD@i
  3448  0257  2A6F               	goto	l2215
  3449  0258                     l2211:
  3450                           
  3451                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3452  0258  0824               	movf	Escribir_stringLCD@i,w
  3453  0259  0721               	addwf	Escribir_stringLCD@d,w
  3454  025A  0084               	movwf	4
  3455  025B  0822               	movf	Escribir_stringLCD@d+1,w
  3456  025C  1803               	skipnc
  3457  025D  0A22               	incf	Escribir_stringLCD@d+1,w
  3458  025E  00FF               	movwf	btemp+1
  3459  025F  120A  118A  200F  120A  118A  	fcall	stringtab
  3460  0264  120A  118A  22F8  120A  118A  	fcall	_Escribir_comandoLCD
  3461  0269                     l2213:
  3462                           
  3463                           ;LCD.c: 60:     }
  3464  0269  3001               	movlw	1
  3465  026A  1283               	bcf	3,5	;RP0=0, select bank0
  3466  026B  1303               	bcf	3,6	;RP1=0, select bank0
  3467  026C  00A3               	movwf	??_Escribir_stringLCD
  3468  026D  0823               	movf	??_Escribir_stringLCD,w
  3469  026E  07A4               	addwf	Escribir_stringLCD@i,f
  3470  026F                     l2215:
  3471  026F  0824               	movf	Escribir_stringLCD@i,w
  3472  0270  0721               	addwf	Escribir_stringLCD@d,w
  3473  0271  0084               	movwf	4
  3474  0272  0822               	movf	Escribir_stringLCD@d+1,w
  3475  0273  1803               	skipnc
  3476  0274  0A22               	incf	Escribir_stringLCD@d+1,w
  3477  0275  00FF               	movwf	btemp+1
  3478  0276  120A  118A  200F  120A  118A  	fcall	stringtab
  3479  027B  3A00               	xorlw	0
  3480  027C  1D03               	skipz
  3481  027D  2A7F               	goto	u1901
  3482  027E  2A80               	goto	u1900
  3483  027F                     u1901:
  3484  027F  2A58               	goto	l2211
  3485  0280                     u1900:
  3486  0280                     l177:
  3487  0280  0008               	return
  3488  0281                     __end_of_Escribir_stringLCD:
  3489                           
  3490                           	psect	text17
  3491  02F8                     __ptext17:	
  3492 ;; *************** function _Escribir_comandoLCD *****************
  3493 ;; Defined at:
  3494 ;;		line 17 in file "LCD.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  Comando         1    wreg     unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  Comando         1    0[BANK0 ] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       0       0       0       0
  3509 ;;      Locals:         0       1       0       0       0
  3510 ;;      Temps:          0       0       0       0       0
  3511 ;;      Totals:         0       1       0       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 3
  3515 ;; This function calls:
  3516 ;;		_prender_ELCD
  3517 ;; This function is called by:
  3518 ;;		_Iniciar_LCD
  3519 ;;		_Escribir_stringLCD
  3520 ;;		_Limpiar_pantallaLCD
  3521 ;;		_set_cursor
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _Escribir_comandoLCD
  3527  02F8                     _Escribir_comandoLCD:
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3531                           ;Escribir_comandoLCD@Comando stored from wreg
  3532  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3533  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3534  02FA  00A0               	movwf	Escribir_comandoLCD@Comando
  3535  02FB                     l2087:
  3536                           
  3537                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3538  02FB  1C20               	btfss	Escribir_comandoLCD@Comando,0
  3539  02FC  2AFE               	goto	u1781
  3540  02FD  2AFF               	goto	u1780
  3541  02FE                     u1781:
  3542  02FE  2B01               	goto	l152
  3543  02FF                     u1780:
  3544  02FF                     l2089:
  3545  02FF  1708               	bsf	8,6	;volatile
  3546  0300  2B02               	goto	l153
  3547  0301                     l152:
  3548  0301  1308               	bcf	8,6	;volatile
  3549  0302                     l153:
  3550                           
  3551                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3552  0302  1CA0               	btfss	Escribir_comandoLCD@Comando,1
  3553  0303  2B05               	goto	u1791
  3554  0304  2B06               	goto	u1790
  3555  0305                     u1791:
  3556  0305  2B08               	goto	l154
  3557  0306                     u1790:
  3558  0306                     l2091:
  3559  0306  1788               	bsf	8,7	;volatile
  3560  0307  2B09               	goto	l155
  3561  0308                     l154:
  3562  0308  1388               	bcf	8,7	;volatile
  3563  0309                     l155:
  3564                           
  3565                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3566  0309  1D20               	btfss	Escribir_comandoLCD@Comando,2
  3567  030A  2B0C               	goto	u1801
  3568  030B  2B0D               	goto	u1800
  3569  030C                     u1801:
  3570  030C  2B0F               	goto	l156
  3571  030D                     u1800:
  3572  030D                     l2093:
  3573  030D  1406               	bsf	6,0	;volatile
  3574  030E  2B10               	goto	l157
  3575  030F                     l156:
  3576  030F  1006               	bcf	6,0	;volatile
  3577  0310                     l157:
  3578                           
  3579                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3580  0310  1DA0               	btfss	Escribir_comandoLCD@Comando,3
  3581  0311  2B13               	goto	u1811
  3582  0312  2B14               	goto	u1810
  3583  0313                     u1811:
  3584  0313  2B16               	goto	l158
  3585  0314                     u1810:
  3586  0314                     l2095:
  3587  0314  1486               	bsf	6,1	;volatile
  3588  0315  2B17               	goto	l159
  3589  0316                     l158:
  3590  0316  1086               	bcf	6,1	;volatile
  3591  0317                     l159:
  3592                           
  3593                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3594  0317  1E20               	btfss	Escribir_comandoLCD@Comando,4
  3595  0318  2B1A               	goto	u1821
  3596  0319  2B1B               	goto	u1820
  3597  031A                     u1821:
  3598  031A  2B1D               	goto	l160
  3599  031B                     u1820:
  3600  031B                     l2097:
  3601  031B  1506               	bsf	6,2	;volatile
  3602  031C  2B1E               	goto	l161
  3603  031D                     l160:
  3604  031D  1106               	bcf	6,2	;volatile
  3605  031E                     l161:
  3606                           
  3607                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3608  031E  1EA0               	btfss	Escribir_comandoLCD@Comando,5
  3609  031F  2B21               	goto	u1831
  3610  0320  2B22               	goto	u1830
  3611  0321                     u1831:
  3612  0321  2B24               	goto	l162
  3613  0322                     u1830:
  3614  0322                     l2099:
  3615  0322  1586               	bsf	6,3	;volatile
  3616  0323  2B25               	goto	l163
  3617  0324                     l162:
  3618  0324  1186               	bcf	6,3	;volatile
  3619  0325                     l163:
  3620                           
  3621                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3622  0325  1F20               	btfss	Escribir_comandoLCD@Comando,6
  3623  0326  2B28               	goto	u1841
  3624  0327  2B29               	goto	u1840
  3625  0328                     u1841:
  3626  0328  2B2B               	goto	l164
  3627  0329                     u1840:
  3628  0329                     l2101:
  3629  0329  1606               	bsf	6,4	;volatile
  3630  032A  2B2C               	goto	l165
  3631  032B                     l164:
  3632  032B  1206               	bcf	6,4	;volatile
  3633  032C                     l165:
  3634                           
  3635                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3636  032C  1FA0               	btfss	Escribir_comandoLCD@Comando,7
  3637  032D  2B2F               	goto	u1851
  3638  032E  2B30               	goto	u1850
  3639  032F                     u1851:
  3640  032F  2B32               	goto	l166
  3641  0330                     u1850:
  3642  0330                     l2103:
  3643  0330  1686               	bsf	6,5	;volatile
  3644  0331  2B33               	goto	l2105
  3645  0332                     l166:
  3646  0332  1286               	bcf	6,5	;volatile
  3647  0333                     l2105:
  3648                           
  3649                           ;LCD.c: 27:     prender_ELCD();
  3650  0333  120A  118A  2196  120A  118A  	fcall	_prender_ELCD
  3651  0338                     l168:
  3652  0338  0008               	return
  3653  0339                     __end_of_Escribir_comandoLCD:
  3654                           
  3655                           	psect	text18
  3656  0196                     __ptext18:	
  3657 ;; *************** function _prender_ELCD *****************
  3658 ;; Defined at:
  3659 ;;		line 11 in file "LCD.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0
  3676 ;;      Totals:         1       0       0       0       0
  3677 ;;Total ram usage:        1 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 2
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_Escribir_comandoLCD
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _prender_ELCD
  3689  0196                     _prender_ELCD:
  3690  0196                     l1877:	
  3691                           ;incstack = 0
  3692                           ; Regs used in _prender_ELCD: [wreg]
  3693                           
  3694                           
  3695                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3696  0196  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0197  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0198  1688               	bsf	8,5	;volatile
  3699  0199                     l1879:
  3700                           
  3701                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3702  0199  30C7               	movlw	199
  3703  019A  00F5               	movwf	??_prender_ELCD
  3704  019B                     u2067:
  3705  019B  299C               	nop2
  3706  019C  0BF5               	decfsz	??_prender_ELCD,f
  3707  019D  299B               	goto	u2067
  3708  019E  299F               	nop2
  3709  019F  29A0               	nop2
  3710  01A0                     l1881:
  3711                           
  3712                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3713  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3714  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3715  01A2  1288               	bcf	8,5	;volatile
  3716  01A3                     l149:
  3717  01A3  0008               	return
  3718  01A4                     __end_of_prender_ELCD:
  3719                           
  3720                           	psect	text19
  3721  0281                     __ptext19:	
  3722 ;; *************** function _isr *****************
  3723 ;; Defined at:
  3724 ;;		line 68 in file "LAB2.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0
  3740 ;;      Temps:          3       0       0       0       0
  3741 ;;      Totals:         3       0       0       0       0
  3742 ;;Total ram usage:        3 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 1
  3745 ;; This function calls:
  3746 ;;		_ADC
  3747 ;; This function is called by:
  3748 ;;		Interrupt level 1
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _isr
  3754  0281                     _isr:
  3755  0281                     i1l1803:
  3756                           
  3757                           ;LAB2.c: 69:     if(PIR1bits.ADIF){
  3758  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0282  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0283  1F0C               	btfss	12,6	;volatile
  3761  0284  2A86               	goto	u137_21
  3762  0285  2A87               	goto	u137_20
  3763  0286                     u137_21:
  3764  0286  2A8F               	goto	i1l1809
  3765  0287                     u137_20:
  3766  0287                     i1l1805:
  3767                           
  3768                           ;LAB2.c: 70:         ADC();
  3769  0287  120A  118A  21DA  120A  118A  	fcall	_ADC
  3770  028C                     i1l1807:
  3771                           
  3772                           ;LAB2.c: 71:         PIR1bits.ADIF = 0;
  3773  028C  1283               	bcf	3,5	;RP0=0, select bank0
  3774  028D  1303               	bcf	3,6	;RP1=0, select bank0
  3775  028E  130C               	bcf	12,6	;volatile
  3776  028F                     i1l1809:
  3777                           
  3778                           ;LAB2.c: 73:     if(PIR1bits.RCIF){
  3779  028F  1E8C               	btfss	12,5	;volatile
  3780  0290  2A92               	goto	u138_21
  3781  0291  2A93               	goto	u138_20
  3782  0292                     u138_21:
  3783  0292  2AB5               	goto	i1l111
  3784  0293                     u138_20:
  3785  0293                     i1l1811:
  3786                           
  3787                           ;LAB2.c: 74:         dato = RCREG;
  3788  0293  081A               	movf	26,w	;volatile
  3789  0294  00F2               	movwf	??_isr
  3790  0295  0872               	movf	??_isr,w
  3791  0296  00F6               	movwf	_dato
  3792  0297                     i1l1813:
  3793                           
  3794                           ;LAB2.c: 75:         if(dato == 0x2B || dato == 77){
  3795  0297  302B               	movlw	43
  3796  0298  0676               	xorwf	_dato,w
  3797  0299  1903               	btfsc	3,2
  3798  029A  2A9C               	goto	u139_21
  3799  029B  2A9D               	goto	u139_20
  3800  029C                     u139_21:
  3801  029C  2AA3               	goto	i1l1817
  3802  029D                     u139_20:
  3803  029D                     i1l1815:
  3804  029D  304D               	movlw	77
  3805  029E  0676               	xorwf	_dato,w
  3806  029F  1D03               	btfss	3,2
  3807  02A0  2AA2               	goto	u140_21
  3808  02A1  2AA3               	goto	u140_20
  3809  02A2                     u140_21:
  3810  02A2  2AA7               	goto	i1l105
  3811  02A3                     u140_20:
  3812  02A3                     i1l1817:
  3813                           
  3814                           ;LAB2.c: 76:             Cont_U++;
  3815  02A3  3001               	movlw	1
  3816  02A4  00F2               	movwf	??_isr
  3817  02A5  0872               	movf	??_isr,w
  3818  02A6  07C8               	addwf	_Cont_U,f
  3819  02A7                     i1l105:	
  3820                           ;LAB2.c: 77:         }
  3821                           
  3822                           
  3823                           ;LAB2.c: 78:         if(dato == 0x2D || dato == 75){
  3824  02A7  302D               	movlw	45
  3825  02A8  0676               	xorwf	_dato,w
  3826  02A9  1903               	btfsc	3,2
  3827  02AA  2AAC               	goto	u141_21
  3828  02AB  2AAD               	goto	u141_20
  3829  02AC                     u141_21:
  3830  02AC  2AB3               	goto	i1l1821
  3831  02AD                     u141_20:
  3832  02AD                     i1l1819:
  3833  02AD  304B               	movlw	75
  3834  02AE  0676               	xorwf	_dato,w
  3835  02AF  1D03               	btfss	3,2
  3836  02B0  2AB2               	goto	u142_21
  3837  02B1  2AB3               	goto	u142_20
  3838  02B2                     u142_21:
  3839  02B2  2AB5               	goto	i1l111
  3840  02B3                     u142_20:
  3841  02B3                     i1l1821:
  3842                           
  3843                           ;LAB2.c: 79:             Cont_U--;
  3844  02B3  3001               	movlw	1
  3845  02B4  02C8               	subwf	_Cont_U,f
  3846  02B5                     i1l111:
  3847  02B5  0874               	movf	??_isr+2,w
  3848  02B6  008A               	movwf	10
  3849  02B7  0E73               	swapf	??_isr+1,w
  3850  02B8  0083               	movwf	3
  3851  02B9  0EFE               	swapf	btemp,f
  3852  02BA  0E7E               	swapf	btemp,w
  3853  02BB  0009               	retfie
  3854  02BC                     __end_of_isr:
  3855                           
  3856                           	psect	intentry
  3857  0004                     __pintentry:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3860                           
  3861  0004                     interrupt_function:
  3862  007E                     saved_w	set	btemp
  3863  0004  00FE               	movwf	btemp
  3864  0005  0E03               	swapf	3,w
  3865  0006  00F3               	movwf	??_isr+1
  3866  0007  080A               	movf	10,w
  3867  0008  00F4               	movwf	??_isr+2
  3868  0009  120A  118A  2A81   	ljmp	_isr
  3869                           
  3870                           	psect	text20
  3871  01DA                     __ptext20:	
  3872 ;; *************** function _ADC *****************
  3873 ;; Defined at:
  3874 ;;		line 11 in file "ADC.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         0       0       0       0       0
  3889 ;;      Locals:         0       0       0       0       0
  3890 ;;      Temps:          1       0       0       0       0
  3891 ;;      Totals:         1       0       0       0       0
  3892 ;;Total ram usage:        1 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_isr
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _ADC
  3903  01DA                     _ADC:
  3904  01DA                     i1l1663:	
  3905                           ;incstack = 0
  3906                           ; Regs used in _ADC: [wreg+status,2+status,0]
  3907                           
  3908                           
  3909                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  3910  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3911  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3912  01DC  0C1F               	rrf	31,w	;volatile
  3913  01DD  00F1               	movwf	??_ADC
  3914  01DE  0C71               	rrf	??_ADC,w
  3915  01DF  390F               	andlw	15
  3916  01E0  3A00               	xorlw	0
  3917  01E1  1D03               	skipz
  3918  01E2  29E4               	goto	u127_21
  3919  01E3  29E5               	goto	u127_20
  3920  01E4                     u127_21:
  3921  01E4  29EA               	goto	i1l1667
  3922  01E5                     u127_20:
  3923  01E5                     i1l1665:
  3924                           
  3925                           ;ADC.c: 13:         cont1 = ADRESH;
  3926  01E5  081E               	movf	30,w	;volatile
  3927  01E6  00F1               	movwf	??_ADC
  3928  01E7  0871               	movf	??_ADC,w
  3929  01E8  00CA               	movwf	_cont1
  3930                           
  3931                           ;ADC.c: 14:     }
  3932  01E9  29F7               	goto	i1l214
  3933  01EA                     i1l1667:
  3934  01EA  0C1F               	rrf	31,w	;volatile
  3935  01EB  00F1               	movwf	??_ADC
  3936  01EC  0C71               	rrf	??_ADC,w
  3937  01ED  390F               	andlw	15
  3938  01EE  3A01               	xorlw	1
  3939  01EF  1D03               	skipz
  3940  01F0  29F2               	goto	u128_21
  3941  01F1  29F3               	goto	u128_20
  3942  01F2                     u128_21:
  3943  01F2  29F7               	goto	i1l214
  3944  01F3                     u128_20:
  3945  01F3                     i1l1669:
  3946                           
  3947                           ;ADC.c: 16:         cont2 = ADRESH;
  3948  01F3  081E               	movf	30,w	;volatile
  3949  01F4  00F1               	movwf	??_ADC
  3950  01F5  0871               	movf	??_ADC,w
  3951  01F6  00C9               	movwf	_cont2
  3952  01F7                     i1l214:
  3953  01F7  0008               	return
  3954  01F8                     __end_of_ADC:
  3955  007E                     btemp	set	126	;btemp
  3956  007E                     wtemp0	set	126
  3957                           
  3958                           	psect	config
  3959                           
  3960                           ;Config register CONFIG1 @ 0x2007
  3961                           ;	Oscillator Selection bits
  3962                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3963                           ;	Watchdog Timer Enable bit
  3964                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3965                           ;	Power-up Timer Enable bit
  3966                           ;	PWRTE = OFF, PWRT disabled
  3967                           ;	RE3/MCLR pin function select bit
  3968                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3969                           ;	Code Protection bit
  3970                           ;	CP = OFF, Program memory code protection is disabled
  3971                           ;	Data Code Protection bit
  3972                           ;	CPD = OFF, Data memory code protection is disabled
  3973                           ;	Brown Out Reset Selection bits
  3974                           ;	BOREN = OFF, BOR disabled
  3975                           ;	Internal External Switchover bit
  3976                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3977                           ;	Fail-Safe Clock Monitor Enabled bit
  3978                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3979                           ;	Low Voltage Programming Enable bit
  3980                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3981                           ;	In-Circuit Debugger Mode bit
  3982                           ;	DEBUG = 0x1, unprogrammed default
  3983  2007                     	org	8199
  3984  2007  20D4               	dw	8404
  3985                           
  3986                           ;Config register CONFIG2 @ 0x2008
  3987                           ;	Brown-out Reset Selection bit
  3988                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3989                           ;	Flash Program Memory Self Write Enable bits
  3990                           ;	WRT = OFF, Write protection off
  3991  2008                     	org	8200
  3992  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5       9
    BANK0            80     40      76
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(2) Largest target is 17
		 -> buffer3(BANK0[10]), buffer2(BANK0[10]), buffer1(BANK0[10]), STR_3(CODE[17]), 
		 -> STR_2(CODE[13]), STR_1(CODE[5]), 

    divisor1@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol3(BANK0[1]), 

    divisor@dig	PTR unsigned char  size(1) Largest target is 1
		 -> vol2(BANK0[1]), vol1(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_conversion
    _setup->_config_ADC
    _divisor1->___awdiv
    _divisor1->___awmod
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _divisor->___awmod
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->_conversion_char
    _main->_dato_recibido
    _setup->_config_ADC
    _set_cursor->_Escribir_comandoLCD
    _dato_recibido->_sprintf
    _divisor1->___awdiv
    _conversion_char->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _divisor->___awdiv
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10076
                                             37 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                         _conversion
                    _conversion_char
                      _dato_recibido
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     121
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2     121
                                              4 COMMON     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     915
                                              1 BANK0      4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _dato_recibido                                        7     7      0    3751
                                             30 BANK0      7     7      0
                           _divisor1
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _divisor1                                             8     7      1    1945
                                              8 BANK0      8     7      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _conversion_char                                      7     7      0    3875
                                             30 BANK0      7     7      0
                            _divisor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    1806
                                             13 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     7      1    2069
                                              8 BANK0      8     7      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     248
                                              1 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     248
                                              1 BANK0      2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   4     2      2     918
                                              1 BANK0      4     2      2
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     248
                                              0 BANK0      1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _conversion
   _conversion_char
     _divisor
       ___awdiv
       ___awmod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dato_recibido
     _divisor1
       ___awdiv
       ___awmod
     _sprintf
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _config_ADC

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      5       9       1       69.2%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 07 11:52:16 2022

                           pc 0002                  ___awdiv@sign 0025                            fsr 0004  
             set_cursor@linea 0024                           l130 04B7                           l122 03C4  
                         l221 0223                           l125 056D                           l135 0460  
                         l160 031D                           l152 0301                           l224 01BD  
                         l161 031E                           l153 0302                           l162 0324  
                         l154 0308                           l138 0251                           l163 0325  
                         l155 0309                           l171 064A                           l164 032B  
                         l156 030F                           l180 01D9                           l149 01A3  
                         l165 032C                           l157 0310                           l166 0332  
                         l158 0316                           l190 040F                           l159 0317  
                         _ADC 01DA                           l168 0338                           l520 05D6  
                         l177 0280                           l363 07EE                           l533 0512  
                         l639 037E                           l649 02F7                           _dec 0078  
                         _cen 0077                           _isr 0281                           fsr0 0004  
                         _uni 0079                           indf 0000                  ___awmod@sign 0025  
                        ?_ADC 0071                          l2001 046C                          l2011 04AA  
                        l2101 0329                          l2021 071F                          l2013 0708  
                        l2103 0330                          l2007 046E                          l2031 0749  
                        l2015 070D                          l2111 0384                          l2105 0333  
                        l2009 04A4                          l2033 074D                          l2025 0720  
                        l2017 0713                          l2201 03FB                          l2121 03A7  
                        l2113 0393                          l2211 0258                          l2051 0784  
                        l2043 0758                          l2035 0751                          l2027 073D  
                        l2019 071A                          l2203 03FF                          l2131 03B2  
                        l2123 03AA                          l2115 0399                          l2107 037F  
                        l2213 0269                          l2061 07CB                          l2053 078B  
                        l2037 0756                          l2029 0745                          l2205 0404  
                        l2141 03BC                          l2133 03B3                          l2125 03AD  
                        l2117 039A                          l2109 0383                          l2221 064B  
                        l2215 026F                          l2207 0252                          l2151 05DB  
                        l2063 07CF                          l2055 078F                          l2047 0774  
                        l2143 03BF                          l2135 03B4                          l2127 03B0  
                        l2119 03A4                          l2231 0697                          l2223 0663  
                        l2209 0256                          l2161 0610                          l2153 05E5  
                        l2057 0794                          l2049 077E                          l2065 07D8  
                        l2217 0513                          l2081 0415                          l2145 03C0  
                        l2137 03B7                          l2129 03B1                          l2241 06BA  
                        l2233 069C                          l2225 066E                          l2091 0306  
                        l2171 063D                          l2163 0616                          l2155 05EB  
                        l1531 02CE                          l2059 07C4                          l2067 07EA  
                        l2083 044D                          l2075 0413                          l2219 0224  
                        l2147 03C1                          l2139 03BB                          l2251 06EA  
                        l2243 06C3                          l2235 06A1                          l2227 0685  
                        l2093 030D                          l2165 0623                          l2157 05FC  
                        l2149 05D7                          l2181 01D3                          l1541 02ED  
                        l1533 02D2                          l1525 02BC                          l2085 0453  
                        l2253 06F6                          l2245 06CE                          l2237 06AA  
                        l2229 0694                          l2095 0314                          l2087 02FB  
                        l2167 062A                          l2159 0603                          l2175 01BE  
                        l1535 02D6                          l1527 02C4                          l1543 02F3  
                        l2191 03DC                          l2183 03C8                          l2247 06DA  
                        l2239 06B5                          l2097 031B                          l2089 02FF  
                        l2169 0637                          l2177 01C2                          l1537 02E0  
                        l1529 02C7                          l2193 03E2                          l2185 03CA  
                        l2249 06E5                          l2099 0322                          l2179 01C8  
                        l1539 02E6                          l2275 0732                          l2195 03ED  
                        l2187 03CF                          l1901 0591                          l2189 03D6  
                        l1911 05B4                          l1903 0594                          l2199 03F5  
                        l1921 05CD                          l1913 05BA                          l1905 059B  
                        l1923 05D2                          l1915 05BB                          l1907 059F  
                        l1931 04BF                          l1781 01F8                          l1917 05C2  
                        l1909 05A3                          l1941 04D5                          l1933 04C4  
                        l1791 0217                          l1783 01FE                          l1919 05C8  
                        l1951 04F1                          l1943 04D8                          l1935 04C6  
                        l1927 04B8                          l1881 01A0                          l1785 0207  
                        l1961 050E                          l1953 04F7                          l1945 04DF  
                        l1937 04CA                          l1929 04BB                          l1795 021C  
                        l1787 0209                          l1891 057C                          l1883 056E  
                        l1955 04FE                          l1947 04E3                          l1939 04CF  
                        l1971 0346                          l1877 0196                          l1797 0220  
                        l1789 020E                          l1893 0580                          l1885 0571  
                        l1949 04E7                          l1957 0504                          l1981 036C  
                        l1973 034D                          l1965 0339                          l1879 0199  
                        l1895 0585                          l1887 0575                          l1959 0509  
                        l1983 036D                          l1975 0351                          l1967 033D  
                        l1991 01A4                          l1897 0589                          l1889 057A  
                        l1985 0374                          l1977 0355                          l1969 0343  
                        l1993 01A9                          l1899 058B                          l1979 0366  
                        l1987 037A                          l1995 01B8                          l1997 01B9  
                        l1999 0464                          ?_isr 0071                          STR_1 0056  
                        STR_2 003A                          STR_3 0029                          STR_4 0047  
                        STR_5 0047                          STR_6 004F                          u1040 02C4  
                        u1041 02C3                          u1060 02D6                          u1061 02D5  
                        u1070 02E0                          u2007 0600                          u1071 02DF  
                        u1055 02C8                          u2017 060D                          u1090 02F3  
                        u2027 061A                          u1091 02F2                          u1075 02DC  
                        u1340 01FE                          u2037 0627                          u1341 01FD  
                        u1085 02E7                          u1350 0207                          u1510 05C8  
                        u1430 0575                          u2047 0634                          u1351 0206  
                        u1511 05C7                          u1431 0574                          u1360 0217  
                        u1520 05CD                          u1440 0580                          u1600 0504  
                        u2057 0641                          u1361 0216                          u1521 05CC  
                        u1505 05BC                          u1441 057F                          u1601 0503  
                        u1450 0591                          u1610 0509                          u1530 04BF  
                        u2067 019B                          u1451 0590                          u1611 0508  
                        u1531 04BE                          u1540 04CA                          u1620 0343  
                        u1700 0713                          u1541 04C9                          u1621 0342  
                        u1701 0712                          u1470 05A3                          u1550 04D5  
                        u1710 074D                          u1471 05A2                          u1551 04D4  
                        u1711 074C                          u1800 030D                          u1640 0355  
                        u1720 0773                          u1801 030C                          u1465 0595  
                        u1641 0354                          u1721 0772                          u1810 0314  
                        u1490 05B4                          u1570 04E7                          u1730 077E  
                        u1811 0313                          u1491 05B3                          u1571 04E6  
                        u1635 0347                          u1731 077D                          u1820 031B  
                        u1900 0280                          u1580 04F1                          u1660 0366  
                        u1740 0784                          u1821 031A                          u1901 027F  
                        u1485 05A4                          u1581 04F0                          u1565 04D9  
                        u1661 0365                          u1741 0783                          u1725 076F  
                        u1830 0322                          u1750 07D8                          u1831 0321  
                        u1495 05B0                          u1655 0356                          u1751 07D7  
                        u1840 0329                          u1680 037A                          u1760 07EA  
                        u1841 0328                          u1585 04ED                          u1681 0379  
                        u1665 0362                          u1761 07E9                          u1850 0330  
                        u1690 04B7                          u1770 0460                          u1851 032F  
                        u1595 04F8                          u1691 04B6                          u1675 036E  
                        u1771 045F                          u1780 02FF                          u1860 03CF  
                        u1781 02FE                          u1861 03CE                          u1917 068D  
                        u1790 0306                          u1870 03DC                          u1791 0305  
                        u1695 04B3                          u1775 045C                          u1871 03DB  
                        u1927 01BB                          u1880 03F4                          u1881 03F3  
                        u1937 03E8                          u1890 0404                          u1947 040A  
                        u1891 0403                          u1957 020B                          u1967 021E  
                        u1977 01CE                          u1987 05E1                          u1997 05F1  
               ??_Iniciar_LCD 0021                          _dato 0076                          _main 064B  
                        _vol1 006B                          _vol2 006A                          _vol3 0069  
                        btemp 007E                          start 000C                   divisor1@dig 0028  
                       ??_ADC 0071                         ??_isr 0072    __end_of_Escribir_stringLCD 0281  
                       ?_main 0071               __end_of___awdiv 05D7               __end_of___awmod 0513  
                       _ANSEL 0188               ___awdiv@divisor 0020               __end_of___lwdiv 037F  
                       i1l111 02B5                         i1l105 02A7                         i1l214 01F7  
             __end_of___lwmod 02F8               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
             __end_of_divisor 04B8                         _cont1 004A                         _cont2 0049  
             __end_of_dpowers 0029                         _setup 037F           _Limpiar_pantallaLCD 01BE  
                       pclath 000A             ??_conversion_char 003E                         status 0003  
                       wtemp0 007E               __end_of_sprintf 07EF               __initialization 07EF  
         __end_of_Iniciar_LCD 064B                  __end_of_main 0705          ?_Limpiar_pantallaLCD 0071  
                      ??_main 0045            set_cursor@posicion 0021                        _ADRESH 001E  
            ___awdiv@dividend 0022                        ?_setup 0071                        _ANSELH 0189  
                      i1l1811 0293                        i1l1803 0281                        i1l1821 02B3  
                      i1l1813 0297                        i1l1805 0287                        i1l1663 01DA  
                      i1l1815 029D                        i1l1807 028C                        i1l1665 01E5  
                      i1l1817 02A3                        i1l1809 028F                        i1l1667 01EA  
                      i1l1819 02AD                        i1l1669 01F3                        u140_20 02A3  
                      u140_21 02A2                        u141_20 02AD                        u141_21 02AC  
                      u142_20 02B3                        u142_21 02B2                        u127_20 01E5  
                      u127_21 01E4                        u128_20 01F3                        u128_21 01F2  
                      u137_20 0287                        u137_21 0286                        u138_20 0293  
                      u138_21 0292                        u139_20 029D                        u139_21 029C  
                      _SPBRGH 009A                        _Cont_U 0048              __end_of_divisor1 0461  
       ??_Limpiar_pantallaLCD 0021                     ??___awdiv 0075                     ??___awmod 0075  
       __end_of_dato_recibido 0252                     ??___lwdiv 0075                     ??___lwmod 002B  
            ___awdiv@quotient 0026               ___awmod@divisor 0020               ___awmod@counter 0024  
                   ??_divisor 0029                        saved_w 007E                     ??_sprintf 0034  
     __end_of__initialization 07FC                   _Iniciar_LCD 05D7                __pcstackCOMMON 0071  
               __end_of_setup 03C5                       ??_setup 0076                    __pbssBANK0 0048  
                  __pmaintext 064B                    __pintentry 0004  __size_of_Escribir_comandoLCD 0041  
             _conversion_char 0513                    _config_ADC 01A4                     ?_divisor1 0028  
          _Escribir_stringLCD 0252                    __stringtab 000F                    _conversion 01F8  
         ?_Escribir_stringLCD 0021                       ___awdiv 056E                       ___awmod 04B8  
                     ___lwdiv 0339                       ___lwmod 02BC                       __ptext1 037F  
                     __ptext2 01A4                       __ptext3 03C5                       __ptext4 0224  
                     __ptext5 0410                       __ptext6 0513                       __ptext7 0705  
                     __ptext8 02BC                       __ptext9 0339                       _buffer1 005F  
                     _buffer2 0055                       _buffer3 004B                  __size_of_ADC 001E  
                     _divisor 0461          ??_Escribir_stringLCD 0023                       _dpowers 001F  
                __size_of_isr 003B              ___awmod@dividend 0022                 ?_prender_ELCD 0071  
                     _sprintf 0705                       clrloop0 018F                    ??_divisor1 0029  
        end_of_initialization 07FC                    _set_cursor 03C5                     _RCSTAbits 0018  
     __end_of_conversion_char 056E                     _PORTBbits 0006                     _PORTCbits 0007  
                   _PORTDbits 0008                ??_prender_ELCD 0075                   ?_config_ADC 0020  
                ?_Iniciar_LCD 0071                   ?_conversion 0071                     _TXSTAbits 0098  
 __end_of_Limpiar_pantallaLCD 01DA                    divisor@dig 0028                   _BAUDCTLbits 0187  
         start_initialization 07EF                   __end_of_ADC 01F8                   __end_of_isr 02BC  
      __size_of_dato_recibido 002E           _Escribir_comandoLCD 02F8    Escribir_comandoLCD@Comando 0020  
         __size_of_config_ADC 001A                   ?_set_cursor 0021              ?_conversion_char 0071  
        ?_Escribir_comandoLCD 0071           __size_of_conversion 002C                   __pbssCOMMON 0076  
                   ___latbits 0002                 __pcstackBANK0 0020                   sprintf@flag 0038  
           __size_of_divisor1 0051                   sprintf@prec 0039          __end_of_prender_ELCD 01A4  
            ___lwdiv@dividend 0022                      ?___awdiv 0020                      ?___awmod 0020  
                    ?___lwdiv 0020                      ?___lwmod 0027         ??_Escribir_comandoLCD 0076  
               _dato_recibido 0224                     __pstrings 000F                      ?_divisor 0028  
           config_ADC@channel 0020              ___lwdiv@quotient 0025           __size_of_set_cursor 004B  
                    ?_sprintf 002D                __size_of_setup 0046             interrupt_function 0004  
                   clear_ram0 018E                      _PIE1bits 008C          __size_of_Iniciar_LCD 0074  
                    _PIR1bits 000C                ?_dato_recibido 0071                    _ADCON0bits 001F  
                 __stringbase 001E                    _ADCON1bits 009F                  ??_config_ADC 0075  
 __size_of_Escribir_stringLCD 002F                     divisor1@a 002D                     divisor1@i 002E  
                ??_conversion 0075           Escribir_stringLCD@d 0021           Escribir_stringLCD@i 0024  
          __end_of_config_ADC 01BE              __size_of___awdiv 0069              __size_of___awmod 005B  
            __size_of___lwdiv 0046              __size_of___lwmod 003C            __end_of__stringtab 001F  
                  sprintf@val 003A              __size_of_divisor 0057            __end_of_conversion 0224  
             ___lwdiv@divisor 0020               ___lwdiv@counter 0024                      __ptext10 0461  
                    __ptext11 04B8                      __ptext20 01DA                      __ptext12 056E  
                    __ptext13 01F8                      __ptext14 01BE                      __ptext15 05D7  
                    __ptext16 0252                      __ptext17 02F8                      __ptext18 0196  
                    __ptext19 0281                      _divisor1 0410              __size_of_sprintf 00EA  
       __size_of_prender_ELCD 000E                 __size_of_main 00BA                  ??_set_cursor 0022  
             ??_dato_recibido 003E  __size_of_Limpiar_pantallaLCD 001C                      divisor@a 002B  
                    divisor@b 002C                      divisor@i 002E                    _INTCONbits 000B  
                _prender_ELCD 0196            __end_of_set_cursor 0410                      intlevel1 0000  
                   sprintf@ap 0037                     sprintf@sp 003C              ___lwmod@dividend 0029  
                   stringcode 0019                    _OSCCONbits 008F                      sprintf@c 003D  
                    sprintf@f 002D               ___lwmod@divisor 0027               ___lwmod@counter 002C  
    __size_of_conversion_char 005B                      stringdir 0019                      stringtab 000F  
 __end_of_Escribir_comandoLCD 0339  
